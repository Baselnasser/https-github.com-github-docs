# Query: g
# ContextLines: 1

10122 results - 118 files
The result set only contains a subset of all matches. Please be more specific in your search to narrow down the results.

docs • .devcontainer.json:
   1: // Codespaces environment for docs.github.com
   2  // For format details, see https://aka.ms/vscode-remote/devcontainer.json 
   3  {
   4:     "name": "docs.github.com",
   5:     "settings": {
   6:         "terminal.integrated.shell.linux": "/bin/bash",
   7:         "cSpell.language": ",en"
   8      },
   9:     // Install pre-requisites and run a build to ensure we are ready to start serving docs.github.com locally (via `npm start`)
  10      "postCreateCommand": "npm ci && npm run build",
  11      "forwardPorts": [4000],
  12:     // Visual Studio Code extensions which help authoring for docs.github.com.
  13      "extensions": [
  14:         "yzhang.markdown-all-in-one",
  15          "streetsidesoftware.code-spell-checker"

docs • .editorconfig:
   6  charset = utf-8
   7: trim_trailing_whitespace = true
   8  insert_final_newline = true

  10  [*.md]
  11: trim_trailing_whitespace = false
  12  

docs • .env.example:
  1: ALGOLIA_API_KEY=
  2: ALGOLIA_APPLICATION_ID=
  3  ALLOW_TRANSLATION_COMMITS=

docs • .gitignore:
   1: .algolia-cache
   2  .search-cache

   5  /node_modules/
   6: npm-debug.log
   7: coverage/
   8  .linkinator
   9: /assets/images/early-access
  10  /content/early-access

  14  # blc: broken link checker
  15: blc_output.log
  16: blc_output_internal.log
  17  /dist/

docs • webpack.config.js:
   1  const path = require('path')
   2: const MiniCssExtractPlugin = require('mini-css-extract-plugin')
   3: const CopyWebpackPlugin = require('copy-webpack-plugin')
   4: const { EnvironmentPlugin } = require('webpack')
   5  const { reactBabelOptions } = require('./lib/react/babel')

   7  module.exports = {
   8:   devtool: 'source-map', // this prevents webpack from using eval
   9    entry: './javascripts/index.js',

  34              presets: [
  35:               ['@babel/preset-env', { targets: '> 0.25%, not dead' }]
  36              ],
  37:             plugins: [
  38                '@babel/transform-runtime'

  49          use: [
  50:           MiniCssExtractPlugin.loader,
  51            {

  58            {
  59:             // Needed to resolve image url()s within @primer/css
  60              loader: 'resolve-url-loader',

  78    },
  79:   plugins: [
  80:     new MiniCssExtractPlugin({
  81        filename: 'index.css'
  82      }),
  83:     new CopyWebpackPlugin({
  84        patterns: [

  87      }),
  88:     new EnvironmentPlugin(['NODE_ENV'])
  89    ]

docs • .vscode\launch.json:
   2    "version": "0.2.0",
   3:   "configurations": [
   4      {

  14        "preLaunchTask": "build",
  15:       "program": "${workspaceFolder}/bin/Debug/<target-framework>/<project-name.dll>",
  16:       "args": [],
  17        "cwd": "${workspaceFolder}",

docs • stylesheets\article.scss:
    1: /* Grid-based layout
    2  ------------------------------------------------------------------------------*/
    3  
    4: .article-grid-container {
    5    max-width: 720px;

    8      max-width: none;
    9:     display: grid;
   10:     grid-template-rows: auto 1fr;
   11:     grid-template-columns: minmax(500px, 720px) minmax(220px, 1fr);
   12:     grid-template-areas:
   13:     'top right-sidebar'
   14:     'bottom right-sidebar';
   15:     column-gap: $spacer-6;
   16    }

   18    @include breakpoint(xl) {
   19:     column-gap: $spacer-9;
   20    }

   22  
   23: .article-grid-toc {
   24:   grid-area: right-sidebar;
   25  }
   26  
   27: .article-grid-toc-content {
   28    @include breakpoint(xl) {

   30      top: $spacer-4;
   31:     max-height: calc(100vh - #{$spacer-4});
   32      overflow-y: auto;
   33:     padding-bottom: $spacer-4;
   34    }

   36  
   37: .article-grid-head {
   38:   grid-area: top;
   39  }
   40  
   41: .article-grid-body {
   42:   grid-area: bottom;
   43  }

   49    & + .alert {
   50:     margin-top: 5px;
   51    }

   53    & > *:first-child {
   54:     margin-top: 0;
   55    }

   57    & > *:last-child {
   58:     margin-bottom: 0;
   59    }

   61    + #bootcamp {
   62:     margin-top: 20px;
   63    }

   65    b,
   66:   strong {
   67:     font-weight: bold;
   68    }

   70    p {
   71:    margin: 0;
   72    }

   77  
   78: .markdown-body .highlight pre, .markdown-body pre {
   79:   margin-top: 10px;
   80  }
   81  
   82: .height-constrained-code-block pre {
   83:   max-height: 500px;
   84    overflow: auto;

   91    @include breakpoint(xl) {
   92:     height: 39px;
   93    }

   97    content: '/';
   98:   color: $gray-400;
   99:   padding-right: $spacer-1;
  100:   padding-left: $spacer-2;
  101    display:inline-block;

  110    position: relative;
  111:   padding-bottom: 10px;
  112:   padding-left: 0;
  113  }

  115  .markdown-body ol > li {
  116:   padding: 15px 0 15px 55px;
  117    position: relative;
  118:   margin-bottom: 5px;
  119    border-top: 3px solid #EEE;

  127    left: 0;
  128:   height: 100%;
  129    width: 30px;
  130:   padding: 0 10px 0 0;
  131    color: #999;
  132    font-size: 22px;
  133:   font-weight: bold;
  134:   line-height: 35px;
  135:   text-align: right;
  136  }

  138  .markdown-body ol > li > p {
  139:   margin: 0;
  140  }

  142  .markdown-body ol > li > p:first-child {
  143:   margin-top: 0;
  144  }

  150    visibility: hidden;
  151:   line-height: 0;
  152:   height: 0;
  153  }
  154  
  155: .procedural-image-wrapper {
  156    display: block;
  157:   padding: 10px 0;
  158:   margin: 20px auto 0 auto;
  159  }
  160  
  161: .procedural-image-wrapper img {
  162    border-radius: 5px;

  164    width: auto;
  165:   height: auto;
  166:   max-height: 500px;
  167  }
  168  
  169: // make sure images that contain emoji render at the expected size
  170: img[src*="https://github.githubassets.com/images/icons/emoji"] {
  171:   height: 20;
  172    width: 20;
  173:   align: absmiddle;
  174  }
  175  
  176: /* Notes, tips, warning, and danger styles
  177  ------------------------------------------------------------------------------*/

  180  .tip,
  181: .warning,
  182: .danger {
  183    // remove extra space under lists inside of notes
  184    ul, ol {
  185:     margin-bottom: 0;
  186    }

docs • stylesheets\nav.scss:
   1: /* Navigation & Header
   2  .nav-mobile prefixed classes style nav elements only for mobile (< 768px)

  19    .arrow {
  20:     transform: rotate(180deg) scaleX(-1);
  21    }

  37      top: 0;
  38:     right: 0;
  39      left: 0;
  40      z-index: 2;
  41:     background-color: $gray-000;
  42:     padding: $spacer-3;
  43:     padding-top: $spacer-8;
  44      box-shadow: 0 1px 15px $black-fade-15;

  47  
  48: .nav-mobile-burgerIcon {
  49:   background: url('/assets/images/octicons/hamburger.svg') no-repeat right;
  50    width: 18px;
  51:   height: 23px;
  52    position: relative;

  55    &.js-open {
  56:     background: url('/assets/images/octicons/x.svg') no-repeat right;
  57      width: 16px;
  58:     height: 21px;
  59    }

  62  .nav-desktop-productDropdown,
  63: .nav-desktop-langDropdown {
  64    @include breakpoint(md) {
  65      min-width: 200px;
  66:     background: $white;
  67      border-radius: 3px;

  77  
  78: // Allows dropdown to be closed when clicking outside of it
  79  @include breakpoint(md) {

  82      top: 0;
  83:     right: 0;
  84      bottom: 0;

  89      content: " ";
  90:     background: transparent;
  91    }

  95    @media (min-width: 1012px) and (max-width: 1279px) {
  96:     right: 0;
  97    }

docs • stylesheets\overrides.scss:
   10    h6 {
   11:     font-family: $font-mktg;
   12:     font-weight: $font-weight-semibold;
   13:     padding-top: $spacer-3;
   14    }

   17  .markdown-body ol > li {
   18:   padding: $spacer-2 0 $spacer-2 $spacer-7;
   19    border: 0;

   27    p:not(:first-child) {
   28:     margin-top: 15px;
   29    }

   31    .extended-markdown {
   32:     margin-top: 15px;
   33    }

   40  .markdown-body ol ul {
   41:   margin-top: 15px;
   42:   margin-bottom: 15px;
   43  }

   45  // needs specificity to override
   46: .markdown-body .lead-mktg p {
   47:   color: $gray-900;
   48  }

   50  .extended-markdown p {
   51:   margin: 0;
   52  }

   54  .extended-markdown p:not(:first-child) {
   55:   margin-top: 15px;
   56  }

   58  .extended-markdown.note pre {
   59:   background: none;
   60:   padding: 10px 10px 10px 0;
   61:   margin-bottom: 0;
   62  }

   64  .extended-markdown.note pre code {
   65:   color: $text-gray-dark;
   66  }

   68  .product-callout p, .contributor-callout p {
   69:   margin: 0;
   70  }

   74    table-layout: fixed;
   75:   line-height: 1.5;
   76  }
   77  
   78: div.light-bg a,
   79: div.light-bg a h4 {
   80:   color: $text-gray-dark;
   81  }
   82  
   83: div.light-bg a p {
   84:   color: $text-gray;
   85  }
   86  
   87: div.dark-bg a,
   88: div.dark-bg a h4 {
   89    color: $white;

   91  
   92: div.dark-bg a p {
   93    color: $white-fade-70;

   96  li.nestedTocItem {
   97:   margin-left: 2em;
   98    list-style-type: circle;

  100  
  101: /* Getting Started and Popular Articles sections in article layout */
  102  .markdown-body div.featured-links {
  103:   padding-bottom: 30px;
  104  }
  105  
  106: .markdown-body div.featured-links-heading {
  107:   padding-top: 24px;
  108  }

  110  .markdown-body div.featured-links p.link-with-intro-intro {
  111:   margin-bottom: 5px;
  112  }

  114  .markdown-body div.featured-links h4.link-with-intro-title {
  115:   margin-top: 0;
  116  }

  119    display: inline-block;
  120:   vertical-align: text-top;
  121    fill: currentColor;

  126    border: 2px solid #d9534f;
  127:   padding: 2px;
  128    border-radius: 2px;
  129:   margin-right: 2px;
  130  }
  131  
  132: pre .greenbox {
  133    border: 2px solid #5cb85c;
  134:   padding: 2px;
  135    border-radius: 2px;
  136:   margin-right: 2px;
  137  }

  140    border: 2px solid #428bca;
  141:   padding: 2px;
  142    border-radius: 2px;
  143:   margin-right: 2px;
  144  }

  146  /* Accessibility color contrast */
  147: .btn-mktg {
  148:   background-color: $blue-500;
  149  }

  151  /* Accessibility color contrast */
  152: .btn-outline-mktg {

docs • stylesheets\print.scss:
  1: /* Styles used while printing
  2  ------------------------------------------------------------------------------*/

docs • stylesheets\product-landing.scss:
  1: .bg-guides-gradient {
  2:   background: linear-gradient(0deg, rgba(33, 136, 255, 0.11) 0%, rgba(255, 255, 255, 0) 100%);
  3  }

docs • stylesheets\product-sublanding.scss:
  6  
  7: .learning-track {
  8    &--description {
  9:     min-height: 1em * $body-line-height * 3
  10    }

docs • stylesheets\README.md:
   2  
   3: This website uses a Sass preprocessor, and gets most of its styles from GitHub's
   4: [Primer](https://primer.style) design system.
   5  

  13  
  14: In general, we use Primer's [utility classes](https://styleguide.github.com/primer/utilities/)
  15: as much as we can, and avoid writing custom styles whenever possible.
  16  
  17: See [styleguide.github.com/primer](https://styleguide.github.com/primer/) for reference.
  18  
  19: We use [Webpack](https://github.com/webpack/webpack) to process the files - see [javascripts/README.md](../javascripts/README.md) for more information on how these files are compiled.

docs • stylesheets\release-notes.scss:
   7      font-size: 1.6em;
   8:     color: $gray-400;
   9    }

  15  
  16: .release-notes-section-heading {
  17    font-size: 15px !important;

  20  details[open].release-notes-version-picker summary .octicon.octicon-chevron-down {
  21:   transform: rotate(180deg);
  22  }

  25    &.selected {
  26:     background-color: $blue-100;
  27    }

  31    features: #05a88b,
  32:   bugs: #ec8c1c,
  33    known_issues: #4f6db3,
  34    security_fixes: #e53e72,
  35:   changes: #69b378,
  36    deprecations: #9a62a3,

  42      .release-notes-section-label {
  43:       background-color: #{$val};
  44      }
  45:     .release-notes-section-heading {
  46        color: #{$val};

docs • stylesheets\scroll-button.scss:
   1: button.arrow-for-scrolling-top {
   2      opacity: 0;
   3      transition: 1s;
   4:     background-color: #0367d6;
   5      color: #fff;

   7      bottom: 10px;
   8:     right: 10px;
   9      display: block;
  10      width: 40px;
  11:     height: 40px;
  12      border-radius: 50%;

docs • stylesheets\search.scss:
    3  
    4: /* Global styles
    5: Gets applied to both the search input on homepage and in the header nav
    6: Form and inputs using .ais- prefix gets added by search.js */
    7  .ais-SearchBox {

   21    width: 100%;
   22:   padding: 10px $spacer-2 10px $spacer-5;
   23    font-size: 16px;
   24    @extend .form-control;
   25:   background: $white url("/assets/images/octicons/search.svg") no-repeat 6px;
   26  }

   29    width: 30px;
   30:   height: 100%;
   31    position: absolute;
   32    top: 0;
   33:   right: 0;
   34    opacity: 0.5;

   36    outline: none;
   37:   background: none;
   38    z-index: 1;

   41      header & {
   42:       height: 30px;
   43      }

   47      width: 12px;
   48:     height: 12px;
   49    }

   56    &:hover {
   57:     background: $blue-000;
   58    }

   60  
   61: /* activated by search-with-your-keyboard arrow navigation */
   62  .ais-Hits-item.active {
   63:   background: $blue-000;
   64  }

   72  mark,
   73: .ais-Highlight-highlighted
   74  {
   75:   background: none;
   76    color: inherit;

   87      text-decoration: none;
   88:     border-bottom: 1px dotted $gray-500;
   89    }

   92  .search-result-content {
   93:   max-height: 4rem;
   94    overflow: hidden;

  109    .ais-SearchBox-form {
  110:     margin-bottom: 0;
  111    }

  117        top: 0;
  118:       right: 0;
  119        width: 0;
  120        border-radius: 3px;
  121:       background: $white;
  122        box-shadow: 0 1px 15px $black-fade-15;

  128          max-width: 760px;
  129:         padding: $spacer-7 $spacer-4 $spacer-4 $spacer-4;
  130        }

  132        .ais-Hits {
  133:         margin-top: $spacer-4;
  134        }

  140        top: 0;
  141:       right: 0;
  142        bottom: 0;

  146        content: " ";
  147:       background: $black-fade-15;
  148      }

  157        position: absolute;
  158:       right: 0;
  159        top: -26px;

docs • stylesheets\shadows.scss:
  17    
  18:   &-large {
  19      transition: box-shadow 0.3s ease-in-out;

  21      &:hover {
  22:       box-shadow: $box-shadow-large !important;
  23      }

  25    
  26:   &-extra-large {
  27      transition: box-shadow 0.3s ease-in-out;

  29      &:hover {
  30:       box-shadow: $box-shadow-extra-large !important;
  31      }

docs • stylesheets\sidebar.scss:
   2    width: 260px;
   3:   background-color: $blue-900;
   4    position: sticky;
   5    top: 0;
   6:   padding-bottom: $spacer-5;
   7    overflow-y: auto;
   8:   height: 100vh;
   9    flex-shrink: 0;

  15  
  16: .sidebar-background-color {
  17:   background-color: $blue-900;
  18  }

  20  .sidebar-products > li {
  21:   margin: 4px 0;
  22  }

  28    display: block;
  29:   line-height: 1.4;
  30  

  35  
  36: .sidebar-category,
  37  .sidebar-product {

  45  .sidebar-product,
  46: .sidebar-category,
  47  .sidebar-maptopic,

  50    }
  51:   &.is-current-page > a {
  52      color: $blue-300;

  55  
  56: .sidebar-category.active {
  57:   background-color: $blue-800;
  58  }

  66        left: $spacer-4;
  67:       height: 100%;
  68        border-left: 1px solid $blue-700;

  81  .sidebar-product.active > ul,
  82: .sidebar-category.active > ul,
  83  .sidebar-maptopic.active > ul {

  86  
  87: .sidebar-category {
  88    > ul {

docs • stylesheets\type.scss:
   1: /* Global type styles
   2  ------------------------------------------------------------------------------*/

   8    a {
   9:     color: $gray-900;
  10    }

  25        display: inline-block;
  26:       margin-top: 10px;
  27:       margin-bottom: 10px;
  28        p {
  29:         margin: 0;
  30:         padding: 0;
  31        }

  45    .directory-toc & {
  46:     color: $gray-900;
  47    }

docs • tests\README.md:
   2  
   3: It's not strictly necessary to run tests locally while developing: You can
   4  always open a pull request and rely on the CI service to run tests for you,
   5: but sometimes it's helpful to run tests locally before pushing your changes to
   6: GitHub.
   7  
   8: Test are written using [jest](https://ghub.io/jest), a framework maintained
   9: by Facebook and used by many teams at GitHub. Jest is convenient in that it
  10: provides everything: a test runner, an assertion library, code coverage analysis,
  11  custom reporters for different types of test output, etc.
  12  
  13: ### Running all the tests
  14  

  21  
  22: ### Watching all the tests
  23  
  24: You can also run a script that will continually watch for changes and
  25: re-run the tests any time a change is made. This command will notify you
  26: when tests change to and from a passing or failing state, and will also print
  27: out a test coverage report, so you can see what files are in need of tests.
  28  

  32  
  33: ### Testing individual files
  34  
  35: If you're making changes to a specific file and don't want to run the entire
  36: test suite, you can pass an argument to the `jest` testing tool:
  37  
  38  ```sh
  39: jest __tests__/page.js
  40  ```
  41  
  42: The argument doesn't have to be a fully qualified file path. It can also be a
  43  portion of a filename:

  45  ```sh
  46: jest page # runs tests on __tests__/page.js and __tests__/pages.js
  47  ```
  48  
  49: ### Linting
  50  

  59  
  60: This test checks all internal links and image references in the English site. To run it locally (takes about 60 seconds):
  61  
  62  ```sh
  63: npx jest links-and-images
  64  ```
  65: It checks images, anchors, and links for every **version** of every **page**.
  66  

  68  
  69: 1. **Broken image references**
  70:     * Example: `/assets/images/foo.png` where `foo.png` doesn't exist.
  71: 2. **Broken same-page anchors**
  72:     * Example: `#foo` where the page does not have a heading `Foo`.
  73: 3. **Broken links due to page not found**
  74:     * Example: `/github/using-git/foo` where there is no `foo.md` file at that path.
  75: 4. **Broken links due to versioning**
  76:     * Example: an unversioned link to a Dotcom-only article in a page that has Enterprise versions.
  77  5. **Broken anchors on links**
  78:     * Example: `/some/valid/link#bar` where the linked page can be found but it does not have a heading `Bar`.

docs • tests\browser\browser.js:
    1: /* global page, browser */
    2  const sleep = require('await-sleep')
    3  const { latest } = require('../../lib/enterprise-server-releases')
    4: const languages = require('../../lib/languages')
    5  
    6: describe('homepage', () => {
    7    jest.setTimeout(60 * 1000)
    8  
    9:   test('should be titled "GitHub Documentation"', async () => {
   10:     await page.goto('http://localhost:4001')
   11:     await expect(page.title()).resolves.toMatch('GitHub Documentation')
   12    })

   17  
   18:   it('works on the homepage', async () => {
   19:     await page.goto('http://localhost:4001/en')
   20:     await page.click('#search-input-container input[type="search"]')
   21:     await page.type('#search-input-container input[type="search"]', 'actions')
   22:     await page.waitForSelector('.ais-Hits')
   23:     const hits = await page.$$('.ais-Hits-item')
   24:     expect(hits.length).toBeGreaterThan(5)
   25    })
   26  
   27:   it('works on article pages', async () => {
   28:     await page.goto('http://localhost:4001/en/actions')
   29:     await page.click('#search-input-container input[type="search"]')
   30:     await page.type('#search-input-container input[type="search"]', 'workflows')
   31:     await page.waitForSelector('.ais-Hits')
   32:     const hits = await page.$$('.ais-Hits-item')
   33:     expect(hits.length).toBeGreaterThan(5)
   34    })
   35  
   36:   it('works on 404 error page', async () => {
   37:     await page.goto('http://localhost:4001/en/404')
   38:     await page.click('#search-input-container input[type="search"]')
   39:     await page.type('#search-input-container input[type="search"]', 'actions')
   40:     await page.waitForSelector('.ais-Hits')
   41:     const hits = await page.$$('.ais-Hits-item')
   42:     expect(hits.length).toBeGreaterThan(5)
   43    })

   47  
   48:     const newPage = await browser.newPage()
   49:     await newPage.goto('http://localhost:4001/ja/enterprise-server@2.22/admin/installation')
   50  
   51:     await newPage.setRequestInterception(true)
   52:     newPage.on('request', interceptedRequest => {
   53:       if (interceptedRequest.method() === 'GET' && /search/i.test(interceptedRequest.url())) {
   54          const { searchParams } = new URL(interceptedRequest.url())
   55:         expect(searchParams.get('version')).toBe('2.22')
   56:         expect(searchParams.get('language')).toBe('ja')
   57        }

   60  
   61:     await newPage.click('#search-input-container input[type="search"]')
   62:     await newPage.type('#search-input-container input[type="search"]', 'test')
   63:     await newPage.waitForSelector('.search-result')
   64    })
   65  
   66:   it('sends the correct data to search for GHAE', async () => {
   67      expect.assertions(2)
   68  
   69:     const newPage = await browser.newPage()
   70:     await newPage.goto('http://localhost:4001/en/github-ae@latest/admin/overview')
   71  
   72:     await newPage.setRequestInterception(true)
   73:     newPage.on('request', interceptedRequest => {
   74:       if (interceptedRequest.method() === 'GET' && /search/i.test(interceptedRequest.url())) {
   75          const { searchParams } = new URL(interceptedRequest.url())
   76:         expect(searchParams.get('version')).toBe('ghae')
   77:         expect(searchParams.get('language')).toBe('en')
   78        }

   81  
   82:     await newPage.click('#search-input-container input[type="search"]')
   83:     await newPage.type('#search-input-container input[type="search"]', 'test')
   84:     await newPage.waitForSelector('.search-result')
   85    })

   88  describe('helpfulness', () => {
   89:   it('sends an event to /events when submitting form', async () => {
   90:     // Visit a page that displays the prompt
   91:     await page.goto('http://localhost:4001/en/actions/getting-started-with-github-actions/about-github-actions')
   92  
   93      // Track network requests
   94:     await page.setRequestInterception(true)
   95:     page.on('request', request => {
   96:       // Ignore GET requests
   97        if (!/\/events$/.test(request.url())) return request.continue()

  100          contentType: 'application/json',
  101:         body: JSON.stringify({ id: 'abcd1234' }),
  102          status: 200

  106      // When I click the "Yes" button
  107:     await page.click('.js-helpfulness [for=helpfulness-yes]')
  108      // (sent a POST request to /events)
  109      // I see the request for my email
  110:     await page.waitForSelector('.js-helpfulness [type="email"]')
  111  
  112      // When I fill in my email and submit the form
  113:     await page.type('.js-helpfulness [type="email"]', 'test@example.com')
  114  

  116  
  117:     await page.click('.js-helpfulness [type="submit"]')
  118      // (sent a PUT request to /events/{id})
  119      // I see the feedback
  120:     await page.waitForSelector('.js-helpfulness [data-help-end]')
  121    })

  124  describe('csrf meta', () => {
  125:   it('should have a csrf-token meta tag on the page', async () => {
  126:     await page.goto('http://localhost:4001/en/actions/getting-started-with-github-actions/about-github-actions')
  127:     await page.waitForSelector('meta[name="csrf-token"]')
  128    })

  131  describe('platform specific content', () => {
  132:   // from tests/javascripts/user-agent.js
  133:   const userAgents = [
  134:     { name: 'Mac', id: 'mac', ua: 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_2) AppleWebKit/601.3.9 (KHTML, like Gecko) Version/9.0.2 Safari/601.3.9' },
  135:     { name: 'Windows', id: 'windows', ua: 'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/47.0.2526.111 Safari/537.36' },
  136:     { name: 'Linux', id: 'linux', ua: 'Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:15.0) Gecko/20100101 Firefox/15.0.1' }
  137    ]
  138:   const linuxUserAgent = userAgents[2]
  139:   const pageWithSwitcher = 'http://localhost:4001/en/github/using-git/configuring-git-to-handle-line-endings'
  140:   const pageWithoutSwitcher = 'http://localhost:4001/en/github/using-git'
  141:   const pageWithDefaultPlatform = 'http://localhost:4001/en/actions/hosting-your-own-runners/configuring-the-self-hosted-runner-application-as-a-service'
  142  
  143    it('should have a platform switcher', async () => {
  144:     await page.goto(pageWithSwitcher)
  145:     const nav = await page.$$('nav.UnderlineNav')
  146:     const switches = await page.$$('a.platform-switcher')
  147:     const selectedSwitch = await page.$$('a.platform-switcher.selected')
  148:     expect(nav).toHaveLength(1)
  149:     expect(switches.length).toBeGreaterThan(1)
  150:     expect(selectedSwitch).toHaveLength(1)
  151    })

  153    it('should NOT have a platform switcher', async () => {
  154:     await page.goto(pageWithoutSwitcher)
  155:     const nav = await page.$$('nav.UnderlineNav')
  156:     const switches = await page.$$('a.platform-switcher')
  157:     const selectedSwitch = await page.$$('a.platform-switcher.selected')
  158:     expect(nav).toHaveLength(0)
  159:     expect(switches).toHaveLength(0)
  160:     expect(selectedSwitch).toHaveLength(0)
  161    })
  162  
  163:   it('should detect platform from user agent', async () => {
  164:     for (const agent of userAgents) {
  165:       await page.setUserAgent(agent.ua)
  166:       await page.goto(pageWithSwitcher)
  167:       const selectedPlatformElement = await page.waitForSelector('a.platform-switcher.selected')
  168:       const selectedPlatform = await page.evaluate(el => el.textContent, selectedPlatformElement)
  169:       expect(selectedPlatform).toBe(agent.name)
  170      }

  173    it('should prefer defaultPlatform from frontmatter', async () => {
  174:     for (const agent of userAgents) {
  175:       await page.setUserAgent(agent.ua)
  176:       await page.goto(pageWithDefaultPlatform)
  177:       const defaultPlatform = await page.$eval('[data-default-platform]', el => el.dataset.defaultPlatform)
  178:       const selectedPlatformElement = await page.waitForSelector('a.platform-switcher.selected')
  179:       const selectedPlatform = await page.evaluate(el => el.textContent, selectedPlatformElement)
  180:       expect(defaultPlatform).toBe(linuxUserAgent.id)
  181:       expect(selectedPlatform).toBe(linuxUserAgent.name)
  182      }

  185    it('should show the content for the selected platform only', async () => {
  186:     await page.goto(pageWithSwitcher)
  187  

  189      for (const platform of platforms) {
  190:       await page.click(`.platform-switcher[data-platform="${platform}"]`)
  191  
  192        // content for selected platform is expected to become visible
  193:       await page.waitForSelector(`.extended-markdown.${platform}`, { visible: true, timeout: 3000 })
  194  
  195:       // only a single tab should be selected
  196:       const selectedSwitch = await page.$$('a.platform-switcher.selected')
  197:       expect(selectedSwitch).toHaveLength(1)
  198  

  201        for (const other of otherPlatforms) {
  202:         await page.waitForSelector(`.extended-markdown.${other}`, { hidden: true, timeout: 3000 })
  203        }

  209    it('loads correctly', async () => {
  210:     await page.goto('http://localhost:4001/en/actions')
  211:     const shownCards = await page.$$('.js-filter-card:not(.d-none)')
  212:     const shownNoResult = await page.$('.js-filter-card-no-results:not(.d-none)')
  213:     const maxCards = await page.$eval('.js-filter-card-show-more', btn => parseInt(btn.dataset.jsFilterCardMax))
  214:     expect(shownCards.length).toBe(maxCards)
  215      expect(shownNoResult).toBeNull()

  218    it('filters cards', async () => {
  219:     await page.goto('http://localhost:4001/en/actions')
  220:     await page.click('input.js-filter-card-filter')
  221:     await page.type('input.js-filter-card-filter', 'issues')
  222:     const shownCards = await page.$$('.js-filter-card:not(.d-none)')
  223:     const showMoreClasses = await page.$eval('.js-filter-card-show-more', btn => Object.values(btn.classList))
  224      expect(showMoreClasses).toContain('d-none')
  225:     expect(shownCards.length).toBeGreaterThan(1)
  226    })

  228    it('works with select input', async () => {
  229:     await page.goto('http://localhost:4001/en/actions/guides')
  230:     await page.select('.js-filter-card-filter-dropdown[name="type"]', 'overview')
  231:     const shownCards = await page.$$('.js-filter-card:not(.d-none)')
  232:     const shownCardsAttrib = await page.$$eval('.js-filter-card:not(.d-none)', cards =>
  233        cards.map(card => card.dataset.type)

  235      shownCardsAttrib.map(attrib => expect(attrib).toBe('overview'))
  236:     expect(shownCards.length).toBeGreaterThan(0)
  237    })

  239    it('works with select input on an Enterprise version', async () => {
  240:     await page.goto(`http://localhost:4001/en/enterprise-server@${latest}/actions/guides`)
  241:     await page.select('.js-filter-card-filter-dropdown[name="type"]', 'overview')
  242:     const shownCards = await page.$$('.js-filter-card:not(.d-none)')
  243:     const shownCardsAttrib = await page.$$eval('.js-filter-card:not(.d-none)', cards =>
  244        cards.map(card => card.dataset.type)

  246      shownCardsAttrib.map(attrib => expect(attrib).toBe('overview'))
  247:     expect(shownCards.length).toBeGreaterThan(0)
  248    })

  250    it('shows more cards', async () => {
  251:     await page.goto('http://localhost:4001/en/actions')
  252:     const maxCards = await page.$eval('.js-filter-card-show-more', btn => parseInt(btn.dataset.jsFilterCardMax))
  253:     await page.click('.js-filter-card-show-more')
  254:     const shownCards = await page.$$('.js-filter-card:not(.d-none)')
  255:     expect(shownCards.length).toBe(maxCards * 2)
  256    })
  257  
  258:   it('displays no result message', async () => {
  259:     await page.goto('http://localhost:4001/en/actions')
  260:     await page.click('input.js-filter-card-filter')
  261:     await page.type('input.js-filter-card-filter', 'this should not work')
  262:     const shownCards = await page.$$('.js-filter-card:not(.d-none)')
  263:     expect(shownCards.length).toBe(0)
  264:     const noResultsClasses = await page.$eval('.js-filter-card-no-results', elem => Object.values(elem.classList))
  265      expect(noResultsClasses).not.toContain('d-none')

  268  
  269: describe('language banner', () => {
  270:   it('directs user to the English version of the article', async () => {
  271:     const wipLanguageKey = Object.keys(languages).find(key => languages[key].wip)
  272  
  273:     // This kinda sucks, but if we don't have a WIP language, we currently can't
  274:     // run a reliable test. But hey, on the bright side, if we don't have a WIP
  275:     // language then this code will never run anyway!
  276:     if (wipLanguageKey) {
  277:       const res = await page.goto(`http://localhost:4001/${wipLanguageKey}/actions`)
  278        expect(res.ok()).toBe(true)
  279:       const href = await page.$eval('a#to-english-doc', el => el.href)
  280        expect(href.endsWith('/en/actions')).toBe(true)

docs • tests\content\algolia-search.js:
   1  const { dates, supported } = require('../../lib/enterprise-server-releases')
   2: const languageCodes = Object.keys(require('../../lib/languages'))
   3: const { namePrefix } = require('../../lib/search/config')
   4  const remoteIndexNames = require('../../lib/search/cached-index-names.json')
   5  
   6: describe('algolia', () => {
   7:   test('has remote indexNames in every language for every supported GHE version', () => {
   8:     expect(supported.length).toBeGreaterThan(1)
   9      supported.forEach(version => {
  10:       languageCodes.forEach(languageCode => {
  11:         const indexName = `${namePrefix}-${version}-${languageCode}`
  12  
  13:         // workaround for GHES release branches not in production yet
  14          if (!remoteIndexNames.includes(indexName)) {
  15:           const today = getDate()
  16:           const releaseDate = getDate(dates[version].releaseDate)
  17:           // if the release date is in the future or today, ignore this version;
  18            // this means if the new index is not uploaded at the time of the release,
  19:           // the test will not fail until the following day.
  20            if (releaseDate >= today) return

  27  
  28:   test('has remote indexNames in every language for dotcom', async () => {
  29:     expect(languageCodes.length).toBeGreaterThan(0)
  30:     languageCodes.forEach(languageCode => {
  31:       const indexName = `${namePrefix}-dotcom-${languageCode}`
  32        expect(remoteIndexNames.includes(indexName)).toBe(true)

  36  
  37: function getDate (date) {
  38    const dateObj = date ? new Date(date) : new Date()
  39:   return dateObj.toISOString().slice(0, 10)
  40  }

docs • tests\content\category-pages.js:
    5  const { zip, difference } = require('lodash')
    6: const GithubSlugger = require('github-slugger')
    7  const { XmlEntities } = require('html-entities')

   10  const renderContent = require('../../lib/render-content')
   11: const getApplicableVersions = require('../../lib/get-applicable-versions')
   12  
   13: const slugger = new GithubSlugger()
   14  const entities = new XmlEntities()

   16  const contentDir = path.join(__dirname, '../../content')
   17: const linkRegex = /{% (?:(?:topic_)?link_in_list|link_with_intro) ?\/(.*?) ?%}/g
   18  
   19: describe('category pages', () => {
   20    let siteData

   22    beforeAll(async () => {
   23:     // Load the English site data
   24      const allSiteData = await loadSiteData()

   28    const walkOptions = {
   29:     globs: ['*/index.md', 'enterprise/*/index.md'],
   30:     ignore: ['{rest,graphql}/**', 'enterprise/index.md', '**/articles/**', 'early-access/**'],
   31      directories: false,

   37  
   38:   // Combine those to fit Jest's `.each` usage
   39    const productTuples = zip(productNames, productIndices)

   43      (productName, productIndex) => {
   44:       // Get links included in product index page.
   45:       // Each link corresponds to a product subdirectory (category).
   46:       // Example: "getting-started-with-github"
   47        const contents = fs.readFileSync(productIndex, 'utf8') // TODO move to async

   51  
   52:       const categoryLinks = getLinks(content)
   53:         // Only include category directories, not standalone category files like content/actions/quickstart.md
   54:         .filter(link => fs.existsSync(getPath(productDir, link, 'index')))
   55          // TODO this should move to async, but you can't asynchronously define tests with Jest...
   56  
   57:       // Map those to the Markdown file paths that represent that category page index
   58:       const categoryPaths = categoryLinks.map(link => getPath(productDir, link, 'index'))
   59  
   60        // Make them relative for nicer display in test names
   61:       const categoryRelativePaths = categoryPaths.map(p => path.relative(contentDir, p))
   62  
   63:       // Combine those to fit Jest's `.each` usage
   64:       const categoryTuples = zip(categoryRelativePaths, categoryPaths, categoryLinks)
   65  
   66:       describe.each(categoryTuples)(
   67:         'category index "%s"',
   68          (indexRelPath, indexAbsPath, indexLink) => {
   69:           let publishedArticlePaths, availableArticlePaths, indexTitle, categoryVersions
   70            const articleVersions = {}

   72            beforeAll(async () => {
   73:             const categoryDir = path.dirname(indexAbsPath)
   74  
   75:             // Get child article links included in each subdir's index page
   76              const indexContents = await readFileAsync(indexAbsPath, 'utf8')
   77              const { data, content } = matter(indexContents)
   78:             categoryVersions = getApplicableVersions(data.versions, indexAbsPath)
   79:             const articleLinks = getLinks(content)
   80  
   81:             // Save the index title for later testing
   82              indexTitle = await renderContent(data.title, { site: siteData }, { textOnly: true })

   85                articleLinks.map(async (articleLink) => {
   86:                 const articlePath = getPath(productDir, indexLink, articleLink)
   87                  const articleContents = await readFileAsync(articlePath, 'utf8')

   92  
   93:                 // ".../content/github/{category}/{article}.md" => "/{article}"
   94:                 return `/${path.relative(categoryDir, articlePath).replace(/\.md$/, '')}`
   95                })

   97  
   98:             // Get all of the child articles that exist in the subdir
   99:             const childEntries = await fs.promises.readdir(categoryDir, { withFileTypes: true })
  100              const childFileEntries = childEntries.filter(ent => ent.isFile() && ent.name !== 'index.md')
  101:             const childFilePaths = childFileEntries.map(ent => path.join(categoryDir, ent.name))
  102  

  107  
  108:                 // Do not include map topics nor hidden pages in list of available articles
  109                  if (data.mapTopic || data.hidden) return null
  110  
  111:                 // ".../content/github/{category}/{article}.md" => "/{article}"
  112:                 return `/${path.relative(categoryDir, articlePath).replace(/\.md$/, '')}`
  113                })

  120  
  121:                 articleVersions[articlePath] = getApplicableVersions(data.versions, articlePath)
  122                })

  126            test('contains all expected articles', () => {
  127:             const missingArticlePaths = difference(availableArticlePaths, publishedArticlePaths)
  128:             const errorMessage = formatArticleError('Missing article links:', missingArticlePaths)
  129:             expect(missingArticlePaths.length, errorMessage).toBe(0)
  130            })

  133              const unexpectedArticles = difference(publishedArticlePaths, availableArticlePaths)
  134:             const errorMessage = formatArticleError('Unexpected article links:', unexpectedArticles)
  135:             expect(unexpectedArticles.length, errorMessage).toBe(0)
  136            })
  137  
  138:           test('contains only articles and map topics with versions that are also available in the parent category', () => {
  139              Object.entries(articleVersions).forEach(([articleName, articleVersions]) => {
  140:               const unexpectedVersions = difference(articleVersions, categoryVersions)
  141:               const errorMessage = `${articleName} has versions that are not available in parent category`
  142:               expect(unexpectedVersions.length, errorMessage).toBe(0)
  143              })

  146            // TODO: Unskip this test once the related script has been executed
  147:           test.skip('slugified title matches parent directory name', () => {
  148:             // Get the parent directory name
  149:             const categoryDirPath = path.dirname(indexAbsPath)
  150:             const categoryDirName = path.basename(categoryDirPath)
  151  
  152:             slugger.reset()
  153:             const expectedSlug = slugger.slug(entities.decode(indexTitle))
  154  
  155:             // Check if the directory name matches the expected slug
  156:             expect(categoryDirName).toBe(expectedSlug)
  157  
  158:             // If this fails, execute "script/reconcile-category-dirs-with-ids.js"
  159            })

  165  
  166: function getLinks (contents) {
  167:   return contents.match(linkRegex)
  168:     .map(link => link.match(linkRegex.source)[1])
  169  }
  170  
  171: function getPath (productDir, link, filename) {
  172    return path.join(productDir, link, `${filename}.md`)

  174  
  175: function formatArticleError (message, articles) {
  176:   return `${message}\n  - ${articles.join('\n  - ')}`
  177  }

docs • tests\content\crowdin-config.js:
   1: const config = require('../helpers/crowdin-config').read()
   2: const { loadPages } = require('../../lib/pages')
   3: const ignoredPagePaths = config.files[0].ignore
   4: const ignoredDataPaths = config.files[2].ignore
   5  
   6: describe('crowdin.yml config file', () => {
   7    jest.setTimeout(60 * 1000)
   8  
   9:   let pages
  10    beforeAll(async (done) => {
  11:     pages = await loadPages()
  12      done()

  15    test('has expected file structure', async () => {
  16:     expect(config.files.length).toBe(3)
  17:     expect(config.files[0].source).toBe('/content/**/*.md')
  18:     expect(config.files[0].ignore).toContain('/content/README.md')
  19    })
  20  
  21:   test('ignores all Early Access paths', async () => {
  22:     expect(ignoredPagePaths).toContain('/content/early-access')
  23:     expect(ignoredDataPaths).toContain('/data/early-access')
  24    })
  25  
  26:   test('ignores all hidden pages', async () => {
  27:     const hiddenPages = pages
  28:       .filter(page => page.hidden && page.languageCode === 'en')
  29:       .map(page => `/content/${page.relativePath}`)
  30:     const overlooked = hiddenPages.filter(page => !isIgnored(page, ignoredPagePaths))
  31:     const message = `Found some hidden pages that are not yet excluded from localization.
  32:       Please copy and paste the lines below into the \`ignore\` section of /crowdin.yml: \n\n"${overlooked.join('",\n"')}"`
  33  
  34:     // This may not be true anymore given the separation of Early Access docs
  35:     // expect(hiddenPages.length).toBeGreaterThan(0)
  36:     expect(ignoredPagePaths.length).toBeGreaterThan(0)
  37:     expect(overlooked, message).toHaveLength(0)
  38    })

  40  
  41: // file is ignored if its exact filename in the list,
  42: // or if it's within an ignored directory
  43: function isIgnored (filename, ignoredPagePaths) {
  44:   return ignoredPagePaths.some(ignoredPath => {
  45:     const isDirectory = !ignoredPath.endsWith('.md')
  46:     return ignoredPath === filename || (isDirectory && filename.startsWith(ignoredPath))
  47    })

docs • tests\content\featured-links.js:
   1: const { getDOM, getJSON } = require('../helpers/supertest')
   2  const enterpriseServerReleases = require('../../lib/enterprise-server-releases')

   7  
   8:   describe('rendering', () => {
   9:     test('non-TOC pages do not have intro links', async () => {
  10:       const $ = await getDOM('/en/github/getting-started-with-github/set-up-git')
  11:       expect($('.featured-links')).toHaveLength(0)
  12      })
  13  
  14:     test('landing page intro links have expected properties', async () => {
  15:       const $ = await getDOM('/en')
  16        const $featuredLinks = $('.featured-links a')
  17:       expect($featuredLinks).toHaveLength(9)
  18:       expect($featuredLinks.eq(0).attr('href')).toBe('/en/github/getting-started-with-github/set-up-git')
  19:       expect($featuredLinks.eq(0).children('h4').text().startsWith('Set up Git')).toBe(true)
  20:       expect($featuredLinks.eq(0).children('p').text().startsWith('At the heart of GitHub')).toBe(true)
  21  
  22:       expect($featuredLinks.eq(8).attr('href')).toBe('/en/github/working-with-github-pages')
  23:       expect($featuredLinks.eq(8).children('h4').text().startsWith('GitHub Pages')).toBe(true)
  24        expect($featuredLinks.eq(8).children('p').text().startsWith('You can create a website')).toBe(true)

  26  
  27:     test('localized intro links link to localized pages', async () => {
  28:       const $ = await getDOM('/ja')
  29        const $featuredLinks = $('.featured-links a')
  30:       expect($featuredLinks).toHaveLength(9)
  31        expect($featuredLinks.eq(0).attr('href').startsWith('/ja')).toBe(true)

  36      test('Enterprise user intro links have expected values', async () => {
  37:       const $ = await getDOM(`/en/enterprise/${enterpriseServerReleases.latest}/user/insights`)
  38        const $featuredLinks = $('.featured-links a')
  39:       expect($featuredLinks).toHaveLength(6)
  40:       expect($featuredLinks.eq(0).attr('href')).toBe(`/en/enterprise-server@${enterpriseServerReleases.latest}/insights/installing-and-configuring-github-insights/about-github-insights`)
  41:       expect($featuredLinks.eq(0).children('h4').text().startsWith('About GitHub Insights')).toBe(true)
  42:       expect($featuredLinks.eq(0).children('p').text().startsWith('GitHub Insights provides metrics')).toBe(true)
  43      })
  44  
  45:     test('featured links respect versioning', async () => {
  46:       const $ = await getDOM(`/en/enterprise/${enterpriseServerReleases.latest}/user/packages`)
  47        const $featuredLinks = $('.all-articles-list a')
  48:       expect($featuredLinks.length).toBeGreaterThan(2)
  49:       expect($featuredLinks.text().includes('Package client guides for GitHub Packages')).toBe(true)
  50        // does not include dotcom-only links
  51:       expect($featuredLinks.text().includes('About GitHub Container Registry')).toBe(false)
  52:       expect($featuredLinks.text().includes('Getting started with GitHub Container Registry')).toBe(false)
  53      })

  55  
  56:   describe('context.page object', () => {
  57      test('returns modified array of links', async () => {
  58:       const gettingStartedLinks = await getJSON('/en?json=featuredLinks.gettingStarted')
  59        const expectedFirstLink = {
  60:         href: '/en/github/getting-started-with-github/set-up-git',
  61:         title: 'Set up Git'
  62        }
  63:       expect(gettingStartedLinks[0].href).toEqual(expectedFirstLink.href)
  64:       expect(gettingStartedLinks[0].title).toEqual(expectedFirstLink.title)
  65:       expect(gettingStartedLinks[0].intro.startsWith('At the heart of GitHub')).toBe(true)
  66      })
  67  
  68:     test('returns raw array of links on the page object', async () => {
  69:       const rawGettingStartedLinks = await getJSON('/en?json=page.featuredLinks.gettingStarted')
  70:       expect(rawGettingStartedLinks[0]).toEqual('/github/getting-started-with-github/set-up-git')
  71      })

docs • tests\content\gitignore.js:
  2  const path = require('path')
  3: const gitignorePath = path.join(process.cwd(), '.gitignore')
  4: const gitignore = fs.readFileSync(gitignorePath, 'utf8')
  5: const entries = gitignore.split(/\r?\n/)
  6  
  7: describe('.gitignore file', () => {
  8    test('includes an entry for .env', () => {

docs • tests\content\glossary.js:
   2  
   3: describe('glossaries', () => {
   4:   let glossaries
   5    beforeAll(async (done) => {
   6:     glossaries = (await loadSiteData()).en.site.data.glossaries
   7      done()

  10    test('are broken into external, internal, and candidates', async () => {
  11:     const keys = Object.keys(glossaries)
  12:     expect(keys).toHaveLength(3)
  13      expect(keys).toContain('candidates')

  19      function hasValidTerm (entry) {
  20:       return entry.term && entry.term.length && !entry.term.includes('*')
  21      }
  22  
  23:     expect(glossaries.external.every(hasValidTerm)).toBe(true)
  24:     expect(glossaries.internal.every(hasValidTerm)).toBe(true)
  25:     expect(glossaries.candidates.every(hasValidTerm)).toBe(true)
  26    })
  27  
  28:   test('external glossary has entries, and they all have descriptions', async () => {
  29:     expect(glossaries.external.length).toBeGreaterThan(20)
  30:     glossaries.external.forEach(entry => {
  31:       const message = `entry '${entry.term}' is missing a description`
  32:       expect(entry.description && entry.description.length > 0, message).toBe(true)
  33      })

  35  
  36:   test('internal glossary has entries, and they all have descriptions', async () => {
  37:     expect(glossaries.internal.length).toBeGreaterThan(20)
  38:     glossaries.internal.forEach(entry => {
  39:       const message = `entry '${entry.term}' is missing a description`
  40:       expect(entry.description && entry.description.length > 0, message).toBe(true)
  41      })

  43  
  44:   test('non-English external glossary is in correct order', async () => {
  45:     const vals = (await loadSiteData()).ja.site.data.glossaries.external
  46      vals.forEach((val, i) => {
  47:       expect(val.term.localeCompare(vals[i + 1], 'ja')).toBeGreaterThan(0)
  48      })

  51    test('candidates all have a term, but no description', async () => {
  52:     expect(glossaries.candidates.length).toBeGreaterThan(20)
  53:     glossaries.candidates.forEach(entry => {
  54:       const message = `entry '${entry.term}' not expected to have a description`
  55:       expect(!entry.description, message).toBe(true)
  56      })

docs • tests\content\graphql.js:
   1: const previewsJson = require('../../lib/graphql/static/previews')
   2: const upcomingChangesJson = require('../../lib/graphql/static/upcoming-changes')
   3: const prerenderedObjectsJson = require('../../lib/graphql/static/prerendered-objects')
   4: const { schemaValidator, previewsValidator, upcomingChangesValidator } = require('../../lib/graphql/validator')
   5  const revalidator = require('revalidator')
   6  const allVersions = Object.values(require('../../lib/all-versions'))
   7: const graphqlVersions = allVersions.map(v => v.miscVersionName)
   8: const graphqlTypes = require('../../lib/graphql/types').map(t => t.kind)
   9  
  10: describe('graphql json files', () => {
  11    jest.setTimeout(3 * 60 * 1000)

  13    test('static files have versions as top-level keys', () => {
  14:     graphqlVersions.forEach(version => {
  15        expect(version in previewsJson).toBe(true)
  16:       expect(version in upcomingChangesJson).toBe(true)
  17        expect(version in prerenderedObjectsJson).toBe(true)

  21    test('schemas object validation', () => {
  22:     graphqlVersions.forEach(version => {
  23:       const schemaJsonPerVersion = require(`../../lib/graphql/static/schema-${version}`)
  24:       // all graphql types are arrays except for queries
  25:       graphqlTypes
  26          .filter(type => type !== 'queries')

  29              const { valid, errors } = revalidator.validate(typeObj, schemaValidator[type])
  30:             const errorMessage = JSON.stringify(errors, null, 2)
  31:             expect(valid, errorMessage).toBe(true)
  32            })

  37          const { valid, errors } = revalidator.validate(connection, schemaValidator.queryConnections)
  38:         const errorMessage = JSON.stringify(errors, null, 2)
  39:         expect(valid, errorMessage).toBe(true)
  40        })

  44          const { valid, errors } = revalidator.validate(field, schemaValidator.queryFields)
  45:         const errorMessage = JSON.stringify(errors, null, 2)
  46:         expect(valid, errorMessage).toBe(true)
  47        })

  51    test('previews object validation', () => {
  52:     graphqlVersions.forEach(version => {
  53        previewsJson[version].forEach(previewObj => {
  54          const { valid, errors } = revalidator.validate(previewObj, previewsValidator)
  55:         const errorMessage = JSON.stringify(errors, null, 2)
  56:         expect(valid, errorMessage).toBe(true)
  57        })

  60  
  61:   test('upcoming changes object validation', () => {
  62:     graphqlVersions.forEach(version => {
  63:       Object.values(upcomingChangesJson[version]).forEach(changes => {
  64:         // each object value is an array of changes
  65:         changes.forEach(changeObj => {
  66:           const { valid, errors } = revalidator.validate(changeObj, upcomingChangesValidator)
  67:           const errorMessage = JSON.stringify(errors, null, 2)
  68:           expect(valid, errorMessage).toBe(true)
  69          })

  74    test('prerendered objects validation', () => {
  75:     graphqlVersions.forEach(version => {
  76        // shape of prerenderedObject: {
  77        //   html: <div>foo</div>,
  78:       //   miniToc: {contents: '<a>bar</a>', headingLevel: N, indentationLevel: N}
  79        //  }
  80        const prerenderedHtml = prerenderedObjectsJson[version].html
  81:       expect(typeof prerenderedHtml).toBe('string')
  82        expect(prerenderedHtml.startsWith('<div>')).toBe(true)

  84        expect(Array.isArray(prerenderedMiniToc)).toBe(true)
  85:       expect(prerenderedMiniToc.length).toBeGreaterThan(0)
  86:       expect(typeof prerenderedMiniToc[0].contents).toBe('string')
  87:       expect(typeof prerenderedMiniToc[0].headingLevel).toBe('number')
  88        expect(typeof prerenderedMiniToc[0].indentationLevel).toBe('number')

docs • tests\content\lint-files.js:
    3  const walk = require('walk-sync')
    4: const { zip, groupBy } = require('lodash')
    5  const yaml = require('js-yaml')
    6  const revalidator = require('revalidator')
    7: const generateMarkdownAST = require('mdast-util-from-markdown')
    8  const visit = require('unist-util-visit')

   10  const frontmatter = require('../../lib/frontmatter')
   11: const languages = require('../../lib/languages')
   12: const { tags } = require('../../lib/liquid-tags/extended-markdown')
   13: const ghesReleaseNotesSchema = require('../../lib/release-notes-schema')
   14  const renderContent = require('../../lib/render-content')

   20  const variablesDir = path.join(rootDir, 'data/variables')
   21: const glossariesDir = path.join(rootDir, 'data/glossaries')
   22: const ghesReleaseNotesDir = path.join(rootDir, 'data/release-notes')
   23  
   24: const languageCodes = Object.keys(languages)
   25  
   26: // WARNING: Complicated RegExp below!
   27  //
   28: // Things matched by this RegExp:
   29  //  - [link text](link-url)

   33  //
   34: // Things intentionally NOT matched by this RegExp:
   35  //  - [link text](#link-url)

   51  //
   52: const relativeArticleLinkRegex = /(?=^|[^\]]\s*)\[[^\]]+\](?::\n?[ \t]+|\s*\()(?!\/|#|https?:\/\/|tel:|mailto:|\{[%{]\s*)[^)\s]+(?:(?:\s*[%}]\})?\)|\s+|$)/gm
   53  
   54: // Things matched by this RegExp:
   55: //  - [link text](/en/github/blah)
   56: //  - [link text] (https://docs.github.com/ja/github/blah)
   57: //  - [link-definition-ref]: http://help.github.com/es/github/blah
   58  //  - etc.
   59  //
   60: // Things intentionally NOT matched by this RegExp:
   61: //  - [Node.js](https://nodejs.org/en/)
   62  //  - etc.
   63  //
   64: const languageLinkRegex = new RegExp(`(?=^|[^\\]]\\s*)\\[[^\\]]+\\](?::\\n?[ \\t]+|\\s*\\()(?:(?:https?://(?:help|docs|developer)\\.github\\.com)?/(?:${languageCodes.join('|')})(?:/[^)\\s]*)?)(?:\\)|\\s+|$)`, 'gm')
   65  
   66: // Things matched by this RegExp:
   67  //  - [link text](/enterprise/2.19/admin/blah)
   68: //  - [link text] (https://docs.github.com/enterprise/11.10.340/admin/blah)
   69: //  - [link-definition-ref]: http://help.github.com/enterprise/2.8/admin/blah
   70  //
   71: // Things intentionally NOT matched by this RegExp:
   72  //  - [link text](https://someservice.com/enterprise/1.0/blah)
   73: //  - [link text](/github/site-policy/enterprise/2.2/admin/blah)
   74: const versionLinkRegEx = /(?=^|[^\]]\s*)\[[^\]]+\](?::\n?[ \t]+|\s*\()(?:(?:https?:\/\/(?:help|docs|developer)\.github\.com)?\/enterprise\/\d+(\.\d+)+(?:\/[^)\s]*)?)(?:\)|\s+|$)/gm
   75  
   76: // Things matched by this RegExp:
   77: //  - [link text](/early-access/github/blah)
   78: //  - [link text] (https://docs.github.com/early-access/github/blah)
   79: //  - [link-definition-ref]: http://help.github.com/early-access/github/blah
   80  //  - etc.
   81  //
   82: // Things intentionally NOT matched by this RegExp:
   83: //  - [Node.js](https://nodejs.org/early-access/)
   84  //  - etc.
   85  //
   86: const earlyAccessLinkRegex = /(?=^|[^\]]\s*)\[[^\]]+\](?::\n?[ \t]+|\s*\()(?:(?:https?:\/\/(?:help|docs|developer)\.github\.com)?\/early-access(?:\/[^)\s]*)?)(?:\)|\s+|$)/gm
   87  
   88: //  - [link text](https://docs.github.com/github/blah)
   89: //  - [link text] (https://help.github.com/github/blah)
   90: //  - [link-definition-ref]: http://developer.github.com/v3/
   91: //  - [link text](//docs.github.com)
   92  //  - etc.
   93  //
   94: // Things intentionally NOT matched by this RegExp:
   95: //  - [link text](/github/blah)
   96: //  - [link text[(https://developer.github.com/changes/2018-02-22-protected-branches-required-signatures/)
   97  //  - etc.
   98  //
   99: const domainLinkRegex = /(?=^|[^\]]\s*)\[[^\]]+\](?::\n?[ \t]+|\s*\()(?:https?:)?\/\/(?:help|docs|developer)\.github\.com(?!\/changes\/)[^)\s]*(?:\)|\s+|$)/gm
  100  
  101: // Things matched by this RegExp:
  102: //  - ![image text](/assets/images/early-access/github/blah.gif)
  103: //  - ![image text] (https://docs.github.com/assets/images/early-access/github/blah.gif)
  104: //  - [image-definition-ref]: http://help.github.com/assets/images/early-access/github/blah.gif
  105: //  - [link text](/assets/images/early-access/github/blah.gif)
  106  //  - etc.
  107  //
  108: // Things intentionally NOT matched by this RegExp:
  109: //  - [Node.js](https://nodejs.org/assets/images/early-access/blah.gif)
  110  //  - etc.
  111  //
  112: const earlyAccessImageRegex = /(?=^|[^\]]\s*)\[[^\]]+\](?::\n?[ \t]+|\s*\()(?:(?:https?:\/\/(?:help|docs|developer)\.github\.com)?\/assets\/images\/early-access(?:\/[^)\s]*)?)(?:\)|\s+|$)/gm
  113  
  114: // Things matched by this RegExp:
  115: //  - ![image text](/assets/early-access/images/github/blah.gif)
  116: //  - ![image text] (https://docs.github.com/images/early-access/github/blah.gif)
  117: //  - [image-definition-ref]: http://help.github.com/assets/early-access/github/blah.gif
  118: //  - [link text](/early-access/assets/images/github/blah.gif)
  119: //  - [link text](/early-access/images/github/blah.gif)
  120  //  - etc.
  121  //
  122: // Things intentionally NOT matched by this RegExp:
  123: //  - [Node.js](https://nodejs.org/assets/early-access/images/blah.gif)
  124  //  - etc.
  125  //
  126: const badEarlyAccessImageRegex = /(?=^|[^\]]\s*)\[[^\]]+\](?::\n?[ \t]+|\s*\()(?:(?:https?:\/\/(?:help|docs|developer)\.github\.com)?\/(?:(?:assets|images)\/early-access|early-access\/(?:assets|images))(?:\/[^)\s]*)?)(?:\)|\s+|$)/gm
  127  
  128  // {{ site.data.example.pizza }}
  129: const oldVariableRegex = /{{\s*?site\.data\..*?}}/g
  130  

  133  //
  134: const oldOcticonRegex = /{{\s*?octicon-([a-z-]+)(\s[\w\s\d-]+)?\s*?}}/g
  135  

  137  //  - {{/note}}
  138: //  - {{ #warning }}
  139  //  - {{ /pizza }}
  140  //
  141: const oldExtendedMarkdownRegex = /{{\s*?[#/][a-z-]+\s*?}}/g
  142  
  143  const relativeArticleLinkErrorText = 'Found unexpected relative article links:'
  144: const languageLinkErrorText = 'Found article links with hard-coded language codes:'
  145  const versionLinkErrorText = 'Found article links with hard-coded version numbers:'
  146  const domainLinkErrorText = 'Found article links with hard-coded domain names:'
  147: const earlyAccessLinkErrorText = 'Found article links leaking Early Access docs:'
  148: const earlyAccessImageErrorText = 'Found article images/links leaking Early Access images:'
  149: const badEarlyAccessImageErrorText = 'Found article images/links leaking incorrect Early Access images:'
  150: const oldVariableErrorText = 'Found article uses old {{ site.data... }} syntax. Use {% data example.data.string %} instead!'
  151  const oldOcticonErrorText = 'Found octicon variables with the old {{ octicon-name }} syntax. Use {% octicon "name" %} instead!'
  152: const oldExtendedMarkdownErrorText = 'Found extended markdown tags with the old {{#note}} syntax. Use {% note %}/{% endnote %} instead!'
  153  
  154  const mdWalkOptions = {
  155:   globs: ['**/*.md'],
  156:   ignore: ['**/README.md'],
  157    directories: false,

  163  const yamlWalkOptions = {
  164:   globs: ['**/*.yml'],
  165    directories: false,

  189  
  190:   // data/glossaries
  191:   const glossariesYamlAbsPaths = walk(glossariesDir, yamlWalkOptions).sort()
  192:   const glossariesYamlRelPaths = glossariesYamlAbsPaths.map(p => slash(path.relative(rootDir, p)))
  193:   const glossariesYamlTuples = zip(glossariesYamlRelPaths, glossariesYamlAbsPaths)
  194  
  195:   ymlToLint = [...variableYamlTuples, ...glossariesYamlTuples]
  196  
  197:   // GHES release notes
  198:   const ghesReleaseNotesYamlAbsPaths = walk(ghesReleaseNotesDir, yamlWalkOptions).sort()
  199:   const ghesReleaseNotesYamlRelPaths = ghesReleaseNotesYamlAbsPaths.map(p => path.relative(rootDir, p))
  200:   releaseNotesToLint = zip(ghesReleaseNotesYamlRelPaths, ghesReleaseNotesYamlAbsPaths)
  201  } else {
  202:   console.log('testing translations.')
  203  
  204:   // get all translated markdown or yaml files by comparing files changed to main branch
  205:   const changedFilesRelPaths = execSync('git diff --name-only origin/main | egrep "^translations/.*/.+.(yml|md)$"').toString().split('\n')
  206:   console.log(`Found ${changedFilesRelPaths.length} translated files.`)
  207  
  208:   const { mdRelPaths = [], ymlRelPaths = [], releaseNotesRelPaths = [] } = groupBy(changedFilesRelPaths, (path) => {
  209:     // separate the changed files to different groups
  210      if (path.endsWith('README.md')) {

  213        return 'mdRelPaths'
  214:     } else if (path.match(/\/data\/(variables|glossaries)\//i)) {
  215        return 'ymlRelPaths'

  218      } else {
  219:       // we aren't linting the rest
  220        return 'throwAway'

  233  
  234: function formatLinkError (message, links) {
  235:   return `${message}\n  - ${links.join('\n  - ')}`
  236  }
  237  
  238: // Returns `content` if its a string, or `content.description` if it can.
  239: // Used for getting the nested `description` key in glossary files.
  240: function getContent (content) {
  241:   if (typeof content === 'string') return content
  242:   if (typeof content.description === 'string') return content.description
  243    return null

  258          frontmatterData = data
  259:         ast = generateMarkdownAST(content)
  260          isHidden = data.hidden === true

  290  
  291:         const errorMessage = formatLinkError(relativeArticleLinkErrorText, matches)
  292:         expect(matches.length, errorMessage).toBe(0)
  293        })
  294  
  295:       test('URLs must not contain a hard-coded language code', async () => {
  296          const matches = links.filter(link => {
  297:           return /\/(?:${languageCodes.join('|')})\//.test(link)
  298          })
  299  
  300:         const errorMessage = formatLinkError(languageLinkErrorText, matches)
  301:         expect(matches.length, errorMessage).toBe(0)
  302        })

  304        test('URLs must not contain a hard-coded version number', async () => {
  305:         const initialMatches = (content.match(versionLinkRegEx) || [])
  306  

  308          const matches = initialMatches.filter(match => {
  309:           if (markdownRelPath === 'content/admin/enterprise-management/migrating-from-github-enterprise-1110x-to-2123.md') {
  310              return false

  314  
  315:         const errorMessage = formatLinkError(versionLinkErrorText, matches)
  316:         expect(matches.length, errorMessage).toBe(0)
  317        })

  319        test('URLs must not contain a hard-coded domain name', async () => {
  320:         const matches = (content.match(domainLinkRegex) || [])
  321:         const errorMessage = formatLinkError(domainLinkErrorText, matches)
  322:         expect(matches.length, errorMessage).toBe(0)
  323        })

  327          if (!isEarlyAccess) {
  328:           const matches = (content.match(earlyAccessLinkRegex) || [])
  329:           const errorMessage = formatLinkError(earlyAccessLinkErrorText, matches)
  330:           expect(matches.length, errorMessage).toBe(0)
  331          }

  333  
  334:       test('must not leak Early Access image URLs', async () => {
  335          // Only execute for docs that are NOT Early Access
  336          if (!isEarlyAccess) {
  337:           const matches = (content.match(earlyAccessImageRegex) || [])
  338:           const errorMessage = formatLinkError(earlyAccessImageErrorText, matches)
  339:           expect(matches.length, errorMessage).toBe(0)
  340          }

  342  
  343:       test('must have correctly formatted Early Access image URLs', async () => {
  344          // Execute for ALL docs (not just Early Access) to ensure non-EA docs
  345:         // are not leaking incorrectly formatted EA image URLs
  346:         const matches = (content.match(badEarlyAccessImageRegex) || [])
  347:         const errorMessage = formatLinkError(badEarlyAccessImageErrorText, matches)
  348:         expect(matches.length, errorMessage).toBe(0)
  349        })

  351        test('does not use old site.data variable syntax', async () => {
  352:         const matches = (content.match(oldVariableRegex) || [])
  353          const matchesWithExample = matches.map(match => {
  354            const example = match
  355:             .replace(/{{\s*?site\.data\.([a-zA-Z0-9-_]+(?:\.[a-zA-Z0-9-_]+)+)\s*?}}/g, '{% data $1 %}')
  356            return `${match} => ${example}`
  357          })
  358:         const errorMessage = formatLinkError(oldVariableErrorText, matchesWithExample)
  359:         expect(matches.length, errorMessage).toBe(0)
  360        })

  362        test('does not use old octicon variable syntax', async () => {
  363:         const matches = (content.match(oldOcticonRegex) || [])
  364:         const errorMessage = formatLinkError(oldOcticonErrorText, matches)
  365:         expect(matches.length, errorMessage).toBe(0)
  366        })

  368        test('does not use old extended markdown syntax', async () => {
  369:         Object.keys(tags).forEach(tag => {
  370:           const reg = new RegExp(`{{\\s*?[#|/]${tag}`, 'g')
  371:           if (reg.test(content)) {
  372:             const matches = (content.match(oldExtendedMarkdownRegex)) || []
  373:             const tagMessage = oldExtendedMarkdownErrorText
  374:               .replace('{{#note}}', `{{#${tag}}}`)
  375:               .replace('{% note %}', `{% ${tag} %}`)
  376:               .replace('{% endnote %}', `{% end${tag} %}`)
  377:             const errorMessage = formatLinkError(tagMessage, matches)
  378:             expect(matches.length, errorMessage).toBe(0)
  379            }

  384          // If Liquid can't parse the file, it'll throw an error.
  385:         // For example, the following is invalid and will fail this test:
  386:         // {% if currentVersion ! "github-ae@latest" %}
  387          expect(() => renderContent.liquid.parse(content))

  393          test('contains valid frontmatter', () => {
  394:           const errorMessage = frontmatterErrors.map(error => `- [${error.property}]: ${error.actual}, ${error.message}`).join('\n')
  395:           expect(frontmatterErrors.length, errorMessage).toBe(0)
  396          })

  429          for (const [key, content] of Object.entries(dictionary)) {
  430:           const contentStr = getContent(content)
  431            if (!contentStr) continue
  432:           const valMatches = (contentStr.match(relativeArticleLinkRegex) || [])
  433:           if (valMatches.length > 0) {
  434              matches.push(...valMatches.map((match) => `Key "${key}": ${match}`))

  437  
  438:         const errorMessage = formatLinkError(relativeArticleLinkErrorText, matches)
  439:         expect(matches.length, errorMessage).toBe(0)
  440        })
  441  
  442:       test('URLs must not contain a hard-coded language code', async () => {
  443          const matches = []

  445          for (const [key, content] of Object.entries(dictionary)) {
  446:           const contentStr = getContent(content)
  447            if (!contentStr) continue
  448:           const valMatches = (contentStr.match(languageLinkRegex) || [])
  449:           if (valMatches.length > 0) {
  450              matches.push(...valMatches.map((match) => `Key "${key}": ${match}`))

  453  
  454:         const errorMessage = formatLinkError(languageLinkErrorText, matches)
  455:         expect(matches.length, errorMessage).toBe(0)
  456        })

  461          for (const [key, content] of Object.entries(dictionary)) {
  462:           const contentStr = getContent(content)
  463            if (!contentStr) continue
  464:           const valMatches = (contentStr.match(versionLinkRegEx) || [])
  465:           if (valMatches.length > 0) {
  466              matches.push(...valMatches.map((match) => `Key "${key}": ${match}`))

  469  
  470:         const errorMessage = formatLinkError(versionLinkErrorText, matches)
  471:         expect(matches.length, errorMessage).toBe(0)
  472        })

  477          for (const [key, content] of Object.entries(dictionary)) {
  478:           const contentStr = getContent(content)
  479            if (!contentStr) continue
  480:           const valMatches = (contentStr.match(domainLinkRegex) || [])
  481:           if (valMatches.length > 0) {
  482              matches.push(...valMatches.map((match) => `Key "${key}": ${match}`))

  485  
  486:         const errorMessage = formatLinkError(domainLinkErrorText, matches)
  487:         expect(matches.length, errorMessage).toBe(0)
  488        })

  495            for (const [key, content] of Object.entries(dictionary)) {
  496:             const contentStr = getContent(content)
  497              if (!contentStr) continue
  498:             const valMatches = (contentStr.match(earlyAccessLinkRegex) || [])
  499:             if (valMatches.length > 0) {
  500                matches.push(...valMatches.map((match) => `Key "${key}": ${match}`))

  503  
  504:           const errorMessage = formatLinkError(earlyAccessLinkErrorText, matches)
  505:           expect(matches.length, errorMessage).toBe(0)
  506          }

  508  
  509:       test('must not leak Early Access image URLs', async () => {
  510          // Only execute for docs that are NOT Early Access

  514            for (const [key, content] of Object.entries(dictionary)) {
  515:             const contentStr = getContent(content)
  516              if (!contentStr) continue
  517:             const valMatches = (contentStr.match(earlyAccessImageRegex) || [])
  518:             if (valMatches.length > 0) {
  519                matches.push(...valMatches.map((match) => `Key "${key}": ${match}`))

  522  
  523:           const errorMessage = formatLinkError(earlyAccessImageErrorText, matches)
  524:           expect(matches.length, errorMessage).toBe(0)
  525          }

  527  
  528:       test('must have correctly formatted Early Access image URLs', async () => {
  529          // Execute for ALL docs (not just Early Access) to ensure non-EA docs
  530:         // are not leaking incorrectly formatted EA image URLs
  531          const matches = []

  533          for (const [key, content] of Object.entries(dictionary)) {
  534:           const contentStr = getContent(content)
  535            if (!contentStr) continue
  536:           const valMatches = (contentStr.match(badEarlyAccessImageRegex) || [])
  537:           if (valMatches.length > 0) {
  538              matches.push(...valMatches.map((match) => `Key "${key}": ${match}`))

  541  
  542:         const errorMessage = formatLinkError(badEarlyAccessImageErrorText, matches)
  543:         expect(matches.length, errorMessage).toBe(0)
  544        })

  549          for (const [key, content] of Object.entries(dictionary)) {
  550:           const contentStr = getContent(content)
  551            if (!contentStr) continue
  552:           const valMatches = (contentStr.match(oldVariableRegex) || [])
  553:           if (valMatches.length > 0) {
  554              matches.push(...valMatches.map((match) => {
  555                const example = match
  556:                 .replace(/{{\s*?site\.data\.([a-zA-Z0-9-_]+(?:\.[a-zA-Z0-9-_]+)+)\s*?}}/g, '{% data $1 %}')
  557                return `Key "${key}": ${match} => ${example}`

  561  
  562:         const errorMessage = formatLinkError(oldVariableErrorText, matches)
  563:         expect(matches.length, errorMessage).toBe(0)
  564        })

  569          for (const [key, content] of Object.entries(dictionary)) {
  570:           const contentStr = getContent(content)
  571            if (!contentStr) continue
  572:           const valMatches = (contentStr.match(oldOcticonRegex) || [])
  573:           if (valMatches.length > 0) {
  574              matches.push(...valMatches.map((match) => `Key "${key}": ${match}`))

  577  
  578:         const errorMessage = formatLinkError(oldOcticonErrorText, matches)
  579:         expect(matches.length, errorMessage).toBe(0)
  580        })

  585          for (const [key, content] of Object.entries(dictionary)) {
  586:           const contentStr = getContent(content)
  587            if (!contentStr) continue
  588:           const valMatches = (contentStr.match(oldExtendedMarkdownRegex) || [])
  589:           if (valMatches.length > 0) {
  590              matches.push(...valMatches.map((match) => `Key "${key}": ${match}`))

  593  
  594:         const errorMessage = formatLinkError(oldExtendedMarkdownErrorText, matches)
  595:         expect(matches.length, errorMessage).toBe(0)
  596        })

  601  describe('lint release notes', () => {
  602:   if (releaseNotesToLint.length > 0) {
  603      describe.each(releaseNotesToLint)(

  613          it('matches the schema', () => {
  614:           const { errors } = revalidator.validate(dictionary, ghesReleaseNotesSchema)
  615:           const errorMessage = errors.map(error => `- [${error.property}]: ${error.actual}, ${error.message}`).join('\n')
  616:           expect(errors.length, errorMessage).toBe(0)
  617          })

docs • tests\content\liquid-line-breaks.js:
  14  This will match Liquid variable references that contain at least one line break
  15: between the variable reference and either the `{{` or `}}` tag boundaries.
  16  

  32  */
  33: const liquidRefsWithLinkBreaksRegex = /\{\{[ \t]*\n\s*[^\s}]+\s*\}\}|\{\{\s*[^\s}]+[ \t]*\n\s*\}\}/gm
  34  

  37      const mdWalkOptions = {
  38:       globs: ['**/*.md'],
  39:       ignore: ['**/README.md'],
  40        directories: false,

  57  
  58:         const matches = (content.match(liquidRefsWithLinkBreaksRegex) || [])
  59:         const errorMessage = formatRefError('Found unexpected line breaks in Liquid reference:', matches)
  60:         expect(matches.length, errorMessage).toBe(0)
  61        }

  65      const yamlWalkOptions = {
  66:       globs: ['**/*.yml'],
  67        directories: false,

  83          for (const [key, content] of Object.entries(dictionary)) {
  84:           if (typeof content !== 'string') continue
  85:           const valMatches = (content.match(liquidRefsWithLinkBreaksRegex) || [])
  86:           if (valMatches.length > 0) {
  87              matches.push(...valMatches.map((match) => `Key "${key}": ${match}`))

  90  
  91:         const errorMessage = formatRefError('Found unexpected line breaks in Liquid reference:', matches)
  92:         expect(matches.length, errorMessage).toBe(0)
  93        }

  97  
  98: function formatRefError (message, breaks) {
  99:   return `${message}\n  - ${breaks.join('\n  - ')}`
  100  }

docs • tests\content\remove-liquid-statements.js:
    2  const cheerio = require('cheerio')
    3: const matter = require('gray-matter')
    4  const readFileAsync = require('../../lib/readfile-async')

    8  
    9: // Hardcode values so tests don't go out of date
   10  const versionToDeprecate = 'enterprise-server@2.13'

   13  // Remove liquid only
   14: const greaterThan = path.join(removeLiquidStatementsFixtures, 'greater-than.md')
   15: const andGreaterThan1 = path.join(removeLiquidStatementsFixtures, 'and-greater-than1.md')
   16: const andGreaterThan2 = path.join(removeLiquidStatementsFixtures, 'and-greater-than2.md')
   17  const notEquals = path.join(removeLiquidStatementsFixtures, 'not-equals.md')

   33    removeDeprecatedFrontmatter(file, data.versions, versionToDeprecate, nextOldestVersion)
   34:   return matter.stringify(content, data, { lineWidth: 10000 })
   35  }
   36  
   37: describe('removing liquid statements only', () => {
   38:   test('removes liquid statements that specify "greater than version to deprecate"', async () => {
   39:     let contents = await readFileAsync(greaterThan, 'utf8')
   40      contents = removeLiquidStatements(contents, versionToDeprecate, nextOldestVersion)

   44      expect($('.example3').text().trim()).toBe('Alpha')
   45:     expect($('.example4').text().trim()).toBe(`{% if currentVersion ver_gt "enterprise-server@2.16" %}\n
   46  Alpha\n\n{% else %}\n\nBravo\n\nCharlie\n\n{% endif %}`)

   50  Bravo\n\n{% endif %}`)
   51:     expect($('.example7').text().trim()).toBe(`Alpha\n\n{% if currentVersion ver_gt "enterprise-server@2.16" %}\n
   52  Bravo\n\n{% else %}\n\nCharlie\n\n{% endif %}`)

   54      expect($('.example9').text().trim()).toBe(`{% if currentVersion == "free-pro-team@latest" %}\n
   55: Alpha\n\n{% else %}\n\nBravo\n\n{% if currentVersion ver_gt "enterprise-server@2.16" %}\n\nCharlie\n
   56  {% endif %}\n\nDelta\n\n{% endif %}`)

   59  
   60:   test('removes liquid statements that specify "and greater than version to deprecate"', async () => {
   61:     let contents = await readFileAsync(andGreaterThan1, 'utf8')
   62      contents = removeLiquidStatements(contents, versionToDeprecate, nextOldestVersion)

   65      expect($('.example2').text().trim()).toBe('{% if currentVersion != "free-pro-team@latest" %}\n\nAlpha\n\n{% endif %}')
   66:     expect($('.example3').text().trim()).toBe(`{% if currentVersion ver_gt "enterprise-server@2.16" %}\n
   67  Alpha\n\n{% else %}\n\nBravo\n\n{% if currentVersion != "free-pro-team@latest" %}\n\nCharlie\n\n{% endif %}\n{% endif %}`)

   70      expect($('.example5').text().trim()).toBe(`{% if currentVersion != "free-pro-team@latest" %}\n
   71: Alpha\n\n{% if currentVersion ver_gt "enterprise-server@2.16" %}\n\nBravo\n\n{% endif %}\n\n{% endif %}`)
   72    })
   73  
   74:   test('removes liquid statements that specify "and greater than version to deprecate" (alternate format)', async () => {
   75:     let contents = await readFileAsync(andGreaterThan2, 'utf8')
   76      contents = removeLiquidStatements(contents, versionToDeprecate, nextOldestVersion)

  104  
  105: describe('removing liquid statements and content', () => {
  106    test('removes interior content and liquid statements that specify "equals version to deprecate"', async () => {

  133      expect($('.example7').text().trim()).toBe('')
  134:     expect($('.example8').text().trim()).toBe(`Bravo\n\n{% if currentVersion ver_gt "enterprise-server@2.16" %}\n
  135  Charlie\n\n{% else %}\n\nDelta\n\n{% endif %}\n\nEcho`)

  138  
  139: describe('updating frontmatter', () => {
  140:   test('updates frontmatter versions Enterprise if set to greater-than-or-equal-to version to deprecate', async () => {
  141      let contents = await readFileAsync(frontmatter1, 'utf8')

  143      const $ = cheerio.load(contents)
  144:     // console.log('foo')
  145:     // console.log($.text())
  146      expect($.text().includes('enterprise-server: \'*\'')).toBe(true)

  149  
  150:   test('updates frontmatter versions Enterprise if set to greater-than-or-equal-to next oldest version', async () => {
  151      let contents = await readFileAsync(frontmatter2, 'utf8')

docs • tests\content\site-data-references.js:
    1: const { isEqual, get, uniqWith } = require('lodash')
    2  const loadSiteData = require('../../lib/site-data')
    3: const { loadPages } = require('../../lib/pages')
    4: const getDataReferences = require('../../lib/get-liquid-data-references')
    5  const frontmatter = require('../../lib/read-frontmatter')

   12  
   13:   let data, pages
   14  

   16      data = await loadSiteData()
   17:     pages = await loadPages()
   18:     pages = pages.filter(page => page.languageCode === 'en')
   19      done()

   21  
   22:   test('every data reference found in English content files is defined and has a value', () => {
   23      let errors = []
   24:     expect(pages.length).toBeGreaterThan(0)
   25  
   26:     pages.forEach(page => {
   27:       const file = path.join('content', page.relativePath)
   28:       const pageRefs = getDataReferences(page.markdown)
   29:       pageRefs.forEach(key => {
   30:         const value = get(data.en, key)
   31:         if (typeof value !== 'string') errors.push({ key, value, file })
   32        })

   35      errors = uniqWith(errors, isEqual) // remove duplicates
   36:     expect(errors.length, JSON.stringify(errors, null, 2)).toBe(0)
   37    })
   38  
   39:   test('every data reference found in metadata of English content files is defined and has a value', async () => {
   40      let errors = []
   41:     expect(pages.length).toBeGreaterThan(0)
   42  
   43:     await Promise.all(pages.map(async page => {
   44:       const metadataFile = path.join('content', page.relativePath)
   45        const fileContents = await readFileAsync(path.join(__dirname, '../..', metadataFile))
   46:       const { data: metadata } = frontmatter(fileContents, { filepath: page.fullPath })
   47:       const metadataRefs = getDataReferences(JSON.stringify(metadata))
   48        metadataRefs.forEach(key => {
   49:         const value = get(data.en, key)
   50:         if (typeof value !== 'string') errors.push({ key, value, metadataFile })
   51        })

   54      errors = uniqWith(errors, isEqual) // remove duplicates
   55:     expect(errors.length, JSON.stringify(errors, null, 2)).toBe(0)
   56    })
   57  
   58:   test('every data reference found in English reusable files is defined and has a value', async () => {
   59      let errors = []

   61      const reusables = Object.values(allReusables)
   62:     expect(reusables.length).toBeGreaterThan(0)
   63  
   64      await Promise.all(reusables.map(async reusablesPerFile => {
   65:       let reusableFile = path.join(__dirname, '../../data/reusables/', getFilenameByValue(allReusables, reusablesPerFile))
   66:       reusableFile = await getFilepath(reusableFile)
   67  
   68:       const reusableRefs = getDataReferences(JSON.stringify(reusablesPerFile))
   69  
   70        reusableRefs.forEach(key => {
   71:         const value = get(data.en, key)
   72:         if (typeof value !== 'string') errors.push({ key, value, reusableFile })
   73        })

   76      errors = uniqWith(errors, isEqual) // remove duplicates
   77:     expect(errors.length, JSON.stringify(errors, null, 2)).toBe(0)
   78    })
   79  
   80:   test('every data reference found in English variable files is defined and has a value', async () => {
   81      let errors = []

   83      const variables = Object.values(allVariables)
   84:     expect(variables.length).toBeGreaterThan(0)
   85  
   86      await Promise.all(variables.map(async variablesPerFile => {
   87:       let variableFile = path.join(__dirname, '../../data/variables/', getFilenameByValue(allVariables, variablesPerFile))
   88:       variableFile = await getFilepath(variableFile)
   89  
   90:       const variableRefs = getDataReferences(JSON.stringify(variablesPerFile))
   91  
   92        variableRefs.forEach(key => {
   93:         const value = get(data.en, key)
   94:         if (typeof value !== 'string') errors.push({ key, value, variableFile })
   95        })

   98      errors = uniqWith(errors, isEqual) // remove duplicates
   99:     expect(errors.length, JSON.stringify(errors, null, 2)).toBe(0)
  100    })

  102  
  103: function getFilenameByValue (object, value) {
  104    return Object.keys(object).find(key => object[key] === value)

  107  // if path exists, assume it's a directory; otherwise, assume a YML extension
  108: async function getFilepath (filepath) {
  109    try {

docs • tests\content\site-data.js:
   2  const path = require('path')
   3: const { get, isPlainObject, has } = require('lodash')
   4  const flat = require('flat')

   8  
   9: describe('siteData module (English)', () => {
  10    let data

  19  
  20:   test('sets a top-level key for each language', async () => {
  21      expect('en' in data).toEqual(true)

  24  
  25:   test('includes English variables', async () => {
  26:     const prodName = get(data, 'en.site.data.variables.product.prodname_dotcom')
  27:     expect(prodName).toBe('GitHub')
  28    })
  29  
  30:   test('includes English reusables', async () => {
  31:     const reusable = get(data, 'en.site.data.reusables.command_line.switching_directories_procedural')
  32:     expect(reusable).toBe('1. Change the current working directory to your local repository.')
  33    })

  35    test('includes Japanese variables', async () => {
  36:     const prodName = get(data, 'ja.site.data.variables.product.prodname_dotcom')
  37:     expect(prodName).toBe('GitHub')
  38    })

  40    test('includes Japanese reusables', async () => {
  41:     const reusable = get(data, 'ja.site.data.reusables.audit_log.octicon_icon')
  42      expect(reusable.includes('任意のページの左上で')).toBe(true)

  45    // TODO: re-enable once Janky flakyness is resolved
  46:   test.skip('backfills missing translated site data with English values', async () => {
  47      const newFile = path.join(__dirname, '../../data/newfile.yml')

  49      const data = await loadSiteData()
  50:     expect(get(data, 'en.site.data.newfile.newvalue')).toEqual('bar')
  51:     expect(get(data, 'ja.site.data.newfile.newvalue')).toEqual('bar')
  52      await fs.unlink(newFile)

  54  
  55:   test('all Liquid templating is valid', async () => {
  56      const dataMap = flat(data)

  59        if (!patterns.hasLiquid.test(value)) continue
  60:       let message = `${key} contains a malformed Liquid expression`
  61        let result = null

  65          console.trace(err)
  66:         message += `: ${err.message}`
  67        }
  68:       expect(typeof result, message).toBe('string')
  69      }

  72    test('includes markdown files as data', async () => {
  73:     const reusable = get(data, 'en.site.data.reusables.enterprise_enterprise_support.submit-support-ticket-first-section')
  74:     expect(typeof reusable).toBe('string')
  75      expect(reusable.includes('1. ')).toBe(true)

  77  
  78:   test.skip('encodes bracketed parentheses to prevent them from becoming links', async () => {
  79:     const reusable = get(data, 'ja.site.data.reusables.organizations.team_name')
  80      const expectation = `reusable should contain a bracket followed by a space. Actual value: ${reusable}`

  85      const reusables = require('walk-sync')(path.join(__dirname, '../../data/reusables'))
  86:     expect(reusables.length).toBeGreaterThan(100)
  87      const yamlReusables = reusables.filter(filename => filename.endsWith('.yml') || filename.endsWith('.yaml'))
  88:     const message = `reusables are now written as individual Markdown files. Please migrate the following YAML files to Markdown:\n${yamlReusables.join('\n')}`
  89:     expect(yamlReusables.length, message).toBe(0)
  90    })
  91  
  92:   test('all non-English data has matching English data', async () => {
  93:     for (const languageCode of Object.keys(data)) {
  94:       if (languageCode === 'en') continue
  95  
  96:       const nonEnglishKeys = Object.keys(flat(data[languageCode]))
  97:       for (const key of nonEnglishKeys) {
  98          if (!has(data.en, key)) {
  99:           throw new Error(`matching data not found for ${languageCode}.${key}`)
  100          }

docs • tests\content\site-tree.js:
   3  const latestEnterpriseRelease = require('../../lib/enterprise-server-releases').latest
   4: const { getJSON } = require('../helpers/supertest')
   5  const flat = require('flat')

  13    beforeAll(async (done) => {
  14:     siteTree = await getJSON('/en?json=siteTree')
  15      flatTree = flat(siteTree)

  18  
  19:   test('has language codes as top-level keys', () => {
  20      expect('en' in siteTree).toBe(true)

  26      expect(Object.keys(siteTree.en)[0]).toBe(nonEnterpriseDefaultVersion)
  27:     expect(Object.keys(siteTree.en[nonEnterpriseDefaultVersion].products.github.categories)[0]).toBe('/en/github/getting-started-with-github')
  28    })

  32      expect(`enterprise-server@${latestEnterpriseRelease}` in siteTree.en).toBe(true)
  33:     expect(flatTree[`en.${nonEnterpriseDefaultVersion}.products.github.href`]).toBe('/en/github')
  34:     expect(flatTree[`en.${nonEnterpriseDefaultVersion}.products.github.categories./en/github/getting-started-with-github.href`]).toBe('/en/github/getting-started-with-github')
  35    })

  37    describe('localized titles', () => {
  38:     test('titles for categories', () => {
  39:       const japaneseTitle = flatTree[`ja.${nonEnterpriseDefaultVersion}.products.github.categories./ja/github/getting-started-with-github.title`]
  40:       expect(typeof japaneseTitle).toBe('string')
  41        expect(japaneseCharacters.presentIn(japaneseTitle)).toBe(true)
  42  
  43:       const englishTitle = flatTree[`en.${nonEnterpriseDefaultVersion}.products.github.categories./en/github/getting-started-with-github.title`]
  44:       expect(typeof englishTitle).toBe('string')
  45:       expect(japaneseCharacters.presentIn(englishTitle)).toBe(false)
  46      })

  51  
  52:     test('articles that include site data in liquid templating', () => {
  53:       const pageWithDynamicTitle = siteTree.en[`enterprise-server@${latestEnterpriseRelease}`]
  54          .products.admin
  55:         .categories[`/en/enterprise-server@${latestEnterpriseRelease}/admin/enterprise-support`]
  56        // Source frontmatter from article:
  57:       // title: 'Working with {{ site.data.variables.contact.github_support }}'
  58:       expect(pageWithDynamicTitle.title).toEqual('Working with GitHub Support')
  59      })

  63      const products = Object.values(siteTree.en[nonEnterpriseDefaultVersion].products)
  64:     expect(products.length).toBeGreaterThan(0)
  65  

  67        const { valid, errors } = revalidator.validate(product, schema.product)
  68:       const expectation = JSON.stringify(errors, null, 2)
  69        expect(valid, expectation).toBe(true)
  70  
  71:       Object.values(product.categories || {}).forEach(category => {
  72:         const { valid, errors } = revalidator.validate(category, schema.category)
  73:         const expectation = JSON.stringify(errors, null, 2)
  74          expect(valid, expectation).toBe(true)
  75  
  76:         Object.values(category.maptopics || {}).forEach(maptopic => {
  77            const { valid, errors } = revalidator.validate(maptopic, schema.maptopic)
  78:           const expectation = JSON.stringify(errors, null, 2)
  79            expect(valid, expectation).toBe(true)

docs • tests\content\webhooks.js:
   1  const { difference } = require('lodash')
   2: const { getJSON } = require('../helpers/supertest')
   3  const { latest } = require('../../lib/enterprise-server-releases')

   7  
   8: // grab some values for testing
   9  const nonEnterpriseDefaultPayloadVersion = allVersions

  12  
  13: const latestGhesPayloadVersion = allVersions
  14    .find(version => version.currentRelease === latest)

  16  
  17: const ghaePayloadVersion = allVersions
  18:   .find(version => version.plan === 'github-ae')
  19    .miscVersionName

  32        const payloadsPerVersion = Object.keys(webhookPayloads[version])
  33:       expect(payloadsPerVersion.length).toBeGreaterThan(20)
  34      })

  36  
  37:   test('have payloads that are JSON strings, not objects', () => {
  38:     // use the first one found for testing purposes
  39      const firstKey = Object.keys(webhookPayloads[nonEnterpriseDefaultPayloadVersion])[0]
  40      const firstValue = webhookPayloads[nonEnterpriseDefaultPayloadVersion][firstKey]
  41:     const payloadString = getPayloadString(firstValue)
  42:     const payloadLines = payloadString.split('\n')
  43  
  44:     expect(payloadLines.length).toBeGreaterThan(5)
  45      expect(payloadLines[2].trim()).toBe('```json')
  46      expect(payloadLines[3].trim()).toBe('{')
  47:     expect(payloadLines[payloadLines.length - 3].trim()).toBe('```')
  48    })

  50    test('on non-dotcom versions, dotcom-only payloads fall back to dotcom', async () => {
  51:     const ghesPayloads = webhookPayloads[latestGhesPayloadVersion]
  52:     const ghaePayloads = webhookPayloads[ghaePayloadVersion]
  53:     const dotcomOnlyPayloads = difference(Object.keys(webhookPayloads[nonEnterpriseDefaultPayloadVersion]), Object.keys(ghesPayloads))
  54:     // use the first one found for testing purposes
  55      const dotcomOnlyPayload = dotcomOnlyPayloads[0]
  56:     expect(ghesPayloads[dotcomOnlyPayload]).toBeUndefined()
  57:     expect(ghaePayloads[dotcomOnlyPayload]).toBeUndefined()
  58  
  59:     // fallback handling is in middleware/contextualizers/webhooks.js
  60:     const ghesPayloadsWithFallbacks = await getJSON(`/en/enterprise-server@${latest}/developers/webhooks-and-events?json=webhookPayloadsForCurrentVersion`)
  61:     const ghaePayloadsWithFallbacks = await getJSON('/en/github-ae@latest/developers/webhooks-and-events?json=webhookPayloadsForCurrentVersion')
  62:     expect(ghesPayloadsWithFallbacks[dotcomOnlyPayload]).toBeDefined()
  63:     expect(ghaePayloadsWithFallbacks[dotcomOnlyPayload]).toBeDefined()
  64  
  65:     const ghesPayloadString = getPayloadString(ghesPayloadsWithFallbacks[dotcomOnlyPayload])
  66:     const ghaePayloadString = getPayloadString(ghaePayloadsWithFallbacks[dotcomOnlyPayload])
  67:     expect(ghesPayloadString.includes('```json')).toBe(true)
  68:     expect(ghaePayloadString.includes('```json')).toBe(true)
  69    })

  71  
  72: // accommodate two possible payload string locations
  73  // value of top-level key: `create` (in create.payload.json)
  74  // value of second-level key: `issues.opened` (in issues.opened.payload.json)
  75: function getPayloadString (payload) {
  76:   return typeof payload === 'string'
  77      ? payload

docs • tests\fixtures\article-with-broken-links-and-images.md:
   1  ---
   2: title: Article with broken images and links
   3  versions:

   7  
   8: ### Images
   9  
  10: This image is broken on all versions because the file is not in assets: ![missing image](/assets/images/foo.png)
  11  
  12: This image is OK on all versions because the file is in assets: ![missing image](/assets/images/site/logo.png)
  13  
  14  ### Anchors
  15: This anchor is broken on all versions because it points to a heading that does not exist: [Non-existent Heading](#this-anchor-goes-nowhere)
  16  
  17: This anchor is broken on all versions because it points to a heading that does not exist: [Non-existent Heading](/github/setting-up-and-managing-your-github-user-account/permission-levels-for-a-user-account-repository#this-anchor-goes-nowhere)
  18  

  20  
  21: This link is broken on Enterprise versions because it points to a Dotcom-only article: [GitHub's Products](/github/getting-started-with-github/githubs-products)
  22  
  23: This link is OK because it points to a Dotcom-only article with the `dotcom-only` class: <a href="/github/managing-security-vulnerabilities/about-security-alerts-for-vulnerable-dependencies" class="dotcom-only">About security alerts for vulnerable dependencies</a>."
  24  
  25: This link is broken on Dotcom because it points to an Enterprise-only article: [Working with Pre-Receive Hooks](/github/collaborating-with-issues-and-pull-requests/working-with-pre-receive-hooks)
  26  

docs • tests\fixtures\article-with-includeGuides.md:
  1  ---
  2: title: Article with includeGuides
  3  versions:
  4    free-pro-team: '*'
  5: includeGuides:
  6:   - /path/guide1
  7:   - /path/guide2
  8:   - /path/guide3
  9: layout: product-sublanding
  10  ---

docs • tests\fixtures\article-with-learning-tracks.md:
  1  ---
  2: title: Article with learning tracks
  3  versions:
  4    free-pro-team: '*'
  5: learningTracks:
  6    - track_1
  7    - track_2
  8:   - non_existing_track
  9: layout: product-sublanding
  10  ---

docs • tests\fixtures\article-with-mislocalized-frontmatter.md:
  1  ---
  2: title: GitHub 上でプロジェクトを探索する
  3  intro: ''

docs • tests\fixtures\changelog-entry.json:
   1  {
   2:   "previewChanges": [
   3      {
   4:       "changes": [
   5:         "Field `Query.previewField` changed type from `PreviewType` to `PreviewType!`",
   6:         "Type for argument `changeTypeArgument` on field 'PreviewType.field1` changed from `Int` to `Float'"
   7        ],
   8:       "title": "The [Test preview](/graphql/overview/schema-previews#test-preview) includes these changes:"
   9      }
  10    ],
  11:   "schemaChanges": [
  12      {
  13:       "changes": [
  14          "Field `removedField` was removed from object type `Query`",
  15:         "Type for argument `argumentMadeRequired` on field `Query.argumentsField` changed from `Int` to `Int!`",
  16:         "Type for argument `argumentMadeOptional` on field `Query.argumentsField` changed from `Int!` to `Int`",
  17:         "Argument `removedRequiredArgument: Int!` was removed from field `Query.argumentsField`",
  18:         "Argument `removedOptionalArgument: Int!` was removed from field `Query.argumentsField`"
  19        ],
  20:       "title": "The GraphQL schema includes these changes:"
  21      }
  22    ],
  23:   "upcomingChanges": [
  24      {
  25:       "changes": [
  26          "On member `Query.stableField`:`stableField` will be removed. **Effective 2021-06-01**."
  27        ],
  28:       "title": "The following changes will be made to the schema:"
  29      }

docs • tests\fixtures\developer-redirects.json:
   2    "/apps": "/en/developers/apps",
   3:   "/apps/building-github-apps": "/en/developers/apps/building-github-apps",
   4:   "/apps/building-oauth-apps": "/en/developers/apps/building-oauth-apps",
   5:   "/apps/managing-github-apps": "/en/developers/apps/managing-github-apps",
   6:   "/apps/managing-oauth-apps": "/en/developers/apps/managing-oauth-apps",
   7:   "/apps/quickstart-guides": "/en/developers/apps/guides",
   8:   "/marketplace": "/en/developers/github-marketplace",
   9:   "/marketplace/getting-started": "/en/developers/github-marketplace/about-github-marketplace",
  10:   "/marketplace/integrating-with-the-github-marketplace-api": "/en/developers/github-marketplace/using-the-github-marketplace-api-in-your-app",
  11:   "/marketplace/listing-on-github-marketplace": "/en/developers/github-marketplace/listing-an-app-on-github-marketplace",
  12:   "/marketplace/selling-your-app": "/en/developers/github-marketplace/selling-your-app-on-github-marketplace",
  13    "/v3": "/en/rest",

  17    "/v3/actions/workflow_runs": "/en/rest/reference/actions#workflow-runs",
  18:   "/v3/guides": "/en/rest/guides",
  19:   "/v3/guides/managing-deploy-keys": "/en/developers/overview/managing-deploy-keys",
  20    "/v3/misc": "/en/rest/reference/emojis",
  21:   "/v4/public_schema": "/en/graphql/overview/public-schema",
  22:   "/v4/object/repository": "/en/graphql/reference/objects#repository",
  23    "/webhooks": "/en/developers/webhooks-and-events/about-webhooks",
  24    "/en/enterprise/2.18/apps": "/en/enterprise/2.18/user/developers/apps",
  25:   "/en/enterprise/2.18/apps/building-oauth-apps/authorizing-oauth-apps": "/en/enterprise/2.18/user/developers/apps/authorizing-oauth-apps",
  26:   "/en/enterprise/2.18/apps/building-oauth-apps/understanding-scopes-for-oauth-apps": "/en/enterprise/2.18/user/developers/apps/scopes-for-oauth-apps",
  27:   "/en/enterprise/2.18/apps/differences-between-apps": "/en/enterprise/2.18/user/developers/apps/differences-between-github-apps-and-oauth-apps",
  28    "/en/enterprise/2.18/v3/auth": "/en/enterprise/2.18/user/rest/overview/other-authentication-methods",
  29:   "/en/enterprise/2.18/v3/guides/managing-deploy-keys": "/en/enterprise/2.18/user/developers/overview/managing-deploy-keys",
  30:   "/en/enterprise/2.18/v4/explorer": "/en/enterprise/2.18/user/graphql/overview/explorer",
  31:   "/en/enterprise/2.18/v4/guides/forming-calls": "/en/enterprise/2.18/user/graphql/guides/forming-calls-with-graphql",
  32:   "/en/enterprise/2.18/v4/guides/intro-to-graphql": "/en/enterprise/2.18/user/graphql/guides/introduction-to-graphql",
  33:   "/en/enterprise/2.18/v4/guides/migrating-from-rest": "/en/enterprise/2.18/user/graphql/guides/migrating-from-rest-to-graphql",
  34    "/en/enterprise/2.18/webhooks": "/en/enterprise/2.18/user/developers/webhooks-and-events/about-webhooks",
  35    "/en/enterprise/2.19/apps": "/en/enterprise-server@2.19/developers/apps",
  36:   "/en/enterprise/2.19/apps/building-oauth-apps/authorizing-oauth-apps": "/en/enterprise-server@2.19/developers/apps/authorizing-oauth-apps",
  37:   "/en/enterprise/2.19/apps/building-oauth-apps/understanding-scopes-for-oauth-apps": "/en/enterprise-server@2.19/developers/apps/scopes-for-oauth-apps",
  38:   "/en/enterprise/2.19/apps/differences-between-apps": "/en/enterprise-server@2.19/developers/apps/differences-between-github-apps-and-oauth-apps",
  39    "/en/enterprise/2.19/v3/auth": "/en/enterprise-server@2.19/rest/overview/other-authentication-methods",
  40:   "/en/enterprise/2.19/v3/guides/managing-deploy-keys": "/en/enterprise-server@2.19/developers/overview/managing-deploy-keys",
  41:   "/en/enterprise/2.19/v4/explorer": "/en/enterprise-server@2.19/graphql/overview/explorer",
  42:   "/en/enterprise/2.19/v4/guides/forming-calls": "/en/enterprise-server@2.19/graphql/guides/forming-calls-with-graphql",
  43:   "/en/enterprise/2.19/v4/guides/intro-to-graphql": "/en/enterprise-server@2.19/graphql/guides/introduction-to-graphql",
  44:   "/en/enterprise/2.19/v4/guides/migrating-from-rest": "/en/enterprise-server@2.19/graphql/guides/migrating-from-rest-to-graphql",
  45    "/en/enterprise/2.19/webhooks": "/en/enterprise-server@2.19/developers/webhooks-and-events/about-webhooks",
  46    "/en/enterprise/2.20/apps": "/en/enterprise-server@2.20/developers/apps",
  47:   "/en/enterprise/2.20/apps/building-oauth-apps/authorizing-oauth-apps": "/en/enterprise-server@2.20/developers/apps/authorizing-oauth-apps",
  48:   "/en/enterprise/2.20/apps/building-oauth-apps/understanding-scopes-for-oauth-apps": "/en/enterprise-server@2.20/developers/apps/scopes-for-oauth-apps",
  49:   "/en/enterprise/2.20/apps/differences-between-apps": "/en/enterprise-server@2.20/developers/apps/differences-between-github-apps-and-oauth-apps",
  50    "/en/enterprise/2.20/v3/auth": "/en/enterprise-server@2.20/rest/overview/other-authentication-methods",
  51:   "/en/enterprise/2.20/v3/guides/managing-deploy-keys": "/en/enterprise-server@2.20/developers/overview/managing-deploy-keys",
  52:   "/en/enterprise/2.20/v4/explorer": "/en/enterprise-server@2.20/graphql/overview/explorer",
  53:   "/en/enterprise/2.20/v4/guides/forming-calls": "/en/enterprise-server@2.20/graphql/guides/forming-calls-with-graphql",
  54:   "/en/enterprise/2.20/v4/guides/intro-to-graphql": "/en/enterprise-server@2.20/graphql/guides/introduction-to-graphql",
  55:   "/en/enterprise/2.20/v4/guides/migrating-from-rest": "/en/enterprise-server@2.20/graphql/guides/migrating-from-rest-to-graphql",
  56    "/en/enterprise/2.20/webhooks": "/en/enterprise-server@2.20/developers/webhooks-and-events/about-webhooks",
  57    "/en/enterprise/2.21/apps": "/en/enterprise-server@2.21/developers/apps",
  58:   "/en/enterprise/2.21/apps/building-oauth-apps/authorizing-oauth-apps": "/en/enterprise-server@2.21/developers/apps/authorizing-oauth-apps",
  59:   "/en/enterprise/2.21/apps/building-oauth-apps/understanding-scopes-for-oauth-apps": "/en/enterprise-server@2.21/developers/apps/scopes-for-oauth-apps",
  60:   "/en/enterprise/2.21/apps/differences-between-apps": "/en/enterprise-server@2.21/developers/apps/differences-between-github-apps-and-oauth-apps",
  61    "/en/enterprise/2.21/v3/auth": "/en/enterprise-server@2.21/rest/overview/other-authentication-methods",
  62:   "/en/enterprise/2.21/v3/guides/managing-deploy-keys": "/en/enterprise-server@2.21/developers/overview/managing-deploy-keys",
  63:   "/en/enterprise/2.21/v4/explorer": "/en/enterprise-server@2.21/graphql/overview/explorer",
  64:   "/en/enterprise/2.21/v4/guides/forming-calls": "/en/enterprise-server@2.21/graphql/guides/forming-calls-with-graphql",
  65:   "/en/enterprise/2.21/v4/guides/intro-to-graphql": "/en/enterprise-server@2.21/graphql/guides/introduction-to-graphql",
  66:   "/en/enterprise/2.21/v4/guides/migrating-from-rest": "/en/enterprise-server@2.21/graphql/guides/migrating-from-rest-to-graphql",
  67    "/en/enterprise/2.21/webhooks": "/en/enterprise-server@2.21/developers/webhooks-and-events/about-webhooks"

docs • tests\fixtures\graphql-redirects.json:
    1  {
    2:   "/en/enterprise/2.18/user/v4/enum": "/en/enterprise/2.18/user/graphql/reference/enums",
    3:   "/en/enterprise/2.18/user/v4/enum/auditlogorderfield": "/en/enterprise/2.18/user/graphql/reference/enums#auditlogorderfield",
    4:   "/en/enterprise/2.18/user/v4/enum/checkannotationlevel": "/en/enterprise/2.18/user/graphql/reference/enums#checkannotationlevel",
    5:   "/en/enterprise/2.18/user/v4/guides": "/en/enterprise/2.18/user/graphql/guides",
    6:   "/en/enterprise/2.18/user/v4/input_object": "/en/enterprise/2.18/user/graphql/reference/input-objects",
    7:   "/en/enterprise/2.18/user/v4/interface": "/en/enterprise/2.18/user/graphql/reference/interfaces",
    8:   "/en/enterprise/2.18/user/v4/interface/actor": "/en/enterprise/2.18/user/graphql/reference/interfaces#actor",
    9:   "/en/enterprise/2.18/user/v4/interface/assignable": "/en/enterprise/2.18/user/graphql/reference/interfaces#assignable",
   10:   "/en/enterprise/2.18/user/v4/mutation": "/en/enterprise/2.18/user/graphql/reference/mutations",
   11:   "/en/enterprise/2.18/user/v4/object": "/en/enterprise/2.18/user/graphql/reference/objects",
   12:   "/en/enterprise/2.18/user/v4/object/actorlocation": "/en/enterprise/2.18/user/graphql/reference/objects#actorlocation",
   13:   "/en/enterprise/2.18/user/v4/object/addedtoprojectevent": "/en/enterprise/2.18/user/graphql/reference/objects#addedtoprojectevent",
   14:   "/en/enterprise/2.18/user/v4/previews": "/en/enterprise/2.18/user/graphql/overview/schema-previews",
   15:   "/en/enterprise/2.18/user/v4/public_schema": "/en/enterprise/2.18/user/graphql/overview/public-schema",
   16:   "/en/enterprise/2.18/user/v4/query": "/en/enterprise/2.18/user/graphql/reference/queries",
   17:   "/en/enterprise/2.18/user/v4/reference": "/en/enterprise/2.18/user/graphql/reference",
   18:   "/en/enterprise/2.18/user/v4/scalar": "/en/enterprise/2.18/user/graphql/reference/scalars",
   19:   "/en/enterprise/2.18/user/v4/scalar/boolean": "/en/enterprise/2.18/user/graphql/reference/scalars#boolean",
   20:   "/en/enterprise/2.18/user/v4/scalar/date": "/en/enterprise/2.18/user/graphql/reference/scalars#date",
   21:   "/en/enterprise/2.18/user/v4/union": "/en/enterprise/2.18/user/graphql/reference/unions",
   22:   "/en/enterprise/2.18/user/v4/union/auditentryactor": "/en/enterprise/2.18/user/graphql/reference/unions#auditentryactor",
   23:   "/en/enterprise/2.18/v4/enum": "/en/enterprise/2.18/user/graphql/reference/enums",
   24:   "/en/enterprise/2.18/v4/enum/auditlogorderfield": "/en/enterprise/2.18/user/graphql/reference/enums#auditlogorderfield",
   25:   "/en/enterprise/2.18/v4/enum/checkannotationlevel": "/en/enterprise/2.18/user/graphql/reference/enums#checkannotationlevel",
   26:   "/en/enterprise/2.18/v4/guides": "/en/enterprise/2.18/user/graphql/guides",
   27:   "/en/enterprise/2.18/v4/input_object": "/en/enterprise/2.18/user/graphql/reference/input-objects",
   28:   "/en/enterprise/2.18/v4/interface": "/en/enterprise/2.18/user/graphql/reference/interfaces",
   29:   "/en/enterprise/2.18/v4/interface/actor": "/en/enterprise/2.18/user/graphql/reference/interfaces#actor",
   30:   "/en/enterprise/2.18/v4/interface/assignable": "/en/enterprise/2.18/user/graphql/reference/interfaces#assignable",
   31:   "/en/enterprise/2.18/v4/mutation": "/en/enterprise/2.18/user/graphql/reference/mutations",
   32:   "/en/enterprise/2.18/v4/object": "/en/enterprise/2.18/user/graphql/reference/objects",
   33:   "/en/enterprise/2.18/v4/object/actorlocation": "/en/enterprise/2.18/user/graphql/reference/objects#actorlocation",
   34:   "/en/enterprise/2.18/v4/object/addedtoprojectevent": "/en/enterprise/2.18/user/graphql/reference/objects#addedtoprojectevent",
   35:   "/en/enterprise/2.18/v4/previews": "/en/enterprise/2.18/user/graphql/overview/schema-previews",
   36:   "/en/enterprise/2.18/v4/public_schema": "/en/enterprise/2.18/user/graphql/overview/public-schema",
   37:   "/en/enterprise/2.18/v4/query": "/en/enterprise/2.18/user/graphql/reference/queries",
   38:   "/en/enterprise/2.18/v4/reference": "/en/enterprise/2.18/user/graphql/reference",
   39:   "/en/enterprise/2.18/v4/scalar": "/en/enterprise/2.18/user/graphql/reference/scalars",
   40:   "/en/enterprise/2.18/v4/scalar/boolean": "/en/enterprise/2.18/user/graphql/reference/scalars#boolean",
   41:   "/en/enterprise/2.18/v4/scalar/date": "/en/enterprise/2.18/user/graphql/reference/scalars#date",
   42:   "/en/enterprise/2.18/v4/union": "/en/enterprise/2.18/user/graphql/reference/unions",
   43:   "/en/enterprise/2.18/v4/union/auditentryactor": "/en/enterprise/2.18/user/graphql/reference/unions#auditentryactor",
   44:   "/en/enterprise/2.19/user/v4/enum": "/en/enterprise-server@2.19/graphql/reference/enums",
   45:   "/en/enterprise/2.19/user/v4/guides": "/en/enterprise-server@2.19/graphql/guides",
   46:   "/en/enterprise/2.19/user/v4/input_object": "/en/enterprise-server@2.19/graphql/reference/input-objects",
   47:   "/en/enterprise/2.19/user/v4/interface": "/en/enterprise-server@2.19/graphql/reference/interfaces",
   48:   "/en/enterprise/2.19/user/v4/mutation": "/en/enterprise-server@2.19/graphql/reference/mutations",
   49:   "/en/enterprise/2.19/user/v4/object": "/en/enterprise-server@2.19/graphql/reference/objects",
   50:   "/en/enterprise/2.19/user/v4/previews": "/en/enterprise-server@2.19/graphql/overview/schema-previews",
   51:   "/en/enterprise/2.19/user/v4/public_schema": "/en/enterprise-server@2.19/graphql/overview/public-schema",
   52:   "/en/enterprise/2.19/user/v4/query": "/en/enterprise-server@2.19/graphql/reference/queries",
   53:   "/en/enterprise/2.19/user/v4/reference": "/en/enterprise-server@2.19/graphql/reference",
   54:   "/en/enterprise/2.19/user/v4/scalar": "/en/enterprise-server@2.19/graphql/reference/scalars",
   55:   "/en/enterprise/2.19/user/v4/union": "/en/enterprise-server@2.19/graphql/reference/unions",
   56:   "/en/enterprise/2.19/v4/enum": "/en/enterprise-server@2.19/graphql/reference/enums",
   57:   "/en/enterprise/2.19/v4/enum/auditlogorderfield": "/en/enterprise-server@2.19/graphql/reference/enums#auditlogorderfield",
   58:   "/en/enterprise/2.19/v4/enum/checkannotationlevel": "/en/enterprise-server@2.19/graphql/reference/enums#checkannotationlevel",
   59:   "/en/enterprise/2.19/v4/guides": "/en/enterprise-server@2.19/graphql/guides",
   60:   "/en/enterprise/2.19/v4/input_object": "/en/enterprise-server@2.19/graphql/reference/input-objects",
   61:   "/en/enterprise/2.19/v4/interface": "/en/enterprise-server@2.19/graphql/reference/interfaces",
   62:   "/en/enterprise/2.19/v4/interface/actor": "/en/enterprise-server@2.19/graphql/reference/interfaces#actor",
   63:   "/en/enterprise/2.19/v4/interface/assignable": "/en/enterprise-server@2.19/graphql/reference/interfaces#assignable",
   64:   "/en/enterprise/2.19/v4/mutation": "/en/enterprise-server@2.19/graphql/reference/mutations",
   65:   "/en/enterprise/2.19/v4/object": "/en/enterprise-server@2.19/graphql/reference/objects",
   66:   "/en/enterprise/2.19/v4/object/actorlocation": "/en/enterprise-server@2.19/graphql/reference/objects#actorlocation",
   67:   "/en/enterprise/2.19/v4/object/addedtoprojectevent": "/en/enterprise-server@2.19/graphql/reference/objects#addedtoprojectevent",
   68:   "/en/enterprise/2.19/v4/previews": "/en/enterprise-server@2.19/graphql/overview/schema-previews",
   69:   "/en/enterprise/2.19/v4/public_schema": "/en/enterprise-server@2.19/graphql/overview/public-schema",
   70:   "/en/enterprise/2.19/v4/query": "/en/enterprise-server@2.19/graphql/reference/queries",
   71:   "/en/enterprise/2.19/v4/reference": "/en/enterprise-server@2.19/graphql/reference",
   72:   "/en/enterprise/2.19/v4/scalar": "/en/enterprise-server@2.19/graphql/reference/scalars",
   73:   "/en/enterprise/2.19/v4/scalar/boolean": "/en/enterprise-server@2.19/graphql/reference/scalars#boolean",
   74:   "/en/enterprise/2.19/v4/scalar/date": "/en/enterprise-server@2.19/graphql/reference/scalars#date",
   75:   "/en/enterprise/2.19/v4/union": "/en/enterprise-server@2.19/graphql/reference/unions",
   76:   "/en/enterprise/2.19/v4/union/assignee": "/en/enterprise-server@2.19/graphql/reference/unions#assignee",
   77:   "/en/enterprise/2.19/v4/union/auditentryactor": "/en/enterprise-server@2.19/graphql/reference/unions#auditentryactor",
   78:   "/en/enterprise/2.20/user/v4/enum": "/en/enterprise-server@2.20/graphql/reference/enums",
   79:   "/en/enterprise/2.20/user/v4/guides": "/en/enterprise-server@2.20/graphql/guides",
   80:   "/en/enterprise/2.20/user/v4/input_object": "/en/enterprise-server@2.20/graphql/reference/input-objects",
   81:   "/en/enterprise/2.20/user/v4/interface": "/en/enterprise-server@2.20/graphql/reference/interfaces",
   82:   "/en/enterprise/2.20/user/v4/mutation": "/en/enterprise-server@2.20/graphql/reference/mutations",
   83:   "/en/enterprise/2.20/user/v4/object": "/en/enterprise-server@2.20/graphql/reference/objects",
   84:   "/en/enterprise/2.20/user/v4/previews": "/en/enterprise-server@2.20/graphql/overview/schema-previews",
   85:   "/en/enterprise/2.20/user/v4/public_schema": "/en/enterprise-server@2.20/graphql/overview/public-schema",
   86:   "/en/enterprise/2.20/user/v4/query": "/en/enterprise-server@2.20/graphql/reference/queries",
   87:   "/en/enterprise/2.20/user/v4/reference": "/en/enterprise-server@2.20/graphql/reference",
   88:   "/en/enterprise/2.20/user/v4/scalar": "/en/enterprise-server@2.20/graphql/reference/scalars",
   89:   "/en/enterprise/2.20/user/v4/union": "/en/enterprise-server@2.20/graphql/reference/unions",
   90:   "/en/enterprise/2.20/v4/enum": "/en/enterprise-server@2.20/graphql/reference/enums",
   91:   "/en/enterprise/2.20/v4/enum/auditlogorderfield": "/en/enterprise-server@2.20/graphql/reference/enums#auditlogorderfield",
   92:   "/en/enterprise/2.20/v4/enum/checkannotationlevel": "/en/enterprise-server@2.20/graphql/reference/enums#checkannotationlevel",
   93:   "/en/enterprise/2.20/v4/guides": "/en/enterprise-server@2.20/graphql/guides",
   94:   "/en/enterprise/2.20/v4/input_object": "/en/enterprise-server@2.20/graphql/reference/input-objects",
   95:   "/en/enterprise/2.20/v4/interface": "/en/enterprise-server@2.20/graphql/reference/interfaces",
   96:   "/en/enterprise/2.20/v4/interface/actor": "/en/enterprise-server@2.20/graphql/reference/interfaces#actor",
   97:   "/en/enterprise/2.20/v4/interface/assignable": "/en/enterprise-server@2.20/graphql/reference/interfaces#assignable",
   98:   "/en/enterprise/2.20/v4/mutation": "/en/enterprise-server@2.20/graphql/reference/mutations",
   99:   "/en/enterprise/2.20/v4/object": "/en/enterprise-server@2.20/graphql/reference/objects",
  100:   "/en/enterprise/2.20/v4/object/actorlocation": "/en/enterprise-server@2.20/graphql/reference/objects#actorlocation",
  101:   "/en/enterprise/2.20/v4/object/addedtoprojectevent": "/en/enterprise-server@2.20/graphql/reference/objects#addedtoprojectevent",
  102:   "/en/enterprise/2.20/v4/previews": "/en/enterprise-server@2.20/graphql/overview/schema-previews",
  103:   "/en/enterprise/2.20/v4/public_schema": "/en/enterprise-server@2.20/graphql/overview/public-schema",
  104:   "/en/enterprise/2.20/v4/query": "/en/enterprise-server@2.20/graphql/reference/queries",
  105:   "/en/enterprise/2.20/v4/reference": "/en/enterprise-server@2.20/graphql/reference",
  106:   "/en/enterprise/2.20/v4/scalar": "/en/enterprise-server@2.20/graphql/reference/scalars",
  107:   "/en/enterprise/2.20/v4/scalar/boolean": "/en/enterprise-server@2.20/graphql/reference/scalars#boolean",
  108:   "/en/enterprise/2.20/v4/scalar/date": "/en/enterprise-server@2.20/graphql/reference/scalars#date",
  109:   "/en/enterprise/2.20/v4/union": "/en/enterprise-server@2.20/graphql/reference/unions",
  110:   "/en/enterprise/2.20/v4/union/assignee": "/en/enterprise-server@2.20/graphql/reference/unions#assignee",
  111:   "/en/enterprise/2.20/v4/union/auditentryactor": "/en/enterprise-server@2.20/graphql/reference/unions#auditentryactor",
  112:   "/en/enterprise/2.21/user/v4/enum": "/en/enterprise-server@2.21/graphql/reference/enums",
  113:   "/en/enterprise/2.21/user/v4/guides": "/en/enterprise-server@2.21/graphql/guides",
  114:   "/en/enterprise/2.21/user/v4/input_object": "/en/enterprise-server@2.21/graphql/reference/input-objects",
  115:   "/en/enterprise/2.21/user/v4/interface": "/en/enterprise-server@2.21/graphql/reference/interfaces",
  116:   "/en/enterprise/2.21/user/v4/mutation": "/en/enterprise-server@2.21/graphql/reference/mutations",
  117:   "/en/enterprise/2.21/user/v4/object": "/en/enterprise-server@2.21/graphql/reference/objects",
  118:   "/en/enterprise/2.21/user/v4/previews": "/en/enterprise-server@2.21/graphql/overview/schema-previews",
  119:   "/en/enterprise/2.21/user/v4/public_schema": "/en/enterprise-server@2.21/graphql/overview/public-schema",
  120:   "/en/enterprise/2.21/user/v4/query": "/en/enterprise-server@2.21/graphql/reference/queries",
  121:   "/en/enterprise/2.21/user/v4/reference": "/en/enterprise-server@2.21/graphql/reference",
  122:   "/en/enterprise/2.21/user/v4/scalar": "/en/enterprise-server@2.21/graphql/reference/scalars",
  123:   "/en/enterprise/2.21/user/v4/union": "/en/enterprise-server@2.21/graphql/reference/unions",
  124:   "/en/enterprise/2.21/v4/enum": "/en/enterprise-server@2.21/graphql/reference/enums",
  125:   "/en/enterprise/2.21/v4/enum/auditlogorderfield": "/en/enterprise-server@2.21/graphql/reference/enums#auditlogorderfield",
  126:   "/en/enterprise/2.21/v4/enum/checkannotationlevel": "/en/enterprise-server@2.21/graphql/reference/enums#checkannotationlevel",
  127:   "/en/enterprise/2.21/v4/guides": "/en/enterprise-server@2.21/graphql/guides",
  128:   "/en/enterprise/2.21/v4/input_object": "/en/enterprise-server@2.21/graphql/reference/input-objects",
  129:   "/en/enterprise/2.21/v4/interface": "/en/enterprise-server@2.21/graphql/reference/interfaces",
  130:   "/en/enterprise/2.21/v4/interface/actor": "/en/enterprise-server@2.21/graphql/reference/interfaces#actor",
  131:   "/en/enterprise/2.21/v4/interface/assignable": "/en/enterprise-server@2.21/graphql/reference/interfaces#assignable",
  132:   "/en/enterprise/2.21/v4/mutation": "/en/enterprise-server@2.21/graphql/reference/mutations",
  133:   "/en/enterprise/2.21/v4/object": "/en/enterprise-server@2.21/graphql/reference/objects",
  134:   "/en/enterprise/2.21/v4/object/actorlocation": "/en/enterprise-server@2.21/graphql/reference/objects#actorlocation",
  135:   "/en/enterprise/2.21/v4/object/addedtoprojectevent": "/en/enterprise-server@2.21/graphql/reference/objects#addedtoprojectevent",
  136:   "/en/enterprise/2.21/v4/previews": "/en/enterprise-server@2.21/graphql/overview/schema-previews",
  137:   "/en/enterprise/2.21/v4/public_schema": "/en/enterprise-server@2.21/graphql/overview/public-schema",
  138:   "/en/enterprise/2.21/v4/query": "/en/enterprise-server@2.21/graphql/reference/queries",
  139:   "/en/enterprise/2.21/v4/reference": "/en/enterprise-server@2.21/graphql/reference",
  140:   "/en/enterprise/2.21/v4/scalar": "/en/enterprise-server@2.21/graphql/reference/scalars",
  141:   "/en/enterprise/2.21/v4/scalar/boolean": "/en/enterprise-server@2.21/graphql/reference/scalars#boolean",
  142:   "/en/enterprise/2.21/v4/scalar/date": "/en/enterprise-server@2.21/graphql/reference/scalars#date",
  143:   "/en/enterprise/2.21/v4/union": "/en/enterprise-server@2.21/graphql/reference/unions",
  144:   "/en/enterprise/2.21/v4/union/assignee": "/en/enterprise-server@2.21/graphql/reference/unions#assignee",
  145:   "/en/enterprise/2.21/v4/union/auditentryactor": "/en/enterprise-server@2.21/graphql/reference/unions#auditentryactor",
  146:   "/en/enterprise/v4/enum": "/en/enterprise-server/graphql/reference/enums",
  147:   "/en/enterprise/v4/enum/auditlogorderfield": "/en/enterprise-server/graphql/reference/enums#auditlogorderfield",
  148:   "/en/enterprise/v4/enum/checkannotationlevel": "/en/enterprise-server/graphql/reference/enums#checkannotationlevel",
  149:   "/en/enterprise/v4/guides": "/en/enterprise-server/graphql/guides",
  150:   "/en/enterprise/v4/input_object": "/en/enterprise-server/graphql/reference/input-objects",
  151:   "/en/enterprise/v4/interface": "/en/enterprise-server/graphql/reference/interfaces",
  152:   "/en/enterprise/v4/interface/actor": "/en/enterprise-server/graphql/reference/interfaces#actor",
  153:   "/en/enterprise/v4/interface/assignable": "/en/enterprise-server/graphql/reference/interfaces#assignable",
  154:   "/en/enterprise/v4/mutation": "/en/enterprise-server/graphql/reference/mutations",
  155:   "/en/enterprise/v4/object": "/en/enterprise-server/graphql/reference/objects",
  156:   "/en/enterprise/v4/object/actorlocation": "/en/enterprise-server/graphql/reference/objects#actorlocation",
  157:   "/en/enterprise/v4/object/addedtoprojectevent": "/en/enterprise-server/graphql/reference/objects#addedtoprojectevent",
  158:   "/en/enterprise/v4/previews": "/en/enterprise-server/graphql/overview/schema-previews",
  159:   "/en/enterprise/v4/public_schema": "/en/enterprise-server/graphql/overview/public-schema",
  160:   "/en/enterprise/v4/query": "/en/enterprise-server/graphql/reference/queries",
  161:   "/en/enterprise/v4/reference": "/en/enterprise-server/graphql/reference",
  162:   "/en/enterprise/v4/scalar": "/en/enterprise-server/graphql/reference/scalars",
  163:   "/en/enterprise/v4/scalar/boolean": "/en/enterprise-server/graphql/reference/scalars#boolean",
  164:   "/en/enterprise/v4/scalar/date": "/en/enterprise-server/graphql/reference/scalars#date",
  165:   "/en/enterprise/v4/union": "/en/enterprise-server/graphql/reference/unions",
  166:   "/en/enterprise/v4/union/assignee": "/en/enterprise-server/graphql/reference/unions#assignee",
  167:   "/en/enterprise/v4/union/auditentryactor": "/en/enterprise-server/graphql/reference/unions#auditentryactor",
  168:   "/en/v4/enum": "/en/graphql/reference/enums",
  169:   "/en/v4/enum/auditlogorderfield": "/en/graphql/reference/enums#auditlogorderfield",
  170:   "/en/v4/enum/checkannotationlevel": "/en/graphql/reference/enums#checkannotationlevel",
  171:   "/en/v4/guides": "/en/graphql/guides",
  172:   "/en/v4/input_object": "/en/graphql/reference/input-objects",
  173:   "/en/v4/input_object/acceptenterpriseadministratorinvitationinput": "/en/graphql/reference/input-objects#acceptenterpriseadministratorinvitationinput",
  174:   "/en/v4/input_object/accepttopicsuggestioninput": "/en/graphql/reference/input-objects#accepttopicsuggestioninput",
  175:   "/en/v4/interface": "/en/graphql/reference/interfaces",
  176:   "/en/v4/interface/actor": "/en/graphql/reference/interfaces#actor",
  177:   "/en/v4/interface/assignable": "/en/graphql/reference/interfaces#assignable",
  178:   "/en/v4/mutation": "/en/graphql/reference/mutations",
  179:   "/en/v4/mutation/acceptenterpriseadministratorinvitation": "/en/graphql/reference/mutations#acceptenterpriseadministratorinvitation",
  180:   "/en/v4/mutation/accepttopicsuggestion": "/en/graphql/reference/mutations#accepttopicsuggestion",
  181:   "/en/v4/object": "/en/graphql/reference/objects",
  182:   "/en/v4/object/actorlocation": "/en/graphql/reference/objects#actorlocation",
  183:   "/en/v4/object/addedtoprojectevent": "/en/graphql/reference/objects#addedtoprojectevent",
  184:   "/en/v4/previews": "/en/graphql/overview/schema-previews",
  185:   "/en/v4/public_schema": "/en/graphql/overview/public-schema",
  186:   "/en/v4/query": "/en/graphql/reference/queries",
  187:   "/en/v4/reference": "/en/graphql/reference",
  188:   "/en/v4/scalar": "/en/graphql/reference/scalars",
  189:   "/en/v4/scalar/boolean": "/en/graphql/reference/scalars#boolean",
  190:   "/en/v4/scalar/date": "/en/graphql/reference/scalars#date",
  191:   "/en/v4/union": "/en/graphql/reference/unions",
  192:   "/en/v4/union/assignee": "/en/graphql/reference/unions#assignee",
  193:   "/en/v4/union/auditentryactor": "/en/graphql/reference/unions#auditentryactor",
  194:   "/enterprise/2.18/user/v4/enum": "/en/enterprise/2.18/user/graphql/reference/enums",
  195:   "/enterprise/2.18/user/v4/enum/auditlogorderfield": "/en/enterprise/2.18/user/graphql/reference/enums#auditlogorderfield",
  196:   "/enterprise/2.18/user/v4/enum/checkannotationlevel": "/en/enterprise/2.18/user/graphql/reference/enums#checkannotationlevel",
  197:   "/enterprise/2.18/user/v4/guides": "/en/enterprise/2.18/user/graphql/guides",
  198:   "/enterprise/2.18/user/v4/input_object": "/en/enterprise/2.18/user/graphql/reference/input-objects",
  199:   "/enterprise/2.18/user/v4/interface": "/en/enterprise/2.18/user/graphql/reference/interfaces",
  200:   "/enterprise/2.18/user/v4/interface/actor": "/en/enterprise/2.18/user/graphql/reference/interfaces#actor",
  201:   "/enterprise/2.18/user/v4/interface/assignable": "/en/enterprise/2.18/user/graphql/reference/interfaces#assignable",
  202:   "/enterprise/2.18/user/v4/mutation": "/en/enterprise/2.18/user/graphql/reference/mutations",
  203:   "/enterprise/2.18/user/v4/object": "/en/enterprise/2.18/user/graphql/reference/objects",
  204:   "/enterprise/2.18/user/v4/object/actorlocation": "/en/enterprise/2.18/user/graphql/reference/objects#actorlocation",
  205:   "/enterprise/2.18/user/v4/object/addedtoprojectevent": "/en/enterprise/2.18/user/graphql/reference/objects#addedtoprojectevent",
  206:   "/enterprise/2.18/user/v4/previews": "/en/enterprise/2.18/user/graphql/overview/schema-previews",
  207:   "/enterprise/2.18/user/v4/public_schema": "/en/enterprise/2.18/user/graphql/overview/public-schema",
  208:   "/enterprise/2.18/user/v4/query": "/en/enterprise/2.18/user/graphql/reference/queries",
  209:   "/enterprise/2.18/user/v4/reference": "/en/enterprise/2.18/user/graphql/reference",
  210:   "/enterprise/2.18/user/v4/scalar": "/en/enterprise/2.18/user/graphql/reference/scalars",
  211:   "/enterprise/2.18/user/v4/scalar/boolean": "/en/enterprise/2.18/user/graphql/reference/scalars#boolean",
  212:   "/enterprise/2.18/user/v4/scalar/date": "/en/enterprise/2.18/user/graphql/reference/scalars#date",
  213:   "/enterprise/2.18/user/v4/union": "/en/enterprise/2.18/user/graphql/reference/unions",
  214:   "/enterprise/2.18/user/v4/union/auditentryactor": "/en/enterprise/2.18/user/graphql/reference/unions#auditentryactor",
  215:   "/enterprise/2.18/v4/enum": "/en/enterprise/2.18/user/graphql/reference/enums",
  216:   "/enterprise/2.18/v4/enum/auditlogorderfield": "/en/enterprise/2.18/user/graphql/reference/enums#auditlogorderfield",
  217:   "/enterprise/2.18/v4/enum/checkannotationlevel": "/en/enterprise/2.18/user/graphql/reference/enums#checkannotationlevel",
  218:   "/enterprise/2.18/v4/guides": "/en/enterprise/2.18/user/graphql/guides",
  219:   "/enterprise/2.18/v4/input_object": "/en/enterprise/2.18/user/graphql/reference/input-objects",
  220:   "/enterprise/2.18/v4/interface": "/en/enterprise/2.18/user/graphql/reference/interfaces",
  221:   "/enterprise/2.18/v4/interface/actor": "/en/enterprise/2.18/user/graphql/reference/interfaces#actor",
  222:   "/enterprise/2.18/v4/interface/assignable": "/en/enterprise/2.18/user/graphql/reference/interfaces#assignable",
  223:   "/enterprise/2.18/v4/mutation": "/en/enterprise/2.18/user/graphql/reference/mutations",
  224:   "/enterprise/2.18/v4/object": "/en/enterprise/2.18/user/graphql/reference/objects",
  225:   "/enterprise/2.18/v4/object/actorlocation": "/en/enterprise/2.18/user/graphql/reference/objects#actorlocation",
  226:   "/enterprise/2.18/v4/object/addedtoprojectevent": "/en/enterprise/2.18/user/graphql/reference/objects#addedtoprojectevent",
  227:   "/enterprise/2.18/v4/previews": "/en/enterprise/2.18/user/graphql/overview/schema-previews",
  228:   "/enterprise/2.18/v4/public_schema": "/en/enterprise/2.18/user/graphql/overview/public-schema",
  229:   "/enterprise/2.18/v4/query": "/en/enterprise/2.18/user/graphql/reference/queries",
  230:   "/enterprise/2.18/v4/reference": "/en/enterprise/2.18/user/graphql/reference",
  231:   "/enterprise/2.18/v4/scalar": "/en/enterprise/2.18/user/graphql/reference/scalars",
  232:   "/enterprise/2.18/v4/scalar/boolean": "/en/enterprise/2.18/user/graphql/reference/scalars#boolean",
  233:   "/enterprise/2.18/v4/scalar/date": "/en/enterprise/2.18/user/graphql/reference/scalars#date",
  234:   "/enterprise/2.18/v4/union": "/en/enterprise/2.18/user/graphql/reference/unions",
  235:   "/enterprise/2.18/v4/union/auditentryactor": "/en/enterprise/2.18/user/graphql/reference/unions#auditentryactor",
  236:   "/enterprise/2.19/user/v4/enum": "/en/enterprise-server@2.19/graphql/reference/enums",
  237:   "/enterprise/2.19/user/v4/enum/auditlogorderfield": "/en/enterprise-server@2.19/graphql/reference/enums#auditlogorderfield",
  238:   "/enterprise/2.19/user/v4/enum/checkannotationlevel": "/en/enterprise-server@2.19/graphql/reference/enums#checkannotationlevel",
  239:   "/enterprise/2.19/user/v4/guides": "/en/enterprise-server@2.19/graphql/guides",
  240:   "/enterprise/2.19/user/v4/input_object": "/en/enterprise-server@2.19/graphql/reference/input-objects",
  241:   "/enterprise/2.19/user/v4/interface": "/en/enterprise-server@2.19/graphql/reference/interfaces",
  242:   "/enterprise/2.19/user/v4/interface/actor": "/en/enterprise-server@2.19/graphql/reference/interfaces#actor",
  243:   "/enterprise/2.19/user/v4/interface/assignable": "/en/enterprise-server@2.19/graphql/reference/interfaces#assignable",
  244:   "/enterprise/2.19/user/v4/mutation": "/en/enterprise-server@2.19/graphql/reference/mutations",
  245:   "/enterprise/2.19/user/v4/object": "/en/enterprise-server@2.19/graphql/reference/objects",
  246:   "/enterprise/2.19/user/v4/object/actorlocation": "/en/enterprise-server@2.19/graphql/reference/objects#actorlocation",
  247:   "/enterprise/2.19/user/v4/object/addedtoprojectevent": "/en/enterprise-server@2.19/graphql/reference/objects#addedtoprojectevent",
  248:   "/enterprise/2.19/user/v4/previews": "/en/enterprise-server@2.19/graphql/overview/schema-previews",
  249:   "/enterprise/2.19/user/v4/public_schema": "/en/enterprise-server@2.19/graphql/overview/public-schema",
  250:   "/enterprise/2.19/user/v4/query": "/en/enterprise-server@2.19/graphql/reference/queries",
  251:   "/enterprise/2.19/user/v4/reference": "/en/enterprise-server@2.19/graphql/reference",
  252:   "/enterprise/2.19/user/v4/scalar": "/en/enterprise-server@2.19/graphql/reference/scalars",
  253:   "/enterprise/2.19/user/v4/scalar/boolean": "/en/enterprise-server@2.19/graphql/reference/scalars#boolean",
  254:   "/enterprise/2.19/user/v4/scalar/date": "/en/enterprise-server@2.19/graphql/reference/scalars#date",
  255:   "/enterprise/2.19/user/v4/union": "/en/enterprise-server@2.19/graphql/reference/unions",
  256:   "/enterprise/2.19/user/v4/union/assignee": "/en/enterprise-server@2.19/graphql/reference/unions#assignee",
  257:   "/enterprise/2.19/user/v4/union/auditentryactor": "/en/enterprise-server@2.19/graphql/reference/unions#auditentryactor",
  258:   "/enterprise/2.19/v4/enum": "/en/enterprise-server@2.19/graphql/reference/enums",
  259:   "/enterprise/2.19/v4/enum/auditlogorderfield": "/en/enterprise-server@2.19/graphql/reference/enums#auditlogorderfield",
  260:   "/enterprise/2.19/v4/enum/checkannotationlevel": "/en/enterprise-server@2.19/graphql/reference/enums#checkannotationlevel",
  261:   "/enterprise/2.19/v4/guides": "/en/enterprise-server@2.19/graphql/guides",
  262:   "/enterprise/2.19/v4/input_object": "/en/enterprise-server@2.19/graphql/reference/input-objects",
  263:   "/enterprise/2.19/v4/interface": "/en/enterprise-server@2.19/graphql/reference/interfaces",
  264:   "/enterprise/2.19/v4/interface/actor": "/en/enterprise-server@2.19/graphql/reference/interfaces#actor",
  265:   "/enterprise/2.19/v4/interface/assignable": "/en/enterprise-server@2.19/graphql/reference/interfaces#assignable",
  266:   "/enterprise/2.19/v4/mutation": "/en/enterprise-server@2.19/graphql/reference/mutations",
  267:   "/enterprise/2.19/v4/object": "/en/enterprise-server@2.19/graphql/reference/objects",
  268:   "/enterprise/2.19/v4/object/actorlocation": "/en/enterprise-server@2.19/graphql/reference/objects#actorlocation",
  269:   "/enterprise/2.19/v4/object/addedtoprojectevent": "/en/enterprise-server@2.19/graphql/reference/objects#addedtoprojectevent",
  270:   "/enterprise/2.19/v4/previews": "/en/enterprise-server@2.19/graphql/overview/schema-previews",
  271:   "/enterprise/2.19/v4/public_schema": "/en/enterprise-server@2.19/graphql/overview/public-schema",
  272:   "/enterprise/2.19/v4/query": "/en/enterprise-server@2.19/graphql/reference/queries",
  273:   "/enterprise/2.19/v4/reference": "/en/enterprise-server@2.19/graphql/reference",
  274:   "/enterprise/2.19/v4/scalar": "/en/enterprise-server@2.19/graphql/reference/scalars",
  275:   "/enterprise/2.19/v4/scalar/boolean": "/en/enterprise-server@2.19/graphql/reference/scalars#boolean",
  276:   "/enterprise/2.19/v4/scalar/date": "/en/enterprise-server@2.19/graphql/reference/scalars#date",
  277:   "/enterprise/2.19/v4/union": "/en/enterprise-server@2.19/graphql/reference/unions",
  278:   "/enterprise/2.19/v4/union/assignee": "/en/enterprise-server@2.19/graphql/reference/unions#assignee",
  279:   "/enterprise/2.19/v4/union/auditentryactor": "/en/enterprise-server@2.19/graphql/reference/unions#auditentryactor",
  280:   "/enterprise/2.20/user/v4/enum": "/en/enterprise-server@2.20/graphql/reference/enums",
  281:   "/enterprise/2.20/user/v4/guides": "/en/enterprise-server@2.20/graphql/guides",
  282:   "/enterprise/2.20/user/v4/input_object": "/en/enterprise-server@2.20/graphql/reference/input-objects",
  283:   "/enterprise/2.20/user/v4/interface": "/en/enterprise-server@2.20/graphql/reference/interfaces",
  284:   "/enterprise/2.20/user/v4/mutation": "/en/enterprise-server@2.20/graphql/reference/mutations",
  285:   "/enterprise/2.20/user/v4/object": "/en/enterprise-server@2.20/graphql/reference/objects",
  286:   "/enterprise/2.20/user/v4/previews": "/en/enterprise-server@2.20/graphql/overview/schema-previews",
  287:   "/enterprise/2.20/user/v4/public_schema": "/en/enterprise-server@2.20/graphql/overview/public-schema",
  288:   "/enterprise/2.20/user/v4/query": "/en/enterprise-server@2.20/graphql/reference/queries",
  289:   "/enterprise/2.20/user/v4/reference": "/en/enterprise-server@2.20/graphql/reference",
  290:   "/enterprise/2.20/user/v4/scalar": "/en/enterprise-server@2.20/graphql/reference/scalars",
  291:   "/enterprise/2.20/user/v4/union": "/en/enterprise-server@2.20/graphql/reference/unions",
  292:   "/enterprise/2.20/v4/enum": "/en/enterprise-server@2.20/graphql/reference/enums",
  293:   "/enterprise/2.20/v4/enum/auditlogorderfield": "/en/enterprise-server@2.20/graphql/reference/enums#auditlogorderfield",
  294:   "/enterprise/2.20/v4/enum/checkannotationlevel": "/en/enterprise-server@2.20/graphql/reference/enums#checkannotationlevel",
  295:   "/enterprise/2.20/v4/guides": "/en/enterprise-server@2.20/graphql/guides",
  296:   "/enterprise/2.20/v4/input_object": "/en/enterprise-server@2.20/graphql/reference/input-objects",
  297:   "/enterprise/2.20/v4/interface": "/en/enterprise-server@2.20/graphql/reference/interfaces",
  298:   "/enterprise/2.20/v4/interface/actor": "/en/enterprise-server@2.20/graphql/reference/interfaces#actor",
  299:   "/enterprise/2.20/v4/interface/assignable": "/en/enterprise-server@2.20/graphql/reference/interfaces#assignable",
  300:   "/enterprise/2.20/v4/mutation": "/en/enterprise-server@2.20/graphql/reference/mutations",
  301:   "/enterprise/2.20/v4/object": "/en/enterprise-server@2.20/graphql/reference/objects",
  302:   "/enterprise/2.20/v4/object/actorlocation": "/en/enterprise-server@2.20/graphql/reference/objects#actorlocation",
  303:   "/enterprise/2.20/v4/object/addedtoprojectevent": "/en/enterprise-server@2.20/graphql/reference/objects#addedtoprojectevent",
  304:   "/enterprise/2.20/v4/previews": "/en/enterprise-server@2.20/graphql/overview/schema-previews",
  305:   "/enterprise/2.20/v4/public_schema": "/en/enterprise-server@2.20/graphql/overview/public-schema",
  306:   "/enterprise/2.20/v4/query": "/en/enterprise-server@2.20/graphql/reference/queries",
  307:   "/enterprise/2.20/v4/reference": "/en/enterprise-server@2.20/graphql/reference",
  308:   "/enterprise/2.20/v4/scalar": "/en/enterprise-server@2.20/graphql/reference/scalars",
  309:   "/enterprise/2.20/v4/scalar/boolean": "/en/enterprise-server@2.20/graphql/reference/scalars#boolean",
  310:   "/enterprise/2.20/v4/scalar/date": "/en/enterprise-server@2.20/graphql/reference/scalars#date",
  311:   "/enterprise/2.20/v4/union": "/en/enterprise-server@2.20/graphql/reference/unions",
  312:   "/enterprise/2.20/v4/union/assignee": "/en/enterprise-server@2.20/graphql/reference/unions#assignee",
  313:   "/enterprise/2.20/v4/union/auditentryactor": "/en/enterprise-server@2.20/graphql/reference/unions#auditentryactor",
  314:   "/enterprise/2.21/user/v4/enum": "/en/enterprise-server@2.21/graphql/reference/enums",
  315:   "/enterprise/2.21/user/v4/guides": "/en/enterprise-server@2.21/graphql/guides",
  316:   "/enterprise/2.21/user/v4/input_object": "/en/enterprise-server@2.21/graphql/reference/input-objects",
  317:   "/enterprise/2.21/user/v4/interface": "/en/enterprise-server@2.21/graphql/reference/interfaces",
  318:   "/enterprise/2.21/user/v4/mutation": "/en/enterprise-server@2.21/graphql/reference/mutations",
  319:   "/enterprise/2.21/user/v4/object": "/en/enterprise-server@2.21/graphql/reference/objects",
  320:   "/enterprise/2.21/user/v4/previews": "/en/enterprise-server@2.21/graphql/overview/schema-previews",
  321:   "/enterprise/2.21/user/v4/public_schema": "/en/enterprise-server@2.21/graphql/overview/public-schema",
  322:   "/enterprise/2.21/user/v4/query": "/en/enterprise-server@2.21/graphql/reference/queries",
  323:   "/enterprise/2.21/user/v4/reference": "/en/enterprise-server@2.21/graphql/reference",
  324:   "/enterprise/2.21/user/v4/scalar": "/en/enterprise-server@2.21/graphql/reference/scalars",
  325:   "/enterprise/2.21/user/v4/union": "/en/enterprise-server@2.21/graphql/reference/unions",
  326:   "/enterprise/2.21/v4/enum": "/en/enterprise-server@2.21/graphql/reference/enums",
  327:   "/enterprise/2.21/v4/enum/auditlogorderfield": "/en/enterprise-server@2.21/graphql/reference/enums#auditlogorderfield",
  328:   "/enterprise/2.21/v4/enum/checkannotationlevel": "/en/enterprise-server@2.21/graphql/reference/enums#checkannotationlevel",
  329:   "/enterprise/2.21/v4/guides": "/en/enterprise-server@2.21/graphql/guides",
  330:   "/enterprise/2.21/v4/input_object": "/en/enterprise-server@2.21/graphql/reference/input-objects",
  331:   "/enterprise/2.21/v4/interface": "/en/enterprise-server@2.21/graphql/reference/interfaces",
  332:   "/enterprise/2.21/v4/interface/actor": "/en/enterprise-server@2.21/graphql/reference/interfaces#actor",
  333:   "/enterprise/2.21/v4/interface/assignable": "/en/enterprise-server@2.21/graphql/reference/interfaces#assignable",
  334:   "/enterprise/2.21/v4/mutation": "/en/enterprise-server@2.21/graphql/reference/mutations",
  335:   "/enterprise/2.21/v4/object": "/en/enterprise-server@2.21/graphql/reference/objects",
  336:   "/enterprise/2.21/v4/object/actorlocation": "/en/enterprise-server@2.21/graphql/reference/objects#actorlocation",
  337:   "/enterprise/2.21/v4/object/addedtoprojectevent": "/en/enterprise-server@2.21/graphql/reference/objects#addedtoprojectevent",
  338:   "/enterprise/2.21/v4/previews": "/en/enterprise-server@2.21/graphql/overview/schema-previews",
  339:   "/enterprise/2.21/v4/public_schema": "/en/enterprise-server@2.21/graphql/overview/public-schema",
  340:   "/enterprise/2.21/v4/query": "/en/enterprise-server@2.21/graphql/reference/queries",
  341:   "/enterprise/2.21/v4/reference": "/en/enterprise-server@2.21/graphql/reference",
  342:   "/enterprise/2.21/v4/scalar": "/en/enterprise-server@2.21/graphql/reference/scalars",
  343:   "/enterprise/2.21/v4/scalar/boolean": "/en/enterprise-server@2.21/graphql/reference/scalars#boolean",
  344:   "/enterprise/2.21/v4/scalar/date": "/en/enterprise-server@2.21/graphql/reference/scalars#date",
  345:   "/enterprise/2.21/v4/union": "/en/enterprise-server@2.21/graphql/reference/unions",
  346:   "/enterprise/2.21/v4/union/assignee": "/en/enterprise-server@2.21/graphql/reference/unions#assignee",
  347:   "/enterprise/2.21/v4/union/auditentryactor": "/en/enterprise-server@2.21/graphql/reference/unions#auditentryactor",
  348:   "/enterprise/v4/enum": "/en/enterprise-server/graphql/reference/enums",
  349:   "/enterprise/v4/enum/auditlogorderfield": "/en/enterprise-server/graphql/reference/enums#auditlogorderfield",
  350:   "/enterprise/v4/enum/checkannotationlevel": "/en/enterprise-server/graphql/reference/enums#checkannotationlevel",
  351:   "/enterprise/v4/guides": "/en/enterprise-server/graphql/guides",
  352:   "/enterprise/v4/input_object": "/en/enterprise-server/graphql/reference/input-objects",
  353:   "/enterprise/v4/interface": "/en/enterprise-server/graphql/reference/interfaces",
  354:   "/enterprise/v4/interface/actor": "/en/enterprise-server/graphql/reference/interfaces#actor",
  355:   "/enterprise/v4/interface/assignable": "/en/enterprise-server/graphql/reference/interfaces#assignable",
  356:   "/enterprise/v4/mutation": "/en/enterprise-server/graphql/reference/mutations",
  357:   "/enterprise/v4/object": "/en/enterprise-server/graphql/reference/objects",
  358:   "/enterprise/v4/object/actorlocation": "/en/enterprise-server/graphql/reference/objects#actorlocation",
  359:   "/enterprise/v4/object/addedtoprojectevent": "/en/enterprise-server/graphql/reference/objects#addedtoprojectevent",
  360:   "/enterprise/v4/previews": "/en/enterprise-server/graphql/overview/schema-previews",
  361:   "/enterprise/v4/public_schema": "/en/enterprise-server/graphql/overview/public-schema",
  362:   "/enterprise/v4/query": "/en/enterprise-server/graphql/reference/queries",
  363:   "/enterprise/v4/reference": "/en/enterprise-server/graphql/reference",
  364:   "/enterprise/v4/scalar": "/en/enterprise-server/graphql/reference/scalars",
  365:   "/enterprise/v4/scalar/boolean": "/en/enterprise-server/graphql/reference/scalars#boolean",
  366:   "/enterprise/v4/scalar/date": "/en/enterprise-server/graphql/reference/scalars#date",
  367:   "/enterprise/v4/union": "/en/enterprise-server/graphql/reference/unions",
  368:   "/enterprise/v4/union/assignee": "/en/enterprise-server/graphql/reference/unions#assignee",
  369:   "/enterprise/v4/union/auditentryactor": "/en/enterprise-server/graphql/reference/unions#auditentryactor",
  370:   "/v4/enum": "/en/graphql/reference/enums",
  371:   "/v4/enum/auditlogorderfield": "/en/graphql/reference/enums#auditlogorderfield",
  372:   "/v4/enum/checkannotationlevel": "/en/graphql/reference/enums#checkannotationlevel",
  373:   "/v4/guides": "/en/graphql/guides",
  374:   "/v4/input_object": "/en/graphql/reference/input-objects",
  375:   "/v4/input_object/acceptenterpriseadministratorinvitationinput": "/en/graphql/reference/input-objects#acceptenterpriseadministratorinvitationinput",
  376:   "/v4/input_object/accepttopicsuggestioninput": "/en/graphql/reference/input-objects#accepttopicsuggestioninput",
  377:   "/v4/interface": "/en/graphql/reference/interfaces",
  378:   "/v4/interface/actor": "/en/graphql/reference/interfaces#actor",
  379:   "/v4/interface/assignable": "/en/graphql/reference/interfaces#assignable",
  380:   "/v4/mutation": "/en/graphql/reference/mutations",
  381:   "/v4/mutation/acceptenterpriseadministratorinvitation": "/en/graphql/reference/mutations#acceptenterpriseadministratorinvitation",
  382:   "/v4/mutation/accepttopicsuggestion": "/en/graphql/reference/mutations#accepttopicsuggestion",
  383:   "/v4/object": "/en/graphql/reference/objects",
  384:   "/v4/object/actorlocation": "/en/graphql/reference/objects#actorlocation",
  385:   "/v4/object/addedtoprojectevent": "/en/graphql/reference/objects#addedtoprojectevent",
  386:   "/v4/previews": "/en/graphql/overview/schema-previews",
  387:   "/v4/public_schema": "/en/graphql/overview/public-schema",
  388:   "/v4/query": "/en/graphql/reference/queries",
  389:   "/v4/reference": "/en/graphql/reference",
  390:   "/v4/scalar": "/en/graphql/reference/scalars",
  391:   "/v4/scalar/boolean": "/en/graphql/reference/scalars#boolean",
  392:   "/v4/scalar/date": "/en/graphql/reference/scalars#date",
  393:   "/v4/union": "/en/graphql/reference/unions",
  394:   "/v4/union/assignee": "/en/graphql/reference/unions#assignee",
  395:   "/v4/union/auditentryactor": "/en/graphql/reference/unions#auditentryactor"
  396  }

docs • tests\fixtures\page-that-does-not-exist-in-translations-dir.md:
  1  ---
  2: title: Some page that exists in the content directory but not the translations directory
  3  versions:

docs • tests\fixtures\page-versioned-for-all-enterprise-releases.md:
  1  ---
  2: title: Page versioned for all Enterprise releases
  3  versions:

docs • tests\fixtures\page-with-frontmatter-error.md:
  2  title: This is an article
  3: intro: 'I've got broken frontmatter'
  4  versions:

docs • tests\fixtures\page-with-missing-product-versions.md:
  2  title: This is an article
  3: intro: I am missing productVersions frontmatter
  4  ---

docs • tests\fixtures\page-with-redirects.md:
  1  ---
  2: title: A page with redirects
  3  redirect_from:

docs • tests\fixtures\rest-redirects.json:
    1  {
    2:   "/en/enterprise/2.18/v3/activity/event_types": "/en/enterprise/2.18/user/developers/webhooks-and-events/github-event-types",
    3    "/en/enterprise/2.18/v3/activity/events/types": "/en/enterprise/2.18/user/developers/webhooks-and-events/webhook-events-and-payloads",

    7    "/en/enterprise/2.18/v3/activity/notifications": "/en/enterprise/2.18/user/rest/reference/activity#notifications",
    8:   "/en/enterprise/2.18/v3/activity/starring": "/en/enterprise/2.18/user/rest/reference/activity#starring",
    9:   "/en/enterprise/2.18/v3/activity/watching": "/en/enterprise/2.18/user/rest/reference/activity#watching",
   10:   "/en/enterprise/2.18/v3/apps/available-endpoints": "/en/enterprise/2.18/user/rest/overview/endpoints-available-for-github-apps",
   11    "/en/enterprise/2.18/v3/apps": "/en/enterprise/2.18/user/rest/reference/apps",
   12    "/en/enterprise/2.18/v3/apps/installations": "/en/enterprise/2.18/user/rest/reference/apps#installations",
   13:   "/en/enterprise/2.18/v3/apps/permissions": "/en/enterprise/2.18/user/rest/reference/permissions-required-for-github-apps",
   14    "/en/enterprise/2.18/v3/checks": "/en/enterprise/2.18/user/rest/reference/checks",

   19    "/en/enterprise/2.18/v3/enterprise-admin/admin_stats": "/en/enterprise/2.18/user/rest/reference/enterprise-admin#admin-stats",
   20:   "/en/enterprise/2.18/v3/enterprise-admin/global_webhooks": "/en/enterprise/2.18/user/rest/reference/enterprise-admin#global-webhooks",
   21    "/en/enterprise/2.18/v3/enterprise-admin": "/en/enterprise/2.18/user/rest/reference/enterprise-admin",

   23    "/en/enterprise/2.18/v3/enterprise-admin/license": "/en/enterprise/2.18/user/rest/reference/enterprise-admin#license",
   24:   "/en/enterprise/2.18/v3/enterprise-admin/management_console": "/en/enterprise/2.18/user/rest/reference/enterprise-admin#management-console",
   25:   "/en/enterprise/2.18/v3/enterprise-admin/org_pre_receive_hooks": "/en/enterprise/2.18/user/rest/reference/enterprise-admin#organization-pre-receive-hooks",
   26:   "/en/enterprise/2.18/v3/enterprise-admin/orgs": "/en/enterprise/2.18/user/rest/reference/enterprise-admin#orgs",
   27    "/en/enterprise/2.18/v3/enterprise-admin/pre_receive_environments": "/en/enterprise/2.18/user/rest/reference/enterprise-admin#pre-receive-environments",

   29    "/en/enterprise/2.18/v3/enterprise-admin/repo_pre_receive_hooks": "/en/enterprise/2.18/user/rest/reference/enterprise-admin#repo-pre-receive-hooks",
   30:   "/en/enterprise/2.18/v3/enterprise-admin/search_indexing": "/en/enterprise/2.18/user/rest/reference/enterprise-admin#search-indexing",
   31    "/en/enterprise/2.18/v3/enterprise-admin/users": "/en/enterprise/2.18/user/rest/reference/enterprise-admin#users",
   32:   "/en/enterprise/2.18/v3/gists/comments": "/en/enterprise/2.18/user/rest/reference/gists#comments",
   33:   "/en/enterprise/2.18/v3/gists": "/en/enterprise/2.18/user/rest/reference/gists",
   34:   "/en/enterprise/2.18/v3/git/blobs": "/en/enterprise/2.18/user/rest/reference/git#blobs",
   35:   "/en/enterprise/2.18/v3/git/commits": "/en/enterprise/2.18/user/rest/reference/git#commits",
   36:   "/en/enterprise/2.18/v3/git": "/en/enterprise/2.18/user/rest/reference/git",
   37:   "/en/enterprise/2.18/v3/git/refs": "/en/enterprise/2.18/user/rest/reference/git#refs",
   38:   "/en/enterprise/2.18/v3/git/tags": "/en/enterprise/2.18/user/rest/reference/git#tags",
   39:   "/en/enterprise/2.18/v3/git/trees": "/en/enterprise/2.18/user/rest/reference/git#trees",
   40:   "/en/enterprise/2.18/v3/gitignore": "/en/enterprise/2.18/user/rest/reference/gitignore",
   41:   "/en/enterprise/2.18/v3/issues/assignees": "/en/enterprise/2.18/user/rest/reference/issues#assignees",
   42    "/en/enterprise/2.18/v3/issues/comments": "/en/enterprise/2.18/user/rest/reference/issues#comments",

   52    "/en/enterprise/2.18/v3/oauth_authorizations": "/en/enterprise/2.18/user/rest/reference/oauth-authorizations",
   53:   "/en/enterprise/2.18/v3/orgs/hooks": "/en/enterprise/2.18/user/rest/reference/orgs#hooks",
   54:   "/en/enterprise/2.18/v3/orgs": "/en/enterprise/2.18/user/rest/reference/orgs",
   55:   "/en/enterprise/2.18/v3/orgs/members": "/en/enterprise/2.18/user/rest/reference/orgs#members",
   56:   "/en/enterprise/2.18/v3/orgs/outside_collaborators": "/en/enterprise/2.18/user/rest/reference/orgs#outside-collaborators",
   57:   "/en/enterprise/2.18/v3/orgs/pre_receive_hooks": "/en/enterprise/2.18/user/rest/reference/enterprise-admin#organization-pre-receive-hooks",
   58:   "/en/enterprise/2.18/v3/orgs/teams": "/en/enterprise/2.18/user/rest/reference/orgs#teams",
   59    "/en/enterprise/2.18/v3/projects/cards": "/en/enterprise/2.18/user/rest/reference/projects#cards",

   80    "/en/enterprise/2.18/v3/repos/keys": "/en/enterprise/2.18/user/rest/reference/repos#keys",
   81:   "/en/enterprise/2.18/v3/repos/merging": "/en/enterprise/2.18/user/rest/reference/repos#merging",
   82:   "/en/enterprise/2.18/v3/repos/pages": "/en/enterprise/2.18/user/rest/reference/repos#pages",
   83    "/en/enterprise/2.18/v3/repos/pre_receive_hooks": "/en/enterprise/2.18/user/rest/reference/repos#pre-receive-hooks",

   94    "/en/enterprise/2.18/v3/users/followers": "/en/enterprise/2.18/user/rest/reference/users#followers",
   95:   "/en/enterprise/2.18/v3/users/gpg_keys": "/en/enterprise/2.18/user/rest/reference/users#gpg-keys",
   96    "/en/enterprise/2.18/v3/users": "/en/enterprise/2.18/user/rest/reference/users",
   97    "/en/enterprise/2.18/v3/users/keys": "/en/enterprise/2.18/user/rest/reference/users#keys",
   98:   "/en/enterprise/2.19/v3/activity/event_types":  "/en/enterprise-server@2.19/developers/webhooks-and-events/github-event-types",
   99    "/en/enterprise/2.19/v3/activity/events/types": "/en/enterprise-server@2.19/developers/webhooks-and-events/webhook-events-and-payloads",

  103    "/en/enterprise/2.19/v3/activity/notifications": "/en/enterprise-server@2.19/rest/reference/activity#notifications",
  104:   "/en/enterprise/2.19/v3/activity/starring": "/en/enterprise-server@2.19/rest/reference/activity#starring",
  105:   "/en/enterprise/2.19/v3/activity/watching": "/en/enterprise-server@2.19/rest/reference/activity#watching",
  106:   "/en/enterprise/2.19/v3/apps/available-endpoints": "/en/enterprise-server@2.19/rest/overview/endpoints-available-for-github-apps",
  107    "/en/enterprise/2.19/v3/apps": "/en/enterprise-server@2.19/rest/reference/apps",
  108    "/en/enterprise/2.19/v3/apps/installations": "/en/enterprise-server@2.19/rest/reference/apps#installations",
  109:   "/en/enterprise/2.19/v3/apps/permissions": "/en/enterprise-server@2.19/rest/reference/permissions-required-for-github-apps",
  110    "/en/enterprise/2.19/v3/checks": "/en/enterprise-server@2.19/rest/reference/checks",

  115    "/en/enterprise/2.19/v3/enterprise-admin/admin_stats": "/en/enterprise-server@2.19/rest/reference/enterprise-admin#admin-stats",
  116:   "/en/enterprise/2.19/v3/enterprise-admin/global_webhooks": "/en/enterprise-server@2.19/rest/reference/enterprise-admin#global-webhooks",
  117    "/en/enterprise/2.19/v3/enterprise-admin": "/en/enterprise-server@2.19/rest/reference/enterprise-admin",

  119    "/en/enterprise/2.19/v3/enterprise-admin/license": "/en/enterprise-server@2.19/rest/reference/enterprise-admin#license",
  120:   "/en/enterprise/2.19/v3/enterprise-admin/management_console": "/en/enterprise-server@2.19/rest/reference/enterprise-admin#management-console",
  121:   "/en/enterprise/2.19/v3/enterprise-admin/org_pre_receive_hooks": "/en/enterprise-server@2.19/rest/reference/enterprise-admin#organization-pre-receive-hooks",
  122:   "/en/enterprise/2.19/v3/enterprise-admin/orgs": "/en/enterprise-server@2.19/rest/reference/enterprise-admin#orgs",
  123    "/en/enterprise/2.19/v3/enterprise-admin/pre_receive_environments": "/en/enterprise-server@2.19/rest/reference/enterprise-admin#pre-receive-environments",

  125    "/en/enterprise/2.19/v3/enterprise-admin/repo_pre_receive_hooks": "/en/enterprise-server@2.19/rest/reference/enterprise-admin#repo-pre-receive-hooks",
  126:   "/en/enterprise/2.19/v3/enterprise-admin/search_indexing": "/en/enterprise-server@2.19/rest/reference/enterprise-admin#search-indexing",
  127    "/en/enterprise/2.19/v3/enterprise-admin/users": "/en/enterprise-server@2.19/rest/reference/enterprise-admin#users",
  128:   "/en/enterprise/2.19/v3/gists/comments": "/en/enterprise-server@2.19/rest/reference/gists#comments",
  129:   "/en/enterprise/2.19/v3/gists": "/en/enterprise-server@2.19/rest/reference/gists",
  130:   "/en/enterprise/2.19/v3/git/blobs": "/en/enterprise-server@2.19/rest/reference/git#blobs",
  131:   "/en/enterprise/2.19/v3/git/commits": "/en/enterprise-server@2.19/rest/reference/git#commits",
  132:   "/en/enterprise/2.19/v3/git": "/en/enterprise-server@2.19/rest/reference/git",
  133:   "/en/enterprise/2.19/v3/git/refs": "/en/enterprise-server@2.19/rest/reference/git#refs",
  134:   "/en/enterprise/2.19/v3/git/tags": "/en/enterprise-server@2.19/rest/reference/git#tags",
  135:   "/en/enterprise/2.19/v3/git/trees": "/en/enterprise-server@2.19/rest/reference/git#trees",
  136:   "/en/enterprise/2.19/v3/gitignore": "/en/enterprise-server@2.19/rest/reference/gitignore",
  137:   "/en/enterprise/2.19/v3/issues/assignees": "/en/enterprise-server@2.19/rest/reference/issues#assignees",
  138    "/en/enterprise/2.19/v3/issues/comments": "/en/enterprise-server@2.19/rest/reference/issues#comments",

  148    "/en/enterprise/2.19/v3/oauth_authorizations": "/en/enterprise-server@2.19/rest/reference/oauth-authorizations",
  149:   "/en/enterprise/2.19/v3/orgs/hooks": "/en/enterprise-server@2.19/rest/reference/orgs#hooks",
  150:   "/en/enterprise/2.19/v3/orgs": "/en/enterprise-server@2.19/rest/reference/orgs",
  151:   "/en/enterprise/2.19/v3/orgs/members": "/en/enterprise-server@2.19/rest/reference/orgs#members",
  152:   "/en/enterprise/2.19/v3/orgs/outside_collaborators": "/en/enterprise-server@2.19/rest/reference/orgs#outside-collaborators",
  153:   "/en/enterprise/2.19/v3/orgs/pre_receive_hooks": "/en/enterprise-server@2.19/rest/reference/enterprise-admin#organization-pre-receive-hooks",
  154:   "/en/enterprise/2.19/v3/orgs/teams": "/en/enterprise-server@2.19/rest/reference/orgs#teams",
  155    "/en/enterprise/2.19/v3/projects/cards": "/en/enterprise-server@2.19/rest/reference/projects#cards",

  176    "/en/enterprise/2.19/v3/repos/keys": "/en/enterprise-server@2.19/rest/reference/repos#keys",
  177:   "/en/enterprise/2.19/v3/repos/merging": "/en/enterprise-server@2.19/rest/reference/repos#merging",
  178:   "/en/enterprise/2.19/v3/repos/pages": "/en/enterprise-server@2.19/rest/reference/repos#pages",
  179    "/en/enterprise/2.19/v3/repos/pre_receive_hooks": "/en/enterprise-server@2.19/rest/reference/repos#pre-receive-hooks",

  190    "/en/enterprise/2.19/v3/users/followers": "/en/enterprise-server@2.19/rest/reference/users#followers",
  191:   "/en/enterprise/2.19/v3/users/gpg_keys": "/en/enterprise-server@2.19/rest/reference/users#gpg-keys",
  192    "/en/enterprise/2.19/v3/users": "/en/enterprise-server@2.19/rest/reference/users",
  193    "/en/enterprise/2.19/v3/users/keys": "/en/enterprise-server@2.19/rest/reference/users#keys",
  194:   "/en/enterprise/2.20/v3/activity/event_types": "/en/enterprise-server@2.20/developers/webhooks-and-events/github-event-types",
  195    "/en/enterprise/2.20/v3/activity/events/types": "/en/enterprise-server@2.20/developers/webhooks-and-events/webhook-events-and-payloads",

  199    "/en/enterprise/2.20/v3/activity/notifications": "/en/enterprise-server@2.20/rest/reference/activity#notifications",
  200:   "/en/enterprise/2.20/v3/activity/starring": "/en/enterprise-server@2.20/rest/reference/activity#starring",
  201:   "/en/enterprise/2.20/v3/activity/watching": "/en/enterprise-server@2.20/rest/reference/activity#watching",
  202:   "/en/enterprise/2.20/v3/apps/available-endpoints": "/en/enterprise-server@2.20/rest/overview/endpoints-available-for-github-apps",
  203    "/en/enterprise/2.20/v3/apps": "/en/enterprise-server@2.20/rest/reference/apps",

  205    "/en/enterprise/2.20/v3/apps/oauth_applications": "/en/enterprise-server@2.20/rest/reference/apps#oauth-applications",
  206:   "/en/enterprise/2.20/v3/apps/permissions": "/en/enterprise-server@2.20/rest/reference/permissions-required-for-github-apps",
  207    "/en/enterprise/2.20/v3/checks": "/en/enterprise-server@2.20/rest/reference/checks",

  212    "/en/enterprise/2.20/v3/enterprise-admin/admin_stats": "/en/enterprise-server@2.20/rest/reference/enterprise-admin#admin-stats",
  213:   "/en/enterprise/2.20/v3/enterprise-admin/global_webhooks": "/en/enterprise-server@2.20/rest/reference/enterprise-admin#global-webhooks",
  214    "/en/enterprise/2.20/v3/enterprise-admin": "/en/enterprise-server@2.20/rest/reference/enterprise-admin",

  216    "/en/enterprise/2.20/v3/enterprise-admin/license": "/en/enterprise-server@2.20/rest/reference/enterprise-admin#license",
  217:   "/en/enterprise/2.20/v3/enterprise-admin/management_console": "/en/enterprise-server@2.20/rest/reference/enterprise-admin#management-console",
  218:   "/en/enterprise/2.20/v3/enterprise-admin/org_pre_receive_hooks": "/en/enterprise-server@2.20/rest/reference/enterprise-admin#organization-pre-receive-hooks",
  219:   "/en/enterprise/2.20/v3/enterprise-admin/orgs": "/en/enterprise-server@2.20/rest/reference/enterprise-admin#orgs",
  220    "/en/enterprise/2.20/v3/enterprise-admin/pre_receive_environments": "/en/enterprise-server@2.20/rest/reference/enterprise-admin#pre-receive-environments",

  222    "/en/enterprise/2.20/v3/enterprise-admin/repo_pre_receive_hooks": "/en/enterprise-server@2.20/rest/reference/enterprise-admin#repository-pre-receive-hooks",
  223:   "/en/enterprise/2.20/v3/enterprise-admin/search_indexing": "/en/enterprise-server@2.20/rest/reference/enterprise-admin#search-indexing",
  224    "/en/enterprise/2.20/v3/enterprise-admin/users": "/en/enterprise-server@2.20/rest/reference/enterprise-admin#users",
  225:   "/en/enterprise/2.20/v3/gists/comments": "/en/enterprise-server@2.20/rest/reference/gists#comments",
  226:   "/en/enterprise/2.20/v3/gists": "/en/enterprise-server@2.20/rest/reference/gists",
  227:   "/en/enterprise/2.20/v3/git/blobs": "/en/enterprise-server@2.20/rest/reference/git#blobs",
  228:   "/en/enterprise/2.20/v3/git/commits": "/en/enterprise-server@2.20/rest/reference/git#commits",
  229:   "/en/enterprise/2.20/v3/git": "/en/enterprise-server@2.20/rest/reference/git",
  230:   "/en/enterprise/2.20/v3/git/refs": "/en/enterprise-server@2.20/rest/reference/git#refs",
  231:   "/en/enterprise/2.20/v3/git/tags": "/en/enterprise-server@2.20/rest/reference/git#tags",
  232:   "/en/enterprise/2.20/v3/git/trees": "/en/enterprise-server@2.20/rest/reference/git#trees",
  233:   "/en/enterprise/2.20/v3/gitignore": "/en/enterprise-server@2.20/rest/reference/gitignore",
  234:   "/en/enterprise/2.20/v3/issues/assignees": "/en/enterprise-server@2.20/rest/reference/issues#assignees",
  235    "/en/enterprise/2.20/v3/issues/comments": "/en/enterprise-server@2.20/rest/reference/issues#comments",

  245    "/en/enterprise/2.20/v3/oauth_authorizations": "/en/enterprise-server@2.20/rest/reference/oauth-authorizations",
  246:   "/en/enterprise/2.20/v3/orgs/hooks": "/en/enterprise-server@2.20/rest/reference/orgs#webhooks",
  247:   "/en/enterprise/2.20/v3/orgs": "/en/enterprise-server@2.20/rest/reference/orgs",
  248:   "/en/enterprise/2.20/v3/orgs/members": "/en/enterprise-server@2.20/rest/reference/orgs#members",
  249:   "/en/enterprise/2.20/v3/orgs/outside_collaborators": "/en/enterprise-server@2.20/rest/reference/orgs#outside-collaborators",
  250:   "/en/enterprise/2.20/v3/orgs/pre_receive_hooks": "/en/enterprise-server@2.20/rest/reference/enterprise-admin#organization-pre-receive-hooks",
  251:   "/en/enterprise/2.20/v3/orgs/teams": "/en/enterprise-server@2.20/rest/reference/orgs#teams",
  252    "/en/enterprise/2.20/v3/projects/cards": "/en/enterprise-server@2.20/rest/reference/projects#cards",

  273    "/en/enterprise/2.20/v3/repos/keys": "/en/enterprise-server@2.20/rest/reference/repos#keys",
  274:   "/en/enterprise/2.20/v3/repos/merging": "/en/enterprise-server@2.20/rest/reference/repos#merging",
  275:   "/en/enterprise/2.20/v3/repos/pages": "/en/enterprise-server@2.20/rest/reference/repos#pages",
  276    "/en/enterprise/2.20/v3/repos/pre_receive_hooks": "/en/enterprise-server@2.20/rest/reference/enterprise-admin#repository-pre-receive-hooks",

  287    "/en/enterprise/2.20/v3/users/followers": "/en/enterprise-server@2.20/rest/reference/users#followers",
  288:   "/en/enterprise/2.20/v3/users/gpg_keys": "/en/enterprise-server@2.20/rest/reference/users#gpg-keys",
  289    "/en/enterprise/2.20/v3/users": "/en/enterprise-server@2.20/rest/reference/users",
  290    "/en/enterprise/2.20/v3/users/keys": "/en/enterprise-server@2.20/rest/reference/users#keys",
  291:   "/en/enterprise/2.21/v3/activity/event_types": "/en/enterprise-server@2.21/developers/webhooks-and-events/github-event-types",
  292    "/en/enterprise/2.21/v3/activity/events/types": "/en/enterprise-server@2.21/developers/webhooks-and-events/webhook-events-and-payloads",

  296    "/en/enterprise/2.21/v3/activity/notifications": "/en/enterprise-server@2.21/rest/reference/activity#notifications",
  297:   "/en/enterprise/2.21/v3/activity/starring": "/en/enterprise-server@2.21/rest/reference/activity#starring",
  298:   "/en/enterprise/2.21/v3/activity/watching": "/en/enterprise-server@2.21/rest/reference/activity#watching",
  299:   "/en/enterprise/2.21/v3/apps/available-endpoints": "/en/enterprise-server@2.21/rest/overview/endpoints-available-for-github-apps",
  300    "/en/enterprise/2.21/v3/apps": "/en/enterprise-server@2.21/rest/reference/apps",

  302    "/en/enterprise/2.21/v3/apps/oauth_applications": "/en/enterprise-server@2.21/rest/reference/apps#oauth-applications",
  303:   "/en/enterprise/2.21/v3/apps/permissions": "/en/enterprise-server@2.21/rest/reference/permissions-required-for-github-apps",
  304    "/en/enterprise/2.21/v3/checks": "/en/enterprise-server@2.21/rest/reference/checks",

  309    "/en/enterprise/2.21/v3/enterprise-admin/admin_stats": "/en/enterprise-server@2.21/rest/reference/enterprise-admin#admin-stats",
  310:   "/en/enterprise/2.21/v3/enterprise-admin/global_webhooks": "/en/enterprise-server@2.21/rest/reference/enterprise-admin#global-webhooks",
  311    "/en/enterprise/2.21/v3/enterprise-admin": "/en/enterprise-server@2.21/rest/reference/enterprise-admin",

  313    "/en/enterprise/2.21/v3/enterprise-admin/license": "/en/enterprise-server@2.21/rest/reference/enterprise-admin#license",
  314:   "/en/enterprise/2.21/v3/enterprise-admin/management_console": "/en/enterprise-server@2.21/rest/reference/enterprise-admin#management-console",
  315:   "/en/enterprise/2.21/v3/enterprise-admin/org_pre_receive_hooks": "/en/enterprise-server@2.21/rest/reference/enterprise-admin#organization-pre-receive-hooks",
  316:   "/en/enterprise/2.21/v3/enterprise-admin/orgs": "/en/enterprise-server@2.21/rest/reference/enterprise-admin#orgs",
  317    "/en/enterprise/2.21/v3/enterprise-admin/pre_receive_environments": "/en/enterprise-server@2.21/rest/reference/enterprise-admin#pre-receive-environments",

  319    "/en/enterprise/2.21/v3/enterprise-admin/repo_pre_receive_hooks": "/en/enterprise-server@2.21/rest/reference/enterprise-admin#repository-pre-receive-hooks",
  320:   "/en/enterprise/2.21/v3/enterprise-admin/search_indexing": "/en/enterprise-server@2.21/rest/reference/enterprise-admin#search-indexing",
  321    "/en/enterprise/2.21/v3/enterprise-admin/users": "/en/enterprise-server@2.21/rest/reference/enterprise-admin#users",
  322:   "/en/enterprise/2.21/v3/gists/comments": "/en/enterprise-server@2.21/rest/reference/gists#comments",
  323:   "/en/enterprise/2.21/v3/gists": "/en/enterprise-server@2.21/rest/reference/gists",
  324:   "/en/enterprise/2.21/v3/git/blobs": "/en/enterprise-server@2.21/rest/reference/git#blobs",
  325:   "/en/enterprise/2.21/v3/git/commits": "/en/enterprise-server@2.21/rest/reference/git#commits",
  326:   "/en/enterprise/2.21/v3/git": "/en/enterprise-server@2.21/rest/reference/git",
  327:   "/en/enterprise/2.21/v3/git/refs": "/en/enterprise-server@2.21/rest/reference/git#refs",
  328:   "/en/enterprise/2.21/v3/git/tags": "/en/enterprise-server@2.21/rest/reference/git#tags",
  329:   "/en/enterprise/2.21/v3/git/trees": "/en/enterprise-server@2.21/rest/reference/git#trees",
  330:   "/en/enterprise/2.21/v3/gitignore": "/en/enterprise-server@2.21/rest/reference/gitignore",
  331:   "/en/enterprise/2.21/v3/issues/assignees": "/en/enterprise-server@2.21/rest/reference/issues#assignees",
  332    "/en/enterprise/2.21/v3/issues/comments": "/en/enterprise-server@2.21/rest/reference/issues#comments",

  342    "/en/enterprise/2.21/v3/oauth_authorizations": "/en/enterprise-server@2.21/rest/reference/oauth-authorizations",
  343:   "/en/enterprise/2.21/v3/orgs/hooks": "/en/enterprise-server@2.21/rest/reference/orgs#webhooks",
  344:   "/en/enterprise/2.21/v3/orgs": "/en/enterprise-server@2.21/rest/reference/orgs",
  345:   "/en/enterprise/2.21/v3/orgs/members": "/en/enterprise-server@2.21/rest/reference/orgs#members",
  346:   "/en/enterprise/2.21/v3/orgs/outside_collaborators": "/en/enterprise-server@2.21/rest/reference/orgs#outside-collaborators",
  347:   "/en/enterprise/2.21/v3/orgs/pre_receive_hooks": "/en/enterprise-server@2.21/rest/reference/enterprise-admin#organization-pre-receive-hooks",
  348:   "/en/enterprise/2.21/v3/orgs/teams": "/en/enterprise-server@2.21/rest/reference/orgs#teams",
  349    "/en/enterprise/2.21/v3/projects/cards": "/en/enterprise-server@2.21/rest/reference/projects#cards",

  370    "/en/enterprise/2.21/v3/repos/keys": "/en/enterprise-server@2.21/rest/reference/repos#keys",
  371:   "/en/enterprise/2.21/v3/repos/merging": "/en/enterprise-server@2.21/rest/reference/repos#merging",
  372:   "/en/enterprise/2.21/v3/repos/pages": "/en/enterprise-server@2.21/rest/reference/repos#pages",
  373    "/en/enterprise/2.21/v3/repos/pre_receive_hooks": "/en/enterprise-server@2.21/rest/reference/enterprise-admin#repository-pre-receive-hooks",

  384    "/en/enterprise/2.21/v3/users/followers": "/en/enterprise-server@2.21/rest/reference/users#followers",
  385:   "/en/enterprise/2.21/v3/users/gpg_keys": "/en/enterprise-server@2.21/rest/reference/users#gpg-keys",
  386    "/en/enterprise/2.21/v3/users": "/en/enterprise-server@2.21/rest/reference/users",

  395    "/v3/actions/workflows": "/en/rest/reference/actions#workflows",
  396:   "/v3/activity/event_types": "/en/developers/webhooks-and-events/github-event-types",
  397    "/v3/activity/events/types": "/en/developers/webhooks-and-events/webhook-events-and-payloads",

  401    "/v3/activity/notifications": "/en/rest/reference/activity#notifications",
  402:   "/v3/activity/starring": "/en/rest/reference/activity#starring",
  403:   "/v3/activity/watching": "/en/rest/reference/activity#watching",
  404:   "/v3/apps/available-endpoints": "/en/rest/overview/endpoints-available-for-github-apps",
  405    "/v3/apps": "/en/rest/reference/apps",

  408    "/v3/apps/oauth_applications": "/en/rest/reference/apps#oauth-applications",
  409:   "/v3/apps/permissions": "/en/rest/reference/permissions-required-for-github-apps",
  410    "/v3/checks": "/en/rest/reference/checks",

  412    "/v3/checks/suites": "/en/rest/reference/checks#suites",
  413:   "/v3/code-scanning": "/en/rest/reference/code-scanning",
  414    "/v3/codes_of_conduct": "/en/rest/reference/codes-of-conduct",

  417    "/v3/enterprise-admin/admin_stats": "/en/enterprise-server/rest/reference/enterprise-admin#admin-stats",
  418:   "/v3/enterprise-admin/global_webhooks": "/en/enterprise-server/rest/reference/enterprise-admin#global-webhooks",
  419    "/v3/enterprise-admin/ldap": "/en/enterprise-server/rest/reference/enterprise-admin#ldap",
  420    "/v3/enterprise-admin/license": "/en/enterprise-server/rest/reference/enterprise-admin#license",
  421:   "/v3/enterprise-admin/management_console": "/en/enterprise-server/rest/reference/enterprise-admin#management-console",
  422:   "/v3/enterprise-admin/orgs": "/en/enterprise-server/rest/reference/enterprise-admin#orgs",
  423    "/v3/enterprise-admin/pre_receive_environments": "/en/enterprise-server/rest/reference/enterprise-admin#pre-receive-environments",
  424    "/v3/enterprise-admin/pre_receive_hooks": "/en/enterprise-server/rest/reference/enterprise-admin#pre-receive-hooks",
  425:   "/v3/enterprise-admin/search_indexing": "/en/enterprise-server/rest/reference/enterprise-admin#search-indexing",
  426    "/v3/enterprise-admin/users": "/en/enterprise-server/rest/reference/enterprise-admin#users",
  427:   "/v3/gists/comments": "/en/rest/reference/gists#comments",
  428:   "/v3/gists": "/en/rest/reference/gists",
  429:   "/v3/git/blobs": "/en/rest/reference/git#blobs",
  430:   "/v3/git/commits": "/en/rest/reference/git#commits",
  431:   "/v3/git": "/en/rest/reference/git",
  432:   "/v3/git/refs": "/en/rest/reference/git#refs",
  433:   "/v3/git/tags": "/en/rest/reference/git#tags",
  434:   "/v3/git/trees": "/en/rest/reference/git#trees",
  435:   "/v3/gitignore": "/en/rest/reference/gitignore",
  436    "/v3/interactions": "/en/rest/reference/interactions",
  437:   "/v3/interactions/orgs": "/en/rest/reference/interactions#orgs",
  438    "/v3/interactions/repos": "/en/rest/reference/interactions#repos",
  439:   "/v3/issues/assignees": "/en/rest/reference/issues#assignees",
  440    "/v3/issues/comments": "/en/rest/reference/issues#comments",

  449    "/v3/meta": "/en/rest/reference/meta",
  450:   "/v3/migrations": "/en/rest/reference/migrations",
  451:   "/v3/migrations/orgs": "/en/rest/reference/migrations#orgs",
  452:   "/v3/migrations/source_imports": "/en/rest/reference/migrations#source-imports",
  453:   "/v3/migrations/users": "/en/rest/reference/migrations#users",
  454    "/v3/oauth_authorizations": "/en/enterprise-server/rest/reference/oauth-authorizations",
  455:   "/v3/orgs/blocking": "/en/rest/reference/orgs#blocking",
  456:   "/v3/orgs/hooks": "/en/rest/reference/orgs#webhooks",
  457:   "/v3/orgs": "/en/rest/reference/orgs",
  458:   "/v3/orgs/members": "/en/rest/reference/orgs#members",
  459:   "/v3/orgs/migrations": "/en/rest/reference/orgs#migrations",
  460:   "/v3/orgs/outside_collaborators": "/en/rest/reference/orgs#outside-collaborators",
  461:   "/v3/orgs/pre_receive_hooks": "/en/enterprise-server/rest/reference/enterprise-admin#organization-pre-receive-hooks",
  462:   "/v3/orgs/teams": "/en/rest/reference/orgs#teams",
  463    "/v3/projects/cards": "/en/rest/reference/projects#cards",

  485    "/v3/repos/keys": "/en/rest/reference/repos#keys",
  486:   "/v3/repos/merging": "/en/rest/reference/repos#merging",
  487:   "/v3/repos/pages": "/en/rest/reference/repos#pages",
  488    "/v3/repos/pre_receive_hooks": "/en/enterprise-server/rest/reference/enterprise-admin#repository-pre-receive-hooks",

  499    "/v3/teams/team_sync": "/en/rest/reference/teams#team-sync",
  500:   "/v3/users/blocking": "/en/rest/reference/users#blocking",
  501    "/v3/users/emails": "/en/rest/reference/users#emails",
  502    "/v3/users/followers": "/en/rest/reference/users#followers",
  503:   "/v3/users/gpg_keys": "/en/rest/reference/users#gpg-keys",
  504    "/v3/users": "/en/rest/reference/users",

docs • tests\fixtures\top-old-developer-site-paths.json:
     6    "/webhooks/",
     7:   "/changes/2020-02-14-deprecating-password-auth/",
     8:   "/v3/guides/managing-deploy-keys/",
     9:   "/apps/building-oauth-apps/authorizing-oauth-apps/",
    10    "/v4/explorer/",

    16    "/v3/users/",
    17:   "/v4/guides/forming-calls/",
    18    "/v3/pulls/",
    19    "/v3/repos/contents/",
    20:   "/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/",
    21:   "/changes/",
    22:   "/v4/guides/intro-to-graphql/",
    23    "/v3/issues/",
    24:   "/webhooks/creating/",
    25    "/v3/repos/releases/",

    30    "/v4/query/",
    31:   "/v3/guides/getting-started/",
    32:   "/v3/guides/",
    33:   "/v3/guides/using-ssh-agent-forwarding/",
    34    "/v3/oauth_authorizations/",

    36    "/v3/repos/statistics/",
    37:   "/v3/orgs/",
    38:   "/program/",
    39    "/v3/media/",
    40    "/v3/repos/hooks/",
    41:   "/v4/guides/using-the-explorer/",
    42:   "/v4/guides/",
    43:   "/apps/building-github-apps/authenticating-with-github-apps/",
    44:   "/apps/building-github-apps/identifying-and-authorizing-users-for-github-apps/",
    45:   "/v3/git/refs/",
    46:   "/v3/guides/basics-of-authentication/",
    47:   "/v3/git/",
    48    "/v3/checks/",
    49    "/v3/projects/",
    50:   "/v4/guides/migrating-from-rest/",
    51    "/v3/activity/events/",

    55    "/apps/about-apps/",
    56:   "/v3/gists/",
    57:   "/apps/building-oauth-apps/creating-an-oauth-app/",
    58    "/v3/repos/branches/",
    59:   "/apps/building-oauth-apps/",
    60:   "/changes/2020-02-10-deprecating-auth-through-query-param/",
    61:   "/apps/quickstart-guides/using-the-github-api-in-your-app/",
    62    "/v3/actions/",
    63    "/v3/activity/",
    64:   "/webhooks/securing/",
    65:   "/webhooks/configuring/",
    66:   "/apps/building-github-apps/creating-a-github-app/",
    67:   "/v3/git/commits/",
    68:   "/v3/git/tags/",
    69:   "/apps/installing-github-apps/",
    70    "/v3/actions/secrets/",
    71:   "/v3/git/trees/",
    72    "/v3/rate_limit/",
    73:   "/marketplace/getting-started/requirements-for-listing-an-app-on-github-marketplace/",
    74    "/v3/teams/",
    75:   "/v3/guides/traversing-with-pagination/",
    76    "/v4/object/repository/",
    77    "/apps/differences-between-apps/",
    78:   "/v3/orgs/members/",
    79    "/v3/apps/permissions/",
    80:   "/v3/guides/delivering-deployments/",
    81    "/enterprise/2.19/v3/repos/statuses/",

    83    "/v3/previews/",
    84:   "/v4/guides/resource-limitations/",
    85    "/v3/pulls/reviews/",
    86    "/enterprise/2.19/",
    87:   "/apps/quickstart-guides/creating-ci-tests-with-the-checks-api/",
    88:   "/v3/git/blobs/",
    89    "/v3/pulls/comments/",
    90:   "/v4/changelog/",
    91:   "/apps/building-github-apps/",
    92    "/v3/repos/collaborators/",
    93:   "/marketplace/getting-started/",
    94    "/enterprise/2.20/v3/",

   100    "/v3/repos/downloads/",
   101:   "/webhooks/testing/",
   102:   "/apps/quickstart-guides/setting-up-your-development-environment/",
   103    "/v3/markdown/",
   104    "/v4/object/",
   105:   "/apps/managing-oauth-apps/troubleshooting-oauth-app-access-token-request-errors/",
   106:   "/changes/2020-04-15-replacing-create-installation-access-token-endpoint/",
   107    "/enterprise/2.18/v3/repos/statuses/",

   109    "/v3/apps/installations/",
   110:   "/apps/building-github-apps/understanding-rate-limits-for-github-apps/",
   111    "/v4/previews/",
   112    "/v3/apps/available-endpoints/",
   113:   "/changes/2020-04-07-expanding-rest-api-support-for-the-triage-and-maintain-roles/",
   114    "/v3/reactions/",
   115:   "/v3/activity/starring/",
   116    "/v3/checks/suites/",

   121    "/v4/public_schema/",
   122:   "/apps/quickstart-guides/",
   123    "/v3/actions/workflows/",
   124    "/v3/projects/cards/",
   125:   "/v4/guides/using-global-node-ids/",
   126:   "/v3/guides/working-with-comments/",
   127    "/v3/apps/oauth_applications/",
   128:   "/v3/troubleshooting/",
   129:   "/v3/guides/building-a-ci-server/",
   130    "/v3/users/followers/",

   133    "/partnerships/",
   134:   "/v3/repos/pages/",
   135:   "/changes/2019-11-05-deprecated-passwords-and-authorizations-api/",
   136    "/enterprise/2.19/webhooks/",

   138    "/v3/activity/feeds/",
   139:   "/apps/managing-github-apps/editing-a-github-app-s-permissions/",
   140:   "/v3/orgs/hooks/",
   141    "/v3/activity/notifications/",

   143    "/v3/scim/",
   144:   "/v3/migrations/",
   145:   "/v3/guides/best-practices-for-integrators/",
   146    "/v3/interactions/",

   148    "/enterprise/2.17/",
   149:   "/marketplace/getting-started/security-review-process/",
   150:   "/apps/building-github-apps/creating-github-apps-from-a-manifest/",
   151:   "/changes/2020-05-01-suspending-a-github-app-installation/",
   152    "/v3/repos/forks/",
   153    "/enterprise/2.20/v4/",
   154:   "/v4/guides/managing-enterprise-accounts/",
   155:   "/apps/migrating-oauth-apps-to-github-apps/",
   156    "/v3/pulls/review_requests/",
   157:   "/changes/2020-03-23-ActionsGA/",
   158:   "/v4/object/organization/",
   159:   "/v3/issues/assignees/",
   160:   "/v3/repos/merging/",
   161    "/enterprise/2.20/webhooks/",
   162:   "/changes/2020-04-07-graduated-previews/",
   163    "/enterprise/2.17/v3/",

   165    "/v3/actions/workflow_runs/",
   166:   "/v3/activity/watching/",
   167:   "/v3/guides/discovering-resources-for-a-user/",
   168:   "/v4/scalar/string/",
   169    "/v4/object/commit/",

   172    "/v4/object/issue/",
   173:   "/changes/2020-04-15-replacing-the-installation-and-installation-repositories-events/",
   174    "/v3/repos/keys/",

   176    "/v3/meta/",
   177:   "/enterprise/2.19/v3/guides/managing-deploy-keys/",
   178    "/enterprise/2.20/apps/",
   179:   "/changes/2020-03-20-temporary-graphql-explorer-downtime/",
   180    "/v3/misc/",

   185    "/enterprise/2.20/forum/",
   186:   "/v4/breaking_changes/",
   187:   "/apps/managing-oauth-apps/",
   188    "/v4/interface/",
   189:   "/apps/building-oauth-apps/creating-custom-badges-for-oauth-apps/",
   190:   "/apps/using-content-attachments/",
   191:   "/apps/building-github-apps/setting-permissions-for-github-apps/",
   192    "/v4/interface/node/",
   193:   "/marketplace/listing-on-github-marketplace/",
   194:   "/changes/2018-08-16-renaming-and-deprecation-of-github-app-installation-access-token-route/",
   195:   "/partnerships/secret-scanning/",
   196    "/enterprise/2.18/webhooks/",
   197    "/v3/actions/workflow_jobs/",
   198:   "/changes/2020-02-14-deprecating-oauth-app-endpoint/",
   199    "/v3/issues/milestones/",
   200:   "/marketplace/integrating-with-the-github-marketplace-api/",
   201:   "/apps/managing-oauth-apps/troubleshooting-authorization-request-errors/",
   202    "/v3/repos/invitations/",
   203:   "/apps/managing-github-apps/",
   204    "/v3/actions/self_hosted_runners/",
   205    "/v3/actions/workflow-jobs/",
   206:   "/changes/2020-02-26-new-delete-reactions-endpoints/",
   207    "/enterprise/2.20/v3/auth/",

   210    "/enterprise/2.19/apps/differences-between-apps/",
   211:   "/apps/building-github-apps/creating-github-apps-using-url-parameters/",
   212:   "/marketplace/github-marketplace-transactions/",
   213:   "/partnerships/token-scanning/",
   214:   "/v3/migrations/users/",
   215    "/v3/projects/columns/",
   216:   "/enterprise/2.19/v3/orgs/",
   217    "/v4/input_object/",
   218:   "/changes/2020-02-14-deprecating-oauth-auth-endpoint/",
   219:   "/enterprise/2.20/v4/guides/forming-calls/",
   220    "/v4/explorer-new/",
   221:   "/v3/migrations/orgs/",
   222:   "/v3/guides/replacing-github-services/",
   223    "/enterprise/2.17/v3/repos/statuses/",
   224:   "/v3/gists/comments/",
   225    "/v3/projects/collaborators/",
   226    "/v3/issues/timeline/",
   227:   "/changes/2020-04-30-expiring-user-to-server-access-tokens-for-github-apps/",
   228:   "/apps/managing-oauth-apps/deleting-an-oauth-app/",
   229:   "/marketplace/selling-your-app/",
   230:   "/enterprise/2.20/v4/guides/intro-to-graphql/",
   231:   "/marketplace/integrating-with-the-github-marketplace-api/handling-new-purchases-and-free-trials/",
   232:   "/marketplace/integrating-with-the-github-marketplace-api/github-marketplace-webhook-events/",
   233:   "/v3/migrations/source_imports/",
   234:   "/marketplace/listing-on-github-marketplace/configuring-the-github-marketplace-webhook/",
   235    "/v4/object/securityadvisory/",
   236:   "/apps/managing-github-apps/making-a-github-app-public-or-private/",
   237:   "/changes/2018-05-24-user-migration-api/",
   238:   "/enterprise/2.20/v3/guides/managing-deploy-keys/",
   239    "/enterprise/2.20/v4/explorer/",

   245    "/v4/interface/actor/",
   246:   "/v4/interface/gitobject/",
   247    "/v4/mutation/addcomment/",
   248:   "/v3/users/blocking/",
   249:   "/v3/orgs/outside_collaborators/",
   250:   "/enterprise/2.20/v3/orgs/",
   251:   "/enterprise/2.19/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/",
   252:   "/marketplace/listing-on-github-marketplace/creating-a-draft-github-marketplace-listing/",
   253:   "/v4/object/marketplacelistingconnection/",
   254    "/enterprise/2.20/apps/differences-between-apps/",
   255:   "/changes/2020-03-06-filtering-jobs-for-a-workflow-run/",
   256:   "/partnerships/integration-partners/",
   257:   "/changes/2018-04-25-github-services-deprecation/",
   258:   "/apps/managing-github-apps/deleting-a-github-app/",
   259:   "/enterprise/2.18/v3/guides/managing-deploy-keys/",
   260:   "/changes/2/",
   261:   "/apps/building-github-apps/creating-custom-badges-for-github-apps/",
   262:   "/v3/interactions/orgs/",
   263:   "/enterprise/2.19/apps/building-oauth-apps/authorizing-oauth-apps/",
   264    "/v4/enum/",
   265    "/v3/emojis/",
   266:   "/v4/object/pageinfo/",
   267    "/enterprise/2.17/webhooks/",
   268    "/v4/object/team/",
   269:   "/apps/building-github-apps/refreshing-user-to-server-access-tokens/",
   270:   "/apps/managing-oauth-apps/modifying-an-oauth-app/",
   271:   "/marketplace/integrating-with-the-github-marketplace-api/upgrading-and-downgrading-plans/",
   272    "/enterprise/2.19/v3/pulls/",

   274    "/enterprise/2.18/v3/auth/",
   275:   "/apps/managing-github-apps/modifying-a-github-app/",
   276:   "/v3/guides/rendering-data-as-graphs/",
   277    "/enterprise/2.19/apps/",
   278:   "/enterprise/2.20/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/",
   279:   "/marketplace/selling-your-app/github-marketplace-pricing-plans/",
   280:   "/enterprise/2.20/apps/building-oauth-apps/authorizing-oauth-apps/",
   281    "/v4/union/",
   282    "/enterprise/2.20/v3/enterprise-admin/users/",
   283:   "/enterprise/2.18/v3/orgs/",
   284    "/enterprise/2.20/v3/pulls/",

   288    "/enterprise/2.18/apps/differences-between-apps/",
   289:   "/marketplace/integrating-with-the-github-marketplace-api/github-marketplace-rest-api-endpoints/",
   290    "/v4/object/pullrequestconnection/",
   291:   "/v4/mutation/deletepackageversion/",
   292    "/v4/scalar/datetime/",
   293    "/v4/object/contributionscollection/",
   294:   "/apps/managing-github-apps/transferring-ownership-of-a-github-app/",
   295    "/enterprise/2.19/v3/issues/",
   296:   "/changes/2016-04-04-git-signing-api-preview/",
   297    "/v3/teams/team_sync/",
   298    "/v4/object/repositoryconnection/",
   299:   "/marketplace/integrating-with-the-github-marketplace-api/cancelling-plans/",
   300    "/v3/codes_of_conduct/",
   301    "/v4/object/app/",
   302:   "/marketplace/listing-on-github-marketplace/writing-github-marketplace-listing-descriptions/",
   303:   "/v3/users/gpg_keys/",
   304:   "/changes/2019-12-03-internal-visibility-changes/",
   305    "/v4/object/label/",
   306    "/v4/mutation/addreaction/",
   307:   "/marketplace/listing-on-github-marketplace/setting-a-github-marketplace-listing-s-pricing-plan/",
   308:   "/marketplace/github-marketplace-insights/",
   309    "/v4/object/branchprotectionrule/",
   310:   "/enterprise/2.20/v3/enterprise-admin/management_console/",
   311    "/v4/scalar/uri/",
   312:   "/changes/2018-05-07-new-checks-api-public-beta/",
   313    "/v4/mutation/acceptenterpriseadministratorinvitation/",
   314:   "/v4/object/package/",
   315:   "/apps/managing-github-apps/suspending-a-github-app-installation/",
   316    "/v4/object/tree/",
   317:   "/actions/creating-workflows/workflow-configuration-options/",
   318    "/v4/interface/repositoryinfo/",
   319:   "/changes/2018-10-18-github-api-development-and-support/",
   320    "/enterprise/2.17/v4/",

   322    "/enterprise/2.20/v3/users/",
   323:   "/enterprise/2.20/v4/guides/migrating-from-rest/",
   324    "/v4/scalar/boolean/",
   325:   "/v3/gitignore/",
   326    "/v4/object/project/",
   327:   "/v3/orgs/blocking/",
   328    "/v4/object/issuecomment/",
   329    "/enterprise/2.18/v3/pulls/",
   330:   "/marketplace/selling-your-app/receiving-payment-for-github-marketplace-listings/",
   331    "/v4/object/enterprise/",
   332    "/v4/object/blob/",
   333:   "/enterprise/2.17/v3/guides/managing-deploy-keys/",
   334    "/v4/mutation/createissue/",
   335    "/enterprise/2.16/v3/repos/statuses/",
   336:   "/enterprise/2.19/v4/guides/forming-calls/",
   337:   "/marketplace/integrating-with-the-github-marketplace-api/testing-github-marketplace-apps/",
   338    "/v4/interface/repositoryowner/",
   339:   "/v4/object/language/",
   340    "/enterprise/2.20/apps/about-apps/",

   343    "/v4/union/searchresultitem/",
   344:   "/enterprise/2.19/v4/guides/intro-to-graphql/",
   345    "/v4/object/pullrequestreview/",

   348    "/enterprise/2.20/v3/media/",
   349:   "/changes/2014-03-04-timezone-handling-changes/",
   350:   "/v3/search/legacy/",
   351    "/enterprise/2.19/apps/about-apps/",
   352:   "/marketplace/selling-your-app/billing-customers-in-github-marketplace/",
   353    "/enterprise/2.18/v4/",
   354:   "/changes/2017-12-19-graphql-node-id/",
   355    "/enterprise/2.19/v3/search/",
   356:   "/enterprise/2.20/v3/guides/",
   357:   "/enterprise/2.20/v4/guides/",
   358    "/enterprise/2.20/v3/activity/events/types/",

   361    "/enterprise/2.20/v3/teams/",
   362:   "/apps/managing-oauth-apps/transferring-ownership-of-an-oauth-app/",
   363    "/v3/teams/discussions/",
   364:   "/v4/object/dependencygraphmanifest/",
   365    "/enterprise/2.19/v3/activity/events/types/",

   373    "/enterprise/2.20/v3/search/",
   374:   "/changes/5/",
   375    "/v4/enum/orderdirection/",

   379    "/enterprise/2.17/v3/auth/",
   380:   "/enterprise/2.18/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/",
   381    "/v4/enum/searchtype/",

   383    "/enterprise/2.20/v3/repos/contents/",
   384:   "/v4/object/marketplacelisting/",
   385    "/enterprise/2.18/v3/repos/",

   391    "/v4/object/topic/",
   392:   "/enterprise/2.17/v3/orgs/",
   393:   "/enterprise/2.18/apps/building-oauth-apps/authorizing-oauth-apps/",
   394:   "/actions/creating-workflows/storing-secrets",
   395:   "/v4/enum/mergestatestatus/",
   396    "/enterprise/2.20/v3/oauth_authorizations/",

   399    "/v4/input_object/addcommentinput/",
   400:   "/changes/2016-10-27-changes-to-projects-api/",
   401:   "/enterprise/2.20/apps/quickstart-guides/using-the-github-api-in-your-app/",
   402:   "/v4/changelog/2020-03-23-schema-changes/",
   403:   "/v4/scalar/gitobjectid/",
   404    "/enterprise/2.20/v3/apps/permissions/",

   411    "/enterprise/2.18/forum/",
   412:   "/enterprise/2.20/v3/enterprise-admin/orgs/",
   413:   "/v4/object/gist/",
   414:   "/changes/2014-12-08-removing-authorizations-token/",
   415:   "/enterprise/2.20/v4/guides/using-the-explorer/",
   416    "/v4/object/pullrequestcommit/",
   417    "/v4/input_object/createissueinput/",
   418:   "/v4/object/organizationmemberconnection/",
   419:   "/changes/2018-04-24-preview-dependency-graph-and-vulnerability-hooks/",
   420    "/v4/object/userstatus/",
   421:   "/v4/object/dependencygraphdependency/",
   422    "/v4/interface/uniformresourcelocatable/",
   423    "/v4/object/pullrequestreviewcomment/",
   424:   "/v4/object/tag/",
   425:   "/enterprise/2.20/changes/",
   426    "/enterprise/2.20/v3/repos/releases/",
   427:   "/v4/changelog/2020-04-23-schema-changes/",
   428    "/enterprise/2.8/v3/",
   429:   "/v4/mutation/changeuserstatus/",
   430    "/v4/object/externalidentity/",
   431:   "/changes/3/",
   432:   "/v4/object/registrypackage/",
   433:   "/changes/2018-04-30-graphql-supports-github-apps/",
   434    "/enterprise/2.20/v3/repos/hooks/",

   440    "/v4/mutation/updaterepository/",
   441:   "/v4/object/marketplacelistingedge/",
   442    "/v4/object/milestone/",
   443    "/enterprise/2.20/v4/query/",
   444:   "/v4/object/searchresultitemedge/",
   445    "/enterprise/2.16/v3/",

   447    "/enterprise/2.20/v3/enterprise-admin/admin_stats/",
   448:   "/changes/2019-03-29-webhooks-ip-changes/",
   449:   "/enterprise/2.20/apps/building-oauth-apps/",
   450    "/v4/input_object/issueorder/",

   452    "/enterprise/2.18/v3/activity/events/types/",
   453:   "/v4/changelog/2019-03-08-schema-changes/",
   454    "/v4/mutation/createpullrequest/",
   455:   "/v4/object/organizationauditentryconnection/",
   456:   "/enterprise/2.17/apps/building-oauth-apps/authorizing-oauth-apps/",
   457    "/v4/object/checkrun/",
   458    "/enterprise/2.19/v4/explorer/",
   459:   "/v4/mutation/accepttopicsuggestion/",
   460    "/enterprise/2.19/v3/users/",
   461:   "/enterprise/2.20/v3/enterprise-admin/global_webhooks/",
   462:   "/v4/object/assignedevent/",
   463    "/v4/object/commitcommentconnection/",

   465    "/v4/union/pullrequesttimelineitems/",
   466:   "/changes/2016-04-06-deployment-and-deployment-status-enhancements/",
   467    "/enterprise/2.20/v3/enterprise-admin/ldap/",

   471    "/enterprise/2.20/v3/repos/branches/",
   472:   "/v4/object/blamerange/",
   473    "/v4/object/treeentry/",

   476    "/v4/scalar/date/",
   477:   "/changes/2018-02-01-weak-crypto-removal-notice/",
   478:   "/enterprise/2.18/v4/guides/intro-to-graphql/",
   479:   "/changes/2015-01-19-an-integrators-guide-to-organization-application-policies/",
   480    "/enterprise/2.19/v3/apps/",
   481:   "/enterprise/2.19/webhooks/creating/",
   482    "/enterprise/2.20/v3/repos/commits/",

   486    "/v4/mutation/archiverepository/",
   487:   "/v4/object/organizationidentityprovider/",
   488:   "/changes/2016-05-12-reactions-api-preview/",
   489    "/enterprise/2.16/",

   493    "/v4/mutation/updateissue/",
   494:   "/v4/input_object/deletepackageversioninput/",
   495    "/v4/input_object/userstatusorder/",
   496:   "/v4/changelog/2020-04-15-schema-changes/",
   497    "/v4/mutation/addpullrequestreview/",
   498    "/v4/object/pullrequestcommitconnection/",
   499:   "/v4/changelog/2/",
   500    "/v4/mutation/cloneproject/",
   501:   "/changes/2012-09-05-watcher-api/",
   502:   "/enterprise/2.20/v3/orgs/members/",
   503    "/v4/enum/issuestate/",

   511    "/enterprise/2.18/v3/enterprise-admin/",
   512:   "/enterprise/2.19/apps/quickstart-guides/using-the-github-api-in-your-app/",
   513    "/enterprise/2.19/v3/repos/releases/",
   514:   "/changes/2016-09-14-Integrations-Early-Access/",
   515    "/enterprise/2.20/v3/activity/",

   520    "/v4/object/pullrequestreviewconnection/",
   521:   "/v4/object/repositorycollaboratoredge/",
   522:   "/early-access/graphql/",
   523:   "/enterprise/2.18/v4/guides/forming-calls/",
   524:   "/enterprise/2.19/apps/building-github-apps/authenticating-with-github-apps/",
   525    "/enterprise/2.19/v3/enterprise-admin/users/",
   526:   "/enterprise/2.19/webhooks/securing/",
   527:   "/v4/object/packageversion/",
   528:   "/changes/2014-12-08-organization-permissions-api-preview/",
   529:   "/v4/mutation/addassigneestoassignable/",
   530:   "/enterprise/2.20/apps/building-github-apps/identifying-and-authorizing-users-for-github-apps/",
   531    "/v4/interface/projectowner/",
   532    "/v4/object/commithistoryconnection/",
   533:   "/enterprise/2.20/webhooks/creating/",
   534    "/v3/teams/discussion_comments/",
   535    "/v4/input_object/updaterepositoryinput/",
   536:   "/v4/object/gitactor/",
   537    "/v4/object/memberscandeletereposclearauditentry/",
   538:   "/v4/object/pullrequestedge/",
   539:   "/v4/union/organizationauditentry/",
   540    "/v4/input_object/addreactioninput/",

   547    "/v4/object/teamconnection/",
   548:   "/changes/2018-10-16-deployments-environments-states-and-auto-inactive-updates/",
   549    "/enterprise/2.18/v3/repos/branches/",
   550:   "/enterprise/2.19/apps/installing-github-apps/",
   551:   "/v3/code-scanning/",
   552:   "/v4/object/dependencygraphmanifestconnection/",
   553:   "/changes/4/",
   554    "/enterprise/2.19/v4/query/",
   555    "/v4/object/deployment/",
   556:   "/v4/object/repositoryedge/",
   557:   "/enterprise/2.17/v4/guides/forming-calls/",
   558:   "/enterprise/2.19/apps/building-github-apps/creating-a-github-app/",
   559    "/v4/enum/reactioncontent/",
   560:   "/v4/object/pullrequestchangedfileconnection/",
   561    "/v4/union/issuetimelineitems/",
   562    "/v4/union/pullrequesttimelineitem/",
   563:   "/changes/2018-01-10-lock-reason-api-preview/",
   564    "/v4/input_object/repositoryorder/",
   565:   "/v4/object/languageconnection/",
   566    "/enterprise/2.18/v3/repos/releases/",

   569    "/v4/mutation/createproject/",
   570:   "/changes/2014-04-25-user-content-security/",
   571    "/enterprise/2.18/v3/users/",
   572:   "/enterprise/2.19/apps/building-github-apps/",
   573:   "/enterprise/2.19/v3/guides/",
   574    "/enterprise/2.19/v3/teams/",

   578    "/enterprise/2.17/v3/pulls/",
   579:   "/v4/interface/assignable/",
   580:   "/v4/object/dependencygraphdependencyconnection/",
   581    "/v4/object/issuetimelineitemsconnection/",
   582    "/enterprise/2.18/v4/explorer/",
   583:   "/enterprise/2.20/apps/building-github-apps/",
   584    "/v4/mutation/updatepullrequest/",
   585    "/v4/object/pullrequesttimelineitemsconnection/",
   586:   "/enterprise/2.19/apps/building-oauth-apps/",
   587:   "/enterprise/2.19/v4/guides/migrating-from-rest/",
   588:   "/v4/interface/packageowner/",
   589    "/v4/mutation/addpullrequestreviewcomment/",
   590    "/v4/mutation/updateref/",
   591:   "/enterprise/2.19/apps/building-github-apps/identifying-and-authorizing-users-for-github-apps/",
   592    "/enterprise/2.19/v3/projects/",
   593:   "/enterprise/2.20/v3/git/",
   594    "/enterprise/2.20/v3/repos/statistics/",

   598    "/enterprise/2.19/v3/media/",
   599:   "/enterprise/2.20/v3/git/refs/",
   600    "/enterprise/2.20/v3/previews/",

   605    "/enterprise/2.15/v3/repos/statuses/",
   606:   "/v4/enum/mergeablestate/",
   607    "/v4/enum/statusstate/",

   614    "/v4/object/branchprotectionruleconnection/",
   615:   "/v4/changelog/2020-04-20-schema-changes/",
   616    "/v4/input_object/acceptenterpriseadministratorinvitationinput/",

   621    "/enterprise/2.17/v3/activity/events/types/",
   622:   "/enterprise/2.17/v4/guides/intro-to-graphql/",
   623    "/enterprise/2.17/v4/query/",
   624    "/v4/enum/repositorypermission/",
   625:   "/v4/object/issueedge/",
   626:   "/v4/object/pullrequestchangedfile/",
   627    "/v4/object/sponsorship/",
   628    "/enterprise/2.17/v3/enterprise-admin/users/",
   629:   "/enterprise/2.20/apps/building-github-apps/authenticating-with-github-apps/",
   630    "/enterprise/2.20/v3/apps/",
   631    "/enterprise/2.20/v3/enterprise-admin/license/",
   632:   "/enterprise/2.20/v4/guides/using-global-node-ids/",
   633    "/v4/input_object/addstarinput/",
   634:   "/v4/input_object/auditlogorder/",
   635:   "/v4/mutation/mergepullrequest/",
   636:   "/enterprise/2.18/v3/guides/",
   637:   "/enterprise/2.19/webhooks/testing/",
   638:   "/enterprise/2.20/apps/building-oauth-apps/creating-an-oauth-app/",
   639:   "/v4/object/organizationconnection/",
   640    "/enterprise/2.16/webhooks/",
   641    "/enterprise/2.17/v3/users/",
   642:   "/enterprise/2.19/v3/git/",
   643:   "/enterprise/2.19/webhooks/configuring/",
   644    "/enterprise/2.20/v3/checks/",

   649    "/v4/object/projectconnection/",
   650:   "/changes/2019-02-14-draft-pull-requests/",
   651    "/enterprise/2.17/v3/repos/commits/",
   652:   "/enterprise/2.18/webhooks/creating/",
   653    "/v4/mutation/unlocklockable/",
   654    "/v4/object/closedevent/",
   655:   "/v4/scalar/gittimestamp/",
   656    "/enterprise/2.19/v3/issues/comments/",
   657:   "/enterprise/2.19/v4/guides/",
   658:   "/enterprise/2.20/apps/installing-github-apps/",
   659:   "/v3/code-scanning",
   660    "/v4/input_object/updatepullrequestinput/",

   662    "/v4/mutation/followuser/",
   663:   "/v4/object/issuecommentedge/",
   664    "/v4/scalar/x509certificate/",
   665    "/v5/",
   666:   "/actions/creating-workflows/creating-a-new-workflow/",
   667:   "/enterprise/2.19/apps/quickstart-guides/",
   668    "/enterprise/2.19/v3/libraries/",
   669:   "/enterprise/2.20/v3/git/commits/",
   670    "/v4/object/pushallowance/",
   671:   "/v4/object/sponsorslisting/",
   672:   "/v4/object/useredge/",
   673    "/v4/repos/",
   674    "/v4/scalar/precisedatetime/",
   675:   "/v4/union/assignee/",
   676    "/enterprise/2.13/v3/repos/statuses/",
   677:   "/enterprise/2.17/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/",
   678:   "/enterprise/2.19/v3/git/refs/",
   679    "/enterprise/2.19/v3/pulls/reviews/",

   682    "/v4/mutation/closeissue/",
   683:   "/v4/object/organizationmemberedge/",
   684    "/v4/object/repositorytopicconnection/",

   686    "/enterprise/2.17/v3/search/",
   687:   "/enterprise/2.18/v4/guides/",
   688:   "/enterprise/2.20/webhooks/configuring/",
   689    "/v3/user",

   693    "/v4/object/reaction/",
   694:   "/enterprise/2.17/v3/guides/",
   695    "/enterprise/2.18/v3/search/",
   696:   "/enterprise/2.19/changes/",
   697:   "/enterprise/2.19/v3/enterprise-admin/orgs/",
   698    "/enterprise/2.20/v3/projects/",

   701    "/v4/mutation/updatebranchprotectionrule/",
   702:   "/changes/MjAyMC0wMi",
   703:   "/enterprise/2.17/v3/orgs/members/",
   704    "/v4/mutation/deletedeployment/",

   707    "/enterprise/2.19/v3/checks/",
   708:   "/enterprise/2.19/v3/git/commits/",
   709    "/enterprise/2.19/v4/object/repository/",
   710:   "/enterprise/2.20/v3/git/tags/",
   711    "/enterprise/2.20/v3/repos/collaborators/",
   712:   "/enterprise/2.20/v4/guides/resource-limitations/",
   713    "/v4/input_object/updatebranchprotectionruleinput/",
   714    "/v4/object/issuetimelineconnection/",
   715:   "/v4/object/projectcardedge/",
   716:   "/changes/2018-11-05-github-services-brownout/",
   717:   "/changes/2019-04-11-pulls-branches-for-commit/",
   718:   "/enterprise/2.17/changes/",
   719:   "/enterprise/2.18/webhooks/securing/",
   720    "/enterprise/2.19/v3/previews/",
   721:   "/enterprise/2.20/webhooks/securing/",
   722    "/v4/mutation/createcontentattachment/",
   723    "/v4/object/releaseconnection/",
   724:   "/enterprise/2.17/v3/enterprise-admin/management_console/",
   725    "/enterprise/2.17/v3/oauth_authorizations/",
   726:   "/enterprise/2.18/v4/guides/migrating-from-rest/",
   727    "/enterprise/2.19/v3/checks/runs/",
   728    "/enterprise/2.19/v3/pulls/comments/",
   729:   "/enterprise/2.20/apps/building-github-apps/creating-a-github-app/",
   730    "/v4/input_object/archiverepositoryinput/",
   731:   "/v4/mutation/mergebranch/",
   732    "/v4/object/pullrequesttimelineconnection/",

   734    "/enterprise/2.17/v3/media/",
   735:   "/enterprise/2.18/v3/orgs/members/",
   736:   "/v4/enum/actionexecutioncapabilitysetting/",
   737    "/v4/enum/issueorderfield/",

   740    "/v4/union/enterprisemember/",
   741:   "/changes/2020-01-28-actions-api/",
   742    "/enterprise/2.15/webhooks/",

   747    "/v4/mutation/closepullrequest/",
   748:   "/changes/2014-04-07-understanding-search-results-and-potential-timeouts/",
   749:   "/changes/2019-05-29-update-branch-api/",
   750:   "/enterprise/2.20/apps/quickstart-guides/setting-up-your-development-environment/",
   751    "/enterprise/2.20/v3/issues/comments/",

   753    "/enterprise/2.20/v4/mutation/",
   754:   "/v4/changelog/2020-03-10-schema-changes/",
   755    "/v4/enum/pullrequestreviewstate/",

   758    "/v4/mutation/markpullrequestreadyforreview/",
   759:   "/v4/object/baserefchangedevent/",
   760:   "/v4/object/labeledge/",
   761:   "/v4/object/packageconnection/",
   762:   "/v4/object/teammemberedge/",
   763:   "/v4/scalar/gitrefname/",
   764:   "/changes/2018-03-16-protected-branches-required-approving-reviews/",
   765    "/enterprise/2.13/",
   766:   "/enterprise/2.18/v4/guides/using-the-explorer/",
   767    "/v4/input_object/checkrunaction/",
   768:   "/v4/interface/organizationauditentrydata/",
   769    "/v4/mutation/createdeploymentstatus/",
   770    "/v4/mutation/deletelabel/",
   771:   "/enterprise/2.18/apps/building-oauth-apps/",
   772:   "/enterprise/2.19/v3/git/blobs/",
   773    "/v3\"",

   777    "/v4/union/pushallowanceactor/",
   778:   "/enterprise/2.17/v4/guides/",
   779:   "/enterprise/2.19/v3/git/tags/",
   780:   "/enterprise/2.19/v4/guides/using-the-explorer/",
   781:   "/enterprise/2.20/program/",
   782:   "/enterprise/2.20/v4/guides/managing-enterprise-accounts/",
   783:   "/enterprise/2.20/v4/object/organization/",
   784    "/v4/enum/repositoryaffiliation/",
   785    "/v4/interface/sponsorable/",
   786:   "/v4/object/registrypackageedge/",
   787    "/v4/union/projectcarditem/",
   788    "/enterprise/2.17/v3/apps/permissions/",
   789:   "/enterprise/2.18/apps/building-github-apps/authenticating-with-github-apps/",
   790    "/enterprise/2.18/v3/teams/",
   791    "/enterprise/2.19/v3/activity/",
   792:   "/enterprise/2.19/v3/enterprise-admin/management_console/",
   793:   "/enterprise/2.20/v3/git/blobs/",
   794    "/enterprise/2.20/v3/pulls/comments/",

   801    "/enterprise/2.18/v3/pulls/reviews/",
   802:   "/enterprise/2.19/apps/building-oauth-apps/creating-an-oauth-app/",
   803    "/enterprise/2.19/v3/activity/events/",
   804    "/enterprise/2.20/v4/object/",
   805:   "/v4/input_object/changeuserstatusinput/",
   806    "/v4/input_object/checkannotationdata/",
   807    "/v4/object/followerconnection/",
   808:   "/v4/object/gistfile/",
   809:   "/v4/scalar/gitsshremote/",
   810    "/enterprise/2.18/v3/media/",
   811:   "/enterprise/2.19/v3/orgs/members/",
   812    "/enterprise/2.20/v3/apps/installations/",

   814    "/enterprise/2.20/v3/users/keys/",
   815:   "/v4/changelog/26/",
   816:   "/v4/enum/auditlogorderfield/",
   817    "/v4/mutation/locklockable/",

   822    "/enterprise/2.17/v3/libraries/",
   823:   "/enterprise/2.18/changes/",
   824:   "/enterprise/2.18/v3/git/refs/",
   825    "/enterprise/2.18/v3/libraries/",

   828    "/enterprise/2.19/v3/pulls/review_requests/",
   829:   "/enterprise/2.20/apps/quickstart-guides/",
   830    "/enterprise/2.20/v3/repos/deployments/",

   833    "/v4/input_object/labelorder/",
   834:   "/v4/interface/registrypackagesearch/",
   835    "/v4/mutation/minimizecomment/",
   836    "/v4/mutation/updateissuecomment/",
   837:   "/changes/2013-10-04-oauth-changes-coming/",
   838:   "/changes/2013-10-18-new-code-search-requirements/",
   839    "/enterprise/2.14/v3/",
   840:   "/enterprise/2.16/v3/enterprise-admin/orgs/",
   841:   "/enterprise/2.16/v3/orgs/",
   842    "/enterprise/2.17/v3/repos/hooks/",
   843:   "/enterprise/2.19/apps/quickstart-guides/setting-up-your-development-environment/",
   844    "/enterprise/2.19/v4/object/pullrequest/",
   845:   "/v4/object/githubmetadata/",
   846    "/v4/object/mannequin/",
   847:   "/v4/object/mergedevent/",
   848:   "/changes/2018-09-05-project-card-events/",
   849:   "/enterprise/2.13/apps/building-oauth-apps/authorizing-oauth-apps/",
   850    "/enterprise/2.17/v3/repos/contents/",
   851    "/enterprise/2.17/v4/object/repository/",
   852:   "/enterprise/2.18/apps/quickstart-guides/using-the-github-api-in-your-app/",
   853    "/enterprise/2.20/v3/reactions/",
   854    "/enterprise/2.20/v3/teams/members/",
   855:   "/v4/changelog/3/",
   856    "/v4/enum/checkstatusstate/",

   861    "/v4/object/contentreference/",
   862:   "/v4/object/orgremovememberauditentry/",
   863:   "/v4/object/securityadvisorypackage/",
   864:   "/changes/2020-01-21-moving-the-team-api-endpoints/",
   865    "/enterprise/2.18/v4/query/",
   866:   "/enterprise/2.18/webhooks/configuring/",
   867:   "/enterprise/2.20/marketplace/getting-started/requirements-for-listing-an-app-on-github-marketplace/",
   868    "/enterprise/2.20/v3/enterprise-admin/pre_receive_hooks/",
   869:   "/enterprise/2.20/v3/guides/basics-of-authentication/",
   870:   "/enterprise/2.20/v3/guides/getting-started/",
   871:   "/enterprise/2.20/v3/orgs/hooks/",
   872    "/v4/input_object/addlabelstolabelableinput/",
   873:   "/v4/input_object/languageorder/",
   874    "/v4/object/repositoryvulnerabilityalertconnection/",

   876    "/v5",
   877:   "/changes/29/",
   878    "/enterprise/2.14/",

   881    "/enterprise/2.17/v3/repos/releases/",
   882:   "/enterprise/2.18/v3/enterprise-admin/orgs/",
   883    "/enterprise/2.18/v3/oauth_authorizations/",

   886    "/v4/enum/securityadvisoryseverity/",
   887:   "/v4/mutation/regenerateenterpriseidentityproviderrecoverycodes/",
   888    "/v4/object/pullrequestreviewthreadconnection/",
   889:   "/enterprise/2.16/v3/guides/managing-deploy-keys/",
   890:   "/enterprise/2.17/v3/git/refs/",
   891    "/enterprise/2.19/v3/apps/available-endpoints/",

   893    "/enterprise/2.20/v3/checks/runs/",
   894:   "/enterprise/2.20/v3/repos/pages/",
   895    "/enterprise/2.20/v4/previews/",
   896:   "/enterprise/2.20/v4/scalar/string/",
   897:   "/enterprise/2.20/webhooks/testing/",
   898    "/v4/enum/operationtype/",

   900    "/v4/input_object/draftpullrequestreviewcomment/",
   901:   "/v4/input_object/mergepullrequestinput/",
   902    "/v4/input_object/refupdate/",

   908    "/v4/object/ratelimit/",
   909:   "/v4/object/registrypackageversion/",
   910    "/v4/object/repocreateauditentry/",

   917    "/v4/interface/updatable/",
   918:   "/v4/object/packagefile/",
   919:   "/v4/object/reviewrequestedge/",
   920    "/v4/object/securityadvisoryidentifier/",
   921    "/v4/object/textmatch/",
   922:   "/changes/30/",
   923    "/enterprise/2.16/v3/auth/",

   925    "/enterprise/2.18/v4/object/pullrequest/",
   926:   "/enterprise/2.19/changes/2016-04-04-git-signing-api-preview/",
   927:   "/enterprise/2.19/v3/git/trees/",
   928:   "/enterprise/2.19/v3/orgs/hooks/",
   929    "/enterprise/2.19/v4/object/",

   931    "/enterprise/2.20/v4/interface/",
   932:   "/enterprise/2.20/v4/object/organizationconnection/",
   933    "/v4/enum/deploymentstate/",

   937    "/v4/mutation/clearlabelsfromlabelable/",
   938:   "/v4/mutation/createenterpriseorganization/",
   939    "/v4/mutation/removestar/",

   941    "/v4/object/enterprisememberconnection/",
   942:   "/v4/object/stargazerconnection/",
   943    "/v4/reference/interface/node/",
   944    "/v4/union/pinnableitem/",
   945:   "/enterprise/2.17/v4/object/organization/",
   946    "/enterprise/2.19/v3/rate_limit/",

   950    "/v4/mutation/deleteipallowlistentry/",
   951:   "/v4/object/commitcommentedge/",
   952:   "/v4/object/enterprisebillinginfo/",
   953    "/v4/object/pinnableitemconnection/",
   954:   "/v4/object/refedge/",
   955:   "/changes/1/",
   956    "/enterprise/2.16/v3/activity/events/types/",

   961    "/enterprise/2.19/v3/enterprise-admin/admin_stats/",
   962:   "/enterprise/2.20/v3/gists/",
   963    "/v4/input_object/addprojectcolumninput/",

   972    "/enterprise/2.17/v3/pulls/review_requests/",
   973:   "/enterprise/2.18/apps/building-github-apps/",
   974:   "/enterprise/2.18/apps/building-github-apps/creating-a-github-app/",
   975:   "/enterprise/2.18/apps/building-oauth-apps/creating-an-oauth-app/",
   976    "/enterprise/2.18/v4/object/user/",
   977:   "/enterprise/2.19/v3/guides/best-practices-for-integrators/",
   978    "/v",
   979    "/v4/enum/issuetimelineitemsitemtype/",
   980:   "/v4/input_object/mergebranchinput/",
   981    "/v4/issues/",

   985    "/v4/object/crossreferencedevent/",
   986:   "/v4/object/marketplacecategory/",
   987    "/v4/object/projectcolumnconnection/",
   988:   "/v4/object/pullrequestreviewedge/",
   989    "/v4/object/releaseasset/",

   992    "/enterprise/2.18/v3/issues/comments/",
   993:   "/enterprise/2.19/v3/repos/pages/",
   994    "/v1",
   995:   "/v4/changelog/2019-12-11-schema-changes/",
   996    "/v4/enum/subscriptionstate/",
   997:   "/v4/input_object/addassigneestoassignableinput/",
   998    "/v4/object/ipallowlistentry/",
   999:   "/v4/object/issuetimelineitemsedge/",
  1000    "/v4/object/oauthapplicationcreateauditentry/",
  1001:   "/changes/2018-12-18-interactions-preview/",
  1002:   "/changes/2019-09-06-more-check-annotations-shown-in-files-changed-tab/",
  1003:   "/changes/6/",
  1004    "/enterprise/2.16/v3/pulls/",
  1005:   "/enterprise/2.18/apps/building-github-apps/identifying-and-authorizing-users-for-github-apps/",
  1006    "/enterprise/2.19/v3/repos/statistics/",
  1007:   "/enterprise/2.20/v3/enterprise-admin/search_indexing/",
  1008:   "/enterprise/2.20/v3/git/trees/",
  1009:   "/enterprise/2.20/v3/repos/merging/",
  1010    "/enterprise/2.20/v4/object/user/",
  1011:   "/v4/input_object/checkannotationrange/",
  1012    "/v4/input_object/deletebranchprotectionruleinput/",
  1013    "/v4/input_object/reactionorder/",
  1014:   "/v4/interface/registrypackageowner/",
  1015    "/v4/object/contributioncalendarday/",

  1019    "/v4/union/closer/",
  1020:   "/changes/2015-04-17-preview-repository-redirects/",
  1021:   "/changes/2016-05-23-timeline-preview-api/",
  1022:   "/changes/2016-11-28-preview-org-membership/",
  1023:   "/changes/2017-08-30-preview-nested-teams/",
  1024:   "/enterprise/2.11/v4/guides/intro-to-graphql/",
  1025:   "/enterprise/2.17/v4/guides/migrating-from-rest/",
  1026    "/enterprise/2.18/v3/checks/",
  1027:   "/enterprise/2.18/v3/git/",
  1028:   "/enterprise/2.18/v3/guides/getting-started/",
  1029:   "/enterprise/2.18/v3/orgs/hooks/",
  1030    "/enterprise/2.18/v3/projects/",
  1031:   "/enterprise/2.19/v3/guides/basics-of-authentication/",
  1032:   "/enterprise/2.19/v3/guides/getting-started/",
  1033    "/enterprise/2.19/v3/misc/",

  1050    "/v4/object/licenserule/",
  1051:   "/v4/object/securityadvisorypackageversion/",
  1052:   "/v4/object/teamedge/",
  1053    "/enterprise/2.14/v3/repos/statuses/",
  1054:   "/enterprise/2.17/apps/building-github-apps/",
  1055:   "/enterprise/2.17/apps/installing-github-apps/",
  1056    "/enterprise/2.17/v3/activity/",

  1062    "/enterprise/2.20/v3/apps/available-endpoints/",
  1063:   "/enterprise/2.20/v3/guides/delivering-deployments/",
  1064    "/enterprise/2.20/v3/rate_limit/",

  1072    "/v4/object/externalidentityscimattributes/",
  1073:   "/v4/object/orgaddmemberauditentry/",
  1074:   "/v4/object/organizationauditentryedge/",
  1075:   "/v4/object/orginvitememberauditentry/",
  1076    "/v4/object/permissionsource/",
  1077    "/v4/object/publickey/",
  1078:   "/v4/object/repochangemergesettingauditentry/",
  1079:   "/v4/object/securityvulnerabilityedge/",
  1080:   "/actions/creating-workflows/storing-secrets/",
  1081:   "/changes/2019-10-03-multi-line-comments/",
  1082:   "/changes/7/",
  1083:   "/changes/8/",
  1084    "/enterprise/2.10/v3/repos/statuses/",

  1087    "/enterprise/2.17/v3/repos/collaborators/",
  1088:   "/enterprise/2.18/webhooks/testing/",
  1089    "/enterprise/2.19/marketplace/",
  1090:   "/enterprise/2.19/v3/gists/",
  1091:   "/enterprise/2.19/v3/issues/assignees/",
  1092    "/enterprise/2.19/v4/mutation/",
  1093:   "/enterprise/2.20/changes/2020-04-15-replacing-create-installation-access-token-endpoint/",
  1094:   "/v4/enum/languageorderfield/",
  1095    "/v4/enum/pullrequestreviewdecision/",
  1096    "/v4/enum/userstatusorderfield/",
  1097:   "/v4/input_object/accepttopicsuggestioninput/",
  1098    "/v4/input_object/checkrunoutput/",

  1104    "/v4/object/deploymentconnection/",
  1105:   "/v4/object/languageedge/",
  1106:   "/v4/object/organizationedge/",
  1107:   "/v4/object/reactiongroup/",
  1108    "/v4/object/usercontentedit/",
  1109:   "/changes/2012-10-14-rate-limit-changes/",
  1110:   "/changes/2013-07-19-preview-the-new-search-api/",
  1111:   "/changes/2017-05-22-github-apps-production-ship/",
  1112:   "/changes/2019-01-29-life-after-github-services/",
  1113    "/enterprise/2.14/webhooks/",

  1115    "/enterprise/2.17/v3/activity/events/",
  1116:   "/enterprise/2.17/v3/enterprise-admin/orgs/",
  1117:   "/enterprise/2.17/v3/git/",
  1118:   "/enterprise/2.17/webhooks/creating/",
  1119:   "/enterprise/2.18/apps/quickstart-guides/",
  1120:   "/enterprise/2.19/v3/guides/delivering-deployments/",
  1121    "/enterprise/2.19/v3/repos/deployments/",
  1122:   "/enterprise/2.19/v3/troubleshooting/",
  1123    "/enterprise/2.19/v3/users/emails/",

  1126    "/enterprise/2.20/v3/meta/",
  1127:   "/v4/changelog/2020-02-12-schema-changes/",
  1128:   "/v4/changelog/2020-03-05-schema-changes/",
  1129    "/v4/input_object/deploymentorder/",

  1134    "/v4/object/checkannotation/",
  1135:   "/v4/object/dependencygraphmanifestedge/",
  1136    "/v4/object/enterpriseserveruseraccount/",
  1137:   "/v4/object/packagestatistics/",
  1138:   "/v4/object/packagetag/",
  1139    "/v4/object/releaseassetconnection/",
  1140:   "/changes/2013-09-25-releases-api/",
  1141:   "/changes/2017-01-05-commit-search-api/",
  1142:   "/changes/2019-04-24-vulnerability-alerts/",
  1143    "/enterprise/2.17/marketplace/",

  1148    "/enterprise/2.17/v3/pulls/comments/",
  1149:   "/enterprise/2.17/v4/guides/using-the-explorer/",
  1150    "/enterprise/2.18/v3/activity/",

  1153    "/enterprise/2.18/v4/object/repository/",
  1154:   "/enterprise/2.19/v4/guides/using-global-node-ids/",
  1155    "/enterprise/2.20/v3/repos/keys/",

  1167    "/v4/interface/teamauditentrydata/",
  1168:   "/v4/mutation/updateipallowlistenabledsetting/",
  1169    "/v4/object/createdpullrequestreviewcontribution/",
  1170:   "/v4/object/organizationinvitation/",
  1171:   "/v4/object/packageversionconnection/",
  1172:   "/v4/object/registrypackageversionconnection/",
  1173    "/v4/object/securityadvisoryreference/",
  1174:   "/actions/creating-workflows/",
  1175    "/api",
  1176:   "/changes/2018-10-01-denying-new-github-services/",
  1177:   "/changes/21/",
  1178:   "/changes/24/",
  1179:   "/enterprise/2.17/apps/building-oauth-apps/",
  1180:   "/enterprise/2.17/v3/enterprise-admin/global_webhooks/",
  1181:   "/enterprise/2.18/v3/git/commits/",
  1182:   "/enterprise/2.18/v3/git/tags/",
  1183    "/enterprise/2.18/v3/pulls/review_requests/",
  1184:   "/enterprise/2.18/v3/repos/merging/",
  1185:   "/enterprise/2.19/apps/migrating-oauth-apps-to-github-apps/",
  1186    "/enterprise/2.19/v3/repos/comments/",

  1189    "/enterprise/2.2/",
  1190:   "/enterprise/2.20/changes/2020-04-07-expanding-rest-api-support-for-the-triage-and-maintain-roles/",
  1191    "/enterprise/2.20/v3/issues/labels/",
  1192:   "/enterprise/2.20/v4/changelog/",
  1193    "/v4/enum/diffside/",
  1194    "/v4/enum/pullrequesttimelineitemsitemtype/",
  1195:   "/v4/input_object/checksuiteautotriggerpreference/",
  1196    "/v4/input_object/releaseorder/",

  1200    "/v4/object/enterpriseownerinfo/",
  1201:   "/v4/object/issuetimelineitemedge/",
  1202:   "/v4/object/pullrequestchangedfileedge/",
  1203    "/v4/object/reviewrequestedevent/",

  1205    "/enterprise/2.11/v4/",
  1206:   "/enterprise/2.15/v3/orgs/",
  1207:   "/enterprise/2.17/apps/quickstart-guides/setting-up-your-development-environment/",
  1208:   "/enterprise/2.17/program/",
  1209    "/enterprise/2.18/v3/users/emails/",
  1210    "/enterprise/2.19/v4/object/project/",
  1211:   "/enterprise/2.20/v3/guides/traversing-with-pagination/",
  1212    "/enterprise/2.20/v3/issues/events/",
  1213:   "/enterprise/2.4/guides/using-ssh-agent-forwarding/",
  1214    "/v3/events/",
  1215:   "/v3/users/#get-all-users",
  1216    "/v3/users/octocat",
  1217:   "/v4/enum/orgremovememberauditentryreason/",
  1218    "/v4/enum/securityadvisoryorderfield/",

  1222    "/v4/input_object/closeissueinput/",
  1223:   "/v4/input_object/regenerateenterpriseidentityproviderrecoverycodesinput/",
  1224    "/v4/input_object/updateissuecommentinput/",

  1226    "/v4/mutation/requestreviews/",
  1227:   "/v4/mutation/updateenterpriseactionexecutioncapabilitysetting/",
  1228    "/v4/object/branchprotectionruleconflictconnection/",
  1229    "/v4/object/commitcommentthread/",
  1230:   "/v4/object/commitedge/",
  1231    "/v4/object/createdissuecontributionconnection/",

  1233    "/v4/object/milestoneconnection/",
  1234:   "/v4/object/pullrequestcommitedge/",
  1235:   "/v4/object/pullrequestreviewcommentedge/",
  1236    "/v4/union/issueorpullrequest/",
  1237:   "/changes/9/",
  1238:   "/enterprise/2.17/apps/building-github-apps/authenticating-with-github-apps/",
  1239    "/enterprise/2.17/v3/reactions/",
  1240:   "/enterprise/2.17/webhooks/configuring/",
  1241:   "/enterprise/2.18/changes/2016-04-04-git-signing-api-preview/",
  1242    "/enterprise/2.18/v3/reactions/",
  1243:   "/enterprise/2.18/v4/object/organization/",
  1244    "/enterprise/2.19/v3/checks/suites/",
  1245:   "/enterprise/2.19/v3/enterprise-admin/global_webhooks/",
  1246    "/enterprise/2.19/v3/enterprise-admin/repo_pre_receive_hooks/",
  1247:   "/enterprise/2.19/v3/guides/traversing-with-pagination/",
  1248    "/enterprise/2.19/v3/projects/cards/",
  1249:   "/enterprise/2.20/apps/managing-oauth-apps/",
  1250:   "/enterprise/2.20/apps/managing-oauth-apps/troubleshooting-authorization-request-errors/",
  1251    "/enterprise/2.20/v4/interface/node/",
  1252    "/enterprise/2.8/v3/repos/statuses/",
  1253:   "/v4/changelog/2020-01-09-schema-changes/",
  1254:   "/v4/changelog/25/",
  1255    "/v4/enum/defaultrepositorypermissionfield/",

  1260    "/v4/input_object/createdeploymentstatusinput/",
  1261:   "/v4/input_object/gistorder/",
  1262    "/v4/input_object/updateprojectinput/",

  1264    "/v4/mutation/deleteteamdiscussion/",
  1265:   "/v4/mutation/removeassigneesfromassignable/",
  1266    "/v4/mutation/updatechecksuitepreferences/",
  1267:   "/v4/object/fundinglink/",
  1268    "/v4/object/memberscandeletereposenableauditentry/",
  1269:   "/v4/object/orgupdatememberauditentry/",
  1270:   "/v4/object/privaterepositoryforkingdisableauditentry/",
  1271:   "/v4/object/pullrequesttimelineitemsedge/",
  1272    "/v4/object/teamaddmemberauditentry/",

  1274    "/v4/union/ipallowlistowner/",
  1275:   "/changes/13/",
  1276:   "/changes/2014-01-07-upcoming-change-to-default-media-type/",
  1277    "/enterprise/2.11/v4/object/pullrequestreviewcomment/",
  1278:   "/enterprise/2.12/apps/building-oauth-apps/authorizing-oauth-apps/",
  1279    "/enterprise/2.14/v3/enterprise-admin/users/",
  1280    "/enterprise/2.17/v3/versions/",
  1281:   "/enterprise/2.17/v4/guides/using-global-node-ids/",
  1282    "/enterprise/2.17/v4/mutation/createpullrequest/",
  1283    "/enterprise/2.17/v4/object/pullrequest/",
  1284:   "/enterprise/2.17/webhooks/securing/",
  1285:   "/enterprise/2.18/apps/installing-github-apps/",
  1286:   "/enterprise/2.18/v4/guides/using-global-node-ids/",
  1287    "/enterprise/2.18/v4/mutation/",
  1288:   "/enterprise/2.19/apps/building-github-apps/creating-github-apps-using-url-parameters/",
  1289:   "/enterprise/2.19/apps/managing-github-apps/",
  1290:   "/enterprise/2.19/apps/quickstart-guides/creating-ci-tests-with-the-checks-api/",
  1291:   "/enterprise/2.19/program/",
  1292:   "/enterprise/2.19/v3/activity/watching/",
  1293:   "/enterprise/2.19/v3/repos/merging/",
  1294    "/enterprise/2.19/v3/versions/",
  1295    "/enterprise/2.19/v4/object/issue/",
  1296:   "/enterprise/2.20/v3/guides/discovering-resources-for-a-user/",
  1297:   "/enterprise/2.20/v3/troubleshooting/",
  1298    "/enterprise/2.20/v4/input_object/",
  1299    "/v3/activity/event_objects/",
  1300:   "/v4/enum/enterpriseenableddisabledsettingvalue/",
  1301    "/v4/enum/repositoryprivacy/",

  1308    "/v4/mutation/unfollowuser/",
  1309:   "/v4/mutation/updateenterpriseallowprivaterepositoryforkingsetting/",
  1310:   "/v4/object/gistcomment/",
  1311    "/v4/object/memberscandeletereposdisableauditentry/",
  1312:   "/v4/object/orgblockuserauditentry/",
  1313:   "/v4/object/orgremovebillingmanagerauditentry/",
  1314:   "/v4/object/releaseedge/",
  1315    "/v4/object/teamrepositoryconnection/",

  1317    "/v4/union/createdissueorrestrictedcontribution/",
  1318:   "/changes/2019-03-14-enabling-disabling-pages/",
  1319:   "/changes/25/",
  1320:   "/changes/28/",
  1321    "/enterprise/2.12/v3/repos/statuses/",

  1327    "/enterprise/2.17/v3/issues/comments/",
  1328:   "/enterprise/2.18/v3/enterprise-admin/management_console/",
  1329    "/enterprise/2.18/v4/object/contributionscollection/",

  1334    "/enterprise/2.19/v4/object/pullrequestreview/",
  1335:   "/enterprise/2.20/apps/migrating-oauth-apps-to-github-apps/",
  1336    "/enterprise/2.20/v3/repos/comments/",

  1338    "/v3/)",
  1339:   "/v3/oauth/oauth_endpoints(\"github\")",
  1340    "/v3/users/elie",
  1341    "/v4/enum/checkannotationlevel/",
  1342:   "/v4/enum/organizationmemberrole/",
  1343    "/v4/enum/securityvulnerabilityorderfield/",

  1353    "/v4/object/disconnectedevent/",
  1354:   "/v4/object/externalidentityedge/",
  1355:   "/v4/object/followingconnection/",
  1356:   "/v4/object/joinedgithubcontribution/",
  1357    "/v4/object/lockedevent/",
  1358:   "/v4/object/orgconfigdisablecollaboratorsonlyauditentry/",
  1359:   "/v4/object/orgcreateauditentry/",
  1360:   "/v4/object/orgoauthappaccessapprovedauditentry/",
  1361:   "/v4/object/pushallowanceedge/",
  1362    "/v4/object/sponsorshipconnection/",

  1364    "/v4/object/teamremovememberauditentry/",
  1365:   "/apps/building-integrations/setting-up-and-registering-oauth-apps/troubleshooting-oauth-app-access-token-request-errors/",
  1366    "/enterprise/2.11/v3/repos/",
  1367    "/enterprise/2.13/v3/auth/",
  1368:   "/enterprise/2.14/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/",
  1369:   "/enterprise/2.16/apps/building-oauth-apps/authorizing-oauth-apps/",
  1370:   "/enterprise/2.17/apps/building-github-apps/identifying-and-authorizing-users-for-github-apps/",
  1371:   "/enterprise/2.17/v4/guides/resource-limitations/",
  1372    "/enterprise/2.17/v4/object/user/",
  1373:   "/enterprise/2.18/v3/git/trees/",
  1374:   "/enterprise/2.18/v3/guides/basics-of-authentication/",
  1375    "/enterprise/2.18/v3/repos/deployments/",

  1377    "/enterprise/2.19/v4/object/pullrequestreviewconnection/",
  1378:   "/enterprise/2.20/apps/managing-oauth-apps/deleting-an-oauth-app/",
  1379:   "/enterprise/2.20/apps/using-content-attachments/",
  1380:   "/enterprise/2.20/v3/activity/watching/",
  1381:   "/enterprise/2.20/v3/enterprise-admin/org_pre_receive_hooks/",
  1382:   "/enterprise/2.20/v3/guides/best-practices-for-integrators/",
  1383    "/enterprise/2.20/v4/object/blob/",

  1385    "/repos",
  1386:   "/v3/orgs/octokit/repos",
  1387    "/v4/enum/deploymentorderfield/",
  1388:   "/v4/enum/packagetype/",
  1389    "/v4/enum/projecttemplate/",
  1390    "/v4/input_object/addpullrequestreviewcommentinput/",
  1391:   "/v4/input_object/checkrunoutputimage/",
  1392    "/v4/input_object/deleteipallowlistentryinput/",
  1393    "/v4/input_object/minimizecommentinput/",
  1394:   "/v4/input_object/registrypackagemetadatum/",
  1395:   "/v4/input_object/removeassigneesfromassignableinput/",
  1396    "/v4/mutation/createipallowlistentry/",

  1403    "/v4/object/enterpriseserverinstallation/",
  1404:   "/v4/object/projectedge/",
  1405:   "/v4/object/registrypackagefile/",
  1406    "/v4/object/repoaddmemberauditentry/",

  1408    "/v4/search/",
  1409:   "/changes/2017-11-08-archiving-repositories/",
  1410:   "/enterprise/2.16/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/",
  1411:   "/enterprise/2.17/v3/git/commits/",
  1412:   "/enterprise/2.17/v3/git/trees/",
  1413    "/enterprise/2.17/v3/repos/statistics/",
  1414    "/enterprise/2.18/marketplace/",
  1415:   "/enterprise/2.18/v3/git/blobs/",
  1416:   "/enterprise/2.18/v3/guides/traversing-with-pagination/",
  1417    "/enterprise/2.18/v4/union/pullrequesttimelineitem/",
  1418:   "/enterprise/2.19/apps/managing-oauth-apps/",
  1419:   "/enterprise/2.19/apps/managing-oauth-apps/troubleshooting-oauth-app-access-token-request-errors/",
  1420    "/enterprise/2.19/v3/meta/",

  1422    "/enterprise/2.19/v3/teams/members/",
  1423:   "/enterprise/2.19/v4/guides/managing-enterprise-accounts/",
  1424    "/enterprise/2.19/v4/interface/",

  1426    "/enterprise/2.19/v4/object/user/",
  1427:   "/enterprise/2.20/apps/building-github-apps/setting-permissions-for-github-apps/",
  1428:   "/enterprise/2.20/apps/managing-github-apps/",
  1429:   "/enterprise/2.20/apps/managing-github-apps/editing-a-github-app-s-permissions/",
  1430:   "/enterprise/2.20/apps/managing-github-apps/making-a-github-app-public-or-private/",
  1431:   "/enterprise/2.20/changes/2020-04-15-replacing-the-installation-and-installation-repositories-events/",
  1432    "/enterprise/2.20/v4/object/team/",
  1433    "/Monika-After-Story/MonikaModDev/issues/5691",
  1434:   "/pages-demo/developer-pages/",
  1435    "/v2/repos/",

  1442    "/v4/input_object/milestoneorder/",
  1443:   "/v4/input_object/packagefileorder/",
  1444    "/v4/input_object/updatecheckruninput/",
  1445    "/v4/mutation/inviteenterpriseadmin/",
  1446:   "/v4/mutation/updateenterpriserepositoryprojectssetting/",
  1447    "/v4/object/commentdeletedevent/",
  1448    "/v4/object/createdissuecontribution/",
  1449:   "/v4/object/orgaddbillingmanagerauditentry/",
  1450:   "/v4/object/orgconfigenablecollaboratorsonlyauditentry/",
  1451:   "/v4/object/orgoauthappaccessdeniedauditentry/",
  1452:   "/v4/object/privaterepositoryforkingenableauditentry/",
  1453    "/v4/object/profileitemshowcase/",

  1456    "/v4/object/restrictedcontribution/",
  1457:   "/changes/2014-08-05-team-memberships-api/",
  1458:   "/changes/2015-07-21-automatic-redirects-for-renamed-repositories/",
  1459:   "/changes/2016-10-27-new-label-and-milestone-webhooks/",
  1460:   "/enterprise/2.11/v3/git/trees/",
  1461    "/enterprise/2.11/v3/repos/statuses/",

  1463    "/enterprise/2.12/v3/",
  1464:   "/enterprise/2.14/v3/orgs/",
  1465    "/enterprise/2.16/v3/enterprise-admin/admin_stats/",

  1467    "/enterprise/2.16/v4/",
  1468:   "/enterprise/2.16/v4/guides/forming-calls/",
  1469:   "/enterprise/2.17/apps/quickstart-guides/",
  1470:   "/enterprise/2.17/marketplace/getting-started/requirements-for-listing-an-app-on-github-marketplace/",
  1471    "/enterprise/2.17/partnerships/",

  1473    "/enterprise/2.17/v3/users/emails/",
  1474:   "/enterprise/2.17/v4/changelog/",
  1475:   "/enterprise/2.17/v4/interface/gitobject/",
  1476    "/enterprise/2.17/v4/object/",

  1478    "/enterprise/2.18/v3/apps/installations/",
  1479:   "/enterprise/2.18/v3/gists/",
  1480    "/enterprise/2.18/v3/issues/labels/",
  1481:   "/enterprise/2.18/v4/changelog/",
  1482    "/enterprise/2.18/v4/object/userconnection/",
  1483:   "/enterprise/2.19/apps/building-oauth-apps/creating-custom-badges-for-oauth-apps/",
  1484:   "/enterprise/2.19/apps/using-content-attachments/",
  1485    "/enterprise/2.19/partnerships/",
  1486:   "/enterprise/2.19/v3/activity/starring/",
  1487    "/enterprise/2.19/v3/enterprise-admin/ldap/",
  1488:   "/enterprise/2.19/v3/enterprise-admin/search_indexing/",
  1489    "/enterprise/2.19/v3/repos/keys/",
  1490:   "/enterprise/2.19/v4/scalar/string/",
  1491:   "/enterprise/2.20/changes/2020-05-01-suspending-a-github-app-installation/",
  1492    "/enterprise/2.20/v3/actions/",

  1500    "/v4/enum/commitcontributionorderfield/",
  1501:   "/v4/enum/orgremovebillingmanagerauditentryreason/",
  1502    "/v4/input_object/addpullrequestreviewthreadinput/",

  1511    "/v4/mutation/setenterpriseidentityprovider/",
  1512:   "/v4/mutation/updateenterprisememberscancreaterepositoriessetting/",
  1513:   "/v4/object/branchprotectionruleedge/",
  1514    "/v4/object/checksuiteconnection/",
  1515    "/v4/object/createdrepositorycontribution/",
  1516:   "/v4/object/dependencygraphdependencyedge/",
  1517    "/v4/object/headrefforcepushedevent/",
  1518:   "/v4/object/orgdisableoauthapprestrictionsauditentry/",
  1519:   "/v4/object/orgremoveoutsidecollaboratorauditentry/",
  1520:   "/v4/object/orgupdatememberrepositorycreationpermissionauditentry/",
  1521:   "/v4/object/orgupdatememberrepositoryinvitationpermissionauditentry/",
  1522:   "/v4/object/packageedge/",
  1523:   "/v4/object/projectcolumnedge/",
  1524    "/v4/object/referencedevent/",
  1525:   "/v4/object/repoconfigdisableanonymousgitaccessauditentry/",
  1526    "/v4/object/reviewdismissalallowance/",
  1527:   "/v4/object/securityadvisoryedge/",
  1528    "/v4/object/unlabeledevent/",

  1530    "/v4/object/usercontenteditconnection/",
  1531:   "/v4/reference/object/organization/",
  1532    "/v4/union/createdrepositoryorrestrictedcontribution/",
  1533:   "/v4/union/permissiongranter/",
  1534    "/v4/union/reviewdismissalallowanceactor/",

  1537    "/enterprise/2.11/v4/object/",
  1538:   "/enterprise/2.13/v3/orgs/",
  1539:   "/enterprise/2.15/apps/building-oauth-apps/authorizing-oauth-apps/",
  1540    "/enterprise/2.15/v3/enterprise-admin/",

  1544    "/enterprise/2.16/v3/search/",
  1545:   "/enterprise/2.17/v3/guides/delivering-deployments/",
  1546:   "/enterprise/2.17/v3/guides/getting-started/",
  1547    "/enterprise/2.17/v4/mutation/",
  1548:   "/enterprise/2.17/v4/object/organizationconnection/",
  1549    "/enterprise/2.17/v4/object/team/",
  1550    "/enterprise/2.17/v4/object/userconnection/",
  1551:   "/enterprise/2.18/apps/quickstart-guides/setting-up-your-development-environment/",
  1552    "/enterprise/2.18/v3/enterprise-admin/ldap/",

  1554    "/enterprise/2.18/v4/object/createdpullrequestcontributionconnection/",
  1555:   "/enterprise/2.19/apps/managing-github-apps/editing-a-github-app-s-permissions/",
  1556:   "/enterprise/2.19/changes/2018-04-25-github-services-deprecation/",
  1557    "/enterprise/2.19/v4/object/commit/",

  1559    "/enterprise/2.19/v4/object/userconnection/",
  1560:   "/enterprise/2.20/apps/building-github-apps/creating-github-apps-using-url-parameters/",
  1561:   "/enterprise/2.20/changes/2020-03-20-temporary-graphql-explorer-downtime/",
  1562:   "/enterprise/2.20/marketplace/getting-started/security-review-process/",
  1563:   "/enterprise/2.20/v3/guides/building-a-ci-server/",
  1564    "/enterprise/2.20/v3/issues/milestones/",
  1565:   "/enterprise/2.20/v3/orgs/outside_collaborators/",
  1566    "/enterprise/2.20/v3/repos/forks/",

  1568    "/enterprise/2.20/v3/users/followers/",
  1569:   "/enterprise/2.20/v3/users/gpg_keys/",
  1570:   "/enterprise/2.20/v4/object/organizationmemberconnection/",
  1571    "/enterprise/2.20/v4/scalar/",

  1574    "/enterprise/2.3/v3/users/administration/",
  1575:   "/graphql",
  1576    "/repos/",

  1582    "/v4/enum/enterpriseuseraccountmembershiprole/",
  1583:   "/v4/enum/fundingplatform/",
  1584    "/v4/enum/labelorderfield/",
  1585    "/v4/input_object/createchecksuiteinput/",
  1586:   "/v4/input_object/createenterpriseorganizationinput/",
  1587    "/v4/input_object/enterpriseadministratorinvitationorder/",

  1593    "/v4/object/createdpullrequestcontributionconnection/",
  1594:   "/v4/object/deploymentenvironmentchangedevent/",
  1595:   "/v4/object/gistconnection/",
  1596    "/v4/object/issuecontributionsbyrepository/",
  1597:   "/v4/object/orgunblockuserauditentry/",
  1598    "/v4/object/repodestroyauditentry/",
  1599:   "/v4/object/repositoryvulnerabilityalertedge/",
  1600    "/v4/object/submoduleconnection/",
  1601:   "/v4/object/teamchangeparentteamauditentry/",
  1602:   "/v4/object/textmatchhighlight/",
  1603    "/v4/union/createdpullrequestorrestrictedcontribution/",

  1607    "/webhooks/types/",
  1608:   "/changes/2012-12-10-Diff-and-patch-media-types/",
  1609:   "/changes/2016-09-14-projects-api/",
  1610:   "/changes/23/",
  1611:   "/changes/null",
  1612:   "/enterprise/2.13/v3/orgs/members/",
  1613    "/enterprise/2.13/v4/",
  1614:   "/enterprise/2.13/v4/guides/forming-calls/",
  1615    "/enterprise/2.15/v3/activity/events/types/",

  1617    "/enterprise/2.15/v4/query/",
  1618:   "/enterprise/2.15/webhooks/securing/",
  1619    "/enterprise/2.16/apps/about-apps/",

  1624    "/enterprise/2.16/v3/repos/hooks/",
  1625:   "/enterprise/2.17/apps/building-github-apps/creating-a-github-app/",
  1626:   "/enterprise/2.17/apps/quickstart-guides/using-the-github-api-in-your-app/",
  1627:   "/enterprise/2.17/changes/2020-03-20-temporary-graphql-explorer-downtime/",
  1628    "/enterprise/2.17/v3/enterprise-admin/license/",
  1629:   "/enterprise/2.17/v3/gists/",
  1630:   "/enterprise/2.17/v3/guides/basics-of-authentication/",
  1631    "/enterprise/2.17/v3/teams/members/",

  1634    "/enterprise/2.17/v4/object/teammemberconnection/",
  1635:   "/enterprise/2.17/v4/scalar/string/",
  1636:   "/enterprise/2.18/apps/building-oauth-apps/creating-custom-badges-for-oauth-apps/",
  1637:   "/enterprise/2.18/program/",
  1638:   "/enterprise/2.18/v3/enterprise-admin/global_webhooks/",
  1639:   "/enterprise/2.18/v3/troubleshooting/",
  1640    "/enterprise/2.18/v4/object/createdpullrequestcontribution/",
  1641    "/enterprise/2.18/v4/scalar/id/",
  1642:   "/enterprise/2.19/apps/building-github-apps/creating-github-apps-from-a-manifest/",
  1643:   "/enterprise/2.19/v3/guides/discovering-resources-for-a-user/",
  1644    "/enterprise/2.19/v3/issues/timeline/",
  1645:   "/enterprise/2.19/v4/object/organization/",
  1646    "/enterprise/2.19/v4/object/projectcard/",

  1649    "/enterprise/2.19/v4/union/projectcarditem/",
  1650:   "/enterprise/2.20/apps/building-github-apps/creating-github-apps-from-a-manifest/",
  1651:   "/enterprise/2.20/apps/managing-oauth-apps/troubleshooting-oauth-app-access-token-request-errors/",
  1652:   "/enterprise/2.20/apps/quickstart-guides/creating-ci-tests-with-the-checks-api/",
  1653:   "/enterprise/2.20/changes/2020-02-14-deprecating-password-auth/",
  1654:   "/enterprise/2.20/marketplace/getting-started/",
  1655    "/enterprise/2.20/v3/activity/feeds/",
  1656:   "/enterprise/2.20/v4/interface/gitobject/",
  1657:   "/enterprise/2.20/v4/object/organizationedge/",
  1658    "/enterprise/2.20/v4/scalar/datetime/",

  1663    "/v3/search/issues",
  1664:   "/v4/changelog/1/",
  1665:   "/v4/changelog/2020-01-06-schema-changes/",
  1666:   "/v4/changelog/2020-02-05-schema-changes/",
  1667:   "/v4/changelog/4/",
  1668    "/v4/enum/enterpriseadministratorinvitationorderfield/",
  1669:   "/v4/enum/organizationinvitationrole/",
  1670:   "/v4/enum/orgremovememberauditentrymembershiptype/",
  1671:   "/v4/enum/pullrequestmergemethod/",
  1672    "/v4/enum/pullrequestreviewcommentstate/",

  1682    "/v4/input_object/removestarinput/",
  1683:   "/v4/input_object/updateenterpriserepositoryprojectssettinginput/",
  1684    "/v4/input_object/updatelabelinput/",

  1686    "/v4/mutation/createteamdiscussion/",
  1687:   "/v4/mutation/removeenterpriseorganization/",
  1688:   "/v4/mutation/updateenterprisedefaultrepositorypermissionsetting/",
  1689:   "/v4/mutation/updateenterprisememberscanmakepurchasessetting/",
  1690:   "/v4/mutation/updateenterpriseorganizationprojectssetting/",
  1691    "/v4/mutation/updateprojectcolumn/",

  1693    "/v4/object/enterpriserepositoryinfo/",
  1694:   "/v4/object/orgdisablesamlauditentry/",
  1695:   "/v4/object/orginvitetobusinessauditentry/",
  1696:   "/v4/object/pinnableitemedge/",
  1697:   "/v4/object/pullrequesttimelineitemedge/",
  1698:   "/v4/object/repoconfigenablecontributorsonlyauditentry/",
  1699    "/v4/object/subscribedevent/",
  1700    "/v4/repos/branches/",
  1701:   "/v4/union/orgrestorememberauditentrymembership/",
  1702    "/v5/explorer/",
  1703:   "/apps/works-with-github/",
  1704:   "/changes/11/",
  1705:   "/changes/2013-04-25-deprecating-merge-commit-sha/",
  1706:   "/changes/2013-09-03-two-factor-authentication/",
  1707:   "/changes/2014-02-24-finer-grained-scopes-for-ssh-keys/",
  1708:   "/changes/2016-02-24-commit-reference-sha-api/",
  1709:   "/changes/2018-02-22-label-description-search-preview/",
  1710:   "/changes/26/",
  1711:   "/enterprise/2.11/v4/guides/forming-calls/",
  1712    "/enterprise/2.12/v3/auth/",
  1713    "/enterprise/2.13/apps/about-apps/",
  1714:   "/enterprise/2.14/apps/building-github-apps/",
  1715    "/enterprise/2.15/v3/enterprise-admin/admin_stats/",
  1716    "/enterprise/2.15/v3/users/",
  1717:   "/enterprise/2.15/v4/guides/intro-to-graphql/",
  1718    "/enterprise/2.16/v3/pulls/review_requests/",
  1719    "/enterprise/2.16/v3/reactions/",
  1720:   "/enterprise/2.17/v3/guides/discovering-resources-for-a-user/",
  1721    "/enterprise/2.17/v4/mutation/addcomment/",

  1723    "/enterprise/2.17/v4/object/refconnection/",
  1724:   "/enterprise/2.18/apps/managing-github-apps/",
  1725:   "/enterprise/2.18/apps/managing-oauth-apps/troubleshooting-authorization-request-errors/",
  1726    "/enterprise/2.18/partnerships/",
  1727    "/enterprise/2.18/v3/apps/available-endpoints/",
  1728:   "/enterprise/2.18/v3/guides/delivering-deployments/",
  1729    "/enterprise/2.18/v3/projects/cards/",
  1730:   "/enterprise/2.18/v4/breaking_changes/",
  1731    "/enterprise/2.18/v4/input_object/createrepositoryinput/",

  1736    "/enterprise/2.19/v4/object/ref/",
  1737:   "/enterprise/2.19/v4/object/searchresultitemedge/",
  1738:   "/enterprise/2.20/apps/managing-oauth-apps/modifying-an-oauth-app/",
  1739:   "/enterprise/2.20/apps/managing-oauth-apps/transferring-ownership-of-an-oauth-app/",
  1740:   "/enterprise/2.20/changes/2016-04-04-git-signing-api-preview/",
  1741    "/enterprise/2.20/v3/checks/suites/",
  1742    "/enterprise/2.20/v3/enterprise-admin/pre_receive_environments/",
  1743:   "/enterprise/2.20/v3/guides/rendering-data-as-graphs/",
  1744:   "/enterprise/2.20/v3/guides/using-ssh-agent-forwarding/",
  1745    "/enterprise/2.20/v4/mutation/addreaction/",

  1751    "/enterprise/2.8/webhooks/",
  1752:   "/user/orgs",
  1753    "/v3/repos/rocketseat",

  1755    "/v3/users/aryahari",
  1756:   "/v4/enum/enterprisedefaultrepositorypermissionsettingvalue/",
  1757:   "/v4/enum/gitsignaturestate/",
  1758    "/v4/enum/projectcardarchivedstate/",

  1760    "/v4/enum/reactionorderfield/",
  1761:   "/v4/enum/registrypackagetype/",
  1762    "/v4/enum/teamrepositoryorderfield/",
  1763:   "/v4/guides/forming-calls/null",
  1764:   "/v4/guides/intro-to-graphql/null",
  1765    "/v4/input_object/commitcontributionorder/",

  1769    "/v4/input_object/enterpriseserveruseraccountsuploadorder/",
  1770:   "/v4/input_object/packageorder/",
  1771    "/v4/input_object/teammemberorder/",
  1772:   "/v4/input_object/updateenterpriseallowprivaterepositoryforkingsettinginput/",
  1773:   "/v4/input_object/updateenterpriseorganizationprojectssettinginput/",
  1774    "/v4/input_object/updateipallowlistentryinput/",
  1775:   "/v4/mutation/declinetopicsuggestion/",
  1776    "/v4/mutation/deletepullrequestreview/",

  1778    "/v4/mutation/unlinkrepositoryfromproject/",
  1779:   "/v4/mutation/updateenterprisememberscandeleteissuessetting/",
  1780:   "/v4/mutation/updateenterprisetwofactorauthenticationrequiredsetting/",
  1781    "/v4/mutation/updateteamdiscussioncomment/",
  1782:   "/v4/mutation/updateteamreviewassignment/",
  1783    "/v4/object/checkrunconnection/",

  1785    "/v4/object/enterpriseuseraccountconnection/",
  1786:   "/v4/object/gistcommentconnection/",
  1787:   "/v4/object/orgenableoauthapprestrictionsauditentry/",
  1788:   "/v4/object/orgenabletwofactorrequirementauditentry/",
  1789:   "/v4/object/orgoauthappaccessrequestedauditentry/",
  1790    "/v4/object/pinnedissue/",
  1791    "/v4/object/pullrequestcommitcommentthread/",
  1792:   "/v4/object/pullrequestreviewthreadedge/",
  1793:   "/v4/object/registrypackagedependency/",
  1794:   "/v4/object/registrypackagetagconnection/",
  1795:   "/v4/object/repoconfigdisablecontributorsonlyauditentry/",
  1796:   "/v4/object/stargazeredge/",
  1797    "/v4/object/submodule/",

  1799    "/v4/object/teamdiscussion/",
  1800:   "/v4/object/teamrepositoryedge/",
  1801:   "/v4/object/unassignedevent/",
  1802:   "/v4/object/userstatusedge/",
  1803    "/v4/repos/commits/",
  1804:   "/actions/creating-workflows/workflow-configuration-options",
  1805    "/api/v3",
  1806:   "/apps/managing-github-apps/suspending-a-github-app/",
  1807:   "/changes/10/",
  1808:   "/changes/12/",
  1809:   "/changes/17/",
  1810:   "/changes/19/",
  1811:   "/changes/2012-09-28-auto-init-for-repositories/",
  1812:   "/changes/2012-11-27-forking-to-organizations/",
  1813:   "/changes/2013-02-14-sortable-stars/",
  1814:   "/changes/2013-04-24-user-agent-required/",
  1815:   "/changes/2014-01-09-preview-the-new-deployments-api/",
  1816:   "/changes/2015-05-26-repository-redirects-are-coming/",
  1817:   "/changes/2019-09-05-apps-protected-branches-api/",
  1818:   "/changes/27/",
  1819    "/enterprise/2.11/v3/pulls/reviews/",

  1826    "/enterprise/2.14/v3/repos/",
  1827:   "/enterprise/2.15/v3/git/refs/",
  1828    "/enterprise/2.15/v3/issues/milestones/",

  1832    "/enterprise/2.17/v3/enterprise-admin/repo_pre_receive_hooks/",
  1833:   "/enterprise/2.17/v3/git/tags/",
  1834    "/enterprise/2.17/v3/issues/labels/",
  1835    "/enterprise/2.17/v3/meta/",
  1836:   "/enterprise/2.17/v3/orgs/hooks/",
  1837    "/enterprise/2.17/v3/repos/keys/",

  1839    "/enterprise/2.17/v4/object/ref/",
  1840:   "/enterprise/2.18/apps/managing-oauth-apps/",
  1841:   "/enterprise/2.18/apps/managing-oauth-apps/troubleshooting-oauth-app-access-token-request-errors/",
  1842:   "/enterprise/2.18/marketplace/getting-started/requirements-for-listing-an-app-on-github-marketplace/",
  1843:   "/enterprise/2.18/v3/guides/discovering-resources-for-a-user/",
  1844    "/enterprise/2.18/v3/issues/events/",

  1846    "/enterprise/2.18/v3/users/keys/",
  1847:   "/enterprise/2.18/v4/guides/resource-limitations/",
  1848    "/enterprise/2.18/v4/interface/actor/",

  1850    "/enterprise/2.18/v4/public_schema/",
  1851:   "/enterprise/2.19/apps/building-github-apps/setting-permissions-for-github-apps/",
  1852:   "/enterprise/2.19/apps/managing-oauth-apps/troubleshooting-authorization-request-errors/",
  1853:   "/enterprise/2.19/changes/2020-04-15-replacing-the-installation-and-installation-repositories-events/",
  1854:   "/enterprise/2.19/marketplace/getting-started/security-review-process/",
  1855:   "/enterprise/2.19/v4/changelog/",
  1856:   "/enterprise/2.19/v4/guides/resource-limitations/",
  1857    "/enterprise/2.19/v4/interface/actor/",

  1860    "/enterprise/2.19/v4/object/projectcardconnection/",
  1861:   "/enterprise/2.19/v4/object/projectedge/",
  1862    "/enterprise/2.19/v4/object/pullrequestconnection/",

  1865    "/enterprise/2.2/v3/repos/",
  1866:   "/enterprise/2.20/apps/managing-github-apps/modifying-a-github-app/",
  1867:   "/enterprise/2.20/changes/2020-03-23-ActionsGA/",
  1868:   "/enterprise/2.20/marketplace/selling-your-app/receiving-payment-for-github-marketplace-listings/",
  1869:   "/enterprise/2.20/partnerships/integration-partners/",
  1870:   "/enterprise/2.20/v3/activity/starring/",
  1871    "/enterprise/2.20/v3/issues/timeline/",

  1883    "/v3/authorise/",
  1884:   "/v3/guides/forming-calls/",
  1885    "/v3/repos/#list-all-public-repositories",
  1886:   "/v3/repos/tags",
  1887    "/v3/repositories/",

  1890    "/v4/apps/",
  1891:   "/v4/changelog/2019-12-16-schema-changes/",
  1892:   "/v4/enum/enterprisememberscanmakepurchasessettingvalue/",
  1893    "/v4/enum/enterpriseuserdeployment/",
  1894:   "/v4/enum/gistorderfield/",
  1895    "/v4/enum/reforderfield/",

  1901    "/v4/input_object/updateprojectcolumninput/",
  1902:   "/v4/interface/gitsignature/",
  1903    "/v4/interface/topicauditentrydata/",

  1906    "/v4/mutation/updateteamdiscussion/",
  1907:   "/v4/object/enterprisememberedge/",
  1908    "/v4/object/milestonedevent/",
  1909:   "/v4/object/orgenablesamlauditentry/",
  1910:   "/v4/object/orgrestorememberauditentry/",
  1911:   "/v4/object/orgupdatedefaultrepositorypermissionauditentry/",
  1912    "/v4/object/pinnedevent/",
  1913:   "/v4/object/registrypackagetag/",
  1914    "/v4/object/repoarchivedauditentry/",
  1915:   "/v4/object/repoconfigunlockanonymousgitaccessauditentry/",
  1916    "/v4/object/reviewdismissalallowanceconnection/",

  1921    "/v4/union/milestoneitem/",
  1922:   "/apps/ <https://developer.github.com/apps/",
  1923:   "/apps/building-oauau-apps/authorizing-oauau-apps/",
  1924:   "/apps/managing-github-a",
  1925:   "/apps/managing-oauth-apps/troubleshooting-authorization-request-errors/redirect-uri-mismatch",
  1926    "/apps/null",
  1927:   "/changes/14/",
  1928:   "/changes/2014-02-13-exposing-the-page-api/",
  1929:   "/changes/2014-12-12-replace-older-ssh-keys-created-by-your-application/",
  1930:   "/changes/2016-04-01-squash-api-preview/",
  1931:   "/changes/2016-10-11-pull-request-review-webhooks/",
  1932:   "/changes/2017-02-09-community-health/",
  1933:   "/changes/2018-05-23-request-actions-on-checks/",
  1934:   "/enterprise/2.1/v3/orgs/teams/",
  1935    "/enterprise/2.10/",
  1936:   "/enterprise/2.10/apps/building-oauth-apps/authorizing-oauth-apps/",
  1937    "/enterprise/2.10/v3/teams/",

  1944    "/enterprise/2.13/v3/teams/",
  1945:   "/enterprise/2.13/v4/guides/intro-to-graphql/",
  1946    "/enterprise/2.13/webhooks/",
  1947    "/enterprise/2.14/v3/pulls/",
  1948:   "/enterprise/2.15/apps/building-github-apps/",
  1949:   "/enterprise/2.15/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/",
  1950    "/enterprise/2.15/v3/issues/labels/",

  1953    "/enterprise/2.16/v3/enterprise-admin/",
  1954:   "/enterprise/2.16/v3/git/",
  1955    "/enterprise/2.16/v3/repos/releases/",
  1956:   "/enterprise/2.16/v4/guides/intro-to-graphql/",
  1957:   "/enterprise/2.17/apps/building-github-apps/creating-github-apps-using-url-parameters/",
  1958:   "/enterprise/2.17/apps/building-oauth-apps/creating-an-oauth-app/",
  1959:   "/enterprise/2.17/apps/managing-oauth-apps/deleting-an-oauth-app/",
  1960:   "/enterprise/2.17/changes/2016-04-04-git-signing-api-preview/",
  1961:   "/enterprise/2.17/changes/2020-04-07-expanding-rest-api-support-for-the-triage-and-maintain-roles/",
  1962:   "/enterprise/2.17/changes/2020-04-15-replacing-create-installation-access-token-endpoint/",
  1963:   "/enterprise/2.17/v3/activity/watching/",
  1964    "/enterprise/2.17/v3/apps/installations/",
  1965:   "/enterprise/2.17/v3/git/blobs/",
  1966:   "/enterprise/2.17/v3/guides/best-practices-for-integrators/",
  1967:   "/enterprise/2.17/v3/guides/replacing-github-services/",
  1968:   "/enterprise/2.17/v3/issues/assignees/",
  1969    "/enterprise/2.17/v3/repos/deployments/",
  1970    "/enterprise/2.17/v3/repos/downloads/",
  1971:   "/enterprise/2.17/v3/repos/merging/",
  1972    "/enterprise/2.17/v4/enum/searchtype/",

  1974    "/enterprise/2.17/v4/object/searchresultitemconnection/",
  1975:   "/enterprise/2.17/v4/object/teammemberedge/",
  1976:   "/enterprise/2.17/webhooks/testing/",
  1977:   "/enterprise/2.18/apps/building-github-apps/setting-permissions-for-github-apps/",
  1978:   "/enterprise/2.18/changes/2020-03-23-ActionsGA/",
  1979:   "/enterprise/2.18/changes/2020-04-07-expanding-rest-api-support-for-the-triage-and-maintain-roles/",
  1980    "/enterprise/2.18/v3/enterprise-admin/repo_pre_receive_hooks/",
  1981:   "/enterprise/2.18/v3/issues/assignees/",
  1982    "/enterprise/2.18/v3/issues/milestones/",

  1986    "/enterprise/2.18/v4/object/pullrequesttimelineconnection/",
  1987:   "/enterprise/2.19/apps/building-intergation",
  1988    "/enterprise/2.19/v3\"",
  1989:   "/enterprise/2.19/v3/guides/building-a-ci-server/",
  1990    "/enterprise/2.19/v3/issues/milestones/",

  1992    "/enterprise/2.19/v4/mutation/addreaction/",
  1993:   "/enterprise/2.19/v4/object/pageinfo/",
  1994    "/enterprise/2.19/v4/scalar/boolean/",
  1995:   "/enterprise/2.20/changes/2018-10-18-github-api-development-and-support/",
  1996:   "/enterprise/2.20/marketplace/integrating-with-the-github-marketplace-api/github-marketplace-webhook-events/",
  1997:   "/enterprise/2.20/marketplace/integrating-with-the-github-marketplace-api/handling-new-purchases-and-free-trials/",
  1998:   "/enterprise/2.20/marketplace/listing-on-github-marketplace/",
  1999:   "/enterprise/2.20/v3/gists/comments/",
  2000:   "/enterprise/2.20/v3/issues/assignees/",
  2001    "/enterprise/2.20/v3/projects/columns/",
  2002:   "/enterprise/2.20/v3/search/legacy/",
  2003    "/enterprise/2.20/v3/teams/discussions/",

  2007    "/enterprise/2.20/v4/scalar/boolean/",
  2008:   "/enterprise/2.4/v3/git/refs/",
  2009    "/enterprise/2.4/v3/search/",
  2010    "/enterprise/2.5/v3/pulls/",
  2011:   "/graphql/",
  2012    "/machin3io/MACHIN3tools",
  2013:   "/orgs/octokit/repos",
  2014    "/rate_limit",
  2015    "/user/repos",
  2016:   "/v2/git/tags/",
  2017    "/v3/repos/push/",
  2018:   "/v3/repos/tags/",
  2019    "/v3/search/#search-users",
  2020    "/v3/user/repos",
  2021:   "/v3/users/#get-a-single-user",
  2022    "/v3/users/lbdalmendray/repos",
  2023    "/v34",
  2024:   "/v4/changelog/2019-03-30-schema-changes/",
  2025:   "/v4/changelog/2020-02-19-schema-changes/",
  2026:   "/v4/changelog/24/",
  2027:   "/v4/enum/enterpriseenabledsettingvalue/",
  2028    "/v4/enum/enterprisememberorderfield/",

  2031    "/v4/enum/milestonestate/",
  2032:   "/v4/enum/organizationorderfield/",
  2033:   "/v4/enum/orgcreateauditentrybillingplan/",
  2034    "/v4/enum/projectcardstate/",

  2038    "/v4/enum/teamprivacy/",
  2039:   "/v4/enum/teamreviewassignmentalgorithm/",
  2040    "/v4/enum/userblockduration/",
  2041:   "/v4/gists/",
  2042:   "/v4/graphql",
  2043:   "/v4/input_object/packageversionorder/",
  2044    "/v4/input_object/reopenissueinput/",

  2046    "/v4/input_object/updatechecksuitepreferencesinput/",
  2047:   "/v4/input_object/updateenterprisedefaultrepositorypermissionsettinginput/",
  2048:   "/v4/input_object/updateipallowlistenabledsettinginput/",
  2049    "/v4/input_object/updateteamdiscussioninput/",

  2053    "/v4/mutation/removeenterpriseidentityprovider/",
  2054:   "/v4/mutation/updateenterprisememberscandeleterepositoriessetting/",
  2055:   "/v4/mutation/updateenterpriseteamdiscussionssetting/",
  2056    "/v4/oauth_authorizations/",

  2058    "/v4/object/demilestonedevent/",
  2059:   "/v4/object/deploymentedge/",
  2060    "/v4/object/headrefrestoredevent/",
  2061    "/v4/object/mentionedevent/",
  2062:   "/v4/object/orgdisabletwofactorrequirementauditentry/",
  2063:   "/v4/object/packagefileconnection/",
  2064    "/v4/object/reopenedevent/",
  2065    "/v4/object/repoaddtopicauditentry/",
  2066:   "/v4/object/repoconfigdisablecollaboratorsonlyauditentry/",
  2067:   "/v4/object/repoconfigdisablesockpuppetdisallowedauditentry/",
  2068    "/v4/object/reporemovetopicauditentry/",
  2069:   "/v4/object/repositorytopicedge/",
  2070:   "/v4/object/repositoryvisibilitychangedisableauditentry/",
  2071    "/v4/object/reviewstatushovercardcontext/",
  2072    "/v4/object/starredrepositoryconnection/",
  2073:   "/v4/object/suggestedreviewer/",
  2074    "/v4/object/userblockedevent/",

  2081    "/api/v3/",
  2082:   "/apps/building",
  2083:   "/apps/building-github-apps/authenticating-with-github-apps/null",
  2084    "/baidu.com",
  2085    "/baidu.com/",
  2086:   "/changes/16/",
  2087:   "/changes/20/",
  2088:   "/changes/2012-12-04-List-comments-for-repo/",
  2089:   "/changes/2016-03-17-the-451-status-code-is-now-supported/",
  2090:   "/changes/2016-06-27-protected-branches-api-update/",
  2091:   "/changes/2018-04-06-self-serve-onboarding/",
  2092:   "/changes/2019-07-16-repository-templates-api/",
  2093:   "/changes/2019-12-05-gdp-deprecation/",
  2094:   "/changes/2020-02-03-stale-conclusion/",
  2095:   "/changes/2020-04-22-github-apps-user-tokens-expiring/",
  2096:   "/changes/2020-04-28-github-apps-user-access-tokens-expiring/",
  2097:   "/enterprise/2.10/v3/git/refs/",
  2098    "/enterprise/2.10/v3/oauth_authorizations/",
  2099:   "/enterprise/2.10/v3/orgs/",
  2100:   "/enterprise/2.10/v4/guides/intro-to-graphql/",
  2101:   "/enterprise/2.11/v3/enterprise-admin/management_console/",
  2102    "/enterprise/2.11/v3/enterprise-admin/users/",
  2103:   "/enterprise/2.11/v3/git/",
  2104    "/enterprise/2.11/v4/interface/node/",

  2112    "/enterprise/2.14/v3/search/",
  2113:   "/enterprise/2.14/v4/guides/intro-to-graphql/",
  2114    "/enterprise/2.15/v3/apps/permissions/",
  2115:   "/enterprise/2.15/v3/guides/",
  2116    "/enterprise/2.15/v3/repos/commits/",

  2118    "/enterprise/2.15/v3/search/",
  2119:   "/enterprise/2.15/v4/guides/forming-calls/",
  2120:   "/enterprise/2.15/v4/guides/migrating-from-rest/",
  2121    "/enterprise/2.16/v3/checks/",
  2122:   "/enterprise/2.16/v3/git/blobs/",
  2123:   "/enterprise/2.16/v3/git/refs/",
  2124    "/enterprise/2.16/v3/projects/cards/",
  2125    "/enterprise/2.16/v3/repos/branches/",
  2126:   "/enterprise/2.16/v3/repos/merging/",
  2127    "/enterprise/2.16/v3/users/",
  2128:   "/enterprise/2.16/webhooks/securing/",
  2129:   "/enterprise/2.17/apps/building-github-apps/creating-custom-badges-for-github-apps/",
  2130:   "/enterprise/2.17/apps/managing-github-apps/",
  2131:   "/enterprise/2.17/changes/2020-02-14-deprecating-password-auth/",
  2132:   "/enterprise/2.17/changes/2020-04-15-replacing-the-installation-and-installation-repositories-events/",
  2133    "/enterprise/2.17/v3\"",

  2135    "/enterprise/2.17/v3/checks/suites/",
  2136:   "/enterprise/2.17/v3/gists/comments/",
  2137:   "/enterprise/2.17/v3/guides/traversing-with-pagination/",
  2138    "/enterprise/2.17/v3/issues/timeline/",

  2140    "/enterprise/2.17/v3/repos/comments/",
  2141:   "/enterprise/2.17/v3/users/gpg_keys/",
  2142    "/enterprise/2.17/v4/interface/labelable/",

  2148    "/enterprise/2.17/v4/union/searchresultitem/",
  2149:   "/enterprise/2.18/apps/building-github-apps/creating-github-apps-from-a-manifest/",
  2150:   "/enterprise/2.18/apps/building-github-apps/creating-github-apps-using-url-parameters/",
  2151:   "/enterprise/2.18/apps/migrating-oauth-apps-to-github-apps/",
  2152:   "/enterprise/2.18/changes/2020-03-20-temporary-graphql-explorer-downtime/",
  2153:   "/enterprise/2.18/changes/2020-04-15-replacing-create-installation-access-token-endpoint/",
  2154:   "/enterprise/2.18/changes/2020-04-15-replacing-the-installation-and-installation-repositories-events/",
  2155    "/enterprise/2.18/v3/checks/suites/",

  2159    "/enterprise/2.18/v3/versions/",
  2160:   "/enterprise/2.18/v4/changelog/1/",
  2161    "/enterprise/2.18/v4/input_object/",

  2165    "/enterprise/2.18/v4/object/issuecommentconnection/",
  2166:   "/enterprise/2.18/v4/object/organizationconnection/",
  2167    "/enterprise/2.18/v4/object/pullrequestreviewconnection/",
  2168:   "/enterprise/2.18/v4/object/pullrequesttimelineitemedge/",
  2169    "/enterprise/2.18/v4/scalar/uri/",
  2170:   "/enterprise/2.19/apps/building-github-apps/understanding-rate-limits-for-github-apps/",
  2171:   "/enterprise/2.19/apps/managing-github-apps/modifying-a-github-app/",
  2172:   "/enterprise/2.19/apps/managing-oauth-apps/modifying-an-oauth-app/",
  2173:   "/enterprise/2.19/changes/2020-03-23-ActionsGA/",
  2174    "/enterprise/2.19/enterprise/v3/enterprise-admin/admin_stats/",
  2175:   "/enterprise/2.19/marketplace/getting-started/requirements-for-listing-an-app-on-github-marketplace/",
  2176    "/enterprise/2.19/v3/activity/feeds/",
  2177:   "/enterprise/2.19/v3/enterprise-admin/org_pre_receive_hooks/",
  2178    "/enterprise/2.19/v3/enterprise-admin/pre_receive_environments/",
  2179    "/enterprise/2.19/v3/enterprise-admin/pre_receive_hooks/",
  2180:   "/enterprise/2.19/v3/gists/comments/",
  2181:   "/enterprise/2.19/v3/guides/rendering-data-as-graphs/",
  2182:   "/enterprise/2.19/v3/guides/replacing-github-services/",
  2183:   "/enterprise/2.19/v3/guides/using-ssh-agent-forwarding/",
  2184    "/enterprise/2.19/v3/projects/collaborators/",

  2187    "/enterprise/2.19/v3/users/followers/",
  2188:   "/enterprise/2.19/v4/interface/gitobject/",
  2189    "/enterprise/2.19/v4/mutation/updaterepository/",
  2190:   "/enterprise/2.19/v4/object/pullrequestchangedfile/",
  2191:   "/enterprise/2.19/v4/object/pullrequestedge/",
  2192    "/enterprise/2.19/v4/object/pullrequestreviewcommentconnection/",

  2196    "/enterprise/2.2/v3/repos/collaborators/",
  2197:   "/enterprise/2.20/apps/building-oauth-apps/creating-custom-badges-for-oauth-apps/",
  2198:   "/enterprise/2.20/changes/2020-04-07-graduated-previews/",
  2199:   "/enterprise/2.20/marketplace/github-marketplace-transactions/",
  2200:   "/enterprise/2.20/marketplace/listing-on-github-marketplace/creating-a-draft-github-marketplace-listing/",
  2201:   "/enterprise/2.20/partnerships/secret-scanning/",
  2202    "/enterprise/2.20/v3/emojis/",

  2205    "/enterprise/2.20/v4/object/repositoryconnection/",
  2206:   "/enterprise/2.20/v4/object/repositoryedge/",
  2207    "/enterprise/2.20/v4/object/securityadvisory/",

  2213    "/explore",
  2214:   "/login",
  2215    "/user/ramzi",
  2216    "/users/:username",
  2217:   "/v2/git/refs/",
  2218    "/v3/#authentication=",

  2223    "/v3/events/types/",
  2224:   "/v3/git/releases/",
  2225    "/v3/object/pullrequest/",
  2226    "/v3/object/repository/",
  2227:   "/v3/organizations",
  2228    "/v3/pulls/comments/\"",
  2229:   "/v3/repos/balickimaciej/GITAPISTATSTEST/contributors",
  2230    "/v3/repos/projects/",

  2243    "/v4/enum/enterpriseserveruseraccountsuploadorderfield/",
  2244:   "/v4/enum/gistprivacy/",
  2245    "/v4/enum/releaseorderfield/",

  2250    "/v4/explorere",
  2251:   "/v4/git/trees/",
  2252    "/v4/input_object/convertprojectcardnotetoissueinput/",

  2254    "/v4/input_object/inviteenterpriseadmininput/",
  2255:   "/v4/input_object/organizationorder/",
  2256    "/v4/input_object/pinissueinput/",

  2261    "/v4/input_object/unarchiverepositoryinput/",
  2262:   "/v4/input_object/updateenterpriseactionexecutioncapabilitysettinginput/",
  2263    "/v4/input_object/updateenterpriseadministratorroleinput/",
  2264:   "/v4/input_object/updateenterprisememberscancreaterepositoriessettinginput/",
  2265    "/v4/input_object/updateprojectcardinput/",

  2267    "/v4/mutation/unmarkissueasduplicate/",
  2268:   "/v4/mutation/updateenterprisememberscanviewdependencyinsightssetting/",
  2269:   "/v4/object/createdcommitcontributionedge/",
  2270    "/v4/object/deploykeyconnection/",
  2271    "/v4/object/enterpriseadministratorconnection/",
  2272:   "/v4/object/enterpriseorganizationmembershipconnection/",
  2273    "/v4/object/enterpriseserveruseraccountsupload/",
  2274:   "/v4/object/generichovercardcontext/",
  2275:   "/v4/object/gpgsignature/",
  2276    "/v4/object/headrefdeletedevent/",
  2277:   "/v4/object/organizationteamshovercardcontext/",
  2278:   "/v4/object/orgrestoremembermembershiporganizationauditentrydata/",
  2279:   "/v4/object/packageversionedge/",
  2280    "/v4/object/publickeyconnection/",
  2281    "/v4/object/pullrequestcontributionsbyrepository/",
  2282:   "/v4/object/reactinguserconnection/",
  2283:   "/v4/object/reactionedge/",
  2284:   "/v4/object/registrypackagedependencyconnection/",
  2285:   "/v4/object/repoconfigenableanonymousgitaccessauditentry/",
  2286:   "/v4/object/repoconfigenablesockpuppetdisallowedauditentry/",
  2287:   "/v4/object/repoconfiglockanonymousgitaccessauditentry/",
  2288:   "/v4/object/repositoryvisibilitychangeenableauditentry/",
  2289    "/v4/object/reviewdismissedevent/",
  2290:   "/v4/object/submoduleedge/",
  2291    "/v4/object/teamremoverepositoryauditentry/",
  2292    "/v4/object/transferredevent/",
  2293:   "/v4/orgs/members/",
  2294    "/v4/repos/deployments/",
  2295:   "/actions/creating-workflows",
  2296:   "/apps/building-github-apps/refreshing-user-authorization-tokens/",
  2297:   "/apps/building-oauth-apps/authorization-options-for-oauth-apps/redirect-urls",
  2298:   "/assets/images/",
  2299:   "/changes/15/",
  2300:   "/changes/2012-10-24-set-default-branch/",
  2301:   "/changes/2013-01-08-new-user-scopes/",
  2302:   "/changes/2016-04-18-new-webhook-actions-are-live/",
  2303:   "/changes/2016-09-26-pull-request-merge-api-update/",
  2304:   "/changes/2018-11-07-strict-validation/",
  2305:   "/changes/2019-06-04-automated-security-fixes/",
  2306:   "/changes/2019-10-23-get-installations-for-org/",
  2307:   "/changes/2019-11-05-deprecated-passwords-and-authorizations-api/Notice",
  2308:   "/changes/2020-01-22-everest-preview-graduated/",
  2309:   "/changes/2020-02-14",
  2310:   "/changes/22/",
  2311    "/enterprise/2.0/v3/repos/",

  2314    "/enterprise/2.10/v3/repos/collaborators/",
  2315:   "/enterprise/2.10/webhooks/configuring/",
  2316    "/enterprise/2.11/v3/activity/events/types/",
  2317:   "/enterprise/2.11/v3/git/blobs/",
  2318:   "/enterprise/2.11/v3/git/commits/",
  2319    "/enterprise/2.11/v3/pulls/",

  2322    "/enterprise/2.11/v4/object/pullrequestcommit/",
  2323:   "/enterprise/2.11/v4/object/pullrequestreviewcommentedge/",
  2324    "/enterprise/2.11/v4/object/repository/",

  2326    "/enterprise/2.12/v3/activity/events/types/",
  2327:   "/enterprise/2.12/v4/guides/intro-to-graphql/",
  2328    "/enterprise/2.13/apps/",
  2329:   "/enterprise/2.13/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/",
  2330    "/enterprise/2.13/v3/enterprise-admin/admin_stats/",

  2335    "/enterprise/2.13/v3/users/",
  2336:   "/enterprise/2.13/v4/guides/",
  2337    "/enterprise/2.14/apps/",
  2338:   "/enterprise/2.14/apps/building-oauth-apps/authorizing-oauth-apps/",
  2339    "/enterprise/2.14/apps/differences-between-apps/",

  2342    "/enterprise/2.14/v3/enterprise-admin/",
  2343:   "/enterprise/2.14/v3/enterprise-admin/orgs/",
  2344    "/enterprise/2.14/v3/users/",

  2347    "/enterprise/2.15/v3/activity/events/",
  2348:   "/enterprise/2.15/v3/git/",
  2349:   "/enterprise/2.15/v3/git/commits/",
  2350    "/enterprise/2.15/v3/media/",

  2354    "/enterprise/2.15/v3/teams/",
  2355:   "/enterprise/2.15/webhooks/creating/",
  2356:   "/enterprise/2.16/apps/building-github-apps/creating-a-github-app/",
  2357:   "/enterprise/2.16/apps/building-oauth-apps/",
  2358:   "/enterprise/2.16/apps/managing-github-apps/making-a-github-app-public-or-private/",
  2359:   "/enterprise/2.16/apps/quickstart-guides/using-the-github-api-in-your-app/",
  2360:   "/enterprise/2.16/changes/2016-04-04-git-signing-api-preview/",
  2361:   "/enterprise/2.16/v3/git/commits/",
  2362:   "/enterprise/2.16/v3/git/tags/",
  2363:   "/enterprise/2.16/v3/guides/",
  2364    "/enterprise/2.16/v3/rate_limit/",
  2365:   "/enterprise/2.16/v4/guides/migrating-from-rest/",
  2366:   "/enterprise/2.16/v4/guides/using-the-explorer/",
  2367:   "/enterprise/2.16/webhooks/creating/",
  2368:   "/enterprise/2.17/apps/building-github-apps/creating-github-apps-from-a-manifest/",
  2369:   "/enterprise/2.17/apps/building-github-apps/setting-permissions-for-github-apps/",
  2370:   "/enterprise/2.17/apps/managing-oauth-apps/transferring-ownership-of-an-oauth-app/",
  2371:   "/enterprise/2.17/apps/managing-oauth-apps/troubleshooting-authorization-request-errors/",
  2372:   "/enterprise/2.17/apps/migrating-oauth-apps-to-github-apps/",
  2373:   "/enterprise/2.17/apps/quickstart-guides/creating-ci-tests-with-the-checks-api/",
  2374:   "/enterprise/2.17/marketplace/getting-started/",
  2375:   "/enterprise/2.17/marketplace/integrating-with-the-github-marketplace-api/",
  2376    "/enterprise/2.17/v3/activity/feeds/",
  2377    "/enterprise/2.17/v3/apps/available-endpoints/",
  2378:   "/enterprise/2.17/v3/guides/using-ssh-agent-forwarding/",
  2379    "/enterprise/2.17/v3/licenses/",

  2393    "/enterprise/2.17/v4/scalar/int/",
  2394:   "/enterprise/2.18/apps/managing-oauth-apps/modifying-an-oauth-app/",
  2395:   "/enterprise/2.18/apps/managing-oauth-apps/transferring-ownership-of-an-oauth-app/",
  2396:   "/enterprise/2.18/marketplace/github-marketplace-insights/",
  2397:   "/enterprise/2.18/partnerships/integration-partners/",
  2398    "/enterprise/2.18/v3/enterprise-admin/license/",

  2401    "/enterprise/2.18/v3/repos/forks/",
  2402:   "/enterprise/2.18/v3/repos/pages/",
  2403    "/enterprise/2.18/v3/repos/statistics/",
  2404:   "/enterprise/2.18/v3/search/legacy/",
  2405    "/enterprise/2.18/v4/enum/",

  2407    "/enterprise/2.18/v4/input_object/contributionorder/",
  2408:   "/enterprise/2.18/v4/object/createdpullrequestcontributionedge/",
  2409    "/enterprise/2.18/v4/object/issueconnection/",
  2410:   "/enterprise/2.18/v4/object/pageinfo/",
  2411    "/enterprise/2.18/v4/object/pullrequestreviewcomment/",

  2414    "/enterprise/2.18/v4/previews/",
  2415:   "/enterprise/2.18/v4/scalar/string/",
  2416    "/enterprise/2.18/v4/union/",
  2417:   "/enterprise/2.19/apps/building-github-apps/creating-custom-badges-for-github-apps/",
  2418:   "/enterprise/2.19/apps/managing-github-apps/making-a-github-app-public-or-private/",
  2419:   "/enterprise/2.19/apps/managing-oauth-apps/transferring-ownership-of-an-oauth-app/",
  2420:   "/enterprise/2.19/changes/2020-02-14-deprecating-password-auth/",
  2421:   "/enterprise/2.19/changes/2020-04-15-replacing-create-installation-access-token-endpoint/",
  2422:   "/enterprise/2.19/marketplace/github-marketplace-transactions/",
  2423    "/enterprise/2.19/v3/licenses/",

  2429    "/enterprise/2.19/v4/object/label/",
  2430:   "/enterprise/2.19/v4/object/organizationconnection/",
  2431:   "/enterprise/2.19/v4/object/organizationmemberconnection/",
  2432:   "/enterprise/2.19/v4/object/pullrequestchangedfileconnection/",
  2433:   "/enterprise/2.19/v4/object/pullrequestchangedfileedge/",
  2434    "/enterprise/2.19/v4/object/pullrequesttimelineconnection/",

  2439    "/enterprise/2.2/v3/users/",
  2440:   "/enterprise/2.20/apps/building-github-apps/creating-custom-badges-for-github-apps/",
  2441:   "/enterprise/2.20/changes/2018-05-24-user-migration-api/",
  2442:   "/enterprise/2.20/changes/2020-04-30-expiring-user-to-server-access-tokens-for-github-apps/",
  2443    "/enterprise/2.20/v",

  2449    "/enterprise/2.20/v4/interface/uniformresourcelocatable/",
  2450:   "/enterprise/2.20/v4/mutation/changeuserstatus/",
  2451    "/enterprise/2.20/v4/object/app/",
  2452    "/enterprise/2.20/v4/object/bot/",
  2453:   "/enterprise/2.20/v4/object/githubmetadata/",
  2454    "/enterprise/2.20/v4/object/project/",
  2455:   "/enterprise/2.20/v4/object/registrypackageconnection/",
  2456    "/enterprise/2.20/v4/object/repositoryvulnerabilityalert/",
  2457    "/enterprise/2.20/v4/object/teammemberconnection/",
  2458:   "/enterprise/2.20/v4/object/useredge/",
  2459    "/enterprise/2.20/v4/reference/interface/node/",

  2466    "/enterprise/2.7/",
  2467:   "/enterprise/2.7/apps/building-integrations/setting-up-and-registering-oauth-apps/",
  2468    "/enterprise/2.7/v3/repos/contents/",
  2469    "/enterprise/2.7/v3/repos/statistics/",
  2470:   "/enterprise/2.8/apps/building-integrations/setting-up-and-registering-oauth-apps/",
  2471:   "/enterprise/2.8/v3/git/commits/",
  2472:   "/enterprise/2.8/v3/guides/basics-of-authentication/",
  2473    "/enterprise/2.8/v3/oauth_authorizations/",
  2474:   "/enterprise/2.8/webhooks/creating/",
  2475:   "/enterprise/2.9/apps/building-oauth-apps/",
  2476    "/enterprise/2.9/webhooks/",
  2477    "/explorer",
  2478:   "/forum/GitHub GraphQL APIStart exploring GraphQL API queries using your account’s data now. Heads up! GitHub's GraphQL Explorer makes use of your real, live, production data.Docs",
  2479    "/licenses/",
  2480:   "/logout",
  2481    "/octocat/repos",

  2484    "/rocketseat/rocketseat.com.br",
  2485:   "/settings",
  2486:   "/settings/applications/new",
  2487:   "/settings/developers",
  2488    "/Users",

  2492    "/v2/auth/",
  2493:   "/v2/gists/",
  2494    "/v2/media/",

  2500    "/v3/actions/self_hosted_runners",
  2501:   "/v3/actions/self-hosted-runners/\"actions-runner-win-x64-2.164.0.zip\"/config",
  2502    "/v3/api",
  2503    "/v3/branches/",
  2504:   "/v3/code_scanning/",
  2505:   "/v3/gists/:gist_id/comments",
  2506:   "/v3/guides/getting-started/https://developer.twitter.com/en/docs/tweets/search/overview",
  2507:   "/v3/licenses/:google/go-cloud",
  2508:   "/v3/login/",
  2509    "/v3/markdown/raw",
  2510:   "/v3/object/pageinfo/",
  2511:   "/v3/org",
  2512:   "/v3/organization/members/",
  2513:   "/v3/repos/##list-languages",
  2514    "/v3/repos/content",

  2524    "/v3/users/1",
  2525:   "/v3/users/aamitg",
  2526    "/v3/users/becerrawebd",
  2527:   "/v3/users/diego3g",
  2528    "/v3/users/ellie",
  2529:   "/v3/users/gaearon",
  2530    "/v3/users/lbdalmendray",
  2531    "/v3/users/monalisa octocat",
  2532:   "/v3/users/tigarcia",
  2533    "/v4//",
  2534    "/v4/actions/self_hosted_runners/",
  2535:   "/v4/changelog/2019-09-14-schema-changes/",
  2536:   "/v4/changelog/2019-10-23-schema-changes/",
  2537:   "/v4/changelog/23/",
  2538:   "/v4/changelog/5/",
  2539    "/v4/enum/enterpriseserverinstallationorderfield/",
  2540    "/v4/enum/enterpriseserveruseraccountorderfield/",
  2541:   "/v4/enum/ipallowlistenabledsettingvalue/",
  2542    "/v4/enum/milestoneorderfield/",
  2543    "/v4/enum/oauthapplicationcreateauditentrystate/",
  2544:   "/v4/enum/orgremoveoutsidecollaboratorauditentryreason/",
  2545:   "/v4/enum/packagefileorderfield/",
  2546:   "/v4/enum/packageorderfield/",
  2547:   "/v4/enum/registrypackagedependencytype/",
  2548:   "/v4/enum/repochangemergesettingauditentrymergetype/",
  2549    "/v4/enum/reportedcontentclassifiers/",
  2550:   "/v4/enum/samlsignaturealgorithm/",
  2551    "/v4/enum/teamorderfield/",
  2552    "/v4/explorder",
  2553:   "/v4/git/tags/",
  2554:   "/v4/guides/delivering-deployments/",
  2555:   "/v4/input_object/declinetopicsuggestioninput/",
  2556    "/v4/input_object/deleteteamdiscussioncommentinput/",
  2557:   "/v4/input_object/deploymentorder/field-all.svg",
  2558    "/v4/input_object/removeenterpriseidentityproviderinput/",
  2559:   "/v4/input_object/removeenterpriseorganizationinput/",
  2560:   "/v4/input_object/updateenterprisememberscanmakepurchasessettinginput/",
  2561:   "/v4/input_object/updateenterpriseteamdiscussionssettinginput/",
  2562:   "/v4/input_object/updateenterprisetwofactorauthenticationrequiredsettinginput/",
  2563    "/v4/input_object/updateteamdiscussioncommentinput/",
  2564    "/v4/mutation/updateenterpriseadministratorrole/",
  2565:   "/v4/mutation/updateenterprisememberscaninvitecollaboratorssetting/",
  2566:   "/v4/mutation/updateenterprisememberscanupdateprotectedbranchessetting/",
  2567    "/v4/oauth",
  2568:   "/v4/object/branchprotectionruleconflictedge/",
  2569    "/v4/object/checkannotationconnection/",
  2570:   "/v4/object/closedevent/pinned.png",
  2571:   "/v4/object/createdpullrequestreviewcontributionedge/",
  2572:   "/v4/object/gistcommentedge/",
  2573:   "/v4/object/milestoneedge/",
  2574:   "/v4/object/orgrestoremembermembershiprepositoryauditentrydata/",
  2575:   "/v4/object/registrypackagestatistics/",
  2576    "/v4/object/removedfromprojectevent/",
  2577:   "/v4/object/repoconfigenablecollaboratorsonlyauditentry/",
  2578    "/v4/object/reporemovememberauditentry/",

  2593    "/app",
  2594:   "/apps/building oauth apps/authorization oauth apps/",
  2595:   "/apps/building-",
  2596:   "/apps/building-apps/authorizing-oauth-apps/",
  2597:   "/apps/building-github-apps/authenticating-with-github-apps/ Previous QuestionsNext Questions",
  2598:   "/apps/building-github-apps/authorizing-oauth-apps/",
  2599:   "/apps/building-integrations/setting-up-and-registering-oauth-apps/troubleshooting-authorization-request-errors/#redirect-uri-mismatch",
  2600:   "/apps/building-oauh-apps/authorizing-oauth-apps/",
  2601:   "/apps/building-oauth-apps/authorizing-oauth-apps/https://developers.weixin.qq.com/doc/oplatform/Website_App/WeChat_Login/Wechat_Login.html",
  2602:   "/apps/building-oauth-apps/creating-an-oauth-apps",
  2603:   "/apps/building-oauth-apps/creating-an-oauth-apps/",
  2604:   "/apps/differences-between-apps/authorzing-oauth-apps/",
  2605    "/Ares-docs/",

  2608    "/aymericdamien",
  2609:   "/celesteblue-dev/psvita-storagemgr/releases",
  2610    "/Cerebras/monolith/issues",
  2611:   "/changes/!",
  2612:   "/changes//",
  2613:   "/changes/18/",
  2614:   "/changes/2013-05-06-create-update-delete-individual-files/",
  2615:   "/changes/2013-07-02-rate-limit-reset/",
  2616:   "/changes/2014-02-19-repo-contributors-for-empty-repos/",
  2617:   "/changes/2014-03-27-combined-status-api/",
  2618:   "/changes/2014-05-09-improved-pagination-for-the-repository-commits-api/",
  2619:   "/changes/2014-08-28-accepting-organization-invitations-from-the-api/",
  2620:   "/changes/2016-06-07-reactions-api-update/",
  2621:   "/changes/2016-07-12-ending-multiple-assignees-preview-period/",
  2622:   "/changes/2016-08-15-traffic-api-preview/",
  2623:   "/changes/2017-04-11-protected-branch-dismissal-restrictions/",
  2624:   "/changes/2017-08-23-repository-invitation-api/",
  2625:   "/changes/2018-02-22-protected-branches-required-signatures/",
  2626:   "/changes/2018-07-11-graphql-checks-preview/",
  2627:   "/changes/2018-09-25-stricter-validation-coming-soon-in-the-rest-api/",
  2628:   "/changes/2018-12-10-content-attachments-api/",
  2629:   "/changes/2019-03-26-new-response-code-for-notifications-marked-as-read-in-bulk/",
  2630:   "/changes/2019-10-04-end-mister-fantastic-preview/",
  2631:   "/changes/2020-01-10-revoke-installation-token/",
  2632:   "/changes/2020-02-10-deprecating-au-query-param",
  2633:   "/changes/2020-02-14-deprecating-password-auth/)",
  2634:   "/changes/2020-02-14-deprecating-password-email",
  2635:   "/changes/2020-04-30-expiring-user-to-server-access-tokens-for-github-apps/null",
  2636    "/connect/endsession",
  2637:   "/diego3g",
  2638:   "/disambiguation",
  2639:   "/e-bot7/orgs/",
  2640:   "/early-access/graphql/object/pageinfo/",
  2641:   "/earlyaccess/graphql/explorer",
  2642    "/emoji",

  2644    "/enterprise/2.10/v3/activity/events/types/",
  2645:   "/enterprise/2.10/v3/enterprise-admin/management_console/",
  2646:   "/enterprise/2.10/v3/guides/getting-started/",
  2647    "/enterprise/2.10/v3/repos/contents/",
  2648:   "/enterprise/2.10/v4/guides/using-the-explorer/",
  2649:   "/enterprise/2.10/webhooks/creating/",
  2650:   "/enterprise/2.11/apps/building-oauth-apps/authorizing-oauth-apps/",
  2651    "/enterprise/2.11/v3/auth/",
  2652:   "/enterprise/2.11/v3/git/refs/",
  2653:   "/enterprise/2.11/v3/guides/",
  2654    "/enterprise/2.11/v3/search/",

  2656    "/enterprise/2.11/v4/explorer/",
  2657:   "/enterprise/2.11/v4/guides/",
  2658    "/enterprise/2.11/v4/object/pullrequestreviewconnection/",
  2659:   "/enterprise/2.11/v4/object/reactiongroup/",
  2660    "/enterprise/2.11/v4/object/user/",

  2662    "/enterprise/2.11/v4/scalar/id/",
  2663:   "/enterprise/2.12/v3/git/refs/",
  2664:   "/enterprise/2.12/v3/orgs/",
  2665    "/enterprise/2.12/v3/repos/",

  2668    "/enterprise/2.13/v3/enterprise-admin/",
  2669:   "/enterprise/2.13/v3/enterprise-admin/management_console/",
  2670:   "/enterprise/2.13/v3/guides/",
  2671    "/enterprise/2.13/v3/issues/",

  2673    "/enterprise/2.13/v3/repos/forks/",
  2674:   "/enterprise/2.13/v3/repos/merging/",
  2675    "/enterprise/2.13/v3/repos/statistics/",

  2677    "/enterprise/2.14/apps/about-apps/",
  2678:   "/enterprise/2.14/apps/building-github-apps/creating-a-github-app/",
  2679:   "/enterprise/2.14/apps/quickstart-guides/",
  2680:   "/enterprise/2.14/apps/quickstart-guides/using-the-github-api-in-your-app/",
  2681    "/enterprise/2.14/v3/enterprise-admin/admin_stats/",
  2682    "/enterprise/2.14/v3/enterprise-admin/ldap/",
  2683:   "/enterprise/2.14/v3/git/commits/",
  2684:   "/enterprise/2.14/v3/git/trees/",
  2685    "/enterprise/2.14/v3/issues/",

  2692    "/enterprise/2.15/apps/",
  2693:   "/enterprise/2.15/apps/building-oauth-apps/",
  2694:   "/enterprise/2.15/changes/2016-04-04-git-signing-api-preview/",
  2695    "/enterprise/2.15/v3/enterprise-admin/users/",
  2696:   "/enterprise/2.15/v3/guides/getting-started/",
  2697:   "/enterprise/2.15/v3/guides/replacing-github-services/",
  2698:   "/enterprise/2.15/v3/orgs/hooks/",
  2699:   "/enterprise/2.15/v3/orgs/members/",
  2700    "/enterprise/2.15/v3/repos/deployments/",
  2701:   "/enterprise/2.15/v3/troubleshooting/",
  2702:   "/enterprise/2.15/webhooks/configuring/",
  2703    "/enterprise/2.16/v3/activity/events/",

  2707    "/enterprise/2.16/v4/query/",
  2708:   "/enterprise/2.16/webhooks/testing/",
  2709:   "/enterprise/2.17/apps/building-oauth-apps/creating-custom-badges-for-oauth-apps/",
  2710:   "/enterprise/2.17/apps/managing-github-apps/editing-a-github-app-s-permissions/",
  2711:   "/enterprise/2.17/apps/managing-oauth-apps/",
  2712:   "/enterprise/2.17/apps/using-content-attachments/",
  2713:   "/enterprise/2.17/changes/2/",
  2714:   "/enterprise/2.17/changes/2020-02-14-deprecating-oauth-auth-endpoint/",
  2715:   "/enterprise/2.17/changes/2020-04-07-graduated-previews/",
  2716:   "/enterprise/2.17/changes/2020-04-30-expiring-user-to-server-access-tokens-for-github-apps/",
  2717:   "/enterprise/2.17/changes/2020-05-01-suspending-a-github-app-installation/",
  2718:   "/enterprise/2.17/changes/29/",
  2719:   "/enterprise/2.17/marketplace/github-marketplace-insights/",
  2720:   "/enterprise/2.17/marketplace/github-marketplace-transactions/",
  2721:   "/enterprise/2.17/partnerships/integration-partners/",
  2722:   "/enterprise/2.17/partnerships/secret-scanning/",
  2723:   "/enterprise/2.17/v3/enterprise-admin/org_pre_receive_hooks/",
  2724:   "/enterprise/2.17/v3/guides/building-a-ci-server/",
  2725:   "/enterprise/2.17/v3/guides/rendering-data-as-graphs/",
  2726    "/enterprise/2.17/v3/issues/milestones/",
  2727    "/enterprise/2.17/v3/markdown/",
  2728:   "/enterprise/2.17/v3/orgs/outside_collaborators/",
  2729    "/enterprise/2.17/v3/projects/collaborators/",
  2730    "/enterprise/2.17/v3/rate_limit/",
  2731:   "/enterprise/2.17/v3/repos/pages/",
  2732    "/enterprise/2.17/v3/teams/discussions/",
  2733:   "/enterprise/2.17/v4/breaking_changes/",
  2734:   "/enterprise/2.17/v4/changelog/2017-05-22-schema-changes/",
  2735    "/enterprise/2.17/v4/enum/orderdirection/",

  2737    "/enterprise/2.17/v4/input_object/",
  2738:   "/enterprise/2.17/v4/input_object/deletepackageversioninput/",
  2739    "/enterprise/2.17/v4/interface/node/",

  2743    "/enterprise/2.17/v4/mutation/createlabel/",
  2744:   "/enterprise/2.17/v4/object/baserefchangedevent/",
  2745    "/enterprise/2.17/v4/object/commitcommentconnection/",

  2749    "/enterprise/2.17/v4/object/labelconnection/",
  2750:   "/enterprise/2.17/v4/object/refedge/",
  2751    "/enterprise/2.17/v4/object/status/",
  2752:   "/enterprise/2.17/v4/object/teamedge/",
  2753:   "/enterprise/2.18/apps/building-github-apps/creating-custom-badges-for-github-apps/",
  2754:   "/enterprise/2.18/apps/managing-github-apps/editing-a-github-app-s-permissions/",
  2755:   "/enterprise/2.18/apps/managing-github-apps/making-a-github-app-public-or-private/",
  2756:   "/enterprise/2.18/apps/managing-oauth-apps/deleting-an-oauth-app/",
  2757:   "/enterprise/2.18/apps/quickstart-guides/creating-ci-tests-with-the-checks-api/",
  2758:   "/enterprise/2.18/apps/using-content-attachments/",
  2759:   "/enterprise/2.18/marketplace/getting-started/",
  2760:   "/enterprise/2.18/marketplace/github-marketplace-transactions/",
  2761:   "/enterprise/2.18/marketplace/listing-on-github-marketplace/",
  2762    "/enterprise/2.18/repos/arvinjayd",

  2767    "/enterprise/2.18/v3/activity/notifications/",
  2768:   "/enterprise/2.18/v3/activity/watching/",
  2769:   "/enterprise/2.18/v3/code-scanning/",
  2770:   "/enterprise/2.18/v3/gists/comments/",
  2771:   "/enterprise/2.18/v3/guides/best-practices-for-integrators/",
  2772:   "/enterprise/2.18/v3/guides/replacing-github-services/",
  2773:   "/enterprise/2.18/v3/guides/using-ssh-agent-forwarding/",
  2774    "/enterprise/2.18/v3/issues/timeline/",
  2775    "/enterprise/2.18/v3/meta/",
  2776:   "/enterprise/2.18/v3/repos/tags",
  2777    "/enterprise/2.18/v3/teams/discussions/",

  2792    "/enterprise/2.18/v4/object/issue/",
  2793:   "/enterprise/2.18/v4/object/organizationauditentryconnection/",
  2794    "/enterprise/2.18/v4/object/pullrequestreviewcommentconnection/",

  2798    "/enterprise/2.18/v4/union/searchresultitem/",
  2799:   "/enterprise/2.19/apps/building-intergations",
  2800:   "/enterprise/2.19/apps/managing-oauth-apps/deleting-an-oauth-app/",
  2801:   "/enterprise/2.19/changes/2014-03-04-timezone-handling-changes/",
  2802:   "/enterprise/2.19/changes/2018-10-18-github-api-development-and-support/",
  2803:   "/enterprise/2.19/changes/2020-03-06-filtering-jobs-for-a-workflow-run/",
  2804:   "/enterprise/2.19/changes/2020-03-20-temporary-graphql-explorer-downtime/",
  2805:   "/enterprise/2.19/changes/2020-04-07-graduated-previews/",
  2806:   "/enterprise/2.19/changes/2020-04-30-expiring-user-to-server-access-tokens-for-github-apps/",
  2807:   "/enterprise/2.19/marketplace/getting-started/",
  2808:   "/enterprise/2.19/marketplace/github-marketplace-insights/",
  2809:   "/enterprise/2.19/marketplace/selling-your-app/github-marketplace-pricing-plans/",
  2810:   "/enterprise/2.19/partnerships/integration-partners/",
  2811:   "/enterprise/2.19/partnerships/secret-scanning/",
  2812    "/enterprise/2.19/v",

  2815    "/enterprise/2.19/v3/emojis/",
  2816:   "/enterprise/2.19/v3/gitignore/",
  2817:   "/enterprise/2.19/v3/guides/working-with-comments/",
  2818:   "/enterprise/2.19/v3/orgs/outside_collaborators/",
  2819:   "/enterprise/2.19/v3/search/legacy/",
  2820    "/enterprise/2.19/v4/auth/",
  2821:   "/enterprise/2.19/v4/breaking_changes/",
  2822    "/enterprise/2.19/v4/enum/orderdirection/",

  2835    "/enterprise/2.19/v4/object/enterpriseuseraccount/",
  2836:   "/enterprise/2.19/v4/object/gitactor/",
  2837:   "/enterprise/2.19/v4/object/pullrequestcommitedge/",
  2838:   "/enterprise/2.19/v4/object/pullrequestreviewedge/",
  2839:   "/enterprise/2.19/v4/object/refedge/",
  2840    "/enterprise/2.19/v4/scalar/id/",
  2841    "/enterprise/2.19/v4/scalar/int/",
  2842:   "/enterprise/2.2/v3/orgs/",
  2843    "/enterprise/2.2/v3/repos/hooks/",

  2846    "/enterprise/2.20/2.18.5/",
  2847:   "/enterprise/2.20/2.19.10/v3/git/commits/",
  2848    "/enterprise/2.20/api/v3/",
  2849:   "/enterprise/2.20/apps/building-github-apps/understanding-rate-limits-for-github-apps/",
  2850:   "/enterprise/2.20/apps/managing-github-apps/deleting-a-github-app/",
  2851:   "/enterprise/2.20/changes/20/",
  2852:   "/enterprise/2.20/changes/2020-02-26-new-delete-reactions-endpoints/",
  2853:   "/enterprise/2.20/marketplace/github-marketplace-insights/",
  2854:   "/enterprise/2.20/marketplace/integrating-with-the-github-marketplace-api/upgrading-and-downgrading-plans/",
  2855:   "/enterprise/2.20/marketplace/selling-your-app/",
  2856:   "/enterprise/2.20/partnerships/token-scanning/",
  2857:   "/enterprise/2.20/v2/git/tags/",
  2858    "/enterprise/2.20/v3/codes_of_conduct/",
  2859:   "/enterprise/2.20/v3/gitignore/",
  2860:   "/enterprise/2.20/v3/guides/working-with-comments/",
  2861:   "/enterprise/2.20/v3/migrations/",
  2862:   "/enterprise/2.20/v3/migrations/source_imports/",
  2863    "/enterprise/2.20/v3/search/users",

  2867    "/enterprise/2.20/v3/users/:username/repos",
  2868:   "/enterprise/2.20/v3/users/blocking/",
  2869:   "/enterprise/2.20/v4/breaking_changes/",
  2870:   "/enterprise/2.20/v4/changelog/2020-01-09-schema-changes/",
  2871:   "/enterprise/2.20/v4/enum/identityproviderconfigurationstate/",
  2872    "/enterprise/2.20/v4/enum/issuestate/",

  2877    "/enterprise/2.20/v4/input_object/addreactioninput/",
  2878:   "/enterprise/2.20/v4/input_object/auditlogorder/",
  2879    "/enterprise/2.20/v4/input_object/checkrunfilter/",

  2881    "/enterprise/2.20/v4/input_object/savedreplyorder/",
  2882:   "/enterprise/2.20/v4/interface/packageowner/",
  2883    "/enterprise/2.20/v4/interface/reactable/",

  2890    "/enterprise/2.20/v4/mutation/createpullrequest/",
  2891:   "/enterprise/2.20/v4/mutation/deletepackageversion/",
  2892    "/enterprise/2.20/v4/object/commithistoryconnection/",

  2895    "/enterprise/2.20/v4/object/labelconnection/",
  2896:   "/enterprise/2.20/v4/object/pageinfo/",
  2897    "/enterprise/2.20/v4/object/pullrequestreviewcomment/",
  2898    "/enterprise/2.20/v4/object/ref/",
  2899:   "/enterprise/2.20/v4/object/refedge/",
  2900    "/enterprise/2.20/v4/object/release/",
  2901    "/enterprise/2.20/v4/scalar/date/",
  2902:   "/enterprise/2.20/v4/scalar/gitobjectid/",
  2903:   "/enterprise/2.20/v4/scalar/gittimestamp/",
  2904    "/enterprise/2.21/v3/",
  2905:   "/enterprise/2.6/webhooks/creating/",
  2906    "/enterprise/2.7/v3/repos/branches/",
  2907:   "/enterprise/2.8/v3/enterprise-admin/management_console/",
  2908:   "/enterprise/2.8/v3/enterprise-admin/orgs/",
  2909:   "/enterprise/2.8/v3/git/",
  2910:   "/enterprise/2.8/v3/git/blobs/",
  2911:   "/enterprise/2.8/v3/guides/getting-started/",
  2912    "/enterprise/2.8/v3/repos/commits/",

  2915    "/enterprise/2.9/",
  2916:   "/enterprise/2.9/v3/orgs/",
  2917    "/enterprise/2.9/v3/repos/collaborators/",
  2918    "/extend",
  2919:   "/graphql/explorer/",
  2920    "/kernelkorn/users/keys/",

  2922    "/latest/actions/secrets/",
  2923:   "/marketplace/getting-startedHacked<br><br><center><font color=\"red\">XSS BY IrwanLx11<br><br><img src=x onerror=alert(document.cookie)><br><br><img src=x onerror=alert(document.domain)>/",
  2924:   "/organizations",
  2925:   "/pages-demo/developer-pages/program/",
  2926:   "/pages-demo/developer-pages/v3/",
  2927    "/repos/CyberSource/cybersource-rest-samples-node",

  2930    "/repos/kubernetes/kubernetes/issues",
  2931:   "/repos/nextgovbr/Aprova/pulls",
  2932    "/repos/rocketseat/unform",

  2937    "/search/repositories",
  2938:   "/settings/profile",
  2939:   "/sttings/apps/",
  2940    "/users/:ch3mjor",

  2944    "/users/anh/repos",
  2945:   "/users/diego3g",
  2946    "/users/hafeez8165526",

  2949    "/users/vinicius-hsouza",
  2950:   "/users/wellyngtond2/repos",
  2951    "/v/",

  2957    "/v2/activity/events/types/",
  2958:   "/v2/git/",
  2959    "/v2/projects",

  2968    "/V3/",
  2969:   "/v3/ http://cizixs.com/2016/12/12/restful-api-design-guide",
  2970    "/v3/ repos/",
  2971:   "/v3/ using",
  2972    "/v3/​)",
  2973:   "/v3/](https://developer.github.com/v3/)",
  2974    "/v3///repos///",
  2975    "/v3//oauth_authorizations/",
  2976:   "/v3//organizations",
  2977:   "/v3/#pagination",
  2978    "/v3/3",

  2981    "/v3/actions//repos/:owner/:repo/actions/workflows/:workflow_id/runs",
  2982:   "/v3/actions/https://developer.github.com/v3/actions/",
  2983:   "/v3/actions/secrets/ https://help.github.com/en/actions/configuring-and-managing-workflows/creating-and-storing-encrypted-secrets",
  2984    "/v3/actions/self-hosted-runners/\"actions-runner-win-x64-2.164.0.zip\"",

  2999    "/v3/fernandohfs/sales-api",
  3000:   "/v3/get",
  3001:   "/v3/gists//gists/public",
  3002:   "/v3/gists/1/comments",
  3003:   "/v3/gists/comments/1",
  3004:   "/v3/gists/gists/public",
  3005:   "/v3/git/repo",
  3006:   "/v3/git/repos",
  3007:   "/v3/git/repository/",
  3008:   "/v3/guides/getting-started/https://stripe.com/docs/api",
  3009:   "/v3/guides/managing-enterprise-accounts/",
  3010:   "/v3/guides/traversing-with-pagination/)。",
  3011:   "/v3/guides/using-the-explorer/",
  3012    "/v3/hooks/",
  3013:   "/v3/https://github.com/yannickcr/eslint-plugin-react/tree/master/docs/rules/jsx-one-expression-per-line.md",
  3014:   "/v3/interactions/orgs/:orgname",
  3015    "/v3/issue",

  3020    "/v3/oautch/",
  3021:   "/v3/oauth_authorizations/loging",
  3022    "/v3/oauth_authorizations/null",

  3025    "/v3/object/repositoryvulnerabilityalert/",
  3026:   "/v3/org/Picpay/teams",
  3027:   "/v3/orgs/netflix/repos",
  3028:   "/v3/orgs/octokit",
  3029    "/v3/projects/)",

  3041    "/v3/repos/branchs/",
  3042:   "/v3/repos/chaoss/grimoirelab-perceval",
  3043    "/v3/repos/chayathilak/Test-QA/traffic/clones",
  3044:   "/v3/repos/contents/manged_jb54aeoba_seribhdjf_url",
  3045    "/v3/repos/deployments//",
  3046    "/v3/repos/event/",
  3047:   "/v3/repos/hbagdi/deck",
  3048:   "/v3/repos/hbagdi/deck/releases",
  3049    "/v3/repos/issues",
  3050    "/v3/repos/kubernates/kubernates/issues",
  3051:   "/v3/repos/lispucrs/GUIA_AppDatasetMaven",
  3052    "/v3/repos/nazuke/SEOMacroscope/traffic/",

  3057    "/v3/repos/statuses//",
  3058:   "/v3/repos/tag",
  3059:   "/v3/repos/tr/a204278_ls2_universal_login_poc/teams",
  3060    "/v3/repos/user/repos",

  3073    "/v3/search/xiaodoublock",
  3074:   "/v3/tags/",
  3075    "/v3/teams/members>",

  3079    "/v3/user/JohnSundell",
  3080:   "/v3/user/orgs",
  3081    "/v3/user/teams",

  3090    "/v3/users/arkarn04",
  3091:   "/v3/users/brian-greeson",
  3092    "/v3/users/colt-steele",

  3096    "/v3/users/email",
  3097:   "/v3/users/giaddon",
  3098:   "/v3/users/gourab1503",
  3099    "/v3/users/harish",

  3106    "/v3/users/octocat/events{/privacy}",
  3107:   "/v3/users/orgs/qaswarh/repos",
  3108    "/v3/users/osasalohan",

  3126    "/v4/auth",
  3127:   "/v4/changelog/2017-05-22-schema-changes/",
  3128:   "/v4/changelog/2017-05-30-schema-changes/",
  3129:   "/v4/changelog/2019-09-20-schema-changes/",
  3130:   "/v4/changelog/2019-09-24-schema-changes/",
  3131:   "/v4/changelog/2019-11-22-schema-changes/",
  3132:   "/v4/changelog/21/",
  3133:   "/v4/changelog/22/",
  3134    "/v4/checks/",

  3137    "/v4/enum/IssueOrder/",
  3138:   "/v4/enum/organizationinvitationtype/",
  3139:   "/v4/enum/packageversionorderfield/",
  3140    "/v4/enum/projectcolumnpurpose/",

  3143    "/v4/enum/reporemovememberauditentryvisibility/",
  3144:   "/v4/enum/samldigestalgorithm/",
  3145    "/v4/enum/sponsorstierorderfield/",

  3151    "/v4/explorar",
  3152:   "/v4/git",
  3153:   "/v4/git/refs/",
  3154:   "/v4/guides/basics-of-authentication/",
  3155:   "/v4/guides/traversing-with-pagination/",
  3156:   "/v4/guides/using-the-explorer/null",
  3157    "/v4/input_object/createipallowlistentryinput/",

  3164    "/v4/input_object/sponsorstierorder/",
  3165:   "/v4/input_object/updateenterprisememberscanchangerepositoryvisibilitysettinginput/",
  3166:   "/v4/input_object/updateenterprisememberscandeleteissuessettinginput/",
  3167:   "/v4/input_object/updateteamreviewassignmentinput/",
  3168    "/v4/interface/author",

  3173    "/v4/mutation/unresolvereviewthread/",
  3174:   "/v4/mutation/updateenterprisememberscanchangerepositoryvisibilitysetting/",
  3175:   "/v4/object/closedevent/pinned.svg",
  3176:   "/v4/object/createdissuecontributionedge/",
  3177:   "/v4/object/DependencyGraphPackageRelease/",
  3178:   "/v4/object/enterpriseadministratoredge/",
  3179:   "/v4/object/enterpriseorganizationmembershipedge/",
  3180:   "/v4/object/gistedge/",
  3181    "/v4/object/issues/",
  3182    "/v4/object/markedasduplicateevent/",
  3183:   "/v4/object/organizationshovercardcontext/",
  3184:   "/v4/object/orgrestoremembermembershipteamauditentrydata/",
  3185:   "/v4/object/packageversionstatistics/",
  3186    "/v4/object/permission/",
  3187    "/v4/object/refs/",
  3188:   "/v4/object/registrypackageversionedge/",
  3189:   "/v4/object/registrypackageversionstatistics/",
  3190:   "/v4/object/releaseassetedge/",
  3191    "/v4/object/repositories/",

  3194    "/v4/object/unpinnedevent/",
  3195:   "/v4/object/usercontenteditedge/",
  3196:   "/v4/orgs/",
  3197    "/v4/projects/",

  3206    "/v4/repos/forks/",
  3207:   "/v4/repos/pages/",
  3208    "/v4/repos/statistics/",
  3209:   "/v4/scalar/String/",
  3210    "/v4/teams/",

  3216    "/v6/explorer/",
  3217:   "/web/20140801081158/https://developer.github.com/guides/managing-deploy-keys/",
  3218:   "/web/20180223170252/https://developer.github.com/v3/pulls/",
  3219    "/webhooks/null",
  3220    "/ insomnia",
  3221:   "/ là gì",
  3222    "/ tokens for development",
  3223:   "/ working with two factor",
  3224    "/-apps/",
  3225:   "/.well-known/openid-configuration",
  3226    "/\"/",

  3228    "/</id",
  3229:   "/2020-02-14-deprecating-password-auth/",
  3230    "/actions/c",
  3231:   "/actions/creating-workflows/triggering-a-repositorydispatch-webhook/",
  3232    "/adeept",

  3234    "/adnanh/webhook",
  3235:   "/aguegu/ardulibs",
  3236    "/AlissonHenrique",

  3248    "/apo",
  3249:   "/application/vnd.github.v3+json",
  3250    "/apps/_",
  3251    "/apps/about-apps/test",
  3252:   "/apps/adding-integrations/adding-integrations-to-works-with-github/requirements-for-adding-an-integration-to-works-with-github/",
  3253:   "/apps/buiding-oauth-apps",
  3254:   "/apps/buiding-oauth-apps/oauthrizing-oauth-apps",
  3255:   "/apps/buildding-oauth-apps/authorizing-oauth-apps",
  3256:   "/apps/building-github-apps/authenticating-with-github-apps/authenticating-as-a-github-app",
  3257:   "/apps/building-github-apps/authenticating-with-githubapps/",
  3258:   "/apps/building-github-apps/authenticatingwith- github-apps/",
  3259:   "/apps/building-github-apps/authenticatingwith-github-apps/",
  3260:   "/apps/building-github-apps/creating-a-github-app/)",
  3261:   "/apps/building-github-apps/identifying-and-authorizing-users-for-github-apps/¬",
  3262:   "/apps/building-github-apps/identifying-and-authorizing-users-for-github-apps/final fantasy 7",
  3263:   "/apps/building-github-apps/identifying-and-authorizing-users-for-github-apps/null",
  3264:   "/apps/building-github-apps/refreshing-user-to-server-access-tokens/null",
  3265:   "/apps/building-github-apps/understanding-scopes-for-auth-apps/",
  3266:   "/apps/building-integrations/setting-up-and-registering-oauth-apps/troubleshooting-authorization-request-errors",
  3267:   "/apps/building-integrations/setting-up-and-registering-oauth-apps/troubleshooting-oauth-app-access-token-request-errors",
  3268:   "/apps/building-oauth-apps-/",
  3269:   "/apps/building-oauth-apps-/authorizing-oauth-apps",
  3270:   "/apps/building-oauth-apps/authoring-oauth-apps/",
  3271:   "/apps/building-oauth-apps/authorizing",
  3272:   "/apps/building-oauth-apps/authorizing-oauth-app",
  3273:   "/apps/building-oauth-apps/authorizing-oauth-app/",
  3274:   "/apps/building-oauth-apps/authorizing-oauth-apps/ https://gitee.com/api/v5/oauth_doc",
  3275:   "/apps/building-oauth-apps/authorizing-oauth-apps/)，實際上要用的",
  3276:   "/apps/building-oauth-apps/authorizing-oauth-apps/git",
  3277:   "/apps/building-oauth-apps/authorizing-options-for",
  3278:   "/apps/building-oauth-apps/authorizing-options-for-oauth-apps",
  3279:   "/apps/building-oauth-apps/creating-an-oauth-app/)，註冊一個新的",
  3280:   "/apps/building-oauth-apps/https://api.github.com",
  3281:   "/apps/building-oauth-apps/understanding-scopes-for-oauth-apps.",
  3282:   "/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/ p2",
  3283:   "/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/null",
  3284:   "/apps/building-oauth-authorizing-oauth-apps/",
  3285:   "/apps/building-oauthorizing-oauth-apps/",
  3286:   "/apps/installing-github-appsUserWarning: Boolean Series key will be reindexed to match DataFrame index.",
  3287:   "/apps/managing-oauth-apps/t",
  3288:   "/apps/managing-oauth-apps/troubleshooting-authorization-requests-errors",
  3289:   "/apps/managing-oauth-apps/troubleshooting-authorization-requests-rerrors",
  3290:   "/apps/managing-oauth-apps/troubleshooting-oauth-app-access-token-request-errors/#bad-verification-code",
  3291:   "/apps/managing-oauth-apps/troubleshooting-oauth-app-access-token-request-errors/bad-verification-code",
  3292:   "/apps/quickstart-guides/setting-up-your",
  3293    "/apps/unified-build",

  3297    "/aryahari",
  3298:   "/asttings/application/new",
  3299:   "/automated-code-scanning/automated-code-scanning-api/",
  3300    "/av3",

  3302    "/aymericdamien/TensorFlow-Examples",
  3303:   "/bing",
  3304    "/blob/master/v3/media",
  3305:   "/blog-post-slug",
  3306:   "/Building Apps _ GitHub Developer Guide (developer.github.com) (CH).htz!/index.html",
  3307    "/bulzaj",

  3309    "/cacti",
  3310:   "/cgov-digital-platform",
  3311:   "/change.atom",
  3312:   "/changes.atom\"/",
  3313:   "/changes/2012-10-26-notifications-api/",
  3314:   "/changes/2012-12-06-create-authorization-for-app/",
  3315:   "/changes/2012-12-08-finding-source-and-fork-repos-for-organizations/",
  3316:   "/changes/2014-02-10-repo-hook-scopes/",
  3317:   "/changes/2014-03-12-page-build-event-for-webhooks/",
  3318:   "/changes/2014-05-06-gist-api-now-truncating-large-files/",
  3319:   "/changes/2014-09-05-removing-gravatar-id/",
  3320:   "/changes/2014-12-03-preview-the-new-organization-webhooks-api/",
  3321:   "/changes/2015-02-18-new-releases-api-methods/",
  3322:   "/changes/2015-02-20-migration-period-removing-authorizations-token/",
  3323:   "/changes/2015-04-20-authorizations-api-response-changes-are-now-in-effect/",
  3324:   "/changes/2015-06-24-api-enhancements-for-working-with-organization-permissions/",
  3325:   "/changes/2016-02-11-issue-locking-api/",
  3326:   "/changes/2016-07-06-github-pages-preview-api/",
  3327:   "/changes/2016-12-16-review-requests-api/",
  3328:   "/changes/2016-12-28-end-traffic-api-preview/",
  3329:   "/changes/2017-01-24-project-webhooks/",
  3330:   "/changes/2017-03-29-official-org-membership/",
  3331:   "/changes/2017-04-17-gdp-relaunch/",
  3332:   "/changes/2017-04-20-protected-branches-dismiss-stale-review/",
  3333:   "/changes/2017-04-25-Integrations-Pre-Release/",
  3334:   "/changes/2017-05-09-end-black-cat-preview/",
  3335:   "/changes/2017-05-23-coc-api/",
  3336:   "/changes/2017-07-17-update-topics-on-repositories/",
  3337:   "/changes/2017-08-17-helium-partner-benefit/",
  3338:   "/changes/2017-10-12-git-signing/",
  3339:   "/changes/2017-10-13-update-the-nested-teams-preview/",
  3340:   "/changes/2017-11-09-repository-transfer-api-preview/",
  3341:   "/changes/2018-03-21-hovercard-api-preview/",
  3342:   "/changes/2018-04-graphql githbu api-graphql-supports-github-apps/",
  3343:   "/changes/2018-05-03-staying-on-top-of-changes-graphql/",
  3344:   "/changes/2018-08-16-changes-to-the-checks-rest-api/",
  3345:   "/changes/2018-09-12-more-complete-issues-workflow-in-graphql/",
  3346:   "/changes/2018-10-11-new-endpoints-available-for-github-apps/",
  3347:   "/changes/2018-10-24-more-complete-pulls-workflow-in-graphql/",
  3348:   "/changes/2018-12-18-content-attachments-api-time-limit/",
  3349:   "/changes/2019-01-31-removing-speedy-preview/",
  3350:   "/changes/2019-04-18-new-webhook-events-and-actions/",
  3351:   "/changes/2019-05-29-update-branch-",
  3352:   "/changes/2019-06-12-team-sync/",
  3353:   "/changes/2019-09-06-more-check-annotations-are-now-shown-on-the-files-changed-tab/",
  3354:   "/changes/2019-11-05",
  3355:   "/changes/2019-12-13-graduated-previews-announced/",
  3356:   "/changes/2020-02-10-deprecating-auth-through-query-param for more information about suggested workarounds and removal dates.",
  3357:   "/changes/2020-02-10-deprecating-auth-through-query-param/ composer",
  3358:   "/changes/2020-02-10-depricating-auth-through-query-param",
  3359:   "/changes/2020-02-14- deprecating-oauau-au-endpoint",
  3360:   "/changes/2020-02-14- deprecating-oauau-au-endpoint/",
  3361:   "/changes/2020-02-14-deprecati",
  3362:   "/changes/2020-02-14-deprecating-oauth-auth-endpoint/ https://lab.github.com/",
  3363:   "/changes/2020-02-14-deprecating-password-auth/ for",
  3364:   "/changes/2020-02-14-deprecating-password-auth/ for more information",
  3365:   "/changes/2020-02-14-deprecating-password-auth/go",
  3366:   "/changes/2020-02-14-deprecating-password-auth/null",
  3367:   "/changes/2020-02-14-deprecating-passwordauth/",
  3368:   "/changes/2020-02-14-deprecating-passwords-autg",
  3369:   "/changes/2020-02-14-deprecating-passwords-auth",
  3370:   "/changes/2020-02-14-deprecating-passwords-auth/",
  3371:   "/changes/2020-02-14-depricating-password-auth",
  3372:   "/changes/2020-02-14-depricating-password-auth/",
  3373:   "/changes/2020-03-20Hacked<br><br><center><font color=\"red\">XSS BY IrwanLx11<br><br><img src=x onerror=alert(document.cookie)><br><br><img src=x onerror=alert(document.domain)>-temporary-graphql-explorer-downtime/",
  3374:   "/changes/2020-04-07-expanding-rest-api-support-for-the-triage-and-maintain-roles/](https://developer.github.com/changes/2020-04-07-expanding-rest-api-support-for-the-triage-and-maintain-roles",
  3375:   "/changes/2020-04-15-replacing-the-installation-and-installation-repositories-events//",
  3376:   "/changes/2020-04-15-replacing-the-installation-and-installation-repositories-events/null",
  3377:   "/changes/2020-04-30-expiring-user-to-server-access-tokens-for-github-apps/ Seattle",
  3378:   "/changes/28/delete/linkers",
  3379:   "/changes/deprecating-password-auth/",
  3380:   "/changes/https://developer.github.com/changes/",
  3381    "/Chlorie/Deenote/releases/latest",

  3384    "/content/v3",
  3385:   "/content/v3/code-scanning",
  3386    "/copay",

  3389    "/david24995",
  3390:   "/developer_github_/",
  3391    "/developerpe/canal",
  3392    "/developers",
  3393:   "/diegov3",
  3394:   "/Dinesh0823/KafkaLearning/issues/2",
  3395    "/djawesome",

  3398    "/dwesome",
  3399:   "/early_access/graphql/explorer",
  3400:   "/early-acces/graphql/explorer/",
  3401:   "/early-access/graphql/explor",
  3402:   "/early-access/graphql/explor/",
  3403:   "/early-access/GraphQL/explorer",
  3404:   "/early-access/graphql/mutation/addcomment/",
  3405:   "/early-access/graphql/object/query/",
  3406:   "/early-graphql/exploreaccess/",
  3407:   "/earlyaccess/graphql",
  3408:   "/earlyaccessgraphql/explorer",
  3409:   "/ebot7/orgs/",
  3410    "/elenasuv",

  3412    "/emojls",
  3413:   "/engineering",
  3414    "/enterprise/2",

  3417    "/enterprise/2.1/",
  3418:   "/enterprise/2.1/guides/basics-of-authentication/",
  3419    "/enterprise/2.1/v3/oauth_authorizations/",

  3422    "/enterprise/2.1/v3/repos/",
  3423:   "/enterprise/2.10/v3/guides/",
  3424    "/enterprise/2.10/v3/repos/hooks/",
  3425    "/enterprise/2.10/v4/",
  3426:   "/enterprise/2.10/v4/guides/",
  3427:   "/enterprise/2.10/v4/guides/forming-calls/",
  3428    "/enterprise/2.11/admin/",
  3429:   "/enterprise/2.11/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/",
  3430:   "/enterprise/2.11/changes/2014-03-04-timezone-handling-changes",
  3431:   "/enterprise/2.11/v3/guides/managing-deploy-keys/",
  3432    "/enterprise/2.11/v3/libraries/",

  3435    "/enterprise/2.11/v3/repos/downloads/",
  3436:   "/enterprise/2.11/v3/repos/merging/",
  3437    "/enterprise/2.11/v3/repos/statistics/",

  3441    "/enterprise/2.11/v4/enum/reactioncontent/",
  3442:   "/enterprise/2.11/v4/guides/migrating-from-rest/",
  3443:   "/enterprise/2.11/v4/guides/using-the-explorer/",
  3444    "/enterprise/2.11/v4/interface/actor/",

  3446    "/enterprise/2.11/v4/interface/reactable/",
  3447:   "/enterprise/2.11/v4/object/assignedevent/",
  3448    "/enterprise/2.11/v4/object/commit/",
  3449    "/enterprise/2.11/v4/object/commitcommentconnection/",
  3450:   "/enterprise/2.11/v4/object/commitcommentedge/",
  3451:   "/enterprise/2.11/v4/object/pageinfo/",
  3452:   "/enterprise/2.11/v4/object/pullrequesttimelineitemedge/",
  3453:   "/enterprise/2.11/v4/object/reactinguserconnection/",
  3454:   "/enterprise/2.11/v4/object/reactinguseredge/",
  3455    "/enterprise/2.11/v4/object/reviewrequest/",

  3457    "/enterprise/2.11/v4/scalar/html/",
  3458:   "/enterprise/2.11/v4/scalar/string/",
  3459    "/enterprise/2.11/v4/scalar/uri/",
  3460:   "/enterprise/2.11/webhooks/configuring/",
  3461:   "/enterprise/2.11/webhooks/creating/",
  3462    "/enterprise/2.12/apps/about-apps/",
  3463:   "/enterprise/2.12/apps/building-github-apps/",
  3464:   "/enterprise/2.12/apps/building-your-first-github-app/",
  3465    "/enterprise/2.12/apps/differences-between-apps/",
  3466:   "/enterprise/2.12/apps/migrating-oauth-apps-to-github-apps/",
  3467:   "/enterprise/2.12/changes/2016-04-04-git-signing-api-preview/",
  3468    "/enterprise/2.12/v3/enterprise-admin/",
  3469    "/enterprise/2.12/v3/enterprise-admin/admin_stats/",
  3470:   "/enterprise/2.12/v3/enterprise-admin/global_webhooks/",
  3471    "/enterprise/2.12/v3/enterprise-admin/ldap/",
  3472    "/enterprise/2.12/v3/enterprise-admin/users/",
  3473:   "/enterprise/2.12/v3/guides/",
  3474:   "/enterprise/2.12/v3/guides/best-practices-for-integrators/",
  3475:   "/enterprise/2.12/v3/guides/getting-started/",
  3476:   "/enterprise/2.12/v3/guides/using-ssh-agent-forwarding/",
  3477    "/enterprise/2.12/v3/oauth_authorizations/",

  3480    "/enterprise/2.12/v4/",
  3481:   "/enterprise/2.12/v4/guides/using-the-explorer/",
  3482:   "/enterprise/2.12/webhooks/securing/",
  3483:   "/enterprise/2.13/apps/building-oauth-apps/",
  3484:   "/enterprise/2.13/apps/building-oauth-apps/creating-an-oauth-app/",
  3485    "/enterprise/2.13/v3\"",
  3486    "/enterprise/2.13/v3/apps/",
  3487:   "/enterprise/2.13/v3/enterprise-admin/orgs/",
  3488    "/enterprise/2.13/v3/enterprise-admin/repo_pre_receive_hooks/",
  3489    "/enterprise/2.13/v3/enterprise-admin/users/",
  3490:   "/enterprise/2.13/v3/git/",
  3491:   "/enterprise/2.13/v3/guides/basics-of-authentication/",
  3492:   "/enterprise/2.13/v3/guides/getting-started/",
  3493:   "/enterprise/2.13/v3/orgs/outside_collaborators/",
  3494    "/enterprise/2.13/v3/pulls/review_requests/",

  3501    "/enterprise/2.13/v3/users/keys/",
  3502:   "/enterprise/2.13/v4/guides/migrating-from-rest/",
  3503:   "/enterprise/2.13/v4/guides/using-the-explorer/",
  3504    "/enterprise/2.13/v4/query/",
  3505:   "/enterprise/2.14/apps/building-github-apps/authenticating-with-github-apps/",
  3506:   "/enterprise/2.14/apps/quickstart-guides/setting-up-your-development-environment/",
  3507    "/enterprise/2.14/v3/activity/",

  3512    "/enterprise/2.14/v3/enterprise-admin/repo_pre_receive_hooks/",
  3513:   "/enterprise/2.14/v3/gists/",
  3514:   "/enterprise/2.14/v3/git/",
  3515:   "/enterprise/2.14/v3/git/blobs/",
  3516:   "/enterprise/2.14/v3/git/tags/",
  3517    "/enterprise/2.14/v3/media/",

  3524    "/enterprise/2.14/v3/repos/hooks/",
  3525:   "/enterprise/2.14/v3/users/gpg_keys/",
  3526    "/enterprise/2.14/v3/versions/",
  3527:   "/enterprise/2.14/v4/guides/forming-calls/",
  3528    "/enterprise/2.14/v4/object/",
  3529    "/enterprise/2.14/v4/object/pullrequestreviewcomment/",
  3530:   "/enterprise/2.14/webhooks/securing/",
  3531:   "/enterprise/2.15/apps/quickstart-guides/creating-ci-tests-with-the-checks-api/",
  3532    "/enterprise/2.15/v3/checks/",

  3534    "/enterprise/2.15/v3/codes_of_conduct/",
  3535:   "/enterprise/2.15/v3/enterprise-admin/global_webhooks/",
  3536:   "/enterprise/2.15/v3/git/blobs/",
  3537:   "/enterprise/2.15/v3/git/trees/",
  3538:   "/enterprise/2.15/v3/guides/automating-deployments-to-integrators/",
  3539:   "/enterprise/2.15/v3/guides/basics-of-authentication/",
  3540:   "/enterprise/2.15/v3/guides/traversing-with-pagination/",
  3541:   "/enterprise/2.15/v3/guides/working-with-comments/",
  3542    "/enterprise/2.15/v3/issues/comments/",

  3553    "/enterprise/2.15/v4/object/searchresultitemconnection/",
  3554:   "/enterprise/2.15/v4/scalar/string/",
  3555:   "/enterprise/2.16/apps/building-github-apps/",
  3556:   "/enterprise/2.16/apps/building-github-apps/creating-github-apps-from-a-manifest/",
  3557:   "/enterprise/2.16/apps/installing-github-apps/",
  3558    "/enterprise/2.16/enterprise/v3/enterprise-admin/license/",

  3562    "/enterprise/2.16/v3/enterprise-admin/ldap/",
  3563:   "/enterprise/2.16/v3/guides/basics-of-authentication/",
  3564:   "/enterprise/2.16/v3/guides/best-practices-for-integrators/",
  3565:   "/enterprise/2.16/v3/guides/discovering-resources-for-a-user/",
  3566:   "/enterprise/2.16/v3/guides/replacing-github-services/",
  3567    "/enterprise/2.16/v3/issues/e",

  3571    "/enterprise/2.16/v3/media/",
  3572:   "/enterprise/2.16/v3/orgs/members/",
  3573    "/enterprise/2.16/v3/previews/",
  3574    "/enterprise/2.16/v3/repos/comments/",
  3575:   "/enterprise/2.16/v3/repos/expressscripts-ops/unix_patching_v2",
  3576:   "/enterprise/2.16/v3/repos/pages/",
  3577    "/enterprise/2.16/v3/repos/statistics/",

  3579    "/enterprise/2.16/v3/users/emails/",
  3580:   "/enterprise/2.16/v4/guides/",
  3581:   "/enterprise/2.16/v4/guides/best-practices-for-integrators/",
  3582:   "/enterprise/2.16/v4/guides/resource-limitations/",
  3583:   "/enterprise/2.16/v4/guides/using-global-node-ids/",
  3584    "/enterprise/2.16/v4/object/",
  3585    "/enterprise/2.16/v4/object/pullrequest/",
  3586:   "/enterprise/2.16/webhooks/configuring/",
  3587:   "/enterprise/2.17/apps/building-github-apps/understanding-rate-limits-for-github-apps/",
  3588:   "/enterprise/2.17/apps/managing-oauth-apps/modifying-an-oauth-app/",
  3589:   "/enterprise/2.17/apps/managing-oauth-apps/troubleshooting-oauth-app-access-token-request-errors/",
  3590:   "/enterprise/2.17/changes/2012-10-26-notifications-api/",
  3591:   "/enterprise/2.17/changes/2017-12-19-graphql-node-id/",
  3592:   "/enterprise/2.17/changes/2018-04-25-github-services-deprecation/",
  3593:   "/enterprise/2.17/changes/2018-05-24-user-migration-api/",
  3594:   "/enterprise/2.17/changes/2018-11-05-github-services-brownout/",
  3595:   "/enterprise/2.17/changes/2020-02-26-new-delete-reactions-endpoints/",
  3596:   "/enterprise/2.17/changes/2020-03-23-ActionsGA/",
  3597:   "/enterprise/2.17/changes/3/",
  3598    "/enterprise/2.17/checks",
  3599:   "/enterprise/2.17/marketplace/integrating-with-the-github-marketplace-api/github-marketplace-rest-api-endpoints/",
  3600:   "/enterprise/2.17/marketplace/integrating-with-the-github-marketplace-api/github-marketplace-webhook-events/",
  3601:   "/enterprise/2.17/marketplace/integrating-with-the-github-marketplace-api/handling-new-purchases-and-free-trials/",
  3602:   "/enterprise/2.17/marketplace/integrating-with-the-github-marketplace-api/testing-github-marketplace-apps/",
  3603:   "/enterprise/2.17/marketplace/listing-on-github-marketplace/configuring-the-github-marketplace-webhook/",
  3604:   "/enterprise/2.17/marketplace/listing-on-github-marketplace/writing-github-marketplace-listing-descriptions/",
  3605:   "/enterprise/2.17/marketplace/selling-your-app/github-marketplace-pricing-plans/",
  3606    "/enterprise/2.17/v3/)",
  3607    "/enterprise/2.17/v3/actions/workflow_jobs/",
  3608:   "/enterprise/2.17/v3/activity/starring/",
  3609:   "/enterprise/2.17/v3/enterprise-admin/search_indexing/",
  3610:   "/enterprise/2.17/v3/guides/working-with-comments/",
  3611    "/enterprise/2.17/v3/issues/events/",

  3615    "/enterprise/2.17/v3/repos/rocketseat/rocketseat.com.br",
  3616:   "/enterprise/2.17/v3/troubleshooting/",
  3617    "/enterprise/2.17/v3/users//",
  3618:   "/enterprise/2.17/v3/users/blocking/",
  3619    "/enterprise/2.17/v3/users/followers/",
  3620    "/enterprise/2.17/v3/users/octocat/events{/privacy}",
  3621:   "/enterprise/2.17/v4/changelog/2/",
  3622:   "/enterprise/2.17/v4/changelog/26/",
  3623    "/enterprise/2.17/v4/enum/checkannotationlevel/",

  3629    "/enterprise/2.17/v4/enum/userstatusorderfield/",
  3630:   "/enterprise/2.17/v4/guides/managing-enterprise-accounts/",
  3631    "/enterprise/2.17/v4/input_object/addcommentinput/",
  3632    "/enterprise/2.17/v4/input_object/addreactioninput/",
  3633:   "/enterprise/2.17/v4/input_object/changeuserstatusinput/",
  3634    "/enterprise/2.17/v4/input_object/clearlabelsfromlabelableinput/",

  3642    "/enterprise/2.17/v4/mutation/addreaction/",
  3643:   "/enterprise/2.17/v4/mutation/changeuserstatus/",
  3644    "/enterprise/2.17/v4/mutation/clearlabelsfromlabelable/",

  3648    "/enterprise/2.17/v4/object/app/",
  3649:   "/enterprise/2.17/v4/object/assignedevent/",
  3650    "/enterprise/2.17/v4/object/contributioncalendar/",

  3652    "/enterprise/2.17/v4/object/createdcommitcontribution/",
  3653:   "/enterprise/2.17/v4/object/deploymentenvironmentchangedevent/",
  3654:   "/enterprise/2.17/v4/object/githubmetadata/",
  3655    "/enterprise/2.17/v4/object/issue/",
  3656    "/enterprise/2.17/v4/object/issuecommentconnection/",
  3657:   "/enterprise/2.17/v4/object/issuecommentedge/",
  3658    "/enterprise/2.17/v4/object/labeledevent/",
  3659    "/enterprise/2.17/v4/object/milestone/",
  3660:   "/enterprise/2.17/v4/object/pageinfo/",
  3661:   "/enterprise/2.17/v4/object/pullrequestchangedfileconnection/",
  3662    "/enterprise/2.17/v4/object/referencedevent/",

  3665    "/enterprise/2.17/v4/object/reviewrequest/",
  3666:   "/enterprise/2.17/v4/object/searchresultitemedge/",
  3667:   "/enterprise/2.17/v4/object/tag/",
  3668    "/enterprise/2.17/v4/object/treeentry/",

  3671    "/enterprise/2.17/v4/union/issuetimelineitem/",
  3672:   "/enterprise/2.18/apps/building-github-apps/refreshing-user-to-server-access-tokens/",
  3673:   "/enterprise/2.18/apps/managing-github-apps/deleting-a-github-app/",
  3674:   "/enterprise/2.18/apps/managing-github-apps/modifying-a-github-app/",
  3675:   "/enterprise/2.18/apps/managing-github-apps/transferring-ownership-of-a-github-app/",
  3676:   "/enterprise/2.18/changes/2/",
  3677:   "/enterprise/2.18/changes/2019-11-05-deprecated-passwords-and-authorizations-api/",
  3678:   "/enterprise/2.18/changes/2019-12-03-internal-visibility-changes/",
  3679:   "/enterprise/2.18/changes/2020-02-14-deprecating-oauth-app-endpoint/",
  3680:   "/enterprise/2.18/changes/2020-02-14-deprecating-password-auth/",
  3681:   "/enterprise/2.18/changes/2020-04-30-expiring-user-to-server-access-tokens-for-github-apps/",
  3682:   "/enterprise/2.18/changes/2020-05-01-suspending-a-github-app-installation/",
  3683    "/enterprise/2.18/enterprise/v3/enterprise-admin/",
  3684    "/enterprise/2.18/enterprise/v3/enterprise-admin/admin_stats/",
  3685:   "/enterprise/2.18/https://github.service.anz/csp/PlatformServicesBAU/issues/110",
  3686:   "/enterprise/2.18/marketplace/integrating-with-the-github-marketplace-api/",
  3687:   "/enterprise/2.18/marketplace/selling-your-app/github-marketplace-pricing-plans/",
  3688:   "/enterprise/2.18/partnerships/token-scanning/",
  3689    "/enterprise/2.18/users/arvinjayd",

  3692    "/enterprise/2.18/v3\"}",
  3693:   "/enterprise/2.18/v3/activity/starring/",
  3694    "/enterprise/2.18/v3/content",

  3696    "/enterprise/2.18/v3/emojis/",
  3697:   "/enterprise/2.18/v3/enterprise-admin/org_pre_receive_hooks/",
  3698    "/enterprise/2.18/v3/enterprise-admin/pre_receive_hooks/",
  3699:   "/enterprise/2.18/v3/get-content",
  3700:   "/enterprise/2.18/v3/get-contents",
  3701:   "/enterprise/2.18/v3/guides/building-a-ci-server/",
  3702:   "/enterprise/2.18/v3/guides/working-with-comments/",
  3703    "/enterprise/2.18/v3/links/1/schema",
  3704    "/enterprise/2.18/v3/markdown/",
  3705:   "/enterprise/2.18/v3/repos/arvinjayd/arvinjayd/git/tags/eae21b733cd4a0804f0f292b32569ed6c440021a",
  3706    "/enterprise/2.18/v3/users//emails/",

  3709    "/enterprise/2.18/v4/android",
  3710:   "/enterprise/2.18/v4/changelog/2/",
  3711:   "/enterprise/2.18/v4/changelog/2020-03-23-schema-changes/",
  3712:   "/enterprise/2.18/v4/enterprise-admin/orgs/",
  3713    "/enterprise/2.18/v4/enum/checkruntype/",

  3715    "/enterprise/2.18/v4/enum/contributionorderfield/",
  3716:   "/enterprise/2.18/v4/enum/mergestatestatus/",
  3717    "/enterprise/2.18/v4/enum/repositoryorderfield/",

  3719    "/enterprise/2.18/v4/enum/statusstate/",
  3720:   "/enterprise/2.18/v4/guides/managing-enterprise-accounts/",
  3721    "/enterprise/2.18/v4/input_object/addcommentinput/",
  3722    "/enterprise/2.18/v4/input_object/draftpullrequestreviewcomment/",
  3723:   "/enterprise/2.18/v4/interface/assignable/",
  3724    "/enterprise/2.18/v4/interface/auditentry/",

  3726    "/enterprise/2.18/v4/interface/repositoryinfo/",
  3727:   "/enterprise/2.18/v4/mutation/addassigneestoassignable/",
  3728    "/enterprise/2.18/v4/mutation/addcomment/",

  3738    "/enterprise/2.18/v4/object/externalidentity/",
  3739:   "/enterprise/2.18/v4/object/gitactor/",
  3740    "/enterprise/2.18/v4/object/labelconnection/",
  3741:   "/enterprise/2.18/v4/object/orgconfigdisablecollaboratorsonlyauditentry/",
  3742:   "/enterprise/2.18/v4/object/orginvitememberauditentry/",
  3743:   "/enterprise/2.18/v4/object/orgupdatememberauditentry/",
  3744    "/enterprise/2.18/v4/object/pinnedissueconnection/",
  3745:   "/enterprise/2.18/v4/object/pullrequestchangedfileconnection/",
  3746:   "/enterprise/2.18/v4/object/pullrequestedge/",
  3747:   "/enterprise/2.18/v4/object/pullrequestreviewcommentedge/",
  3748    "/enterprise/2.18/v4/object/ratelimit/",

  3750    "/enterprise/2.18/v4/object/releaseconnection/",
  3751:   "/enterprise/2.18/v4/object/releaseedge/",
  3752:   "/enterprise/2.18/v4/object/repoconfigdisablecollaboratorsonlyauditentry/",
  3753    "/enterprise/2.18/v4/object/repositoryvulnerabilityalert/",

  3755    "/enterprise/2.18/v4/object/searchresultitemconnection/",
  3756:   "/enterprise/2.18/v4/object/searchresultitemedge/",
  3757    "/enterprise/2.18/v4/object/securityadvisory/",

  3766    "/enterprise/2.18/v4/union/requestedreviewer/",
  3767:   "/enterprise/2.19/apps/managing-github-apps/transferring-ownership-of-a-github-app/",
  3768:   "/enterprise/2.19/changes/2/",
  3769:   "/enterprise/2.19/changes/2016-04-06-deployment-and-deployment-status-enhancements/",
  3770:   "/enterprise/2.19/changes/2018-05-24-user-migration-api/",
  3771:   "/enterprise/2.19/changes/2020-04-07-expanding-rest-api-support-for-the-triage-and-maintain-roles/",
  3772:   "/enterprise/2.19/changes/2020-05-01-suspending-a-github-app-installation/",
  3773:   "/enterprise/2.19/changes/30/",
  3774    "/enterprise/2.19/enterprise/v3/",
  3775    "/enterprise/2.19/enterprise/v3/enterprise-admin",
  3776:   "/enterprise/2.19/marketplace/integrating-with-the-github-marketplace-api/handling-new-purchases-and-free-trials/",
  3777:   "/enterprise/2.19/marketplace/listing-on-github-marketplace/configuring-the-github-marketplace-webhook/",
  3778:   "/enterprise/2.19/marketplace/selling-your-app/",
  3779    "/enterprise/2.19/v3'}",
  3780    "/enterprise/2.19/v3/503185045",
  3781:   "/enterprise/2.19/v3/activity/watching/#get-a-repository-subscription\"",
  3782:   "/enterprise/2.19/v3/apps/building-integrations",
  3783:   "/enterprise/2.19/v3/apps/building-integrations/setting-up-and",
  3784:   "/enterprise/2.19/v3/apps/building-integrations/setting-up-and-registering-github-apps/identifying-users-for-github-apps/",
  3785    "/enterprise/2.19/v3/apps/oauth_applications/",
  3786:   "/enterprise/2.19/v3/code-scanning/",
  3787:   "/enterprise/2.19/v3/guides/managing-deploy-keys/#deploy-keys",
  3788    "/enterprise/2.19/v3/markdown/",
  3789:   "/enterprise/2.19/v3/migrations/orgs/",
  3790:   "/enterprise/2.19/v3/migrations/source_imports/",
  3791    "/enterprise/2.19/v3/repos/commits/c467b",

  3797    "/enterprise/2.19/v4/enum/issueorderfield/",
  3798:   "/enterprise/2.19/v4/enum/mergestatestatus/",
  3799:   "/enterprise/2.19/v4/enum/organizationinvitationtype/",
  3800    "/enterprise/2.19/v4/enum/pullrequestreviewcommentstate/",

  3805    "/enterprise/2.19/v4/input_object/createteamdiscussioninput/",
  3806:   "/enterprise/2.19/v4/input_object/organizationorder/",
  3807    "/enterprise/2.19/v4/input_object/unlocklockableinput/",

  3813    "/enterprise/2.19/v4/mutation/addpullrequestreview/",
  3814:   "/enterprise/2.19/v4/mutation/changeuserstatus/",
  3815    "/enterprise/2.19/v4/mutation/cloneproject/",

  3819    "/enterprise/2.19/v4/mutation/moveprojectcard/",
  3820:   "/enterprise/2.19/v4/mutation/updateenterpriseactionexecutioncapabilitysetting/",
  3821:   "/enterprise/2.19/v4/mutation/updateenterpriseallowprivaterepositoryforkingsetting/",
  3822:   "/enterprise/2.19/v4/mutation/updateenterprisedefaultrepositorypermissionsetting/",
  3823    "/enterprise/2.19/v4/mutation/updatepullrequest/",

  3828    "/enterprise/2.19/v4/object/createdissuecontributionconnection/",
  3829:   "/enterprise/2.19/v4/object/createdissuecontributionedge/",
  3830    "/enterprise/2.19/v4/object/enterprise/",

  3835    "/enterprise/2.19/v4/object/issueconnection/",
  3836:   "/enterprise/2.19/v4/object/labeledge/",
  3837    "/enterprise/2.19/v4/object/mannequin/",

  3840    "/enterprise/2.19/v4/object/reactionconnection/",
  3841:   "/enterprise/2.19/v4/object/registrypackageconnection/",
  3842    "/enterprise/2.19/v4/object/repoaccessauditentry/",
  3843    "/enterprise/2.19/v4/object/repoaddtopicauditentry/",
  3844:   "/enterprise/2.19/v4/object/repoconfigdisableanonymousgitaccessauditentry/",
  3845:   "/enterprise/2.19/v4/object/repositorycollaboratoredge/",
  3846    "/enterprise/2.19/v4/object/repositoryconnection/",
  3847:   "/enterprise/2.19/v4/object/repositoryvisibilitychangedisableauditentry/",
  3848    "/enterprise/2.19/v4/object/reviewrequestedevent/",
  3849:   "/enterprise/2.19/v4/object/reviewrequestedge/",
  3850:   "/enterprise/2.19/v4/object/tag/",
  3851    "/enterprise/2.19/v4/object/team/",
  3852    "/enterprise/2.19/v4/object/treeentry/",
  3853:   "/enterprise/2.19/v4/object/useredge/",
  3854    "/enterprise/2.19/v4/reference/interface/node/",
  3855    "/enterprise/2.19/v4/scalar/date/",
  3856:   "/enterprise/2.19/v4/scalar/gitobjectid/",
  3857    "/enterprise/2.19/v4/scalar/html/",

  3860    "/enterprise/2.19/v4/scalar/x509certificate/",
  3861:   "/enterprise/2.19/v4/union/assignee/",
  3862    "/enterprise/2.19/v4/union/auditentryactor/",
  3863:   "/enterprise/2.2/guides/using-ssh-agent-forwarding/",
  3864    "/enterprise/2.2/v3/enterprise/ldap/",
  3865    "/enterprise/2.2/v3/issues/",
  3866:   "/enterprise/2.2/v3/orgs/teams/",
  3867    "/enterprise/2.2/v3/repos/branches/",

  3872    "/enterprise/2.20//v3/",
  3873:   "/enterprise/2.20/2.18Hacked<br><br><center><font color=\"red\">XSS BY IrwanLx11<br><br><img src=x onerror=alert(document.cookie)><br><br><img src=x onerror=alert(document.domain)>/",
  3874    "/enterprise/2.20/2.19.10/v3/pulls/",

  3876    "/enterprise/2.20/2.19/v3/enterprise-admin/admin_stats/",
  3877:   "/enterprise/2.20/2.19/v3/git/commits/",
  3878    "/enterprise/2.20/2.19/v3/pulls/",
  3879    "/enterprise/2.20/2.5.12/v3/",
  3880:   "/enterprise/2.20/apps/differences-between-apps/#what-can-github-apps-and-oauth-apps-access",
  3881    "/enterprise/2.20/blob/master/v3/media",
  3882:   "/enterprise/2.20/changes/2/",
  3883:   "/enterprise/2.20/changes/2014-03-04-timezone-handling-changes/",
  3884:   "/enterprise/2.20/changes/2018-04-25-github-services-deprecation/",
  3885:   "/enterprise/2.20/changes/2020-02-14-deprecating-oauth-app-endpoint/",
  3886:   "/enterprise/2.20/changes/2020-03-06-filtering-jobs-for-a-workflow-run/",
  3887:   "/enterprise/2.20/changes/30/",
  3888    "/enterprise/2.20/enterprise/v3/enterprise-admin/admin_stats/",
  3889    "/enterprise/2.20/explorer",
  3890:   "/enterprise/2.20/graphql",
  3891    "/enterprise/2.20/input_object/updaterepositoryinput/",
  3892:   "/enterprise/2.20/marketplace/integrating-with-the-github-marketplace-api/",
  3893:   "/enterprise/2.20/marketplace/integrating-with-the-github-marketplace-api/github-marketplace-rest-api-endpoints/",
  3894:   "/enterprise/2.20/marketplace/integrating-with-the-github-marketplace-api/testing-github-marketplace-apps/",
  3895:   "/enterprise/2.20/marketplace/listing-on-github-marketplace/setting-a-github-marketplace-listing-s-pricing-plan/",
  3896    "/enterprise/2.20/object/repository/",

  3911    "/enterprise/2.20/v3/apps/marketplace/",
  3912:   "/enterprise/2.20/v3/guides/replacing-github-services/",
  3913    "/enterprise/2.20/v3/markdown/",
  3914:   "/enterprise/2.20/v3/migrations/users/",
  3915    "/enterprise/2.20/v3/mime/",

  3918    "/enterprise/2.20/v3/repos/events",
  3919:   "/enterprise/2.20/v3/repos/merges",
  3920    "/enterprise/2.20/v3/scim/",

  3927    "/enterprise/2.20/v3/users/SSINDER",
  3928:   "/enterprise/2.20/v4/changelog/2017-05-30-schema-changes/",
  3929:   "/enterprise/2.20/v4/changelog/2020-02-05-schema-changes/",
  3930:   "/enterprise/2.20/v4/changelog/2020-03-23-schema-changes/",
  3931:   "/enterprise/2.20/v4/changelog/2020-04-23-schema-changes/",
  3932    "/enterprise/2.20/v4/enterprise-admin/",
  3933:   "/enterprise/2.20/v4/enterprise-admin/management_console/",
  3934    "/enterprise/2.20/v4/enterprise-admin/repo_pre_receive_hooks/",

  3937    "/enterprise/2.20/v4/enum/enterpriseuserdeployment/",
  3938:   "/enterprise/2.20/v4/enum/languageorderfield/",
  3939:   "/enterprise/2.20/v4/enum/orgremovebillingmanagerauditentryreason/",
  3940    "/enterprise/2.20/v4/enum/projecttemplate/",

  3947    "/enterprise/2.20/v4/enum/userstatusorderfield/",
  3948:   "/enterprise/2.20/v4/graphql",
  3949    "/enterprise/2.20/v4/input_object/addprojectcardinput/",

  3966    "/enterprise/2.20/v4/interface/profileowner/",
  3967:   "/enterprise/2.20/v4/interface/registrypackageowner/",
  3968:   "/enterprise/2.20/v4/interface/registrypackagesearch/",
  3969    "/enterprise/2.20/v4/interface/starrable/",
  3970    "/enterprise/2.20/v4/mutation/acceptenterpriseadministratorinvitation/",
  3971:   "/enterprise/2.20/v4/mutation/accepttopicsuggestion/",
  3972:   "/enterprise/2.20/v4/mutation/addassigneestoassignable/",
  3973    "/enterprise/2.20/v4/mutation/cloneproject/",

  3983    "/enterprise/2.20/v4/mutation/transferissue/",
  3984:   "/enterprise/2.20/v4/mutation/updateenterprisememberscancreaterepositoriessetting/",
  3985    "/enterprise/2.20/v4/mutation/updateproject/",

  3992    "/enterprise/2.20/v4/object/addedtoprojectevent/",
  3993:   "/enterprise/2.20/v4/object/assignedevent/",
  3994    "/enterprise/2.20/v4/object/blame/",
  3995:   "/enterprise/2.20/v4/object/blamerange/",
  3996    "/enterprise/2.20/v4/object/branchprotectionruleconnection/",

  3998    "/enterprise/2.20/v4/object/commitcommentconnection/",
  3999:   "/enterprise/2.20/v4/object/commitedge/",
  4000    "/enterprise/2.20/v4/object/deploymentconnection/",

  4006    "/enterprise/2.20/v4/object/followerconnection/",
  4007:   "/enterprise/2.20/v4/object/gitactor/",
  4008    "/enterprise/2.20/v4/object/issue/",
  4009    "/enterprise/2.20/v4/object/issueconnection/",
  4010:   "/enterprise/2.20/v4/object/issuetimelineitemedge/",
  4011    "/enterprise/2.20/v4/object/memberscandeletereposclearauditentry/",
  4012:   "/enterprise/2.20/v4/object/organizationteamshovercardcontext/",
  4013:   "/enterprise/2.20/v4/object/packagetag/",
  4014:   "/enterprise/2.20/v4/object/privaterepositoryforkingdisableauditentry/",
  4015    "/enterprise/2.20/v4/object/projectconnection/",
  4016:   "/enterprise/2.20/v4/object/projectedge/",
  4017:   "/enterprise/2.20/v4/object/pullrequestchangedfile/",
  4018    "/enterprise/2.20/v4/object/pullrequestcommit/",
  4019    "/enterprise/2.20/v4/object/pullrequestconnection/",
  4020:   "/enterprise/2.20/v4/object/pullrequestedge/",
  4021    "/enterprise/2.20/v4/object/pullrequestreview/",

  4024    "/enterprise/2.20/v4/object/refconnection/",
  4025:   "/enterprise/2.20/v4/object/registrypackageedge/",
  4026    "/enterprise/2.20/v4/object/securityvulnerability/",
  4027    "/enterprise/2.20/v4/object/securityvulnerabilityconnection/",
  4028:   "/enterprise/2.20/v4/object/tag/",
  4029    "/enterprise/2.20/v4/object/tree/",
  4030:   "/enterprise/2.20/v4/object/unassignedevent/",
  4031    "/enterprise/2.20/v4/object/usercontentedit/",

  4034    "/enterprise/2.20/v4/scalar/float/",
  4035:   "/enterprise/2.20/v4/scalar/gitrefname/",
  4036:   "/enterprise/2.20/v4/scalar/gitsshremote/",
  4037    "/enterprise/2.20/v4/scalar/precisedatetime/",

  4039    "/enterprise/2.20/v4/union/enterprisemember/",
  4040:   "/enterprise/2.20/v4/union/permissiongranter/",
  4041    "/enterprise/2.21/",
  4042:   "/enterprise/2.21/apps/building-integrations/",
  4043:   "/enterprise/2.21/apps/building-oauth-apps/scopes-for-oauth-apps/",
  4044    "/enterprise/2.21/v3/actions/self_hosted_runners/",

  4050    "/enterprise/2.3/v3/repos/",
  4051:   "/enterprise/2.4/early-access/integrations/",
  4052:   "/enterprise/2.4/guides/",
  4053    "/enterprise/2.4/libraries/",
  4054:   "/enterprise/2.4/v3/enterprise/management_console/",
  4055:   "/enterprise/2.4/v3/git/",
  4056:   "/enterprise/2.4/v3/orgs/members/",
  4057    "/enterprise/2.4/v3/repos/",

  4059    "/enterprise/2.4/webhooks/",
  4060:   "/enterprise/2.5/early-access/integrations/",
  4061    "/enterprise/2.5/v3/auth/",

  4067    "/enterprise/2.6/v3/enterprise/license/",
  4068:   "/enterprise/2.6/v3/enterprise/management_console/",
  4069:   "/enterprise/2.6/v3/enterprise/orgs/",
  4070    "/enterprise/2.6/v3/repos/",

  4076    "/enterprise/2.8/apps/",
  4077:   "/enterprise/2.8/apps/building-integrations/managing-oauth-apps/",
  4078:   "/enterprise/2.8/apps/building-integrations/setting-up-a-new-integration/",
  4079:   "/enterprise/2.8/apps/building-integrations/setting-up-and-registering-oauth-apps/about-authorization-options-for-oauth-apps/",
  4080    "/enterprise/2.8/v3/enterprise/",
  4081:   "/enterprise/2.8/v3/git/tags/",
  4082:   "/enterprise/2.8/v3/guides/",
  4083:   "/enterprise/2.8/v3/guides/building-a-ci-server/",
  4084    "/enterprise/2.8/v3/media/",
  4085:   "/enterprise/2.8/v3/orgs/",
  4086    "/enterprise/2.8/v3/repos/deployments/",

  4089    "/enterprise/2.8/v3/users/emails/",
  4090:   "/enterprise/2.9/apps/building-oauth-apps/creating-an-oauth-app/",
  4091:   "/enterprise/2.9/apps/building-oauth-apps/scopes-for-oauth-apps/",
  4092    "/enterprise/2.9/v3/",

  4105    "/fernandohfs/sales-api",
  4106:   "/GET/search/users",
  4107:   "/gitalk/",
  4108:   "/gitalk/gitalk",
  4109:   "/GitHub Developer _ GitHub Developer Guide (developer.github.com) (CH).htz!/index.html",
  4110:   "/github/services/issues/8005",
  4111:   "/google/iosched",
  4112:   "/google/iosches",
  4113:   "/graphiql",
  4114:   "/graphql/graphiql",
  4115:   "/graphql/v4/explorer",
  4116:   "/guides/resource-limitations/",
  4117:   "/guolindev",
  4118:   "/guolindev/booksource",
  4119    "/hafeez8165526",
  4120:   "/hfengv",
  4121    "/home",

  4123    "/http://baidu.com",
  4124:   "/https://github.com/MaiiconDouglas",
  4125:   "/https://www.instagram.com/p/B94SAIbAJUirx3UCqnFcmOqdsg42tv-58MczPM0/",
  4126    "/hub",

  4133    "/javascript-tutorial/en.javascript.info",
  4134:   "/jiweixing",
  4135    "/join/customize",
  4136    "/jp/webhooks/",
  4137:   "/justalgit",
  4138    "/kevinbluesqq",

  4150    "/lima-vinicius",
  4151:   "/lobogral",
  4152    "/Locky-Becken/Semana-Omnistack-11",

  4155    "/markdown/raw",
  4156:   "/marketplace/getting-started/requirements-for-listing-an-app-on-github-marketplace/null",
  4157:   "/marketplace/listing-on-github-marketplace/creating-a-draft-github-marketplace-listing/null",
  4158    "/meta",
  4159    "/meta/",
  4160:   "/mhungerford/repos",
  4161:   "/mong2s/",
  4162    "/moodysanalytics/v4/explorer",

  4164    "/nortonlifelock",
  4165:   "/notifications/participating",
  4166    "/oauth",

  4168    "/octocat/octocat/",
  4169:   "/opendingtalk/",
  4170:   "/opendingtalk/eapp-corp-quick-start-fe.git",
  4171    "/opt/out",
  4172:   "/org/lewagon/repos",
  4173:   "/orgs",
  4174:   "/orgs/com-it666/repos",
  4175:   "/orgs/galosoft/repos",
  4176:   "/pages-demo/developer-pages/changes/",
  4177:   "/pages-demo/developer-pages/guides/",
  4178    "/ParasRawat/repos",

  4180    "/pcloud",
  4181:   "/programs",
  4182:   "/proxy_u/en-ru.ru/https/developer.github.com/v4/guides/forming-calls/",
  4183:   "/proxy_u/en-ru.ru/https/developer.github.com/v4/guides/using-the-explorer/",
  4184    "/pttx00",

  4198    "/repos/commits/",
  4199:   "/repos/cosmos/gaia/releases",
  4200    "/repos/CyberSource/cybersource-rest-samples-node/contents/Samples/TMS/CoreServices/CreatePaymentInstrument.js",
  4201:   "/repos/Dinesh0823/KafkaLearning/issues",
  4202    "/repos/domas-v/autoplius",
  4203    "/repos/esp8266/Arduino/commits/master/status",
  4204:   "/repos/gradle/gradle/issues",
  4205:   "/repos/gradle/gradle/pull request",
  4206:   "/repos/jessydesiana/cie/tags",
  4207:   "/repos/lispucrs/GUIA_AppDatasetMaven",
  4208    "/repos/meshkorea/mesh-one-web/releases/latest",

  4211    "/repos/octocat/Hello-World/issues/1347/",
  4212:   "/repos/pages/",
  4213:   "/repos/phegedus/netopgraf",
  4214:   "/repos/phegedus/netopgraf/issues",
  4215    "/repos/plundell/q-localfiles/releases",
  4216:   "/repos/rails/rails/git/commits",
  4217:   "/repos/react community/react-navigation",
  4218    "/repos/releases/",

  4221    "/repos/SirPotatoIV/react-app-jake-otoole",
  4222:   "/repos/vespa-engine/vespa/pulls/13075/requested_reviewers",
  4223:   "/repos/WholeHat/NewBillingLrvlRep/issues",
  4224    "/repos/yiisoft/yii-demo/hooks/",
  4225:   "/repos/yugabyte/yugabyte-db/releases/latest",
  4226    "/repositories",

  4240    "/serve/ffb86cbf-2552-4d74-bc5f-a7d0b93406c3.html",
  4241:   "/setting/",
  4242:   "/setting/application",
  4243:   "/setting/developers",
  4244:   "/settings/ developers",
  4245:   "/SETTINGS/APPLICATION",
  4246:   "/settings/applications",
  4247:   "/settings/apps/",
  4248:   "/settings/billing",
  4249:   "/settings/token",
  4250:   "/settings/tokens",
  4251:   "/settings/tokens.",
  4252    "/sitemap.xml",

  4259    "/user/55895168",
  4260:   "/user/diagrame",
  4261    "/user/emails",

  4264    "/user/lucasporterbakker",
  4265:   "/user/mhungerford",
  4266:   "/user/mhungerford/repos",
  4267:   "/user/nightmare73",
  4268    "/user/repos/",

  4279    "/users/daniel",
  4280:   "/users/diego3",
  4281:   "/users/diegodhrv",
  4282    "/users/EdiMonteiro",
  4283:   "/users/EdivaldoSAGE",
  4284    "/Users/EDnotSheeran",
  4285:   "/users/gaearon",
  4286:   "/users/ghimirea",
  4287:   "/users/jorge_moovein",
  4288:   "/users/jorgemoovein",
  4289:   "/users/jorgeMoovein",
  4290:   "/users/jpmorganchase/repos/",
  4291    "/users/lbdalmendray/repos",
  4292:   "/users/lobogral",
  4293:   "/users/lordtigen",
  4294    "/users/mabo",

  4296    "/users/mistyharsh",
  4297:   "/users/mohsenzergani",
  4298:   "/users/nguyen/repos",
  4299    "/users/PraveenPal4232",

  4307    "/users/schoolofnetcom",
  4308:   "/users/Unity-Technologies/repos",
  4309    "/users/vitorfs",

  4319    "/v1/explorer/",
  4320:   "/v1/gists/",
  4321:   "/v1/orgs/",
  4322    "/v1/projects",

  4330    "/v2/explorer/",
  4331:   "/v2/guides/",
  4332:   "/v2/guides/intro-to-graphql/",
  4333:   "/v2/guides/traversing-with-pagination/",
  4334:   "/v2/guides/working-with-comments/",
  4335    "/v2/issues/",

  4338    "/v2/oauth_authorizations/",
  4339:   "/v2/object/pageinfo/",
  4340    "/v2/projects/",

  4351    "/v3 404. not found",
  4352:   "/v3 get tagname from latest release",
  4353    "/v3 not found",

  4359    "/v3/ - endpoint",
  4360:   "/v3/ .github.com/v3",
  4361    "/v3/ Bad credentials",

  4364    "/v3/ files",
  4365:   "/v3/ using Swif",
  4366    "/v3/、",
  4367    "/v3/. bad credentials",
  4368:   "/v3/](https://developer.github.com/v3/",
  4369    "/v3///projects///",
  4370:   "/v3//orgs/octokit/repos",
  4371    "/v3//projects/columns/:column_id/cards",
  4372:   "/v3//repos/:google/:go-cloud/license",
  4373    "/v3//users//",
  4374    "/v3//users/hariprasath-r/repos",
  4375:   "/v3/#rate-limiting",
  4376    "/v3/1",
  4377    "/v3/2",
  4378:   "/v3/2.Mailgun Documentation",
  4379    "/v3/56576",
  4380    "/v3/actions//",
  4381:   "/v3/actions/developer.github.com/v3/actions/https://developer.github.com/v3/actions/",
  4382    "/v3/actions/runs/",

  4394    "/v3/activity/events/types/*",
  4395:   "/v3/activity/events/types/&usg=ALkJrhgPPJFMLdR8ioFALlVII3hkQnMuqQ",
  4396    "/v3/activity/events/types/#marketplacepurchaseevent",

  4406    "/v3/api/users/SaraHal/repos",
  4407:   "/v3/application/vnd.github.sailor-v-preview+json",
  4408    "/v3/apps/available-endpoints/)",
  4409:   "/v3/apps/building-integrations/setting-up-and-registering-oauth-apps/troubleshooting-oauth-app-access-token-request-errors/",
  4410:   "/v3/apps/building-oauth-apps",
  4411:   "/v3/apps/building-oauth-apps/authorization-options-for-oauth-apps/",
  4412    "/v3/apps/install",

  4421    "/v3/branch/",
  4422:   "/v3/breaking_changes/",
  4423:   "/v3/chaoss/grimoirelab-perceval",
  4424    "/v3/checks/runs/create-a-check-run",

  4426    "/v3/chenx18/vueNode/master/NotesDocument/javaScripts/04-Object.md",
  4427:   "/v3/Colgate13",
  4428    "/v3/collaborator/",

  4432    "/v3/commits/comments/",
  4433:   "/v3/cosmos/gaia/releases",
  4434    "/v3/create/",
  4435:   "/v3/cross-origin-resource-sharing",
  4436    "/v3/data",
  4437    "/v3/datas",
  4438:   "/v3/diego3g",
  4439    "/v3/dispatchs",

  4443    "/v3/emoji",
  4444:   "/v3/enterprise-admin/org_pre_receive_hooks/",
  4445    "/v3/enum/commentauthorassociation/",

  4449    "/v3/feeds",
  4450:   "/v3/GET /users/:Constantin81",
  4451:   "/v3/GET/users/:Constantin81",
  4452:   "/v3/gharchive",
  4453:   "/v3/ghtorrent",
  4454:   "/v3/gist",
  4455:   "/v3/gist/",
  4456:   "/v3/gists/ api test",
  4457:   "/v3/gists/:1/comments",
  4458:   "/v3/gists/#authentication",
  4459:   "/v3/gists/#create-a-gist",
  4460:   "/v3/gists/#list-gists",
  4461:   "/v3/gists/411490368edf675102eed11fd1a260be",
  4462:   "/v3/gists/comments/:1",
  4463:   "/v3/gists/create-a-gist",
  4464:   "/v3/gists/MariaLavrovskaya",
  4465:   "/v3/gists/MariaLavrovskaya/",
  4466:   "/v3/gists/null",
  4467:   "/v3/gists/public",
  4468:   "/v3/gists/users",
  4469:   "/v3/git/download",
  4470:   "/v3/git/downloads",
  4471:   "/v3/git/matching-refs",
  4472:   "/v3/git/pull",
  4473:   "/v3/git/refs/422",
  4474:   "/v3/git/release/",
  4475:   "/v3/git/releases",
  4476:   "/v3/git/repositories/",
  4477:   "/v3/git/repository",
  4478:   "/v3/git/tag/",
  4479:   "/v3/git/tags/:1cb6ae88d515ffeccced6c835d759539f2b001a1",
  4480:   "/v3/git/trees/y",
  4481:   "/v3/gm",
  4482:   "/v3/group/1",
  4483:   "/v3/guides/basics-of-authentication/null",
  4484:   "/v3/guides/delivering-deployments/).",
  4485:   "/v3/guides/getting-started/https://developer.github.com/v3/guides/getting-started/",
  4486:   "/v3/guides/getting=started/",
  4487:   "/v3/guides/intro-to-graphql/",
  4488:   "/v3/guides/managing-deploy-keys/bbc",
  4489:   "/v3/guides/managing-deploy-keys/null",
  4490:   "/v3/guides/migrating-from-rest/",
  4491:   "/v3/guides/replacing-github-services/facebooklite noot root",
  4492:   "/v3/guides/resource-limitations/",
  4493:   "/v3/guides/traversing-with-pagination/null",
  4494:   "/v3/guides/using-ssh-agent-forwardin",
  4495:   "/v3/guides/working-with-comments comments",
  4496    "/v3/hooks",
  4497    "/v3/hse-project/",
  4498:   "/v3/http://cizixs.com/2016/12/12/restful-api-design-guide",
  4499:   "/v3/https://api.github.com/repos/vapor/vapor",
  4500    "/v3/index.json",

  4502    "/v3/input_object/createpullrequestinput/",
  4503:   "/v3/insights",
  4504    "/v3/interface",

  4510    "/v3/issues/#create-an-issue",
  4511:   "/v3/issues/assignee/",
  4512:   "/v3/issues/blog-comments",
  4513:   "/v3/issues/comapi algoliaments/",
  4514    "/v3/issues/comments/#create-a-comment",
  4515    "/v3/issues/create-an-issue",
  4516:   "/v3/issues/https://api.github.com/repos/octocat/Hello-World/issues/1347/labels",
  4517:   "/v3/issues/https://api.github.com/repos/tensorflow/tensorflow/issues/1347/labels",
  4518    "/v3/issues/labels>",
  4519:   "/v3/issues/manged_jb54aeoba_seribhdjf_url",
  4520    "/v3/javascript-tutorial/en.javascript.info",

  4541    "/v3/marketplace",
  4542:   "/v3/media/|GitHub",
  4543    "/v3/media/null",
  4544:   "/v3/migrations/gitlab",
  4545    "/v3/mojombo/followers/",
  4546:   "/v3/ni5400/api_test/master/config.json",
  4547    "/v3/nickcam/FlareClusterLayer/tree/master/fcl",
  4548    "/V3/oauth",
  4549:   "/v3/oauth_autclientcredentials githubhorizations/",
  4550    "/v3/oauth_authorizations/328302254",
  4551    "/v3/oauth_authorizations/be5b18acc8cf6961ff2c",
  4552:   "/v3/oauth_authorizations/regex alphanumerics",
  4553:   "/v3/oauth_authorizationsgithub api",
  4554:   "/v3/oauth/ 5 oauth_endpoints(\"github\")",
  4555:   "/v3/oauth/ oauth_endpoints(\"github\")",
  4556    "/v3/oauth/...",
  4557:   "/v3/oauth/http://developer.github.com/v3/oauth/",
  4558:   "/v3/oauth/oauth_endpoints\"github\"",
  4559:   "/v3/oauth/oauth_endpoints(\"github\"",
  4560    "/v3/oauth/smatch",

  4562    "/v3/object/blame/",
  4563:   "/v3/object/blamerange/",
  4564    "/v3/object/bot/",

  4567    "/v3/octokit",
  4568:   "/v3/org/hooks/",
  4569:   "/v3/org/members",
  4570:   "/v3/org/Picoay/teams",
  4571:   "/v3/organisation",
  4572:   "/v3/organization",
  4573:   "/v3/organization/teams/",
  4574:   "/v3/orgs//",
  4575:   "/v3/orgs//kyuubeeSama",
  4576:   "/v3/orgs/adeo/collaborators",
  4577:   "/v3/orgs/adeo/outside_collaborators",
  4578:   "/v3/orgs/datadog/repos",
  4579:   "/v3/orgs/events",
  4580:   "/v3/orgs/kyuubeeSama",
  4581:   "/v3/orgs/members/index.html",
  4582:   "/v3/orgs/netflix",
  4583:   "/v3/orgs/people",
  4584:   "/v3/orgs/Random/members",
  4585:   "/v3/orgs/repositories",
  4586:   "/v3/orgs/repositories/",
  4587:   "/v3/orgs/skillsfundingagency",
  4588:   "/v3/orgs/team/",
  4589:   "/v3/orgs/users/:username/orgs",
  4590    "/v3/ouauth/",
  4591:   "/v3/packages/",
  4592:   "/v3/pages/",
  4593:   "/v3/Pagination",
  4594:   "/v3/pagination/",
  4595    "/v3/people",

  4598    "/v3/prem-prakash",
  4599:   "/v3/previews/graphql",
  4600    "/v3/privatekeys",

  4613    "/v3/rate_limit/https://plot ly/python/reference/",
  4614:   "/v3/rate-limiting",
  4615:   "/v3/rating-limit",
  4616    "/v3/reactions/null",

  4628    "/v3/repos/:pupanda/:repo/C",
  4629:   "/v3/repos/:raman002/:intellij_settings",
  4630    "/v3/repos/:xiaobai557/:wechat/downloads/",

  4634    "/v3/repos/#create",
  4635:   "/v3/repos/#list-organization-repositories",
  4636    "/v3/repos/#list-user-repositories",

  4643    "/v3/repos/asharma-a10/PrometheusExporter/commits/",
  4644:   "/v3/repos/athysirus/Covid19Tracking/releases/a27958a8ded4b939f1ca461105f56740474485e3",
  4645    "/v3/repos/awchjimmy/0905",
  4646:   "/v3/repos/balickimaciej/GITAPISTATSTEST/contribiutors",
  4647:   "/v3/repos/be5invis/Sarasa-Gothic",
  4648    "/v3/repos/branch",
  4649    "/v3/repos/branches/ Branches",
  4650:   "/v3/repos/branches/ BranchesGet started with one of our guides, or jump straight into the API documentation.developer.github.com",
  4651    "/v3/repos/branches/compare",
  4652:   "/v3/repos/bruce-armstrong/pbide-plugin-2017/releases",
  4653    "/v3/repos/check_runs",

  4659    "/v3/repos/commits/rails",
  4660:   "/v3/repos/commitsgithub commit id",
  4661    "/v3/repos/compare/",
  4662    "/v3/repos/compareCommits/",
  4663:   "/v3/repos/contents/backdoorgame",
  4664    "/v3/repos/contents/repos//florinpop17/app-ideas/master/README.md",

  4666    "/v3/repos/contents/repos/florinpop17/app-ideas/readme",
  4667:   "/v3/repos/cosmos/gaia/releases",
  4668    "/v3/repos/Create",

  4674    "/v3/repos/DataThirstLtd/DBFS-Explorer/",
  4675:   "/v3/repos/deployments/https://developer.github.com/v3/checks/",
  4676    "/v3/repos/diff/",
  4677    "/v3/repos/Dinesh0823/",
  4678:   "/v3/repos/Dinesh0823/KafkaLearning/",
  4679:   "/v3/repos/Dinesh0823/KafkaLearning/issues/",
  4680:   "/v3/repos/divarsoy/exchangeapi/releases/9498a3e",
  4681:   "/v3/repos/divarsoy/exchangeapi/releases/latest",
  4682    "/v3/repos/domas-v/autoplius",

  4689    "/v3/repos/forks_/",
  4690:   "/v3/repos/get",
  4691:   "/v3/repos/getferdi/fredi/releases",
  4692:   "/v3/repos/gi/",
  4693:   "/v3/repos/git/refs",
  4694:   "/v3/repos/gitzhes/spark-musical-instrument-review/traffic/clones",
  4695:   "/v3/repos/golang/go/releases",
  4696:   "/v3/repos/google",
  4697:   "/v3/repos/google/go-cloud",
  4698    "/v3/repos/ilkeraltin/react-ssr-news",

  4700    "/v3/repos/issues/",
  4701:   "/v3/repos/jaredtao/HelloActions-Qt/releases/tag/0.1.3",
  4702:   "/v3/repos/jaredtao/HelloActions-Qt/releases/tags/0.1.3",
  4703    "/v3/repos/kubernetes/",

  4707    "/v3/repos/list",
  4708:   "/v3/repos/list-organization-repositories",
  4709    "/v3/repos/lokeshwar26983",
  4710    "/v3/repos/matchid-project/",
  4711:   "/v3/repos/matchid-project/matchid-project.matchid.io/pages",
  4712:   "/v3/repos/mathpresso/ios-qanda-student/list-tags",
  4713:   "/v3/repos/Migoof/HIPYSoundBoxServer/readme",
  4714:   "/v3/repos/mossmann/hackr/releases/tags/v2017.01.1",
  4715    "/v3/repos/mylar3/traffic/clones",
  4716    "/v3/repos/onshop-next",
  4717:   "/v3/repos/orgs/:org/repos",
  4718    "/v3/repos/oumabha4AWS/test_repository/releases",

  4726    "/v3/repos/RafalJuraszek/line-review/commits",
  4727:   "/v3/repos/raman002/:intellij_settings",
  4728:   "/v3/repos/raman002/compressor.git",
  4729    "/v3/repos/raman002/compressor/contents",
  4730:   "/v3/repos/raman002/intellij_settings",
  4731:   "/v3/repos/RealHeals/BobaRage/traffic/",
  4732    "/v3/repos/ref",

  4739    "/v3/repos/schul-cloud",
  4740:   "/v3/repos/stargazers/",
  4741    "/v3/repos/statistics/contributors",
  4742:   "/v3/repos/statisticshttps://github.com/oprogramador/github-languages",
  4743    "/v3/repos/status",

  4745    "/v3/repos/statuses/ Comment created",
  4746:   "/v3/repos/statuseshttps://github.ibm.com/identity-adapters/Adapters/commit/55d32c6c19bab9b791d5ee59c0dc4c2cf4615b73",
  4747    "/v3/repos/symfony",
  4748:   "/v3/repos/SystemFiles/spigot-tpexp-plugin/releases/",
  4749:   "/v3/repos/SystemFiles/spigot-tpexp-plugin/releases/01a1330",
  4750:   "/v3/repos/SystemFiles/spigot-tpexp-plugin/releases/v1.0.1",
  4751:   "/v3/repos/TheSTL/Visualize-Sorting-Algorithm/git/commits/",
  4752:   "/v3/repos/training-kit",
  4753    "/v3/repos/tree",
  4754    "/v3/repos/trees",
  4755:   "/v3/repos/trilogy-group/aurea-aes-cis/languages",
  4756:   "/v3/repos/tzutalin/labelImg",
  4757:   "/v3/repos/ugaovpr/GrantsConnector/collaborators/kralphs",
  4758    "/v3/repos/user/",

  4767    "/v3/repos/watkyn/PPPC/releases/:release_id",
  4768:   "/v3/repos/WholeHat/NewBillingLrvlRep/issues",
  4769    "/v3/repos/xiaobai557/wechat/downloads/",
  4770:   "/v3/repos/yugabyte/yugabyte-db/releases/latest",
  4771    "/v3/repose",

  4777    "/v3/repsitcreate",
  4778:   "/v3/respo/diego3g",
  4779    "/v3/restructedtext",

  4787    "/v3/search/classes.js",
  4788:   "/v3/search/Is it possible to message users directly on Stack Overflow Talent",
  4789:   "/v3/search/language",
  4790    "/v3/search/monteluth",
  4791:   "/v3/search/orgs/:org/repos",
  4792    "/v3/search/q=classes.js",

  4811    "/v3/srinivas-nextsteps/emails",
  4812:   "/v3/swagger.json",
  4813:   "/v3/tag/",
  4814:   "/v3/tags",
  4815    "/v3/tdbank",

  4817    "/v3/teams//",
  4818:   "/v3/teams/bancodebogota/dt-fullmetal-alchemist",
  4819    "/v3/teams/dt-fullmetal-alchemist",

  4821    "/v3/trees",
  4822:   "/v3/troubleshoosdfasdfting/",
  4823    "/v3/union/pullrequesttimelineitem/",

  4827    "/v3/user/danechamihir",
  4828:   "/v3/user/diego3g",
  4829    "/v3/user/email",
  4830    "/v3/user/followers",
  4831:   "/v3/user/gpg_keys",
  4832    "/v3/user/jeffaribeiro",

  4853    "/v3/users/:danilods",
  4854:   "/v3/users/:diego3g",
  4855    "/v3/users/:elie",

  4877    "/v3/users/alexmiranda-io/",
  4878:   "/v3/users/Angular",
  4879    "/v3/users/antirez",
  4880    "/v3/users/api",
  4881:   "/v3/users/archlight001",
  4882    "/v3/users/aryahari30",

  4885    "/v3/users/atharvarockx",
  4886:   "/v3/users/atulgirishkumar",
  4887    "/v3/users/aurelian",
  4888    "/v3/users/baiya",
  4889:   "/v3/users/bngayo",
  4890    "/v3/users/brad",

  4910    "/v3/users/denis",
  4911:   "/v3/users/diego",
  4912    "/v3/users/Dimitris",
  4913    "/v3/users/edenmanny25",
  4914:   "/v3/users/elvingonzalezb",
  4915    "/v3/users/eviczia",

  4920    "/v3/users/followers/null",
  4921:   "/v3/users/gabrielejandres",
  4922:   "/v3/users/gaeraon",
  4923:   "/v3/users/gaerson",
  4924:   "/v3/users/gearaon",
  4925:   "/v3/users/GET/users",
  4926:   "/v3/users/ghimirea",
  4927:   "/v3/users/greg",
  4928    "/v3/users/H0R4T1U",

  4932    "/v3/users/hariprasath-r/repos",
  4933:   "/v3/users/harveryang",
  4934:   "/v3/users/https://api.github.com/users/octocat",
  4935:   "/v3/users/hugogomess",
  4936    "/v3/users/ibuioli",

  4955    "/v3/users/ldenarde2",
  4956:   "/v3/users/learning4code",
  4957    "/v3/users/LeonardoCostta1",

  4960    "/v3/users/lioliveira",
  4961:   "/v3/users/lobogral",
  4962:   "/v3/users/login",
  4963:   "/v3/users/luangustavo3513",
  4964    "/v3/users/LucasBarrosDosSantos",

  4966    "/v3/users/lucaslima",
  4967:   "/v3/users/lucien-george",
  4968    "/v3/users/luscalima",

  4983    "/v3/users/muhammed-miqdad",
  4984:   "/v3/users/mustafamuratcosgun",
  4985    "/v3/users/mustafamuratcoskun",

docs • tests\fixtures\products\admin\some-category\some-article-with-mismatched-versions-frontmatter.md:
  1  ---
  2: title: Some GitHub article
  3  versions:

docs • tests\fixtures\remove-liquid-statements\and-greater-than1.md:
   1  ---
   2: title: And Greater Than Version To Deprecate 1
   3  intro: Remove liquid only

   8  
   9: {% if currentVersion != "free-pro-team@latest" and currentVersion ver_gt "enterprise-server@2.13" %}
  10  

  19  
  20: {% if currentVersion != "free-pro-team@latest" and currentVersion ver_gt "enterprise-server@2.13" %}
  21  

  34  
  35: {% if currentVersion ver_gt "enterprise-server@2.16" %}
  36  

  42  
  43: {% if currentVersion != "free-pro-team@latest" and currentVersion ver_gt "enterprise-server@2.13" %}
  44  

  58  
  59: {% if currentVersion != "free-pro-team@latest" and currentVersion ver_gt "enterprise-server@2.13" %}
  60  

  75  
  76: {% if currentVersion != "free-pro-team@latest" and currentVersion ver_gt "enterprise-server@2.13" %}
  77  

  79  
  80: {% if currentVersion ver_gt "enterprise-server@2.16" %}
  81  

docs • tests\fixtures\remove-liquid-statements\and-greater-than2.md:
   1  ---
   2: title: And Greater Than Version To Deprecate 2
   3  intro: Remove liquid only

   8  
   9: {% if currentVersion ver_gt "enterprise-server@2.13" and currentVersion ver_lt "enterprise-server@2.16" %}
  10  

  19  
  20: {% if currentVersion ver_gt "enterprise-server@2.13" and currentVersion ver_lt "enterprise-server@2.16" %}
  21  

  42  
  43: {% if currentVersion ver_gt "enterprise-server@2.13" and currentVersion ver_lt "enterprise-server@2.16" %}
  44  

  58  
  59: {% if currentVersion ver_gt "enterprise-server@2.13" and currentVersion ver_lt "enterprise-server@2.16" %}
  60  

  75  
  76: {% if currentVersion ver_gt "enterprise-server@2.13" and currentVersion ver_lt "enterprise-server@2.16" %}
  77  

docs • tests\fixtures\remove-liquid-statements\equals.md:
  100  
  101: {% if currentVersion == "free-pro-team@latest" or currentVersion ver_gt "enterprise-server@2.13" %}
  102  

docs • tests\fixtures\remove-liquid-statements\greater-than.md:
    1  ---
    2: title: Greater Than Version To Deprecate
    3  intro: Remove liquid only

    8  
    9: {% if currentVersion ver_gt "enterprise-server@2.13" %}
   10  

   19  
   20: {% if currentVersion == "free-pro-team@latest" or currentVersion ver_gt "enterprise-server@2.13" %}
   21  

   30  
   31: {% if currentVersion ver_gt "enterprise-server@2.13" %}
   32  

   45  
   46: {% if currentVersion ver_gt "enterprise-server@2.16" %}
   47  

   53  
   54: {% if currentVersion ver_gt "enterprise-server@2.13" %}
   55  

   69  
   70: {% if currentVersion ver_gt "enterprise-server@2.13" %}
   71  

   86  
   87: {% if currentVersion ver_gt "enterprise-server@2.13" %}
   88  

  107  
  108: {% if currentVersion ver_gt "enterprise-server@2.13" %}
  109  

  111  
  112: {% if currentVersion ver_gt "enterprise-server@2.16" %}
  113  

  127  
  128: {% if currentVersion ver_gt "enterprise-server@2.13" %}
  129  

  158  
  159: {% if currentVersion ver_gt "enterprise-server@2.16" %}
  160  

  164  
  165: {% if currentVersion ver_gt "enterprise-server@2.13" %}
  166  

  177  
  178: {% if currentVersion ver_gt "enterprise-server@2.13" %}
  179  

  183  
  184: Security alerts for vulnerable dependencies are available in {{ site.data.variables.product.prodname_ghe_server }} 2.17+. For more information, see "[Enabling security alerts for vulnerable dependencies on {{ site.data.variables.product.prodname_ghe_server }}](/enterprise/admin/installation/enabling-security-alerts-for-vulnerable-dependencies-on-github-enterprise-server)."
  185  

docs • tests\fixtures\remove-liquid-statements\less-than-next-oldest.md:
  147  
  148: {% if currentVersion ver_gt "enterprise-server@2.16" %}
  149  

docs • tests\fixtures\remove-liquid-statements\whitespace.md:
   6  <div class="example1">
   7: {% if currentVersion ver_gt "enterprise-server@2.13" %}
   8    Alpha

  13  <div class="example2">
  14: {%- if currentVersion ver_gt "enterprise-server@2.13" %}
  15    Alpha

  20  <div class="example3">
  21: {% if currentVersion == "free-pro-team@latest" or currentVersion ver_gt "enterprise-server@2.13" %}
  22    Alpha

  27  <div class="example4">
  28: {%- if currentVersion == "free-pro-team@latest" or currentVersion ver_gt "enterprise-server@2.13" %}
  29    Alpha

  34  <div class="example5">
  35: {% if currentVersion ver_gt "enterprise-server@2.13" %}
  36    Alpha

  42    Alpha
  43: {% if currentVersion == "free-pro-team@latest" or currentVersion ver_gt "enterprise-server@2.13" %}
  44    Bravo

  50  <div class="example7">
  51: Alpha{% if currentVersion == "free-pro-team@latest" or currentVersion ver_gt "enterprise-server@2.13" %}
  52  Bravo{% endif %}

docs • tests\graphql\build-changelog-test.js:
    1  const yaml = require('js-yaml')
    2: const { createChangelogEntry, cleanPreviewTitle, previewAnchor, prependDatedEntry } = require('../../script/graphql/build-changelog')
    3  const fs = require('fs').promises

    5  const readFileAsync = require('../../lib/readfile-async')
    6: const expectedChangelogEntry = require('../fixtures/changelog-entry')
    7: const expectedUpdatedChangelogFile = require('../fixtures/updated-changelog-file')
    8  
    9: describe('creating a changelog from old schema and new schema', () => {
   10    afterEach(() => {

   13  
   14:   it('finds a diff of schema changes, upcoming changes, and preview changes', async () => {
   15:     const oldSchemaString = `
   16      type PreviewType {
   17:       field1(changeTypeArgument: Int): Int
   18      }

   20      type Query {
   21:       stableField: String
   22        removedField: Boolean
   23:       argumentsField(
   24:         removedRequiredArgument: Int!
   25:         removedOptionalArgument: Int!
   26:         argumentMadeRequired: Int
   27:         argumentMadeOptional: Int!
   28:       ): String
   29        previewField: PreviewType

   32  
   33:     const newSchemaString = `
   34      type PreviewType {
   35:       field1(changeTypeArgument: Float): Int
   36      }

   38      type Query {
   39:       stableField: String
   40:       argumentsField(
   41:         argumentMadeRequired: Int!
   42:         argumentMadeOptional: Int
   43:       ): String
   44        previewField: PreviewType!

   50    description: This preview is just for test
   51:   toggled_by: ':test_preview'
   52    announcement: null
   53    updates: null
   54:   toggled_on:
   55      - PreviewType
   56      - Query.previewField
   57:   owning_teams:
   58:     - '@github/engineering'
   59  `)
   60  
   61:     const oldUpcomingChanges = yaml.safeLoad(`
   62: upcoming_changes:
   63:   - location: EnterprisePendingCollaboratorEdge.isUnlicensed
   64      description: '\`isUnlicensed\` will be removed.'
   65      date: '2021-01-01T00:00:00+00:00'
   66: `).upcoming_changes
   67  
   68:     const newUpcomingChanges = yaml.safeLoad(`
   69: upcoming_changes:
   70    - location: Query.stableField

   72      date: '2021-06-01T00:00:00+00:00'
   73:   - location: EnterprisePendingCollaboratorEdge.isUnlicensed
   74      description: '\`isUnlicensed\` will be removed.'
   75      date: '2021-01-01T00:00:00+00:00'
   76: `).upcoming_changes
   77  
   78:     const entry = await createChangelogEntry(oldSchemaString, newSchemaString, previews, oldUpcomingChanges, newUpcomingChanges)
   79:     expect(entry).toEqual(expectedChangelogEntry)
   80    })

   82    it('returns null when there isnt any difference', async () => {
   83:     const schemaString = `
   84      type Query {

   87  
   88:     const nullEntry = await createChangelogEntry(schemaString, schemaString, [], [], [])
   89      expect(nullEntry).toBeNull()

   92  
   93: describe('Preparing preview links', () => {
   94    it('fixes preview names', () => {

   96      expect(cleanPreviewTitle('UpdateRefsPreview')).toEqual('Update refs preview')
   97:     expect(cleanPreviewTitle('MergeInfoPreview')).toEqual('Merge info preview')
   98      // Previews that don't end in " preview" have it added
   99:     expect(cleanPreviewTitle('something interesting')).toEqual('something interesting preview')
  100:     // Other things are left as-is
  101      expect(cleanPreviewTitle('nice preview')).toEqual('nice preview')

  104    it('creates anchors from preview titles', () => {
  105:     expect(previewAnchor('Merge info preview')).toEqual('merge-info-preview')
  106      expect(previewAnchor('some.punct123 preview')).toEqual('somepunct123-preview')

  109  
  110: describe('updating the changelog file', () => {
  111    afterEach(() => {

  115    it('modifies the entry object and the file on disk', async () => {
  116:     const testTargetPath = 'tests/graphql/example_changelog.json'
  117:     const previousContents = await readFileAsync(testTargetPath)
  118  

  122  
  123:     prependDatedEntry(exampleEntry, testTargetPath)
  124:     const newContents = await readFileAsync(testTargetPath, 'utf8')
  125      // reset the file:
  126:     await fs.writeFile(testTargetPath, previousContents)
  127  
  128      expect(exampleEntry).toEqual({ someStuff: true, date: expectedDate })
  129:     expect(JSON.parse(newContents)).toEqual(expectedUpdatedChangelogFile)
  130    })

docs • tests\helpers\conditional-runs.js:
  1: const runningActionsOnInternalRepo = process.env.GITHUB_ACTIONS === 'true' && process.env.GITHUB_REPOSITORY === 'github/docs-internal'
  2  
  3: const testViaActionsOnly = runningActionsOnInternalRepo ? test : test.skip
  4: const describeViaActionsOnly = runningActionsOnInternalRepo ? describe : describe.skip
  5  

docs • tests\helpers\lint-translation-reporter.js:
   1  const chalk = require('chalk')
   2: const { groupBy } = require('lodash')
   3  
   4  // we don't want to print all the stack traces
   5: const stackTrackRegExp = /^\s+at\s.+/i
   6  
   7  class TranslationReporter {
   8:   constructor (globalConfig, options) {
   9:     this._globalConfig = globalConfig
  10      this._options = options

  16          .filter(result => result.status === 'failed')
  17:         .map(({ ancestorTitles, failureMessages, title }) => {
  18            return {

  20              failedTests: title,
  21:             failureMessage: failureMessages.map((message) => message.split('\n').filter(line => !stackTrackRegExp.test(line)).join('\n'))
  22            }

  26  
  27:     const failuresByFile = groupBy(failures, 'fileName')
  28  
  29      for (const fileName in failuresByFile) {
  30:       console.group(chalk.red.bold(`\n${fileName}`))
  31:       failuresByFile[fileName].forEach(({ failureMessage }, index) => {
  32:         console.log(chalk.bold(`\n(${index + 1})`))
  33:         failureMessage.forEach(msg => console.log(msg))
  34        })
  35:       console.groupEnd()
  36      }
  37  
  38:     console.log(chalk.bold('\nthese files should not be included: '))
  39:     console.dir(Object.keys(failuresByFile), { maxArrayLength: null })
  40    }

docs • tests\helpers\supertest.js:
  11  
  12: helpers.get = async function (route, opts = { followRedirects: false, followAllRedirects: false }) {
  13:   let res = await request('get', route)
  14  

  16    if (opts.followAllRedirects && [301, 302].includes(res.status)) {
  17:     res = await helpers.get(res.headers.location, opts)
  18    } else if (opts.followRedirects && [301, 302].includes(res.status)) {
  19:     res = await helpers.get(res.headers.location)
  20    }

  31  
  32: helpers.getDOM = async function (route) {
  33:   const res = await helpers.get(route, { followRedirects: true })
  34  
  35    const $ = cheerio.load((res.text || ''), { xmlMode: true })
  36:   $.res = Object.assign({}, res)
  37    return $

  40  // For use with the ?json query param
  41: // e.g. await getJSON('/en?json=breadcrumbs')
  42: helpers.getJSON = async function (route) {
  43:   const res = await helpers.get(route, { followRedirects: true })
  44    return JSON.parse(res.text)

docs • tests\javascripts\user-agent.js:
   1: import parseUserAgent from '../../javascripts/user-agent'
   2  
   3: describe('parseUserAgent', () => {
   4    it('android, chrome', () => {
   5:     const ua = 'Mozilla/5.0 (Linux; Android 8.0.0; SM-G960F Build/R16NW) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.84 Mobile Safari/537.36'
   6:     const { os, browser } = parseUserAgent(ua)
   7      expect(os).toBe('android')

  11    it('ios, safari', () => {
  12:     const ua = 'Mozilla/5.0 (iPhone; CPU iPhone OS 12_0 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/12.0 Mobile/15E148 Safari/604.1'
  13:     const { os, browser } = parseUserAgent(ua)
  14      expect(os).toBe('ios')

  17  
  18:   it('windows, edge', () => {
  19:     const ua = 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/42.0.2311.135 Safari/537.36 Edge/12.246'
  20:     const { os, browser } = parseUserAgent(ua)
  21      expect(os).toBe('windows')
  22:     expect(browser).toBe('edge')
  23    })

  25    it('mac, safari', () => {
  26:     const ua = 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_2) AppleWebKit/601.3.9 (KHTML, like Gecko) Version/9.0.2 Safari/601.3.9'
  27:     const { os, browser } = parseUserAgent(ua)
  28      expect(os).toBe('mac')

  32    it('windows, chrome', () => {
  33:     const ua = 'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/47.0.2526.111 Safari/537.36'
  34:     const { os, browser } = parseUserAgent(ua)
  35      expect(os).toBe('windows')

  39    it('linux, firefox', () => {
  40:     const ua = 'Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:15.0) Gecko/20100101 Firefox/15.0.1'
  41:     const { os, browser } = parseUserAgent(ua)
  42      expect(os).toBe('linux')

  46    it('other, other', () => {
  47:     const ua = 'Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)'
  48:     const { os, browser } = parseUserAgent(ua)
  49      expect(os).toBe('other')

docs • tests\meta\orphan-tests.js:
  10  
  11:     // Get a list of files/directories in `/tests`
  12      const testDirectory = await fs.readdir(pathToTests)

  26  
  27:     expect(filteredList).toHaveLength(0)
  28    })

docs • tests\meta\repository-references.js:
   3  
   4: const REPO_REGEXP = /\/\/github\.com\/github\/(?!docs[/'"\n])([\w-.]+)/gi
   5  
   6: // These are a list of known public repositories in the GitHub organization
   7  const ALLOW_LIST = new Set([

   9    'roadmap',
  10:   'linguist',
  11    'super-linter',

  15    'platform-samples',
  16:   'github-services',
  17    'explore',

  22    'codeql',
  23:   'gitignore',
  24    'feedback',
  25    'semantic',
  26:   'git-lfs',
  27:   'git-sizer',
  28    'dmca',
  29:   'gov-takedowns',
  30    'janky',
  31    'rest-api-description',
  32:   'smimesign',
  33    'tweetsodium',
  34    'choosealicense.com',
  35:   'renaming'
  36  ])

  38  describe('check for repository references', () => {
  39:   // This tests exists to make sure we don't reference private GitHub owned repositories
  40:   // in our open-soure repository. If this is failing, and the repo is public,
  41:   // feel free to add it to the list above. Or if the feature requires referencing an
  42:   // internal repo, add the feature to the ignore list below.
  43  

  45      directories: false,
  46:     ignore: [
  47:       '.algolia-cache',
  48:       '.git',
  49        'dist',

  64      const file = await readFileAsync(filename, 'utf8')
  65:     const matches = Array.from(file.matchAll(REPO_REGEXP))
  66        .map(([, repoName]) => repoName)
  67        .filter(repoName => !ALLOW_LIST.has(repoName))
  68:     expect(matches).toHaveLength(0)
  69    })

docs • tests\rendering\block-robots.js:
    1  const { blockIndex } = require('../../middleware/block-robots')
    2: const languages = require('../../lib/languages')
    3  const products = require('../../lib/all-products')

   10  describe('block robots', () => {
   11:   it('allows crawling of the homepage and English content', async () => {
   12      expect(allowIndex('/')).toBe(true)
   13      expect(allowIndex('/en')).toBe(true)
   14:     expect(allowIndex('/en/articles/verifying-your-email-address')).toBe(true)
   15    })
   16  
   17:   it('allows crawling of generally available localized content', async () => {
   18:     Object.values(languages)
   19:       .filter(language => !language.wip)
   20:       .forEach(language => {
   21:         expect(allowIndex(`/${language.code}`)).toBe(true)
   22:         expect(allowIndex(`/${language.code}/articles/verifying-your-email-address`)).toBe(true)
   23        })

   25  
   26:   it('disallows crawling of WIP localized content', async () => {
   27:     Object.values(languages)
   28:       .filter(language => language.wip)
   29:       .forEach(language => {
   30:         expect(allowIndex(`/${language.code}`)).toBe(false)
   31:         expect(allowIndex(`/${language.code}/articles/verifying-your-email-address`)).toBe(false)
   32        })

   34  
   35:   it('disallows crawling of WIP products', async () => {
   36      const wipProductIds = Object.values(products)

   42        const blockedPaths = [
   43:         // English
   44          `/en${href}`,

   63  
   64:   it('disallows crawling of early access "hidden" products', async () => {
   65      const hiddenProductIds = Object.values(products)

   72          return [
   73:           // English
   74            `/en/${version}/${id}`,

   87  
   88:   it('allows crawling of non-WIP products', async () => {
   89      expect('actions' in products).toBe(true)

   96  
   97:   it('disallows crawling of deprecated enterprise releases', async () => {
   98      enterpriseServerReleases.deprecated.forEach(version => {
   99        const blockedPaths = [
  100:         // English
  101          `/en/enterprise-server@${version}/actions`,

docs • tests\rendering\breadcrumbs.js:
    1: const { getDOM, getJSON } = require('../helpers/supertest')
    2  
    3: const describeInternalOnly = process.env.GITHUB_REPOSITORY === 'github/docs-internal' ? describe : describe.skip
    4  

    7  
    8:   describe('rendering', () => {
    9:     test('top-level product pages have breadcrumbs', async () => {
   10:       const $ = await getDOM('/github')
   11:       expect($('.breadcrumbs')).toHaveLength(1)
   12      })
   13  
   14:     test('article pages have breadcrumbs with product, category, maptopic, and article', async () => {
   15:       const $ = await getDOM('/github/getting-started-with-github/supported-browsers')
   16        const $breadcrumbs = $('.breadcrumbs a')
   17  
   18:       expect($breadcrumbs).toHaveLength(4)
   19:       expect($breadcrumbs.eq(0).attr('title')).toBe('product: GitHub.com')
   20:       expect($breadcrumbs.eq(1).attr('title')).toBe('category: Getting started')
   21:       expect($breadcrumbs.eq(2).attr('title')).toBe('maptopic: Using GitHub')
   22        expect($breadcrumbs.eq(3).attr('title')).toBe('article: Supported browsers')

   24  
   25:     test('maptopic pages include their own grayed-out breadcrumb', async () => {
   26:       const $ = await getDOM('/github/getting-started-with-github/using-github')
   27        const $breadcrumbs = $('.breadcrumbs a')
   28  
   29:       expect($breadcrumbs).toHaveLength(3)
   30:       expect($breadcrumbs.eq(0).attr('title')).toBe('product: GitHub.com')
   31:       expect($breadcrumbs.eq(1).attr('title')).toBe('category: Getting started')
   32:       expect($breadcrumbs.eq(2).attr('title')).toBe('maptopic: Using GitHub')
   33:       expect($breadcrumbs.eq(2).hasClass('text-gray-light')).toBe(true)
   34      })
   35  
   36:     test('works for enterprise user pages', async () => {
   37:       const $ = await getDOM('/en/enterprise/user/github/getting-started-with-github/supported-browsers')
   38        const $breadcrumbs = $('.breadcrumbs a')
   39:       expect($breadcrumbs).toHaveLength(4)
   40:       // The product is still GitHub.com on an Enterprise Server version
   41:       expect($breadcrumbs.eq(0).attr('title')).toBe('product: GitHub.com')
   42      })

   44      test('parses Liquid variables inside titles', async () => {
   45:       const $ = await getDOM('/en/enterprise/admin/enterprise-support')
   46        const $breadcrumbs = $('.breadcrumbs a')
   47:       expect($breadcrumbs).toHaveLength(2)
   48:       expect($breadcrumbs.eq(1).attr('title')).toBe('category: Working with GitHub Support')
   49      })
   50  
   51:     test('English breadcrumbs link to English pages', async () => {
   52:       const $ = await getDOM('/en/github/setting-up-and-managing-your-github-user-account')
   53        const $breadcrumbs = $('.breadcrumbs a')
   54:       expect($breadcrumbs.eq(0).attr('href')).toBe('/en/github')
   55      })
   56  
   57:     test('localized breadcrumbs link to localize pages', async () => {
   58:       const $ = await getDOM('/ja/github/setting-up-and-managing-your-github-user-account')
   59        const $breadcrumbs = $('.breadcrumbs a')
   60:       expect($breadcrumbs.eq(0).attr('href')).toBe('/ja/github')
   61      })

   63  
   64:   describeInternalOnly('early access rendering', () => {
   65:     test('top-level product pages have breadcrumbs', async () => {
   66:       const $ = await getDOM('/early-access/github/articles/using-gist-playground')
   67:       expect($('.breadcrumbs')).toHaveLength(1)
   68      })
   69  
   70:     test('early access article pages have breadcrumbs with product, category, and article', async () => {
   71:       const $ = await getDOM('/early-access/github/enforcing-best-practices-with-github-policies/about-github-policies')
   72        const $breadcrumbSpans = $('.breadcrumbs span')

   74  
   75:       expect($breadcrumbSpans).toHaveLength(2)
   76:       expect($breadcrumbLinks).toHaveLength(2)
   77        expect($breadcrumbSpans.eq(0).text()).toBe('Early Access documentation')
   78:       expect($breadcrumbSpans.eq(1).text()).toBe('GitHub.com')
   79:       expect($breadcrumbLinks.eq(0).attr('title')).toBe('category: Enforcing best practices with GitHub Policies')
   80:       expect($breadcrumbLinks.eq(1).attr('title')).toBe('article: About GitHub Policies')
   81:       expect($breadcrumbLinks.eq(1).hasClass('text-gray-light')).toBe(true)
   82      })

   85    describe('context.breadcrumbs object', () => {
   86:     test('works on product index pages', async () => {
   87:       const breadcrumbs = await getJSON('/en/github?json=breadcrumbs')
   88        const expected = {
   89          product: {
   90:           href: '/en/github',
   91:           title: 'GitHub.com'
   92          }

   96  
   97:     test('works on category index pages', async () => {
   98:       const breadcrumbs = await getJSON('/en/github/authenticating-to-github?json=breadcrumbs')
   99        const expected = {
  100          product: {
  101:           href: '/en/github',
  102:           title: 'GitHub.com'
  103          },
  104:         category: {
  105:           href: '/en/github/authenticating-to-github',
  106            title: 'Authentication'

  111  
  112:     test('works on maptopic pages', async () => {
  113:       const breadcrumbs = await getJSON('/en/github/authenticating-to-github/keeping-your-account-and-data-secure?json=breadcrumbs')
  114        const expected = {
  115          product: {
  116:           href: '/en/github',
  117:           title: 'GitHub.com'
  118          },
  119:         category: {
  120:           href: '/en/github/authenticating-to-github',
  121            title: 'Authentication'

  123          maptopic: {
  124:           href: '/en/github/authenticating-to-github/keeping-your-account-and-data-secure',
  125:           title: 'Keeping your account and data secure'
  126          }

  131      test('works on articles that DO have maptopics ', async () => {
  132:       const breadcrumbs = await getJSON('/en/github/authenticating-to-github/creating-a-strong-password?json=breadcrumbs')
  133        const expected = {
  134          product: {
  135:           href: '/en/github',
  136:           title: 'GitHub.com'
  137          },
  138:         category: {
  139:           href: '/en/github/authenticating-to-github',
  140            title: 'Authentication'

  142          maptopic: {
  143:           href: '/en/github/authenticating-to-github/keeping-your-account-and-data-secure',
  144:           title: 'Keeping your account and data secure'
  145          },
  146          article: {
  147:           href: '/en/github/authenticating-to-github/creating-a-strong-password',
  148:           title: 'Creating a strong password'
  149          }

  154      test('works on articles that DO NOT have maptopics ', async () => {
  155:       const breadcrumbs = await getJSON('/github/site-policy/github-privacy-statement?json=breadcrumbs')
  156        const expected = {
  157          product: {
  158:           href: '/en/github',
  159:           title: 'GitHub.com'
  160          },
  161:         category: {
  162:           href: '/en/github/site-policy',
  163            title: 'Site policy'

  165          article: {
  166:           href: '/en/github/site-policy/github-privacy-statement',
  167:           title: 'GitHub Privacy Statement'
  168          }

  172  
  173:     test('returns an empty object on the landing page', async () => {
  174:       const breadcrumbs = await getJSON('/en?json=breadcrumbs')
  175        expect(breadcrumbs).toEqual({})

docs • tests\rendering\curated-homepage-links.js:
   1: const { getDOM } = require('../helpers/supertest')
   2  
   3: describe('curated homepage links', () => {
   4    jest.setTimeout(5 * 60 * 1000)
   5  
   6:   test('English', async () => {
   7:     const $ = await getDOM('/en')
   8      const $links = $('a.link-with-intro')
   9:     expect($links.length).toBeGreaterThanOrEqual(8)
  10  

  16        expect(
  17:         $(el).find('.link-with-intro-title').text().trim().length,
  18          `Did not find a title for the linked article ${linkUrl}`
  19:       ).toBeGreaterThan(0)
  20        expect(
  21:         $(el).find('.link-with-intro-intro').text().trim().length,
  22          `Did not find an intro for the linked article ${linkUrl}`
  23:       ).toBeGreaterThan(0)
  24  
  25        // ensure there's no unwanted nested HTML
  26:       expect($(el).find('p').length).toBe(1)
  27:       expect($(el).find('a').length).toBe(0)
  28:       expect($(el).find('p p').length).toBe(0)
  29      })

  32    test('Japanese', async () => {
  33:     const $ = await getDOM('/ja')
  34      const $links = $('a.link-with-intro')
  35:     expect($links.length).toBeGreaterThanOrEqual(8)
  36  

  42        expect(
  43:         $(el).find('.link-with-intro-title').text().trim().length,
  44          `Did not find a title for the linked article ${linkUrl}`
  45:       ).toBeGreaterThan(0)
  46        expect(
  47:         $(el).find('.link-with-intro-intro').text().trim().length,
  48          `Did not find an intro for the linked article ${linkUrl}`
  49:       ).toBeGreaterThan(0)
  50      })

docs • tests\rendering\events.js:
    9    let csrfToken = ''
   10:   let agent
   11  

   16      process.env.HYDRO_ENDPOINT = 'http://example.com/hydro'
   17:     agent = request.agent(app)
   18:     const csrfRes = await agent.get('/en')
   19      const $ = cheerio.load(csrfRes.text || '', { xmlMode: true })

   34    async function checkEvent (data, code) {
   35:     return agent
   36        .post('/events')

   51        // Content information
   52:       path: '/github/docs/issues',
   53:       hostname: 'github.com',
   54:       referrer: 'https://github.com/github/docs',
   55        search: '?q=is%3Aissue+is%3Aopen+example+',
   56:       href: 'https://github.com/github/docs/issues?q=is%3Aissue+is%3Aopen+example+',
   57:       site_language: 'en',
   58  

   64        viewport_width: 1418,
   65:       viewport_height: 501,
   66  

   68        timezone: -7,
   69:       user_language: 'en-US'
   70      }

   72  
   73:   describe('page', () => {
   74:     const pageExample = { ...baseExample, type: 'page' }
   75  
   76:     it('should record a page event', () =>
   77:       checkEvent(pageExample, 201)
   78      )

   85        checkEvent({
   86:         ...pageExample,
   87          context: {
   88:           ...pageExample.context,
   89:           event_id: 'asdfghjkl'
   90          }

   95        checkEvent({
   96:         ...pageExample,
   97          context: {
   98:           ...pageExample.context,
   99:           user: 'asdfghjkl'
  100          }

  105        checkEvent({
  106:         ...pageExample,
  107          context: {
  108:           ...pageExample.context,
  109            version: undefined

  115        checkEvent({
  116:         ...pageExample,
  117          context: {
  118:           ...pageExample.context,
  119            timestamp: 1234

  123  
  124:     it('should allow page_event_id', () =>
  125        checkEvent({
  126:         ...pageExample,
  127          context: {
  128:           ...pageExample.context,
  129:           page_event_id: baseExample.context.event_id
  130          }

  135        checkEvent({
  136:         ...pageExample,
  137          context: {
  138:           ...pageExample.context,
  139            token: 'zxcv'

  145        checkEvent({
  146:         ...pageExample,
  147          context: {
  148:           ...pageExample.context,
  149            path: ' '

  155        checkEvent({
  156:         ...pageExample,
  157          context: {
  158:           ...pageExample.context,
  159            hostname: ' '

  165        checkEvent({
  166:         ...pageExample,
  167          context: {
  168:           ...pageExample.context,
  169            referrer: ' '

  173  
  174:     it('should search a string', () =>
  175        checkEvent({
  176:         ...pageExample,
  177          context: {
  178:           ...pageExample.context,
  179            search: 1234

  185        checkEvent({
  186:         ...pageExample,
  187          context: {
  188:           ...pageExample.context,
  189            href: '/example'

  193  
  194:     it('should site_language is a valid option', () =>
  195        checkEvent({
  196:         ...pageExample,
  197          context: {
  198:           ...pageExample.context,
  199:           site_language: 'nl'
  200          }

  205        checkEvent({
  206:         ...pageExample,
  207          context: {
  208:           ...pageExample.context,
  209            os: 'ubuntu'

  213  
  214:     it('should os_version a string', () =>
  215        checkEvent({
  216:         ...pageExample,
  217          context: {
  218:           ...pageExample.context,
  219            os_version: 25

  225        checkEvent({
  226:         ...pageExample,
  227          context: {
  228:           ...pageExample.context,
  229            browser: 'opera'

  233  
  234:     it('should browser_version a string', () =>
  235        checkEvent({
  236:         ...pageExample,
  237          context: {
  238:           ...pageExample.context,
  239            browser_version: 25

  245        checkEvent({
  246:         ...pageExample,
  247          context: {
  248:           ...pageExample.context,
  249            viewport_width: -500

  253  
  254:     it('should viewport_height a number', () =>
  255        checkEvent({
  256:         ...pageExample,
  257          context: {
  258:           ...pageExample.context,
  259:           viewport_height: '53px'
  260          }

  265        checkEvent({
  266:         ...pageExample,
  267          context: {
  268:           ...pageExample.context,
  269:           timezone: 'GMT-0700'
  270          }

  273  
  274:     it('should user_language is a string', () =>
  275        checkEvent({
  276:         ...pageExample,
  277          context: {
  278:           ...pageExample.context,
  279:           user_language: true
  280          }

  293        exit_visit_duration: 5,
  294:       exit_scroll_length: 0.5
  295      }

  319  
  320:     it('exit_scroll_length is a number between 0 and 1', () =>
  321:       checkEvent({ ...exitExample, exit_scroll_length: 1.1 }, 400)
  322      )

  335  
  336:     it('link_url is a required uri formatted string', () =>
  337        checkEvent({ ...linkExample, link_url: 'foo' }, 400)

  344        type: 'search',
  345:       search_query: 'github private instances',
  346        search_context: 'private'

  352  
  353:     it('search_query is required string', () =>
  354        checkEvent({ ...searchExample, search_query: undefined }, 400)

  356  
  357:     it('search_context is optional string', () =>
  358        checkEvent({ ...searchExample, search_context: undefined }, 201)

  361  
  362:   describe('navigate', () => {
  363:     const navigateExample = {
  364        ...baseExample,
  365:       type: 'navigate',
  366:       navigate_label: 'drop down'
  367      }
  368  
  369:     it('should record a navigate event', () =>
  370:       checkEvent(navigateExample, 201)
  371      )
  372  
  373:     it('navigate_label is optional string', () =>
  374:       checkEvent({ ...navigateExample, navigate_label: undefined }, 201)
  375      )

  394  
  395:     it('survey_comment is string', () => {
  396        checkEvent({ ...surveyExample, survey_comment: 1234 }, 400)

  407        type: 'experiment',
  408:       experiment_name: 'change-button-copy',
  409        experiment_variation: 'treatment',

  416  
  417:     it('experiment_name is required string', () =>
  418        checkEvent({ ...experimentExample, experiment_name: undefined }, 400)

  420  
  421:     it('experiment_variation is required string', () =>
  422        checkEvent({ ...experimentExample, experiment_variation: undefined }, 400)

docs • tests\rendering\footer.js:
   1: const { getDOM } = require('../helpers/supertest')
   2  const enterpriseServerReleases = require('../../lib/enterprise-server-releases')

   8    describe('"contact us" link', () => {
   9:     test('leads to dotcom support on dotcom pages', async () => {
  10:       const $ = await getDOM(`/en/${nonEnterpriseDefaultVersion}/github`)
  11:       expect($('a#contact-us').attr('href')).toBe('https://support.github.com/contact')
  12      })
  13  
  14:     test('leads to Enterprise support on Enterprise pages', async () => {
  15:       const $ = await getDOM(`/en/enterprise/${enterpriseServerReleases.latest}`)
  16:       expect($('a#contact-us').attr('href')).toBe('https://enterprise.github.com/support')
  17      })
  18  
  19:     test('leads to dotcom support on 404 pages', async () => {
  20:       const $ = await getDOM('/en/delicious-snacks/donuts.php')
  21:       expect($('a#contact-us').attr('href')).toBe('https://support.github.com/contact')
  22      })

docs • tests\rendering\head.js:
   1: const { getDOM } = require('../helpers/supertest')
   2: const languages = require('../../lib/languages')
   3  

   6  
   7:   test('includes hreflangs (references to all language versions of the same page)', async () => {
   8:     const $ = await getDOM('/en')
   9:     const $hreflangs = $('link[rel="alternate"]')
  10:     expect($hreflangs.length).toEqual(Object.keys(languages).length)
  11:     expect($('link[href="https://docs.github.com/cn"]').length).toBe(1)
  12:     expect($('link[href="https://docs.github.com/ja"]').length).toBe(1)
  13:     expect($('link[hreflang="en"]').length).toBe(1)
  14    })
  15  
  16:   test('includes page intro in `description` meta tag', async () => {
  17:     const $ = await getDOM('/en/articles/about-ssh')
  18      const $description = $('meta[name="description"]')
  19:     expect($description.attr('content').startsWith('Using the SSH protocol')).toBe(true)
  20    })
  21  
  22:   test('renders `description` meta tag in plaintext (no HTML)', async () => {
  23:     const $ = await getDOM('/en/articles/about-pull-request-merges')
  24      const $description = $('meta[name="description"]')
  25      // plain text intro
  26:     expect($description.attr('content').startsWith('You can merge pull requests by retaining')).toBe(true)
  27      // HTML intro
  28:     expect($('div.lead-mktg').html().startsWith('<p>You can <a href="/articles/merging-a-pull-request">merge pull requests</a>'))
  29    })

docs • tests\rendering\header.js:
   1: const { getDOM } = require('../helpers/supertest')
   2  const { oldestSupported, latest } = require('../../lib/enterprise-server-releases')

   6  
   7:   test('includes localized meta tags', async () => {
   8:     const $ = await getDOM('/en')
   9:     expect($('meta[name="site.data.ui.search.placeholder"]').length).toBe(1)
  10    })
  11  
  12:   test('includes a link to the homepage (in the current page\'s language)', async () => {
  13:     let $ = await getDOM('/en')
  14:     expect($('#github-logo a[href="/en"]').length).toBe(2)
  15  
  16:     $ = await getDOM('/ja')
  17:     expect($('#github-logo a[href="/ja"]').length).toBe(2)
  18:     expect($('#github-logo a[href="/en"]').length).toBe(0)
  19    })
  20  
  21:   describe('language links', () => {
  22:     test('lead to the same page in a different language', async () => {
  23:       const $ = await getDOM('/github/administering-a-repository/managing-a-branch-protection-rule')
  24:       expect($('#languages-selector a[href="/ja/github/administering-a-repository/managing-a-branch-protection-rule"]').length).toBe(1)
  25      })
  26  
  27:     test('display the native name and the English name for each translated language', async () => {
  28:       const $ = await getDOM('/en')
  29:       expect($('#languages-selector a[href="/en"]').text().trim()).toBe('English')
  30:       expect($('#languages-selector a[href="/cn"]').text().trim()).toBe('简体中文 (Simplified Chinese)')
  31:       expect($('#languages-selector a[href="/ja"]').text().trim()).toBe('日本語 (Japanese)')
  32      })
  33  
  34:     test('emphasize the current language', async () => {
  35:       const $ = await getDOM('/en')
  36:       expect($('#languages-selector a.active[href="/en"]').length).toBe(1)
  37:       expect($('#languages-selector a[href="/ja"]').length).toBe(1)
  38      })

  41    describe('notices', () => {
  42:     test('displays a "localization in progress" notice for WIP languages', async () => {
  43:       const $ = await getDOM('/de')
  44:       expect($('.header-notifications.translation_notice').length).toBe(1)
  45:       expect($('.header-notifications a[href="/en"]').length).toBe(1)
  46      })
  47  
  48:     test('displays "complete" notice for non-WIP non-English languages', async () => {
  49:       const $ = await getDOM('/ja')
  50:       expect($('.header-notifications.translation_notice').length).toBe(1)
  51:       expect($('.header-notifications a[href="/en"]').length).toBe(1)
  52:       expect($('.header-notifications a[href*="github.com/contact"]').length).toBe(1)
  53      })
  54  
  55:     test.skip('does not display any notices for English', async () => {
  56:       const $ = await getDOM('/en')
  57:       expect($('.header-notifications').length).toBe(0)
  58      })
  59  
  60:     test('displays translation disclaimer notice on localized site-policy pages', async () => {
  61:       const $ = await getDOM('/ja/github/site-policy/github-logo-policy')
  62:       expect($('.header-notifications.translation_notice a[href="https://github.com/github/site-policy/issues"]').length).toBe(1)
  63      })

  66    describe('mobile-only product dropdown links', () => {
  67:     test('include github and admin, and emphasize the current product', async () => {
  68:       const $ = await getDOM('/en/articles/enabling-required-status-checks')
  69  
  70:       const github = $('#homepages a.active[href="/en/github"]')
  71:       expect(github.length).toBe(1)
  72:       expect(github.text().trim()).toBe('GitHub.com')
  73:       expect(github.attr('class').includes('active')).toBe(true)
  74  
  75:       const ghe = $(`#homepages a[href="/en/enterprise-server@${latest}/admin"]`)
  76:       expect(ghe.length).toBe(1)
  77:       expect(ghe.text().trim()).toBe('Enterprise Administrators')
  78:       expect(ghe.attr('class').includes('active')).toBe(false)
  79      })
  80  
  81:     test('point to homepages in the current page\'s language', async () => {
  82:       const $ = await getDOM('/ja/github/administering-a-repository/defining-the-mergeability-of-pull-requests')
  83  
  84:       expect($('#homepages a.active[href="/ja/github"]').length).toBe(1)
  85:       expect($(`#homepages a[href="/ja/enterprise-server@${latest}/admin"]`).length).toBe(1)
  86      })
  87  
  88:     test('emphasizes the product that corresponds to the current page', async () => {
  89:       const $ = await getDOM(`/en/enterprise/${oldestSupported}/user/github/setting-up-and-managing-your-github-user-account/setting-your-commit-email-address`)
  90:       expect($(`#homepages a.active[href="/en/enterprise-server@${latest}/admin"]`).length).toBe(0)
  91:       expect($('#homepages a[href="/en/github"]').length).toBe(1)
  92:       expect($('#homepages a.active[href="/en/github"]').length).toBe(1)
  93      })

docs • tests\rendering\learning-tracks.js:
   1: const { getDOM } = require('../helpers/supertest')
   2  

   4  
   5: describe('learning tracks', () => {
   6    test('render first track as feature track', async () => {
   7:     const $ = await getDOM('/en/actions/guides')
   8:     expect($('.feature-track')).toHaveLength(1)
   9      const href = $('.feature-track li a').first().attr('href')

  15      $('.feature-track li a').each((i, elem) => {
  16:       expect($(elem).attr('href')).toEqual(expect.stringContaining(`?learn=${trackName}`))
  17      })

  20    test('render other tracks', async () => {
  21:     const $ = await getDOM('/en/actions/guides')
  22:     expect($('.learning-track').length).toBeGreaterThanOrEqual(4)
  23:     $('.learning-track').each((i, trackElem) => {
  24        const href = $(trackElem).find('.Box-header a').first().attr('href')

  30        $(trackElem).find('a.Box-row').each((i, elem) => {
  31:         expect($(elem).attr('href')).toEqual(expect.stringContaining(`?learn=${trackName}`))
  32        })

  36  
  37: describe('navigation banner', () => {
  38:   test('render navigation banner when url includes correct learning track name', async () => {
  39:     const $ = await getDOM('/en/actions/guides/setting-up-continuous-integration-using-workflow-templates?learn=continuous_integration')
  40:     expect($('.learning-track-nav')).toHaveLength(1)
  41:     const $navLinks = $('.learning-track-nav a')
  42:     expect($navLinks).toHaveLength(2)
  43      $navLinks.each((i, elem) => {
  44:       expect($(elem).attr('href')).toEqual(expect.stringContaining('?learn=continuous_integration'))
  45      })

  48    test('does not include banner when url does not include `learn` param', async () => {
  49:     const $ = await getDOM('/en/actions/guides/setting-up-continuous-integration-using-workflow-templates')
  50:     expect($('.learning-track-nav')).toHaveLength(0)
  51    })

  53    test('does not include banner when url has incorrect `learn` param', async () => {
  54:     const $ = await getDOM('/en/actions/guides/setting-up-continuous-integration-using-workflow-templates?learn=not_real')
  55:     expect($('.learning-track-nav')).toHaveLength(0)
  56    })
  57  
  58:   test('does not include banner when url is not part of the learning track', async () => {
  59:     const $ = await getDOM('/en/actions/learn-github-actions/introduction-to-github-actions?learn=continuous_integration')
  60:     expect($('.learning-track-nav')).toHaveLength(0)
  61    })

docs • tests\rendering\octicon.js:
   2  
   3: describe('octicon tag', () => {
   4    it('renders the expected octicon', async () => {
   5      const actual = await renderContent('{% octicon "check" %}')
   6:     expect(actual).toContain('<svg ')
   7      expect(actual).toContain('class="octicon octicon-check"')

  11      const actual = await renderContent('{% octicon "check" width="64" %}')
  12:     expect(actual).toContain('<svg ')
  13      expect(actual).toContain('class="octicon octicon-check"')

  18      const actual = await renderContent('{% octicon "check" width="64" aria-label="A checkmark" %}')
  19:     expect(actual).toContain('<svg ')
  20      expect(actual).toContain('class="octicon octicon-check"')

  26      const actual = await renderContent('{% octicon "check" label="A checkmark" %}')
  27:     expect(actual).toContain('<svg ')
  28      expect(actual).toContain('class="octicon octicon-check"')

  33      await expect(renderContent('{% octicon 123 %}')).rejects
  34:       .toThrowError('Syntax Error in tag \'octicon\' - Valid syntax: octicon "<name>" <key="value">')
  35    })

docs • tests\rendering\page-titles.js:
   1  const enterpriseServerReleases = require('../../lib/enterprise-server-releases')
   2: const { getDOM } = require('../helpers/supertest')
   3  
   4: describe('page titles', () => {
   5    jest.setTimeout(300 * 1000)
   6  
   7:   test('English homepage', async () => {
   8:     const $ = await getDOM('/en')
   9:     expect($('title').text()).toBe('GitHub Documentation')
  10    })
  11  
  12:   test('dotcom English article', async () => {
  13:     const $ = await getDOM('/en/articles/authorizing-oauth-apps')
  14:     expect($('title').text()).toBe('Authorizing OAuth Apps - GitHub Docs')
  15    })
  16  
  17:   test('enterprise English article', async () => {
  18:     const $ = await getDOM(`/en/enterprise/${enterpriseServerReleases.latest}/user/github/authenticating-to-github/authorizing-oauth-apps`)
  19:     expect($('title').text()).toBe('Authorizing OAuth Apps - GitHub Docs')
  20    })
  21  
  22:   test('dotcom English map topic page', async () => {
  23:     const $ = await getDOM('/en/articles/managing-user-account-settings')
  24:     expect($('title').text()).toBe('Managing user account settings - GitHub Docs')
  25    })
  26  
  27:   test('dotcom English category page', async () => {
  28:     const $ = await getDOM('/en/categories/managing-large-files')
  29:     expect($('title').text()).toBe('Managing large files - GitHub Docs')
  30    })
  31  
  32:   test('dynamically parses liquid in page titles (even on subsequent requests)', async () => {
  33:     let $ = await getDOM(`/en/enterprise/${enterpriseServerReleases.latest}`)
  34:     expect($('title').text()).toBe('GitHub Enterprise Server Help Documentation - GitHub Docs')
  35  
  36:     $ = await getDOM(`/en/enterprise/${enterpriseServerReleases.oldestSupported}`)
  37:     expect($('title').text()).toBe('GitHub Enterprise Server Help Documentation - GitHub Docs')
  38  
  39:     $ = await getDOM(`/en/enterprise/${enterpriseServerReleases.latest}`)
  40:     expect($('title').text()).toBe('GitHub Enterprise Server Help Documentation - GitHub Docs')
  41    })
  42  
  43:   // TODO enable this once translated content has synced with the versioning changes
  44:   // Note the expected translations may need to be updated, since the English title changed
  45:   // from `GitHub.com Help Documentation` to `GitHub Documentation`
  46:   test.skip('displays only the site name on localized homepages', async () => {
  47:     expect((await getDOM('/cn'))('title').text()).toBe('GitHub 帮助文档')
  48:     expect((await getDOM('/ja'))('title').text()).toBe('GitHub ヘルプドキュメント')
  49    })

docs • tests\rendering\rest.js:
   3  const { difference, isPlainObject } = require('lodash')
   4: const { getJSON } = require('../helpers/supertest')
   5  const enterpriseServerReleases = require('../../lib/enterprise-server-releases')
   6  // list of REST markdown files that do not correspond to REST API resources
   7: // TODO could we get this list dynamically, say via page frontmatter?
   8  const excludeFromResourceNameCheck = [
   9:   'endpoints-available-for-github-apps.md',
  10:   'permissions-required-for-github-apps.md',
  11    'index.md'

  16  
  17:   test('markdown file exists for every operationId prefix in the api.github.com schema', async () => {
  18:     const { categories } = require('../../lib/rest')
  19      const referenceDir = path.join(__dirname, '../../content/rest/reference')

  23  
  24:     const missingResource = 'Found a markdown file in content/rest/reference that is not represented by an OpenAPI REST operation category.'
  25:     expect(difference(filenames, categories), missingResource).toEqual([])
  26  
  27:     const missingFile = 'Found an OpenAPI REST operation category that is not represented by a markdown file in content/rest/reference.'
  28:     expect(difference(categories, filenames), missingFile).toEqual([])
  29    })
  30  
  31:   test('loads api.github.com OpenAPI schema data', async () => {
  32:     const operations = await getJSON('/en/rest/reference/emojis?json=currentRestOperations')
  33:     expect(JSON.stringify(operations).includes('GitHub Enterprise')).toBe(false)
  34    })

  36    test('loads Enterprise OpenAPI schema data', async () => {
  37:     const operations = await getJSON(`/en/enterprise/${enterpriseServerReleases.oldestSupported}/user/rest/reference/emojis?json=currentRestOperations`)
  38:     const operation = operations.find(operation => operation.operationId === 'emojis/get')
  39      expect(isPlainObject(operation)).toBe(true)
  40:     expect(operation.description).toContain('GitHub Enterprise')
  41    })
  42  
  43:   test('loads operations enabled for GitHub Apps', async () => {
  44:     const operations = await getJSON('/en/free-pro-team@latest/rest/overview/endpoints-available-for-github-apps?json=rest.operationsEnabledForGitHubApps')
  45:     expect(operations['free-pro-team@latest'].actions.length).toBeGreaterThan(0)
  46:     expect(operations['enterprise-server@2.22'].actions.length).toBeGreaterThan(0)
  47    })
  48  
  49:   test('no wrongly detected AppleScript syntax highlighting in schema data', async () => {
  50      const { operations } = require('../../lib/rest')
  51:     expect(JSON.stringify(operations).includes('hljs language-applescript')).toBe(false)
  52    })

docs • tests\rendering\robots-txt.js:
   1: const languages = require('../../lib/languages')
   2  const robotsParser = require('robots-parser')
   3  const robotsMiddleware = require('../../middleware/robots')
   4: const { get } = require('../helpers/supertest')
   5  const MockExpressResponse = require('mock-express-response')

  11    beforeAll(async (done) => {
  12:     res = await get('/robots.txt')
  13:     robots = robotsParser('https://docs.github.com/robots.txt', res.text)
  14      done()

  16  
  17:   it('allows indexing of the homepage and English content', async () => {
  18:     expect(robots.isAllowed('https://docs.github.com/')).toBe(true)
  19:     expect(robots.isAllowed('https://docs.github.com/en')).toBe(true)
  20:     expect(robots.isAllowed('https://docs.github.com/en/articles/verifying-your-email-address')).toBe(true)
  21    })
  22  
  23:   it('allows indexing of generally available localized content', async () => {
  24:     Object.values(languages)
  25:       .filter(language => !language.wip)
  26:       .forEach(language => {
  27:         expect(robots.isAllowed(`https://docs.github.com/${language.code}`)).toBe(true)
  28:         expect(robots.isAllowed(`https://docs.github.com/${language.code}/articles/verifying-your-email-address`)).toBe(true)
  29        })

  31  
  32:   it('disallows indexing of herokuapp.com domains', async () => {
  33      const req = {

  40      await robotsMiddleware(req, res, next)
  41:     expect(res._getString()).toEqual('User-agent: *\nDisallow: /')
  42    })

docs • tests\rendering\server.js:
    2  const enterpriseServerReleases = require('../../lib/enterprise-server-releases')
    3: const { get, getDOM, head, post } = require('../helpers/supertest')
    4  const { describeViaActionsOnly } = require('../helpers/conditional-runs')
    5  const path = require('path')
    6: const { loadPages } = require('../../lib/pages')
    7  const builtAssets = require('../../lib/built-asset-urls')
    8: const AZURE_STORAGE_URL = 'githubdocs.azureedge.net'
    9  

   13    beforeAll(async () => {
   14:     // The first page load takes a long time so let's get it out of the way in
   15:     // advance to call out that problem specifically rather than misleadingly
   16:     // attributing it to the first test
   17:     await get('/en')
   18    })

   22      expect(res.statusCode).toBe(200)
   23:     expect(res.headers).not.toHaveProperty('content-length')
   24      expect(res.text).toBeUndefined()

   26  
   27:   test('renders the homepage', async () => {
   28:     const res = await get('/en')
   29      expect(res.statusCode).toBe(200)

   31  
   32:   test('uses gzip compression', async () => {
   33:     const res = await get('/en')
   34:     expect(res.headers['content-encoding']).toBe('gzip')
   35:     expect(res.headers['transfer-encoding']).toBe('chunked')
   36    })

   38    test('sets Content Security Policy (CSP) headers', async () => {
   39:     const res = await get('/en')
   40      expect('content-security-policy' in res.headers).toBe(true)

   44      const csp = new (require('csp-parse'))(res.headers['content-security-policy'])
   45:     expect(csp.get('default-src')).toBe("'none'")
   46  
   47:     expect(csp.get('font-src').includes("'self'")).toBe(true)
   48:     expect(csp.get('font-src').includes(AZURE_STORAGE_URL)).toBe(true)
   49  
   50:     expect(csp.get('connect-src').includes("'self'")).toBe(true)
   51:     expect(csp.get('connect-src').includes('*.algolia.net')).toBe(true)
   52:     expect(csp.get('connect-src').includes('*.algolianet.com')).toBe(true)
   53  
   54:     expect(csp.get('img-src').includes("'self'")).toBe(true)
   55:     expect(csp.get('img-src').includes(AZURE_STORAGE_URL)).toBe(true)
   56  
   57:     expect(csp.get('script-src').includes("'self'")).toBe(true)
   58  
   59:     expect(csp.get('style-src').includes("'self'")).toBe(true)
   60:     expect(csp.get('style-src').includes("'unsafe-inline'")).toBe(true)
   61    })
   62  
   63:   test('sets Fastly cache control headers to bypass pages', async () => {
   64:     const res = await get('/en')
   65      expect(res.headers['cache-control']).toBe('private, no-store')
   66:     expect(res.headers['surrogate-control']).toBe('private, no-store')
   67:     expect(res.headers['surrogate-key']).toBe('all-the-things')
   68    })
   69  
   70:   test('does not render duplicate <html> or <body> tags', async () => {
   71:     const $ = await getDOM('/en')
   72:     expect($('html').length).toBe(1)
   73:     expect($('body').length).toBe(1)
   74    })
   75  
   76:   test('sets `lang` attribute on <html> attribute', async () => {
   77:     expect((await getDOM('/en'))('html').attr('lang')).toBe('en')
   78:     expect((await getDOM('/en/articles/set-up-git'))('html').attr('lang')).toBe('en')
   79:     expect((await getDOM('/ja'))('html').attr('lang')).toBe('ja')
   80    })
   81  
   82:   test('renders a 404 page', async () => {
   83:     const $ = await getDOM('/not-a-real-page')
   84      expect($('h1').text()).toBe('Ooops!')
   85:     expect($.text().includes("It looks like this page doesn't exist.")).toBe(true)
   86      expect($.text().includes('Still need help?')).toBe(true)

   90    test('renders a 400 for invalid paths', async () => {
   91:     const $ = await getDOM('/en/%7B%')
   92      expect($.res.statusCode).toBe(400)

   95    // see issue 12427
   96:   test('renders a 404 for leading slashes', async () => {
   97:     let $ = await getDOM('//foo.com/enterprise')
   98      expect($('h1').text()).toBe('Ooops!')

  100  
  101:     $ = await getDOM('///foo.com/enterprise')
  102      expect($('h1').text()).toBe('Ooops!')

  105  
  106:   test('renders a 500 page when errors are thrown', async () => {
  107:     const $ = await getDOM('/_500')
  108      expect($('h1').text()).toBe('Ooops!')

  123      // example from markdown source in intro:
  124:     // The `git rebase` command
  125:     const $ = await getDOM('/en/articles/about-git-rebase')
  126:     expect($.html()).toContain('The <code>git rebase</code> command')
  127    })

  131      // You can follow people on {{ site.data.variables.product.product_name }}
  132:     const $ = await getDOM('/en/github/getting-started-with-github/following-people')
  133:     expect($.text()).toContain('You can follow people on GitHub')
  134    })

  136    test('injects site variables into rendered permissions statements frontmatter', async () => {
  137:     // markdown source: {% data variables.product.prodname_pages %} site
  138:     const $ = await getDOM('/en/github/working-with-github-pages/configuring-a-publishing-source-for-your-github-pages-site')
  139:     expect($('div.permissions-statement').text()).toContain('GitHub Pages site')
  140    })

  143    test('does not use cached intros in map topics', async () => {
  144:     let $ = await getDOM('/en/github/importing-your-projects-to-github/importing-a-git-repository-using-the-command-line')
  145:     const articleIntro = $('.lead-mktg').text()
  146:     $ = await getDOM('/en/enterprise/2.16/user/importing-your-projects-to-github/importing-source-code-to-github')
  147      const mapTopicIntro = $('.map-topic').first().next().text()

  150  
  151:   test('injects site variables into rendered pages', async () => {
  152:     // example from markdown source in page body:
  153      // {{ site.data.variables.product.product_name }} may recommend
  154:     const $ = await getDOM('/en/github/getting-started-with-github/following-people')
  155:     expect($.text()).toContain('GitHub may recommend')
  156    })
  157  
  158:   test('serves /categories.json for support team usage', async () => {
  159:     const res = await get('/categories.json')
  160  
  161      // check for CORS header
  162:     expect(res.headers['access-control-allow-origin']).toBe('*')
  163  
  164:     const categories = JSON.parse(res.text)
  165:     expect(Array.isArray(categories)).toBe(true)
  166:     expect(categories.length).toBeGreaterThan(1)
  167:     categories.forEach(category => {
  168:       expect('name' in category).toBe(true)
  169:       expect('published_articles' in category).toBe(true)
  170      })

  174      // example from markdown source:
  175:     // 1. Go to {{ site.data.variables.product.product_name }}'s [Pricing]({{ site.data.variables.dotcom_billing.plans_url }}) page.
  176:     const $ = await getDOM('/en/github/getting-started-with-github/signing-up-for-a-new-github-account')
  177:     expect($.text()).toContain("Go to GitHub's Pricing page.")
  178:     expect($('a[href="https://github.com/pricing"]').first().text()).toBe('Pricing')
  179    })

  181    test('renders liquid within liquid within liquid in body text', async () => {
  182:     const $ = await getDOM('/en/github/administering-a-repository/enabling-required-status-checks')
  183:     expect($('ol li').first().text().trim()).toBe('On GitHub, navigate to the main page of the repository.')
  184    })

  186    test('renders liquid within liquid within liquid in intros', async () => {
  187:     const $ = await getDOM('/en/github/administering-a-repository/about-merge-methods-on-github')
  188:     expect($('div.lead-mktg').first().text().includes('merge their pull requests on GitHub')).toBe(true)
  189    })

  191    test('renders product frontmatter callouts', async () => {
  192:     const $ = await getDOM('/en/articles/about-branch-restrictions')
  193      const note = $('.product-callout').eq(0)
  194      expect(note.hasClass('border-purple')).toBe(true)
  195:     expect(note.hasClass('bg-purple-light')).toBe(true)
  196    })

  198    test('renders liquid within liquid within product frontmatter callouts', async () => {
  199:     const $ = await getDOM('/en/articles/about-branch-restrictions')
  200      const note = $('.product-callout').eq(0)
  201:     expect(note.first().text().trim().startsWith('Protected branches are available in public repositories with GitHub Free')).toBe(true)
  202    })
  203  
  204:   test('handles whitespace control in liquid tags', async () => {
  205      // example from markdown source of index:
  206:     // Liquid tags with {%- in lists should not result in newlines
  207      // that convert to <p>s in <li>s
  208:     const $ = await getDOM('/')
  209:     expect($('li > p').length).toBe(0)
  210    })

  212    test('renders liquid within liquid within liquid', async () => {
  213:     const $ = await getDOM('/en/articles/enabling-required-status-checks')
  214:     expect($('ol li').first().text().trim()).toBe('On GitHub, navigate to the main page of the repository.')
  215    })
  216  
  217:   test('preserves liquid statements with liquid raw tags in page output', async () => {
  218:     const $ = await getDOM('/en/github/working-with-github-pages/troubleshooting-jekyll-build-errors-for-github-pages-sites')
  219:     expect($.text().includes('{{ page.title }}')).toBe(true)
  220    })
  221  
  222:   test('displays links to categories on product TOCs', async () => {
  223:     const $ = await getDOM('/en/github')
  224:     expect($('article a[href="/en/github/getting-started-with-github"]')).toHaveLength(1)
  225    })
  226  
  227:   describe('autogenerated mini TOCs', () => {
  228      // TODO disable the mini TOC tests when we replace it with sticky TOC header
  229:     test('renders mini TOC in articles with more than one heading', async () => {
  230:       const $ = await getDOM('/en/github/getting-started-with-github/githubs-products')
  231:       expect($('h2#in-this-article').length).toBe(1)
  232:       expect($('h2#in-this-article + ul li a').length).toBeGreaterThan(1)
  233      })

  235      test('renders mini TOC in articles that includes h4s when specified by frontmatter', async () => {
  236:       const $ = await getDOM('/en/github/setting-up-and-managing-your-enterprise/enforcing-security-settings-in-your-enterprise-account')
  237:       expect($('h2#in-this-article').length).toBe(1)
  238:       expect($('h2#in-this-article + ul li.ml-0').length).toBeGreaterThan(0) // non-indented items
  239:       expect($('h2#in-this-article + ul li.ml-3').length).toBeGreaterThan(0) // indented items
  240      })
  241  
  242:     test('does not render mini TOC in articles with only one heading', async () => {
  243:       const $ = await getDOM('/en/github/visualizing-repository-data-with-graphs/about-repository-graphs')
  244:       expect($('h2#in-this-article').length).toBe(0)
  245      })
  246  
  247:     test('does not render mini TOC in articles with no headings', async () => {
  248:       const $ = await getDOM('/en/github/authenticating-to-github/reviewing-your-deploy-keys')
  249:       expect($('h2#in-this-article').length).toBe(0)
  250      })

  252      test('does not render mini TOC in non-articles', async () => {
  253:       const $ = await getDOM('/github/getting-started-with-github')
  254:       expect($('h2#in-this-article').length).toBe(0)
  255      })

  257  
  258:   describe('image asset paths', () => {
  259:     const localImageBasePath = '/assets/images'
  260:     const legacyImageBasePath = '/assets/enterprise'
  261      const latestEnterprisePath = `/en/enterprise/${enterpriseServerReleases.latest}`

  263  
  264:     test('github articles on dotcom have images that point to local assets dir', async () => {
  265:       const $ = await getDOM('/en/github/authenticating-to-github/configuring-two-factor-authentication')
  266:       expect($('img').first().attr('src').startsWith(localImageBasePath)).toBe(true)
  267      })
  268  
  269:     test('github articles on GHE have images that point to local assets dir', async () => {
  270:       const $ = await getDOM(`${latestEnterprisePath}/user/github/authenticating-to-github/configuring-two-factor-authentication`)
  271:       const imageSrc = $('img').first().attr('src')
  272:       expect(imageSrc.startsWith(localImageBasePath) || imageSrc.startsWith(legacyImageBasePath)).toBe(true)
  273      })
  274  
  275:     test('admin articles on latest version of GHE have images that point to local assets dir', async () => {
  276:       const $ = await getDOM(`${latestEnterprisePath}/admin/user-management/using-built-in-authentication`)
  277:       const imageSrc = $('img').first().attr('src')
  278:       expect(imageSrc.startsWith(localImageBasePath) || imageSrc.startsWith(legacyImageBasePath)).toBe(true)
  279      })
  280  
  281:     test('admin articles on older GHE versions have images that point to local assets dir', async () => {
  282:       const $ = await getDOM(`${oldestEnterprisePath}/admin/user-management/using-built-in-authentication`)
  283:       const imageSrc = $('img').first().attr('src')
  284:       expect(imageSrc.startsWith(localImageBasePath) || imageSrc.startsWith(legacyImageBasePath)).toBe(true)
  285      })
  286  
  287:     test('links that point to /assets are not rewritten with a language code', async () => {
  288:       const $ = await getDOM('/en/github/site-policy/github-privacy-statement')
  289:       expect($('#french').next().children('a').attr('href').startsWith(localImageBasePath)).toBe(true)
  290      })
  291  
  292:     test('github articles on GHAE have images that point to local assets dir', async () => {
  293:       const $ = await getDOM('/en/github-ae@latest/github/administering-a-repository/changing-the-default-branch')
  294:       const imageSrc = $('img').first().attr('src')
  295:       expect(imageSrc.startsWith(localImageBasePath) || imageSrc.startsWith(legacyImageBasePath)).toBe(true)
  296      })
  297  
  298:     test('admin articles on GHAE have images that point to local assets dir', async () => {
  299:       const $ = await getDOM('/en/github-ae@latest/admin/user-management/managing-dormant-users')
  300:       expect($('img').first().attr('src').startsWith(localImageBasePath)).toBe(true)
  301      })

  303  
  304:   describe('English local links', () => {
  305      const latestEnterprisePath = `/en/enterprise-server@${enterpriseServerReleases.latest}`

  307      test('dotcom articles on dotcom have links that include "en"', async () => {
  308:       const $ = await getDOM('/en/articles/set-up-git')
  309:       expect($('a[href="/en/articles/managing-files-on-github"]').length).toBe(1)
  310      })
  311  
  312:     test('dotcom articles on dotcom have Enterprise Admin links with latest GHE version', async () => {
  313:       const $ = await getDOM('/en/articles/setting-up-a-trial-of-github-enterprise-server')
  314:       expect($(`a[href="${latestEnterprisePath}/admin/installation/setting-up-a-github-enterprise-server-instance"]`).length).toBe(2)
  315      })
  316  
  317:     test('dotcom articles on GHE have Enterprise user links', async () => {
  318:       const $ = await getDOM(`${latestEnterprisePath}/github/getting-started-with-github/set-up-git`)
  319:       expect($(`a[href="${latestEnterprisePath}/articles/managing-files-on-github"]`).length).toBe(1)
  320      })
  321  
  322:     test('dotcom categories on GHE have Enterprise user links', async () => {
  323:       const $ = await getDOM(`${latestEnterprisePath}/github/managing-large-files`)
  324:       expect($(`article a[href="${latestEnterprisePath}/github/managing-large-files/conditions-for-large-files"]`).length).toBe(1)
  325      })
  326  
  327:     test('dotcom-only links on GHE are dotcom-only', async () => {
  328:       const $ = await getDOM(`${latestEnterprisePath}/github/setting-up-and-managing-your-github-profile/sending-your-github-enterprise-server-contributions-to-your-githubcom-profile`)
  329:       expect($('article a[href="/en/articles/github-privacy-statement"]').length).toBe(1)
  330      })
  331  
  332:     test('desktop links on GHE are dotcom-only', async () => {
  333:       const $ = await getDOM(`${latestEnterprisePath}/github/getting-started-with-github/set-up-git`)
  334:       expect($('article a[href="/en/desktop/installing-and-configuring-github-desktop"]').length).toBe(1)
  335      })

  337      test('admin articles that link to non-admin articles have Enterprise user links', async () => {
  338:       const $ = await getDOM(`${latestEnterprisePath}/admin/installation/configuring-the-default-visibility-of-new-repositories-on-your-appliance`)
  339:       expect($(`article a[href="${latestEnterprisePath}/github/creating-cloning-and-archiving-repositories/about-repository-visibility"]`).length).toBeGreaterThan(0)
  340      })

  342      test('admin articles that link to Enterprise user articles have Enterprise user links', async () => {
  343:       const $ = await getDOM(`${latestEnterprisePath}/admin/user-management/customizing-user-messages-for-your-enterprise`)
  344:       expect($('article a[href*="about-writing-and-formatting-on-github"]').length).toBe(1)
  345      })

  347      test('articles that link to external links that contain /articles/ are not rewritten', async () => {
  348:       const $ = await getDOM(`${latestEnterprisePath}/admin/installation/upgrading-github-enterprise-server`)
  349:       expect($('article a[href="https://docs.microsoft.com/azure/backup/backup-azure-vms-first-look-arm"]').length).toBe(1)
  350      })

  354      test('includes links to all versions of each article', async () => {
  355:       const articlePath = 'github/setting-up-and-managing-your-github-user-account/about-your-personal-dashboard'
  356:       const $ = await getDOM(`/en/enterprise-server@${enterpriseServerReleases.latest}/${articlePath}`)
  357:       expect($(`.article-versions a.active[href="/en/enterprise-server@${enterpriseServerReleases.latest}/${articlePath}"]`).length).toBe(2)
  358:       expect($(`.article-versions a.active[href="/en/${articlePath}"]`).length).toBe(0)
  359  
  360        // 2.13 predates this feature, so it should be excluded:
  361:       expect($(`.article-versions a[href="/en/enterprise/2.13/user/${articlePath}"]`).length).toBe(0)
  362      })

  364      test('is not displayed if article has only one version', async () => {
  365:       const $ = await getDOM('/en/articles/signing-up-for-a-new-github-account')
  366:       expect($('.article-versions').length).toBe(0)
  367      })

  370    describeViaActionsOnly('Early Access articles', () => {
  371:     let hiddenPageHrefs, hiddenPages
  372  
  373      beforeAll(async (done) => {
  374:       const $ = await getDOM('/early-access')
  375:       hiddenPageHrefs = $('#article-contents ul > li > a').map((i, el) => $(el).attr('href')).get()
  376  
  377:       const allPages = await loadPages()
  378:       hiddenPages = allPages.filter(page => page.languageCode === 'en' && page.hidden)
  379  

  382  
  383:     test('exist in the set of English pages', async () => {
  384:       expect(hiddenPages.length).toBeGreaterThan(0)
  385      })

  387      test('are listed at /early-access', async () => {
  388:       expect(hiddenPageHrefs.length).toBeGreaterThan(0)
  389      })

  393        process.env.NODE_ENV = 'production'
  394:       const res = await get('/early-access', { followRedirects: true })
  395        process.env.NODE_ENV = oldNodeEnv

  398  
  399:     test('have noindex meta tags', async () => {
  400:       const $ = await getDOM(hiddenPageHrefs[0])
  401:       expect($('meta[content="noindex"]').length).toBe(1)
  402      })
  403  
  404:     test('public articles do not have noindex meta tags', async () => {
  405:       const $ = await getDOM('/en/articles/set-up-git')
  406:       expect($('meta[content="noindex"]').length).toBe(0)
  407      })

  410    describe('redirects', () => {
  411:     test('redirects old articles to their English URL', async () => {
  412:       const res = await get('/articles/deleting-a-team')
  413        expect(res.statusCode).toBe(301)

  415  
  416:     test('redirects old articles to their slugified URL', async () => {
  417:       const res = await get('/articles/about-github-s-ip-addresses')
  418:       expect(res.text).toBe('Moved Permanently. Redirecting to /en/github/authenticating-to-github/about-githubs-ip-addresses')
  419      })

  421      test('redirects / to /en', async () => {
  422:       const res = await get('/')
  423        expect(res.statusCode).toBe(301)

  426  
  427:     test('adds English prefix to old article URLs', async () => {
  428:       const res = await get('/articles/deleting-a-team')
  429        expect(res.statusCode).toBe(301)

  432  
  433:     test('redirects Desktop Classic paths to desktop.github.com', async () => {
  434:       const res = await get('/desktop-classic')
  435        expect(res.statusCode).toBe(301)
  436:       expect(res.headers.location).toBe('https://desktop.github.com')
  437      })
  438  
  439:     test('redirects /insights/foo paths to /enterprise/user/insights/foo', async () => {
  440:       const res = await get('/en/insights/installing-and-configuring-github-insights/about-github-insights')
  441        expect(res.statusCode).toBe(301)
  442:       expect(res.headers.location).toBe(`/en/enterprise-server@${enterpriseServerReleases.latest}/insights/installing-and-configuring-github-insights/about-github-insights`)
  443      })

  446      // we can reenable it down the road if needed
  447:     test.skip('redirects versioned category page', async () => {
  448:       const res = await get('/en/github/receiving-notifications-about-activity-on-github')
  449        expect(res.statusCode).toBe(301)
  450:       expect(res.headers.location).toBe('/en/github/managing-subscriptions-and-notifications-on-github')
  451      })

  453  
  454:   describe('categories and map topics', () => {
  455:     test('adds links to categories on the dotcom homepage', async () => {
  456:       const $ = await getDOM('/en/github')
  457:       expect($('article a[href="/en/github/managing-large-files"]').length).toBe(1)
  458:       expect($('article a[href="#managing-large-files"]').length).toBe(0)
  459      })
  460  
  461:     test('adds links to map topics on a category homepage', async () => {
  462:       const $ = await getDOM('/en/github/setting-up-and-managing-your-github-user-account')
  463:       expect($('article a[href="/en/github/setting-up-and-managing-your-github-user-account/managing-user-account-settings"]').length).toBe(1)
  464:       expect($('article a[href="#managing-user-account-settings"]').length).toBe(0)
  465      })
  466  
  467:     test('category page renders with TOC', async () => {
  468:       const $ = await getDOM('/en/github/managing-large-files')
  469:       expect($('.markdown-body ul li a').length).toBeGreaterThan(5)
  470      })

  472      test('map topic renders with h2 links to articles', async () => {
  473:       const $ = await getDOM('/en/github/setting-up-and-managing-your-github-user-account/managing-user-account-settings')
  474:       expect($('a[href="/en/github/setting-up-and-managing-your-github-user-account/changing-your-github-username"] h2').length).toBe(1)
  475      })

  477      test('map topic renders with one intro for every h2', async () => {
  478:       const $ = await getDOM('/en/github/setting-up-and-managing-your-github-user-account/managing-user-account-settings')
  479        const $h2s = $('article a.link-with-intro')
  480:       expect($h2s.length).toBeGreaterThan(3)
  481        $h2s.each((i, el) => {

  486      test('map topic intros are parsed', async () => {
  487:       const $ = await getDOM('/en/github/setting-up-and-managing-your-github-user-account/managing-user-account-settings')
  488        const $intro = $('a.link-with-intro[href*="what-does-the-available-for-hire-checkbox-do"] + p')
  489:       expect($intro.length).toBe(1)
  490:       expect($intro.html()).toContain('Use the <strong>Available for hire</strong>')
  491      })

  494  
  495: describe('URLs by language', () => {
  496:   // TODO re-enable this test once TOCs are auto-generated (after PR 11731 has landed)
  497:   test('heading IDs and links on translated pages are in English', async () => {
  498:     const $ = await getDOM('/ja/github/getting-started-with-github/verifying-your-email-address')
  499      expect($.res.statusCode).toBe(200)
  500:     expect($('h3[id="further-reading"]').length).toBe(1)
  501:     expect($('h3[id="参考リンク"]').length).toBe(0)
  502:     expect($('h3 a[href="#further-reading"]').length).toBe(1)
  503    })

  505  
  506: describe('GitHub Enterprise URLs', () => {
  507:   test('renders the GHE user docs homepage', async () => {
  508:     const $ = await getDOM(`/en/enterprise/${enterpriseServerReleases.latest}/user/github`)
  509:     expect($(`article a[href="/en/enterprise-server@${enterpriseServerReleases.latest}/github/getting-started-with-github"]`).length).toBe(1)
  510    })
  511  
  512:   test('renders the Enterprise Server homepage with correct links', async () => {
  513:     const $ = await getDOM(`/en/enterprise/${enterpriseServerReleases.latest}`)
  514:     expect($(`section.container-xl a[href="/en/enterprise-server@${enterpriseServerReleases.latest}/admin"]`).length).toBe(1)
  515:     expect($(`section.container-xl a[href="/en/enterprise-server@${enterpriseServerReleases.latest}/github"]`).length).toBe(1)
  516    })
  517  
  518:   test('renders the Enterprise Admin category homepage', async () => {
  519      const adminPath = `/en/enterprise-server@${enterpriseServerReleases.latest}/admin`
  520:     const $ = await getDOM(adminPath)
  521:     expect($(`article a[href="${adminPath}/installation"]`).length).toBe(1)
  522:     expect($.text()).toContain('This guide describes')
  523    })
  524  
  525:   test('renders an Enterprise Admin category with correct links', async () => {
  526:     const installationCategoryHome = `/en/enterprise-server@${enterpriseServerReleases.latest}/admin/installation`
  527:     const $ = await getDOM(installationCategoryHome)
  528:     expect($(`article a[href^="${installationCategoryHome}/"]`).length).toBeGreaterThan(1)
  529    })
  530  
  531:   test('renders a translated Enterprise Admin category with English links', async () => {
  532:     const installationCategoryHome = `/ja/enterprise-server@${enterpriseServerReleases.latest}/admin/installation`
  533:     const $ = await getDOM(installationCategoryHome)
  534:     expect($(`article a[href^="${installationCategoryHome}/"]`).length).toBeGreaterThan(1)
  535    })
  536  
  537:   test('renders an Enterprise Admin category article', async () => {
  538:     const $ = await getDOM(`/en/enterprise/${enterpriseServerReleases.latest}/admin/installation/system-overview`)
  539:     expect($.text()).toContain('your organization\'s private copy of GitHub')
  540    })

  542    test('renders an Enterprise Admin map topic', async () => {
  543:     const $ = await getDOM(`/en/enterprise/${enterpriseServerReleases.latest}/admin/enterprise-management/updating-the-virtual-machine-and-physical-resources`)
  544:     expect($(`article a[href^="/en/enterprise-server@${enterpriseServerReleases.latest}/admin/enterprise-management/"]`).length).toBeGreaterThan(1)
  545    })
  546  
  547:   test('renders an Enterprise Admin category article within a map topic', async () => {
  548:     const $ = await getDOM(`/en/enterprise/${enterpriseServerReleases.latest}/admin/installation/upgrade-requirements`)
  549:     expect($.text()).toContain('Before upgrading GitHub Enterprise')
  550    })
  551  
  552:   test('renders Enterprise homepage in Japanese', async () => {
  553:     const res = await get(`/ja/enterprise-server@${enterpriseServerReleases.latest}`)
  554      expect(res.statusCode).toBe(200)

  556  
  557:   test('renders Enterprise User homepage in Japanese', async () => {
  558:     const res = await get(`/ja/enterprise-server@${enterpriseServerReleases.latest}/github`)
  559      expect(res.statusCode).toBe(200)

  561  
  562:   test('renders Enterprise Admin homepage in Japanese', async () => {
  563:     const res = await get(`/ja/enterprise-server@${enterpriseServerReleases.latest}/admin`)
  564      expect(res.statusCode).toBe(200)

  566  
  567:   test('renders Enterprise homepage in Chinese', async () => {
  568:     const res = await get(`/cn/enterprise-server@${enterpriseServerReleases.latest}`)
  569      expect(res.statusCode).toBe(200)

  571  
  572:   test('renders Enterprise User homepage in Chinese', async () => {
  573:     const res = await get(`/cn/enterprise-server@${enterpriseServerReleases.latest}/github`)
  574      expect(res.statusCode).toBe(200)

  576  
  577:   test('renders Enterprise Admin homepage in Chinese', async () => {
  578:     const res = await get(`/cn/enterprise-server@${enterpriseServerReleases.latest}/admin`)
  579      expect(res.statusCode).toBe(200)

  582  
  583: describe('GitHub Desktop URLs', () => {
  584:   test('renders the GitHub Desktop homepage with correct links', async () => {
  585:     const $ = await getDOM('/en/desktop')
  586:     expect($('article a[href^="/en/desktop/"]').length).toBeGreaterThan(1)
  587    })
  588  
  589:   test('renders a Desktop category with expected links', async () => {
  590:     const $ = await getDOM('/en/desktop/installing-and-configuring-github-desktop')
  591:     expect($('article a[href^="/en/desktop/installing-and-configuring-github-desktop/"]').length).toBeGreaterThan(1)
  592    })

  594    test('renders a Desktop map topic', async () => {
  595:     const $ = await getDOM('/en/desktop/installing-and-configuring-github-desktop/installing-and-authenticating-to-github-desktop')
  596:     expect($('article a[href^="/en/desktop/installing-and-configuring-github-desktop/"]').length).toBeGreaterThan(1)
  597    })

  599    test('renders a Desktop article within a map topic', async () => {
  600:     const res = await get('/en/desktop/installing-and-configuring-github-desktop/installing-github-desktop')
  601      expect(res.statusCode).toBe(200)

  603  
  604:   test('renders the Desktop homepage in Japanese', async () => {
  605:     const res = await get('/ja/desktop')
  606      expect(res.statusCode).toBe(200)

  611    test('fonts', async () => {
  612:     expect((await get('/dist/fonts/Inter-Medium.woff')).statusCode).toBe(200)
  613:     expect((await get('/dist/fonts/Inter-Regular.woff')).statusCode).toBe(200)
  614    })

  617  describe('extended Markdown', () => {
  618:   test('renders styled warnings', async () => {
  619:     const $ = await getDOM('/en/articles/removing-a-remote')
  620:     const warning = $('div.extended-markdown.warning')
  621:     expect(warning.length).toBe(1)
  622:     expect(warning.text().includes('does not delete the remote')).toBe(true)
  623    })
  624  
  625:   test('renders styled tips (multiple per page)', async () => {
  626:     const $ = await getDOM('/en/articles/authorizing-oauth-apps')
  627      const tips = $('div.extended-markdown.tip')
  628:     expect(tips.length).toBe(3)
  629      expect(tips.eq(0).text().includes('verify your email address')).toBe(true)

  632    test('renders styled notes within liquid', async () => {
  633:     const $ = await getDOM('/en/articles/removing-a-member-from-your-organization')
  634      const note = $('.extended-markdown.note').eq(0)
  635      expect(note.hasClass('border-blue')).toBe(true)
  636:     expect(note.hasClass('bg-blue-light')).toBe(true)
  637    })

  639    test('renders platform-specific content', async () => {
  640:     const $ = await getDOM('/en/github/using-git/associating-text-editors-with-git')
  641:     expect($('.extended-markdown.mac h3#using-textmate-as-your-editor').length).toBe(1)
  642:     expect($('.extended-markdown.windows h3#using-notepad-as-your-editor').length).toBe(1)
  643:     expect($('.extended-markdown.linux h3#using-textmate-as-your-editor').length).toBe(0)
  644:     expect($('.extended-markdown.linux h3#using-notepad-as-your-editor').length).toBe(0)
  645    })
  646  
  647:   test('renders expected mini TOC headings in platform-specific content', async () => {
  648:     const $ = await getDOM('/en/github/using-git/associating-text-editors-with-git')
  649:     expect($('h2#in-this-article').length).toBe(1)
  650:     expect($('h2#in-this-article + ul li.extended-markdown.mac').length).toBeGreaterThan(1)
  651:     expect($('h2#in-this-article + ul li.extended-markdown.windows').length).toBeGreaterThan(1)
  652:     expect($('h2#in-this-article + ul li.extended-markdown.linux').length).toBeGreaterThan(1)
  653    })

  660  
  661:   it('homepage does not render any elements with duplicate IDs', async () => {
  662:     const $ = await getDOM('/en')
  663      const ids = $('body')

  665        .map((i, el) => $(el).attr('id'))
  666:       .get()
  667        .sort()
  668      const dupes = findDupesInArray(ids)
  669:     const message = `Oops found duplicate DOM id(s): ${dupes.join(', ')}`
  670:     expect(ids.length).toBeGreaterThan(0)
  671:     expect(dupes.length === 0, message).toBe(true)
  672    })
  673  
  674:   it('articles pages do not render any elements with duplicate IDs', async () => {
  675:     const $ = await getDOM('/en/articles/accessing-an-organization')
  676      const ids = $('body')

  678        .map((i, el) => $(el).attr('id'))
  679:       .get()
  680        .sort()
  681      const dupes = findDupesInArray(ids)
  682:     const message = `Oops found duplicate DOM id(s): ${dupes.join(', ')}`
  683:     expect(ids.length).toBeGreaterThan(0)
  684:     expect(dupes.length === 0, message).toBe(true)
  685    })

  687  
  688: describe('?json query param for context debugging', () => {
  689    it('uses query param value as a key', async () => {
  690:     const res = await get('/en?json=page')
  691:     const page = JSON.parse(res.text)
  692:     expect(typeof page.title).toBe('string')
  693    })
  694  
  695:   it('returns a helpful message with top-level keys if query param has no value', async () => {
  696:     const res = await get('/en?json')
  697      const context = JSON.parse(res.text)
  698  
  699:     expect(context.message.includes('context object is too big to display')).toBe(true)
  700      expect(Array.isArray(context.keys)).toBe(true)
  701:     expect(context.keys.includes('page')).toBe(true)
  702:     expect(context.keys.includes('pages')).toBe(true)
  703      expect(context.keys.includes('redirects')).toBe(true)

  707  describe('stylesheets', () => {
  708:   it('compiles and sets the right content-type header', async () => {
  709      const stylesheetUrl = builtAssets.main.css
  710:     const res = await get(stylesheetUrl)
  711      expect(res.statusCode).toBe(200)

  719      const scriptUrl = builtAssets.main.js
  720:     res = await get(scriptUrl)
  721      done()

  727  
  728:   it('sets the right content-type header', async () => {
  729      expect(res.headers['content-type']).toBe('application/javascript; charset=UTF-8')

  731  
  732:   // TODO: configure webpack to create production bundle in the test env
  733:   // it('is not too big', async () => {
  734:   //   const tooBig = 10 * 1000
  735:   //   expect(res.text.length).toBeLessThan(tooBig)
  736    // })

  740    it('serves content from the /assets directory', async () => {
  741:     expect((await get('/assets/images/site/be-social.gif')).statusCode).toBe(200)
  742    })
  743  
  744:   it('serves schema files from the /data/graphql directory at /public', async () => {
  745:     expect((await get('/public/schema.docs.graphql')).statusCode).toBe(200)
  746:     expect((await get(`/public/ghes-${enterpriseServerReleases.latest}/schema.docs-enterprise.graphql`)).statusCode).toBe(200)
  747:     expect((await get(`/public/ghes-${enterpriseServerReleases.oldestSupported}/schema.docs-enterprise.graphql`)).statusCode).toBe(200)
  748:     expect((await get('/public/ghae/schema.docs-ghae.graphql')).statusCode).toBe(200)
  749    })

  751    it('does not serve repo contents that live outside the /assets directory', async () => {
  752:     expect((await get('/package.json', { followRedirects: true })).statusCode).toBe(404)
  753:     expect((await get('/README.md', { followRedirects: true })).statusCode).toBe(404)
  754:     expect((await get('/server.js', { followRedirects: true })).statusCode).toBe(404)
  755    })

  757  
  758: describe('index pages', () => {
  759:   const nonEnterpriseOnlyPath = '/en/github/setting-up-and-managing-your-github-user-account/managing-user-account-settings'
  760  
  761    test('includes dotcom-only links in dotcom TOC', async () => {
  762:     const $ = await getDOM('/en/github/setting-up-and-managing-your-github-user-account')
  763:     expect($(`article a[href="${nonEnterpriseOnlyPath}"]`).length).toBe(1)
  764    })
  765  
  766:   test('excludes dotcom-only from GHE TOC', async () => {
  767:     const $ = await getDOM(`/en/enterprise/${enterpriseServerReleases.latest}/user/github/setting-up-and-managing-your-github-user-account`)
  768:     expect($(`a[href="${nonEnterpriseOnlyPath}"]`).length).toBe(0)
  769    })
  770  
  771:   test('includes correctly versioned links in GHE', async () => {
  772      const installationLatest = `/en/enterprise-server@${enterpriseServerReleases.latest}/admin/installation`
  773:     const $ = await getDOM(installationLatest)
  774:     expect($(`article a[href^="${installationLatest}/"]`).length).toBeGreaterThan(0)
  775    })

docs • tests\rendering\sidebar.js:
   1: const { getDOM } = require('../helpers/supertest')
   2  

   5  
   6:   let $homePage, $githubPage, $enterprisePage
   7    beforeAll(async (done) => {
   8:     [$homePage, $githubPage, $enterprisePage] = await Promise.all([
   9:       getDOM('/en'),
  10:       getDOM('/en/github'),
  11:       getDOM('/en/enterprise/admin')
  12      ])

  15  
  16:   test('highlights active product on Enterprise pages', async () => {
  17:     expect($enterprisePage('.sidebar li.sidebar-product').length).toBe(1)
  18:     expect($enterprisePage('.sidebar li.sidebar-product > a').text().trim()).toBe('Enterprise Administrators')
  19    })
  20  
  21:   test('highlights active product on GitHub pages', async () => {
  22:     expect($githubPage('.sidebar li.sidebar-product').length).toBe(1)
  23:     expect($githubPage('.sidebar li.sidebar-product > a').text().trim()).toBe('GitHub.com')
  24    })

  26    test('includes links to external products like the CLI, Atom, and Electron', async () => {
  27:     expect($homePage('.sidebar a[href="https://cli.github.com/manual"]')).toHaveLength(1)
  28:     expect($homePage('.sidebar a[href="https://atom.io/docs"]')).toHaveLength(1)
  29:     expect($homePage('.sidebar a[href="https://electronjs.org/docs"]')).toHaveLength(1)
  30    })
  31  
  32:   test('adds an `is-current-page` class to the sidebar link to the current page', async () => {
  33:     const url = '/en/github/setting-up-and-managing-your-github-user-account/managing-user-account-settings'
  34:     const $ = await getDOM(url)
  35:     expect($('.sidebar .is-current-page').length).toBe(1)
  36:     expect($('.sidebar .is-current-page a').attr('href')).toContain(url)
  37    })

  39    test('does not display Early Access as a product', async () => {
  40:     expect($homePage('.sidebar li.sidebar-product[title*="Early"]').length).toBe(0)
  41:     expect($homePage('.sidebar li.sidebar-product[title*="early"]').length).toBe(0)
  42    })

docs • tests\routing\deprecated-enterprise-versions.js:
    2  const enterpriseServerReleases = require('../../lib/enterprise-server-releases')
    3: const { get, getDOM } = require('../helpers/supertest')
    4  const supertest = require('supertest')

    8  
    9:   test('redirects language-prefixed requests for deprecated enterprise content', async () => {
   10:     const res = await get('/en/enterprise/2.12')
   11      expect(res.statusCode).toBe(301)

   14  
   15:   test('redirects language-prefixed requests for deprecated version 11.10.340', async () => {
   16:     const res = await get('/en/enterprise/11.10.340')
   17      expect(res.statusCode).toBe(301)

   20  
   21:   test('redirects non-language-prefixed requests for deprecated enterprise content >=2.13', async () => {
   22:     const res = await get('/enterprise/2.13')
   23      expect(res.statusCode).toBe(301)

   27    test('workaround for lost frontmatter redirects works in deprecated enterprise content >=2.13', async () => {
   28:     const res = await get('/en/enterprise/2.15/user/articles/viewing-contributions-on-your-profile-page')
   29      expect(res.statusCode).toBe(301)
   30:     expect(res.headers.location).toBe('/en/enterprise/2.15/user/articles/viewing-contributions-on-your-profile')
   31    })

   33    test('can access redirects from redirects.json in deprecated enterprise content >2.17', async () => {
   34:     const res = await get('/enterprise/2.19/admin/categories/time')
   35      expect(res.statusCode).toBe(301)
   36:     expect(res.headers.location).toBe('/en/enterprise-server@2.19/admin/configuration/configuring-time-synchronization')
   37    })
   38  
   39:   test('handles requests for deprecated Enterprise pages ( >=2.13 )', async () => {
   40      expect(enterpriseServerReleases.deprecated.includes('2.13')).toBe(true)
   41:     const $ = await getDOM('/en/enterprise/2.13/user/articles/about-branches')
   42      expect($.res.statusCode).toBe(200)

   45  
   46:   test('sets the expected x-robots-tag header for deprecated Enterprise pages', async () => {
   47:     const res = await get('/en/enterprise/2.13/user/articles/about-branches')
   48      expect(res.statusCode).toBe(200)
   49:     expect(res.get('x-robots-tag')).toBe('noindex')
   50    })
   51  
   52:   test('handles requests for deprecated Enterprise pages ( <2.13 )', async () => {
   53      expect(enterpriseServerReleases.deprecated.includes('2.12')).toBe(true)
   54:     const $ = await getDOM('/enterprise/2.12/user/articles/about-branches')
   55      expect($.res.statusCode).toBe(200)

   60      expect(enterpriseServerReleases.deprecated.includes('11.10.340')).toBe(true)
   61:     const $ = await getDOM('/enterprise/11.10.340/admin/articles/adding-teams')
   62      expect($.res.statusCode).toBe(200)
   63:     expect($('h2').text()).toBe('Adding teams')
   64    })
   65  
   66:   test('has working admin guide links ( <2.13 )', async () => {
   67:     const guidesPath = '/enterprise/2.12/admin'
   68:     let $ = await getDOM(`${guidesPath}/guides`)
   69:     const firstLink = $('[class="guide-section"]').children('a').attr('href')
   70  
   71:     $ = await getDOM(`${guidesPath}/${firstLink}`)
   72      expect($.res.statusCode).toBe(200)
   73:     // this test assumes the Installation guide is the first link on the guides page
   74:     expect($('h2').text()).toBe('Installing and configuring GitHub Enterprise')
   75    })

   78  describe('deprecation banner', () => {
   79:   test('renders a deprecation warning banner on oldest supported Enterprise version', async () => {
   80:     const $ = await getDOM(`/en/enterprise/${enterpriseServerReleases.oldestSupported}`)
   81:     expect($('.deprecation-banner').length).toBe(1)
   82    })
   83  
   84:   test('does not render a deprecation warning banner on other Enterprise versions', async () => {
   85:     const $ = await getDOM(`/en/enterprise/${enterpriseServerReleases.latest}`)
   86:     expect($('.deprecation-banner').length).toBe(0)
   87    })
   88  
   89:   test('deprecation warning banner includes a date', async () => {
   90:     const $ = await getDOM(`/en/enterprise/${enterpriseServerReleases.oldestSupported}`)
   91      expect($('.deprecation-banner b').text().endsWith('discontinued on .')).toBe(false)

   93  
   94:   test('deprecation warning banner includes the right text depending on the date', async () => {
   95:     const $ = await getDOM(`/en/enterprise/${enterpriseServerReleases.oldestSupported}`)
   96:     const expectedString = enterpriseServerReleases.isOldestReleaseDeprecated
   97        ? 'was discontinued'
   98        : 'will be discontinued'
   99:     expect($('.deprecation-banner b').text().includes(expectedString)).toBe(true)
  100    })

  104    test('does not render helpfulness prompt', async () => {
  105:     let $ = await getDOM(`/en/enterprise/${enterpriseServerReleases.latest}/github`)
  106:     expect($('.js-helpfulness').length).toBeGreaterThan(0)
  107:     $ = await getDOM(`/en/enterprise/${enterpriseServerReleases.oldestSupported}/github`)
  108      if (enterpriseServerReleases.isOldestReleaseDeprecated) {
  109:       expect($('.js-helpfulness').length).toBe(0)
  110      } else {
  111:       expect($('.js-helpfulness').length).toBeGreaterThan(0)
  112      }

  115    test('does not render contribution button', async () => {
  116:     let $ = await getDOM(`/en/enterprise/${enterpriseServerReleases.latest}/github`)
  117:     expect($('.contribution').length).toBeGreaterThan(0)
  118:     $ = await getDOM(`/en/enterprise/${enterpriseServerReleases.oldestSupported}/github`)
  119      if (enterpriseServerReleases.isOldestReleaseDeprecated) {
  120:       expect($('.contribution').length).toBe(0)
  121      } else {
  122:       expect($('.js-helpfulness').length).toBeGreaterThan(0)
  123      }

  129      const result = await supertest(app)
  130:       .get('/enterprise/2.18/dist/index.css')
  131        .set('Referrer', '/en/enterprise/2.18')

  133      expect(result.statusCode).toBe(200)
  134:     expect(result.get('x-is-archived')).toBe('true')
  135:     expect(result.get('Content-Type')).toBe('text/css; charset=utf-8')
  136    })

  139      const result = await supertest(app)
  140:       .get('/stylesheets/index.css')
  141        .set('Referrer', '/en/enterprise/2.13')

  143      expect(result.statusCode).toBe(200)
  144:     expect(result.get('x-is-archived')).toBe('true')
  145:     expect(result.get('Content-Type')).toBe('text/css; charset=utf-8')
  146    })

  149      const result = await supertest(app)
  150:       .get('/enterprise/2.18/dist/index.js')
  151        .set('Referrer', '/en/enterprise/2.18')

  153      expect(result.statusCode).toBe(200)
  154:     expect(result.get('x-is-archived')).toBe('true')
  155:     expect(result.get('Content-Type')).toBe('application/javascript; charset=utf-8')
  156    })

  159      const result = await supertest(app)
  160:       .get('/javascripts/index.js')
  161        .set('Referrer', '/en/enterprise/2.13')

  163      expect(result.statusCode).toBe(200)
  164:     expect(result.get('x-is-archived')).toBe('true')
  165:     expect(result.get('Content-Type')).toBe('application/javascript; charset=utf-8')
  166    })
  167  
  168:   it('returns the expected image', async () => {
  169      const result = await supertest(app)
  170:       .get('/assets/images/octicons/hamburger.svg')
  171        .set('Referrer', '/en/enterprise/2.17')

  173      expect(result.statusCode).toBe(200)
  174:     expect(result.get('x-is-archived')).toBe('true')
  175:     expect(result.get('Content-Type')).toBe('image/svg+xml; charset=utf-8')
  176    })

  179      const result = await supertest(app)
  180:       .get('/node_modules/algoliasearch/dist/algoliasearch.min.js')
  181        .set('Referrer', '/en/enterprise/2.17')

  183      expect(result.statusCode).toBe(200)
  184:     expect(result.get('x-is-archived')).toBe('true')
  185:     expect(result.get('Content-Type')).toBe('application/javascript; charset=utf-8')
  186    })

  189      const result = await supertest(app)
  190:       .get('/assets/images/site/favicon.svg')
  191        .set('Referrer', '/en/enterprise/2.18')

  193      expect(result.statusCode).toBe(200)
  194:     expect(result.get('x-is-archived')).toBe('true')
  195:     expect(result.get('Content-Type')).toBe('image/svg+xml; charset=utf-8')
  196    })

  199      const result = await supertest(app)
  200:       .get('/assets/stylesheets/application.css')
  201        .set('Referrer', '/en/enterprise/2.12')

  203      expect(result.statusCode).toBe(200)
  204:     expect(result.get('x-is-archived')).toBe('true')
  205:     expect(result.get('Content-Type')).toBe('text/css; charset=utf-8')
  206    })
  207  
  208:   it('ignores invalid paths', async () => {
  209      const result = await supertest(app)
  210:       .get('/pizza/index.css')
  211        .set('Referrer', '/en/enterprise/2.13')

  213      expect(result.statusCode).toBe(404)
  214:     expect(result.get('x-is-archived')).toBeUndefined()
  215    })

docs • tests\routing\developer-site-redirects.js:
    3  const enterpriseServerReleases = require('../../lib/enterprise-server-releases')
    4: const { get } = require('../helpers/supertest')
    5  const restRedirectFixtures = require('../fixtures/rest-redirects')
    6: const graphqlRedirectFixtures = require('../fixtures/graphql-redirects')
    7  const developerRedirectFixtures = require('../fixtures/developer-redirects')

   14    beforeAll(async () => {
   15:     // The first page load takes a long time so let's get it out of the way in
   16:     // advance to call out that problem specifically rather than misleadingly
   17:     // attributing it to the first test
   18:     await get('/v4')
   19    })
   20  
   21:   describe('redirects /v4 requests to /graphql', () => {
   22:     test('graphql homepage', async () => {
   23:       const res = await get('/v4')
   24        expect(res.statusCode).toBe(301)
   25:       const expectedFinalPath = '/en/graphql'
   26        expect(res.headers.location).toBe(expectedFinalPath)

   28  
   29:     test('graphql enterprise homepage', async () => {
   30:       const res = await get('/enterprise/v4', { followAllRedirects: true })
   31        expect(res.statusCode).toBe(200)
   32        const finalPath = (new URL(res.request.url)).pathname
   33:       const expectedFinalPath = `/en/enterprise-server@${enterpriseServerReleases.latest}/graphql`
   34        expect(finalPath).toBe(expectedFinalPath)

   36  
   37:     test('graphql overview paths', async () => {
   38:       const oldPath = '/v4/breaking_changes'
   39:       const newPath = '/graphql/overview/breaking-changes'
   40:       const res = await get(oldPath)
   41        expect(res.statusCode).toBe(301)

   43  
   44:       const enterpriseRes = await get(`/enterprise${oldPath}`, { followAllRedirects: true })
   45        expect(enterpriseRes.statusCode).toBe(200)

   50  
   51:     test('graphql reference paths with child pages', async () => {
   52:       const sclarRes = await get('/en/v4/scalar/boolean')
   53        expect(sclarRes.statusCode).toBe(301)
   54:       const sclarResFinalPath = '/en/graphql/reference/scalars#boolean'
   55        expect(sclarRes.headers.location).toBe(sclarResFinalPath)
   56  
   57:       const enumRes = await get('/en/v4/enum/searchtype')
   58        expect(enumRes.statusCode).toBe(301)
   59:       const enumResFinalPath = '/en/graphql/reference/enums#searchtype'
   60        expect(enumRes.headers.location).toBe(enumResFinalPath)

   65      let expectedFinalPath
   66:     let res = await get('/v3')
   67      expect(res.statusCode).toBe(301)

   70  
   71:     // REST subresources like activity notifications don't have their own page
   72:     // any more, so redirect to an anchor on the resource page
   73:     res = await get('/en/v3/activity')
   74      expect(res.statusCode).toBe(301)

   77  
   78:     // REST subresources like activity notifications don't have their own page
   79:     // any more, so redirect to an anchor on the resource page
   80:     res = await get('/en/v3/activity/notifications')
   81      expect(res.statusCode).toBe(301)

   84  
   85:     // trailing slashes are handled separately by the `slashes` module;
   86:     // any request to a /v3 URL with a trailing slash will be redirected twice
   87:     res = await get('/en/v3/activity/notifications/')
   88      expect(res.statusCode).toBe(301)

   90  
   91:     // non-reference redirects (e.g. guides)
   92:     res = await get('/en/v3/guides/basics-of-authentication')
   93      expect(res.statusCode).toBe(301)
   94:     expectedFinalPath = '/en/rest/guides/basics-of-authentication'
   95      expect(res.headers.location).toBe(expectedFinalPath)

  104          async (newPath, oldPath) => {
  105:           const res = await get(oldPath)
  106            expect(res.statusCode, `${oldPath} did not redirect to ${newPath}`).toBe(301)

  117          async (newPath, oldPath) => {
  118:           // REST and GraphQL developer Enterprise paths with a version are only supported up to 2.21.
  119            // We make an exception to always redirect versionless paths to the latest version.
  120            newPath = newPath.replace('/enterprise-server/', `/enterprise-server@${enterpriseServerReleases.latest}/`)
  121:           const res = await get(oldPath)
  122            expect(res.statusCode, `${oldPath} did not redirect to ${newPath}`).toBe(301)

  128      // this fixtures file includes /v4 and /enterprise/v4 paths
  129:     test('graphql reference redirects', async () => {
  130        await eachOfLimit(
  131:         graphqlRedirectFixtures,
  132          MAX_CONCURRENT_REQUESTS,
  133          async (newPath, oldPath) => {
  134:           // REST and GraphQL developer Enterprise paths with a version are only supported up to 2.21.
  135            // We make an exception to always redirect versionless paths to the latest version.
  136            newPath = newPath.replace('/enterprise-server/', `/enterprise-server@${enterpriseServerReleases.latest}/`)
  137:           const res = await get(oldPath)
  138            expect(res.statusCode, `${oldPath} did not redirect to ${newPath}`).toBe(301)

docs • tests\routing\enterprise-release-notes.js:
   1: const { get } = require('../helpers/supertest')
   2  

   6    beforeAll(async () => {
   7:     // The first page load takes a long time so let's get it out of the way in
   8:     // advance to call out that problem specifically rather than misleadingly
   9:     // attributing it to the first test
  10:     await get('/')
  11    })
  12  
  13:   it('redirects to the release notes on enterprise.github.com if none are present for this version here', async () => {
  14:     const res = await get('/en/enterprise-server@2.19/admin/release-notes')
  15      expect(res.statusCode).toBe(302)
  16:     expect(res.headers.location).toBe('https://enterprise.github.com/releases/2.19.0/notes')
  17    })

  20    it('renders the release-notes layout if this version\'s release notes are in this repo', async () => {
  21:     const res = await get('/en/enterprise-server@2.22/admin/release-notes')
  22      expect(res.statusCode).toBe(200)

docs • tests\routing\language-code-redirects.js:
   1: const { get } = require('../helpers/supertest')
   2  
   3: describe('language code redirects', () => {
   4    jest.setTimeout(5 * 60 * 1000)

   7      let $
   8:     $ = await get('/jp', { dom: false })
   9      expect($.res.statusCode).toBe(301)

  11  
  12:     $ = await get('/jp/articles/about-your-personal-dashboard', { dom: false })
  13      expect($.res.statusCode).toBe(301)

  18      let $
  19:     $ = await get('/zh-CN', { dom: false })
  20      expect($.res.statusCode).toBe(301)

  22  
  23:     $ = await get('/zh-TW/articles/about-your-personal-dashboard', { dom: false })
  24      expect($.res.statusCode).toBe(301)

docs • tests\routing\redirects.js:
    6  const nonEnterpriseDefaultVersion = require('../../lib/non-enterprise-default-version')
    7: const Page = require('../../lib/page')
    8: const { get } = require('../helpers/supertest')
    9  

   14    beforeAll(async (done) => {
   15:     const res = await get('/en?json=redirects')
   16      redirects = JSON.parse(res.text)

   19  
   20:   test('page.redirects is an array', async () => {
   21:     const page = await Page.init({
   22:       relativePath: 'github/collaborating-with-issues-and-pull-requests/about-branches.md',
   23        basePath: path.join(__dirname, '../../content'),
   24:       languageCode: 'en'
   25      })
   26:     page.buildRedirects()
   27:     expect(isPlainObject(page.redirects)).toBe(true)
   28    })
   29  
   30:   test('dotcom homepage page.redirects', async () => {
   31:     const page = await Page.init({
   32:       relativePath: 'github/index.md',
   33        basePath: path.join(__dirname, '../../content'),
   34:       languageCode: 'en'
   35      })
   36:     page.buildRedirects()
   37:     expect(page.redirects[`/en/${nonEnterpriseDefaultVersion}/github`]).toBe('/en/github')
   38:     expect(page.redirects['/articles']).toBe('/en/github')
   39:     expect(page.redirects['/en/articles']).toBe('/en/github')
   40:     expect(page.redirects[`/en/${nonEnterpriseDefaultVersion}/articles`]).toBe('/en/github')
   41:     expect(page.redirects['/common-issues-and-questions']).toBe('/en/github')
   42:     expect(page.redirects['/en/common-issues-and-questions']).toBe('/en/github')
   43:     expect(page.redirects[`/en/enterprise/${enterpriseServerReleases.latest}/user/articles`]).toBe(`/en/enterprise-server@${enterpriseServerReleases.latest}/github`)
   44:     expect(page.redirects[`/en/enterprise/${enterpriseServerReleases.latest}/user/common-issues-and-questions`]).toBe(`/en/enterprise-server@${enterpriseServerReleases.latest}/github`)
   45    })
   46  
   47:   test('converts single `redirect_from` strings values into arrays', async () => {
   48:     const page = await Page.init({
   49:       relativePath: 'github/collaborating-with-issues-and-pull-requests/about-conversations-on-github.md',
   50        basePath: path.join(__dirname, '../../content'),
   51:       languageCode: 'en'
   52      })
   53:     page.buildRedirects()
   54:     const expected = '/en/github/collaborating-with-issues-and-pull-requests/about-conversations-on-github'
   55:     expect(page.redirects['/en/articles/about-discussions-in-issues-and-pull-requests']).toBe(expected)
   56    })

   59      test('are preserved in redirected URLs', async () => {
   60:       const res = await get('/enterprise/admin?query=pulls')
   61        expect(res.statusCode).toBe(301)

   66      test('have q= converted to query=', async () => {
   67:       const res = await get('/en/enterprise/admin?q=pulls')
   68        expect(res.statusCode).toBe(301)

   73      test('work with redirected search paths', async () => {
   74:       const res = await get('/en/enterprise/admin/search?utf8=%E2%9C%93&query=pulls')
   75        expect(res.statusCode).toBe(301)

   80      test('do not work on other paths that include "search"', async () => {
   81:       const reqPath = `/en/enterprise-server@${enterpriseServerReleases.latest}/admin/configuration/enabling-unified-search-between-github-enterprise-server-and-githubcom`
   82:       const res = await get(reqPath)
   83        expect(res.statusCode).toBe(200)

   86      test('work on deprecated versions', async () => {
   87:       const res = await get('/enterprise/2.12/admin/search?utf8=%E2%9C%93&q=pulls')
   88        expect(res.statusCode).toBe(200)

   91  
   92:   describe('trailing slashes', () => {
   93      test('are absent from all redirected URLs', async () => {
   94        const keys = Object.keys(redirects)
   95:       expect(keys.length).toBeGreaterThan(100)
   96        expect(keys.every(key => !key.endsWith('/') || key === '/')).toBe(true)

  100        const values = Object.values(redirects)
  101:       expect(values.length).toBeGreaterThan(100)
  102        expect(values.every(value => !value.endsWith('/'))).toBe(true)

  104  
  105:     test('are redirected for HEAD requests (not just GET requests)', async () => {
  106:       const res = await supertest(app).head('/articles/closing-issues-via-commit-messages/')
  107        expect(res.statusCode).toBe(301)
  108:       expect(res.headers.location).toBe('/articles/closing-issues-via-commit-messages')
  109      })

  113      test('work for top-level request paths', async () => {
  114:       const res = await get('/git-ready')
  115        expect(res.statusCode).toBe(301)
  116:       expect(res.headers.location).toBe('http://gitready.com/')
  117      })

  119      test('work for article-level request paths', async () => {
  120:       const res = await get('/articles/testing-webhooks')
  121        expect(res.statusCode).toBe(301)
  122:       expect(res.headers.location).toBe('http://developer.github.com/webhooks/testing/')
  123      })

  126    describe('localized redirects', () => {
  127:     test('redirect_from for renamed pages', async () => {
  128:       const { res } = await get('/ja/desktop/contributing-to-projects/changing-a-remote-s-url-from-github-desktop')
  129        expect(res.statusCode).toBe(301)
  130:       const expected = '/ja/desktop/contributing-and-collaborating-using-github-desktop/changing-a-remotes-url-from-github-desktop'
  131        expect(res.headers.location).toBe(expected)

  134  
  135:   describe('enterprise home page', () => {
  136      const enterpriseHome = `/en/enterprise-server@${enterpriseServerReleases.latest}`

  139      test('/enterprise', async () => {
  140:       const res = await get('/enterprise')
  141        expect(res.statusCode).toBe(301)

  144  
  145:     test('no language code redirects to english', async () => {
  146:       const res = await get(`/enterprise/${enterpriseServerReleases.latest}`)
  147        expect(res.statusCode).toBe(301)

  151      test('no version redirects to latest version', async () => {
  152:       const res = await get('/en/enterprise')
  153        expect(res.statusCode).toBe(301)

  157      test('no version redirects to latest version (japanese)', async () => {
  158:       const res = await get('/ja/enterprise')
  159        expect(res.statusCode).toBe(301)

  163      test('hardcoded @latest redirects to latest version', async () => {
  164:       const res = await get('/en/enterprise-server@latest')
  165        expect(res.statusCode).toBe(301)

  170    describe('2.13+ deprecated enterprise', () => {
  171:     test('no language code redirects to english', async () => {
  172:       const res = await get('/enterprise/2.13')
  173        expect(res.statusCode).toBe(301)

  176  
  177:     test('admin/guides redirects to admin', async () => {
  178:       const res = await get('/en/enterprise/2.13/admin/guides')
  179        expect(res.statusCode).toBe(301)

  184    describe('<2.12 deprecated enterprise', () => {
  185:     test('english language code redirects to no language code', async () => {
  186:       const res = await get('/en/enterprise/2.12')
  187        expect(res.statusCode).toBe(301)

  191      test('frontmatter redirect', async () => {
  192:       const res = await get('/enterprise/2.12/user/articles/github-flavored-markdown')
  193        expect(res.statusCode).toBe(301)
  194:       expect(res.text).toContain('location=\'/enterprise/2.12/user/categories/writing-on-github/\'')
  195      })

  201  
  202:     test('no language code redirects to english', async () => {
  203:       const res = await get(`/enterprise/${enterpriseServerReleases.latest}/admin`)
  204        expect(res.statusCode).toBe(301)

  208      test('no version redirects to latest version', async () => {
  209:       const res = await get('/en/enterprise/admin')
  210        expect(res.statusCode).toBe(301)

  213  
  214:     test('admin/guides redirects to admin', async () => {
  215:       const res = await get(`/en/enterprise/${enterpriseServerReleases.latest}/admin/guides`)
  216        expect(res.statusCode).toBe(301)

  219  
  220:     test('no version plus admin/guides redirects to admin on latest version', async () => {
  221:       const res = await get('/en/enterprise/admin/guides')
  222        expect(res.statusCode).toBe(301)

  225  
  226:     test('admin/guides redirects to admin in redirects', async () => {
  227:       const res = await get(`/en/enterprise/${enterpriseServerReleases.latest}/admin/guides/installation/upgrading-github-enterprise`)
  228        expect(res.statusCode).toBe(301)
  229:       const redirectRes = await get(res.headers.location)
  230        expect(redirectRes.statusCode).toBe(200)
  231:       const expected = `/en/enterprise-server@${enterpriseServerReleases.latest}/admin/enterprise-management/upgrading-github-enterprise-server`
  232        expect(res.headers.location).toBe(expected)

  235      test('no version redirects to latest version (japanese)', async () => {
  236:       const res = await get('/ja/enterprise/admin')
  237        expect(res.statusCode).toBe(301)

  240  
  241:     test('admin/guides redirects to admin (japanese)', async () => {
  242:       const res = await get(`/ja/enterprise/${enterpriseServerReleases.latest}/admin/guides`)
  243        expect(res.statusCode).toBe(301)

  247  
  248:   describe('enterprise user homepage', () => {
  249:     const enterpriseUser = `/en/enterprise-server@${enterpriseServerReleases.latest}/github`
  250      const japaneseEnterpriseUser = enterpriseUser.replace('/en/', '/ja/')
  251  
  252:     test('no product redirects to GitHub.com product', async () => {
  253:       const res = await get(`/en/enterprise/${enterpriseServerReleases.latest}/user`)
  254        expect(res.statusCode).toBe(301)

  257  
  258:     test('no language code redirects to english', async () => {
  259:       const res = await get(`/enterprise/${enterpriseServerReleases.latest}/user/github`)
  260        expect(res.statusCode).toBe(301)

  264      test('no version redirects to latest version', async () => {
  265:       const res = await get('/en/enterprise/user/github')
  266        expect(res.statusCode).toBe(301)

  270      test('no version redirects to latest version (japanese)', async () => {
  271:       const res = await get('/ja/enterprise/user/github')
  272        expect(res.statusCode).toBe(301)

  277    describe('enterprise user article', () => {
  278:     const userArticle = `/en/enterprise-server@${enterpriseServerReleases.latest}/github/getting-started-with-github/set-up-git`
  279      const japaneseUserArticle = userArticle.replace('/en/', '/ja/')
  280  
  281:     test('no product redirects to GitHub.com product on the latest version', async () => {
  282:       const res = await get(`/en/enterprise/${enterpriseServerReleases.latest}/user/articles/set-up-git`)
  283        expect(res.statusCode).toBe(301)

  286  
  287:     // 2.16 was the first version where we moved /articles/foo to /github/<category>/foo
  288:     test('no product does not redirect to GitHub.com product in <=2.15', async () => {
  289:       const res = await get('/en/enterprise/2.15/user/articles/set-up-git')
  290        expect(res.statusCode).toBe(200)

  292  
  293:     test('no language code redirects to english', async () => {
  294:       const res = await get(`/enterprise/${enterpriseServerReleases.latest}/user/github/getting-started-with-github/set-up-git`)
  295        expect(res.statusCode).toBe(301)

  299      test('no version redirects to latest version', async () => {
  300:       const res = await get('/en/enterprise/user/github/getting-started-with-github/set-up-git')
  301        expect(res.statusCode).toBe(301)

  305      test('no version redirects to latest version (japanese)', async () => {
  306:       const res = await get('/ja/enterprise/user/github/getting-started-with-github/set-up-git')
  307        expect(res.statusCode).toBe(301)

  312    describe('enterprise user article with frontmatter redirect', () => {
  313:     const userArticle = `/en/enterprise-server@${enterpriseServerReleases.latest}/github/getting-started-with-github/access-permissions-on-github`
  314      const redirectFromPath = '/articles/what-are-the-different-access-permissions'

  317      test('redirects to expected article', async () => {
  318:       const res = await get(`/en/enterprise/${enterpriseServerReleases.latest}/user${redirectFromPath}`)
  319        expect(res.statusCode).toBe(301)

  322  
  323:     test('no language code redirects to english', async () => {
  324:       const res = await get(`/enterprise/${enterpriseServerReleases.latest}/user${redirectFromPath}`)
  325        expect(res.statusCode).toBe(301)

  329      test('no version redirects to latest version', async () => {
  330:       const res = await get(`/en/enterprise/user${redirectFromPath}`)
  331        expect(res.statusCode).toBe(301)

  335      test('no version redirects to latest version (japanese)', async () => {
  336:       const res = await get(`/ja/enterprise/user${redirectFromPath}`)
  337        expect(res.statusCode).toBe(301)

  341  
  342:   describe('desktop guide', () => {
  343:     const desktopGuide = '/en/desktop/contributing-and-collaborating-using-github-desktop/creating-an-issue-or-pull-request'
  344:     const japaneseDesktopGuides = desktopGuide.replace('/en/', '/ja/')
  345  
  346:     test('no language code redirects to english', async () => {
  347:       const res = await get('/desktop/contributing-and-collaborating-using-github-desktop/creating-an-issue-or-pull-request')
  348        expect(res.statusCode).toBe(301)
  349:       expect(res.headers.location).toBe(desktopGuide)
  350      })
  351  
  352:     test('desktop/guides redirects to desktop', async () => {
  353:       const res = await get('/en/desktop/guides/contributing-and-collaborating-using-github-desktop/creating-an-issue-or-pull-request')
  354        expect(res.statusCode).toBe(301)
  355:       expect(res.headers.location).toBe(desktopGuide)
  356      })
  357  
  358:     test('desktop/guides redirects to desktop (japanese)', async () => {
  359:       const res = await get('/ja/desktop/guides/contributing-and-collaborating-using-github-desktop/creating-an-issue-or-pull-request')
  360        expect(res.statusCode).toBe(301)
  361:       expect(res.headers.location).toBe(japaneseDesktopGuides)
  362      })

docs • tests\routing\top-developer-site-path-redirects.js:
   2  
   3: describe('developer.github.com redirects', () => {
   4    jest.setTimeout(30 * 60 * 1000)

   6    it('responds with 200 for the top historical request paths', async () => {
   7:     // ignore paths that are not (yet?) being redirected from developer.github.com to docs.github.com
   8:     const ignoredPatterns = [
   9:       /^\/changes/,
  10:       '/forum', // can be top-level or nest under a GHE route
  11        /^\/partnerships/,

  19      const paths = require('../fixtures/top-old-developer-site-paths.json')
  20:       .filter(path => !ignoredPatterns.some(pattern => path.match(pattern)))
  21        .slice(0, pathsToCheck)

  31  
  32:     // generate an object with empty values as the error message
  33:     const errorMessage = JSON.stringify(non200s.reduce((acc, path) => {
  34        acc[path] = ''

  37  
  38:     expect(non200s, errorMessage).toEqual([])
  39    })

docs • tests\routing\middleware\redirects\help-to-docs.js:
   3  
   4: describe('help.github.com redirect middleware', () => {
   5:   it('redirects help.github.com homepage requests', async () => {
   6      const req = {
   7:       hostname: 'help.github.com',
   8        protocol: 'https',
   9:       originalUrl: '/'
  10      }

  15  
  16:     expect(res._getString()).toEqual('<p>Moved Permanently. Redirecting to <a href="https://docs.github.com/">https://docs.github.com/</a></p>')
  17    })
  18  
  19:   it('redirects help.github.com requests to deep pages', async () => {
  20      const req = {
  21:       hostname: 'help.github.com',
  22        protocol: 'https',
  23:       originalUrl: '/en/actions/configuring-and-managing-workflows/using-environment-variables'
  24      }

  29  
  30:     expect(res._getString()).toEqual('<p>Moved Permanently. Redirecting to <a href="https://docs.github.com/en/actions/configuring-and-managing-workflows/using-environment-variables">https://docs.github.com/en/actions/configuring-and-managing-workflows/using-environment-variables</a></p>')
  31    })

  34      const req = {
  35:       hostname: 'help.github.com',
  36        protocol: 'https',
  37:       originalUrl: '/en?foo=bar'
  38      }

  43  
  44:     expect(res._getString()).toEqual('<p>Moved Permanently. Redirecting to <a href="https://docs.github.com/en?foo=bar">https://docs.github.com/en?foo=bar</a></p>')
  45    })
  46  
  47:   it('does not redirect docs.github.com requests', async () => {
  48      const req = {
  49:       hostname: 'docs.github.com',
  50        protocol: 'https',
  51:       originalUrl: '/'
  52      }

  58  
  59:   it('only redirects to a docs.github.com path', async () => {
  60      const req = {
  61:       hostname: 'help.github.com',
  62        protocol: 'https',
  63:       originalUrl: '//evil.com//'
  64      }

  67      await middleware(req, res, next)
  68:     const expectedRedirect = 'https://docs.github.com/evil.com//'
  69:     expect(res._getString()).toEqual(`<p>Moved Permanently. Redirecting to <a href="${expectedRedirect}">${expectedRedirect}</a></p>`)
  70    })

docs • tests\unit\actions-workflows.js:
   4  const flat = require('flat')
   5: const { chain, difference, get } = require('lodash')
   6: const workflowsDir = path.join(__dirname, '../../.github/workflows')
   7  const workflows = fs.readdirSync(workflowsDir)

  13    })
  14: const allowedActions = require('../../.github/allowed-actions')
  15  

  18      .filter(key => key.endsWith('.uses'))
  19:     .map(key => get(workflow, key))
  20  }

  28  
  29: describe('GitHub Actions workflows', () => {
  30:   test('all used actions are allowed in .github/allowed-actions.js', () => {
  31:     expect(allUsedActions.length).toBeGreaterThan(0)
  32      const unusedActions = difference(allowedActions, allUsedActions)

  35  
  36:   test('all allowed actions by .github/allowed-actions.js are used by at least one workflow', () => {
  37:     expect(allowedActions.length).toBeGreaterThan(0)
  38      const disallowedActions = difference(allUsedActions, allowedActions)

docs • tests\unit\early-access.js:
   4  
   5: describe('cloning early-access', () => {
   6    testViaActionsOnly('the content directory exists', async () => {

  15  
  16:   testViaActionsOnly('the assets/images directory exists', async () => {
  17:     const eaDir = path.join(process.cwd(), 'assets/images/early-access')
  18      expect(await fs.stat(eaDir)).toBeTruthy()

docs • tests\unit\enterprise-versions.js:
  27      expect(Array.isArray(all)).toBe(true)
  28:     expect(all.length).toBeGreaterThan(10)
  29      expect(all).toEqual(supported.concat(deprecated))

  36    test('has an `oldestSupported` convenience property', async () => {
  37:     expect(oldestSupported).toEqual(supported[supported.length - 1])
  38    })

docs • tests\unit\failbot.js:
  36          app: 'docs',
  37:         backtrace: expect.stringContaining('Error: Kaboom'),
  38          class: 'Error',
  39:         created_at: expect.any(String),
  40:         js_environment: expect.stringMatching(/^Node\.js\sv[\d.]+/),
  41:         message: 'Kaboom',
  42:         rollup: expect.any(String)
  43        })

docs • tests\unit\feature-flags.js:
   1: require('../../lib/feature-flags')
   2: const ffs = require('../../feature-flags')
   3  
   4: describe('feature flags', () => {
   5    Object.keys(ffs).forEach(featureName => {

   8  
   9:   test('feature flag true test is true', async () => {
  10      expect(process.env.FEATURE_TEST_TRUE).toBeTruthy()

  12  
  13:   test('feature flag false test is false', async () => {
  14      expect(process.env.FEATURE_TEST_FALSE).toBeFalsy()

docs • tests\unit\find-page.js:
   1  const path = require('path')
   2: const Page = require('../../lib/page')
   3: const findPage = require('../../lib/find-page')
   4  
   5: describe('find page', () => {
   6    jest.setTimeout(1000 * 1000)
   7  
   8:   test('falls back to the English page if it can\'t find a localized page', async () => {
   9:     const page = await Page.init({
  10:       relativePath: 'page-that-does-not-exist-in-translations-dir.md',
  11        basePath: path.join(__dirname, '../fixtures'),
  12:       languageCode: 'en'
  13      })
  14  
  15:     const englishPermalink = page.permalinks[0].href
  16:     const japanesePermalink = englishPermalink.replace('/en/', '/ja/')
  17  
  18      // add named keys
  19:     const pageMap = {
  20:       [englishPermalink]: page
  21      }
  22  
  23:     const localizedPage = findPage(japanesePermalink, pageMap, {})
  24:     expect(typeof localizedPage.title).toBe('string')
  25    })

  27    test('follows redirects', async () => {
  28:     const page = await Page.init({
  29:       relativePath: 'page-with-redirects.md',
  30        basePath: path.join(__dirname, '../fixtures'),
  31:       languageCode: 'en'
  32      })
  33  
  34:     const englishPermalink = page.permalinks[0].href
  35      const redirectToFind = '/some-old-path'

  37      // add named keys
  38:     const pageMap = {
  39:       [englishPermalink]: page
  40      }
  41  
  42:     const redirectedPage = findPage(redirectToFind, pageMap, page.buildRedirects())
  43:     expect(typeof redirectedPage.title).toBe('string')
  44    })

docs • tests\unit\hydro.js:
  21    describe('#publish', () => {
  22:     it('publishes a single event to Hydro', async () => {
  23        await hydro.publish('event-name', { pizza: true })

  26            schema: 'event-name',
  27:           value: JSON.stringify({ pizza: true }),
  28            cluster: 'potomac'

  43            schema: 'event-name',
  44:           value: JSON.stringify({ pizza: true }),
  45            cluster: 'potomac'

  47            schema: 'other-name',
  48:           value: JSON.stringify({ salad: false }),
  49            cluster: 'potomac'

  54  
  55:   describe('#generatePayloadHmac', () => {
  56:     it('returns a SHA256 HMAC string', () => {
  57:       const body = JSON.stringify({ pizza: true })
  58:       const hash = hydro.generatePayloadHmac(body)
  59:       expect(hash).toEqual(expect.any(String))
  60:       expect(hash).toHaveLength(64)
  61      })
  62  
  63:     it('generates the same string for the same payload', () => {
  64:       const body = JSON.stringify({ pizza: true })
  65:       const one = hydro.generatePayloadHmac(body)
  66:       const two = hydro.generatePayloadHmac(body)
  67        expect(one).toBe(two)

docs • tests\unit\languages.js:
   1  const revalidator = require('revalidator')
   2: const languages = require('../../lib/languages')
   3: const schema = require('../../lib/languages-schema')
   4  
   5: describe('languages module', () => {
   6:   test('is an object with language codes as keys', () => {
   7:     expect('en' in languages).toBe(true)
   8:     expect('ja' in languages).toBe(true)
   9:     expect('cn' in languages).toBe(true)
  10    })
  11  
  12:   test('every language is valid', () => {
  13:     Object.values(languages).forEach(language => {
  14:       const { valid, errors } = revalidator.validate(language, schema)
  15:       const expectation = JSON.stringify(errors, null, 2)
  16        expect(valid, expectation).toBe(true)

docs • tests\unit\liquid-helpers.js:
    1  const { liquid } = require('../../lib/render-content')
    2: const { loadPageMap } = require('../../lib/pages')
    3  const entities = new (require('html-entities').XmlEntities)()

    5  
    6: describe('liquid helper tags', () => {
    7    jest.setTimeout(60 * 1000)

    9    const context = {}
   10:   let pageMap
   11    beforeAll(async (done) => {
   12:     pageMap = await loadPageMap()
   13:     context.currentLanguage = 'en'
   14      context.currentVersion = nonEnterpriseDefaultVersion
   15:     context.pages = pageMap
   16      context.redirects = {
   17:       '/en/desktop/contributing-and-collaborating-using-github-desktop': `/en/${nonEnterpriseDefaultVersion}/desktop/contributing-and-collaborating-using-github-desktop`,
   18:       '/ja/desktop/contributing-and-collaborating-using-github-desktop': `/ja/${nonEnterpriseDefaultVersion}/desktop/contributing-and-collaborating-using-github-desktop`,
   19:       '/en/desktop/contributing-and-collaborating-using-github-desktop/adding-and-cloning-repositories': `/en/${nonEnterpriseDefaultVersion}/desktop/contributing-and-collaborating-using-github-desktop/adding-and-cloning-repositories`,
   20:       '/en/github/writing-on-github/basic-writing-and-formatting-syntax': `/en/${nonEnterpriseDefaultVersion}/github/writing-on-github/basic-writing-and-formatting-syntax`
   21      }

   28      }
   29:     context.page = {
   30        relativePath: 'desktop/index.md'

   34  
   35:   test('link tag with relative path (English)', async () => {
   36:     const template = '{% link /contributing-and-collaborating-using-github-desktop %}'
   37:     const expected = '<a class="link-title Bump-link--hover no-underline" href="/en/desktop/contributing-and-collaborating-using-github-desktop">Contributing and collaborating using GitHub Desktop</a>'
   38      const output = await liquid.parseAndRender(template, context)

   41  
   42:   test('link tag with relative path (translated)', async () => {
   43:     context.currentLanguage = 'ja'
   44:     const template = '{% link /contributing-and-collaborating-using-github-desktop %}'
   45:     const expected = '<a class="link-title Bump-link--hover no-underline" href="/ja/desktop/contributing-and-collaborating-using-github-desktop">'
   46      const output = await liquid.parseAndRender(template, context)
   47      expect(output.includes(expected)).toBe(true)
   48:     // set this back to english
   49:     context.currentLanguage = 'en'
   50    })
   51  
   52:   test('link tag with local variable', async () => {
   53:     const template = `{% assign href = "/contributing-and-collaborating-using-github-desktop" %}
   54      {% link {{ href }} %}`
   55:     const expected = '<a class="link-title Bump-link--hover no-underline" href="/en/desktop/contributing-and-collaborating-using-github-desktop">'
   56      const output = await liquid.parseAndRender(template, context)

   59  
   60:   test('link tag with absolute path', async () => {
   61:     context.currentLanguage = 'en'
   62:     const template = '{% link /desktop/contributing-and-collaborating-using-github-desktop/adding-and-cloning-repositories %}'
   63:     const expected = '<a class="link-title Bump-link--hover no-underline" href="/en/desktop/contributing-and-collaborating-using-github-desktop/adding-and-cloning-repositories">Adding and cloning repositories</a>'
   64      const output = await liquid.parseAndRender(template, context)

   67  
   68:   test('link_with_intro tag', async () => {
   69:     const template = '{% link_with_intro /contributing-and-collaborating-using-github-desktop %}'
   70:     const page = pageMap['/en/desktop/contributing-and-collaborating-using-github-desktop']
   71:     const expected = `<a class="link-with-intro Bump-link--hover no-underline" href="/en/desktop/contributing-and-collaborating-using-github-desktop">
   72:   <h2 class="link-with-intro-title f4">${page.title}<span class="Bump-link-symbol">→</span></h2>
   73  </a>
   74: <p class="link-with-intro-intro">${page.intro}</p>`
   75      const output = entities.decode(await liquid.parseAndRender(template, context))

   78  
   79:   test('homepage_link_with_intro tag', async () => {
   80:     const template = '{% homepage_link_with_intro /github/writing-on-github/basic-writing-and-formatting-syntax %}'
   81:     const page = pageMap['/en/github/writing-on-github/basic-writing-and-formatting-syntax']
   82:     const expected = `<a class="link-with-intro Bump-link--hover no-underline d-block offset-lg-2 col-lg-8 mb-5" href="/en/github/writing-on-github/basic-writing-and-formatting-syntax">
   83:   <h4 class="link-with-intro-title h4-mktg">${page.title}<span class="Bump-link-symbol">→</span></h4>
   84:   <p class="link-with-intro-intro f5">${page.intro}</p>
   85  </a>`

   89  
   90:   test('link_in_list tag', async () => {
   91:     const template = '{% link_in_list /contributing-and-collaborating-using-github-desktop %}'
   92:     const expected = '- <a class="article-link link Bump-link--hover no-underline" href="/en/desktop/contributing-and-collaborating-using-github-desktop">Contributing and collaborating using GitHub Desktop</a>'
   93      const output = await liquid.parseAndRender(template, context)

   97    test('link_as_article_card', async () => {
   98:     const template = '{% link_as_article_card /contributing-and-collaborating-using-github-desktop %}'
   99:     const expected = `<div class="d-flex col-12 col-md-4 pr-0 pr-md-6 pr-lg-8 <display condition> js-filter-card" data-type="" data-topics="">
  100:   <a class="no-underline d-flex flex-column py-3 border-bottom" href="/en/desktop/contributing-and-collaborating-using-github-desktop">
  101:     <h4 class="h4 text-gray-dark mb-1">Contributing and collaborating using GitHub Desktop</h4>
  102      <div class="text-purple h6 text-uppercase"></div>
  103:     <p class="text-gray my-3">Use GitHub Desktop to manage your projects, create meaningful commits, and track the project&apos;s history in an app instead of on the command line.</p>`
  104      const output = await liquid.parseAndRender(template, context)

  107  
  108:   describe('indented_data_reference tag', () => {
  109      test('without any number of spaces specified', async () => {

  124  
  125:     test('with 0 spaces specified and whitespace around equals sign', async () => {
  126        const template = '{% indented_data_reference site.data.reusables.example spaces = 0 %}'

  141  
  142:   describe('data tag', () => {
  143      test(

  146          const template = `
  147: {% for term in site.data.glossaries.external %}
  148: ### {% data glossaries.external[forloop.index0].term %}
  149: {% data glossaries.external[forloop.index0].description %}
  150  ---

  158              },
  159:             glossaries: {
  160                external: [
  161:                 { term: 'lit', description: 'Awesome things. {% data variables.fire_emoji %}' },
  162:                 { term: 'Zhu Li', description: '_"Zhu Li, do the thing!"_ :point_up:' }
  163                ]

  170  ### lit
  171: Awesome things. :fire:
  172  ---

  174  ### Zhu Li
  175: _"Zhu Li, do the thing!"_ :point_up:
  176  ---

docs • tests\unit\liquid.js:
   2  const template = `
   3:   {% if page.version ver_gt "2.13" %}up to date{% endif %}
   4:   {% if page.version ver_lt "2.13" %}out of date{% endif %}
   5  `

   8    describe('custom operators', () => {
   9:     describe('ver_gt', () => {
  10        test('works as expected', async () => {
  11          const context = {
  12:           page: {
  13              version: '2.14'

  19  
  20:       test('returns false when given value is not numeric, like `dotcom`', async () => {
  21          const context = {
  22:           page: {
  23              version: 'dotcom'

  29  
  30:       test('returns false when given value is falsy', async () => {
  31          const context = {}

  39          const context = {
  40:           page: {
  41              version: '2.12'

docs • tests\unit\openapi-schema.js:
    2  const path = require('path')
    3: const { get, isPlainObject } = require('lodash')
    4  const allVersions = require('../../lib/all-versions')

   15  
   16:   // ensure every version defined in allVersions has a correlating static
   17:   // decorated file, while allowing decorated files to exist when a version
   18:   // is not yet defined in allVersions (e.g., a GHEC static file can exist
   19:   // even though the version is not yet supported in the docs)
   20    test('every OpenAPI version must have a schema file in the docs', () => {

   36      }
   37:     // there are at least 5 versions available (3 ghes [when a version
   38:     // has been deprecated], api.github.com, and github.ae)
   39:     expect(checks).toBeGreaterThanOrEqual(5)
   40    })

   49  describe('x-codeSamples for curl', () => {
   50:   test('GET', () => {
   51:     const operation = findOperation('GET', '/repos/{owner}/{repo}')
   52      expect(isPlainObject(operation)).toBe(true)
   53:     const { source } = operation['x-codeSamples'].find(sample => sample.lang === 'Shell')
   54:     const expected = 'curl \\\n  -H "Accept: application/vnd.github.v3+json" \\\n  https://api.github.com/repos/octocat/hello-world'
   55      expect(source).toEqual(expected)

   59      const operationsWithRequiredPreviewHeaders = nonEnterpriseDefaultVersionSchema.filter(operation => {
   60:       const previews = get(operation, 'x-github.previews', [])
   61        return previews.some(preview => preview.required)
   62      })
   63:     expect(operationsWithRequiredPreviewHeaders.length).toBeGreaterThan(0)
   64      const operationsWithHeadersInCodeSample = operationsWithRequiredPreviewHeaders.filter(operation => {
   65:       const { source: codeSample } = operation['x-codeSamples'].find(sample => sample.lang === 'Shell')
   66:       return codeSample.includes('-H "Accept: application/vnd.github') && !codeSample.includes('application/vnd.github.v3+json')
   67      })
   68:     expect(operationsWithRequiredPreviewHeaders.length).toEqual(operationsWithHeadersInCodeSample.length)
   69    })

   72  describe('x-codeSamples for @octokit/core.js', () => {
   73:   test('GET', () => {
   74:     const operation = findOperation('GET', '/repos/{owner}/{repo}')
   75      expect(isPlainObject(operation)).toBe(true)
   76:     const { source } = operation['x-codeSamples'].find(sample => sample.lang === 'JavaScript')
   77:     const expected = dedent`await octokit.request('GET /repos/{owner}/{repo}', {
   78        owner: 'octocat',

   84    test('POST', () => {
   85:     const operation = findOperation('POST', '/repos/{owner}/{repo}/git/trees')
   86      expect(isPlainObject(operation)).toBe(true)
   87:     const { source } = operation['x-codeSamples'].find(sample => sample.lang === 'JavaScript')
   88:     const expected = dedent`await octokit.request('POST /repos/{owner}/{repo}/git/trees', {
   89        owner: 'octocat',

  104    test('PUT', () => {
  105:     const operation = findOperation('PUT', '/authorizations/clients/{client_id}/{fingerprint}')
  106      expect(isPlainObject(operation)).toBe(true)
  107:     const { source } = operation['x-codeSamples'].find(sample => sample.lang === 'JavaScript')
  108:     const expected = dedent`await octokit.request('PUT /authorizations/clients/{client_id}/{fingerprint}', {
  109        client_id: 'client_id',
  110:       fingerprint: 'fingerprint',
  111        client_secret: 'client_secret'

  117      const operationsWithRequiredPreviewHeaders = nonEnterpriseDefaultVersionSchema.filter(operation => {
  118:       const previews = get(operation, 'x-github.previews', [])
  119        return previews.some(preview => preview.required)
  120      })
  121:     expect(operationsWithRequiredPreviewHeaders.length).toBeGreaterThan(0)
  122  
  123:     // Find something that looks like the following in each code sample:
  124      /*

  131      const operationsWithHeadersInCodeSample = operationsWithRequiredPreviewHeaders.filter(operation => {
  132:       const { source: codeSample } = operation['x-codeSamples'].find(sample => sample.lang === 'JavaScript')
  133:       return codeSample.match(/mediaType: \{\s+previews: /g)
  134      })
  135:     expect(operationsWithRequiredPreviewHeaders.length).toEqual(operationsWithHeadersInCodeSample.length)
  136    })
  137  
  138:   // skipped because the definition is current missing the `content-type` parameter
  139:   // See GitHub issue #155943
  140    test.skip('operation with content-type parameter', () => {

  142      expect(isPlainObject(operation)).toBe(true)
  143:     const { source } = operation['x-codeSamples'].find(sample => sample.lang === 'JavaScript')
  144      const expected = dedent`await octokit.request('POST /markdown/raw', {

docs • tests\unit\page.js:
    2  const cheerio = require('cheerio')
    3: const Page = require('../../lib/page')
    4: const prerenderedObjects = require('../../lib/graphql/static/prerendered-objects')
    5  const allVersions = require('../../lib/all-versions')

    8  
    9: const getLinkData = require('../../lib/get-link-data')
   10: jest.mock('../../lib/get-link-data')
   11  
   12: // get the `free-pro-team` segment of `free-pro-team@latest`
   13  const nonEnterpriseDefaultPlan = nonEnterpriseDefaultVersion.split('@')[0]

   15  const opts = {
   16:   relativePath: 'github/collaborating-with-issues-and-pull-requests/about-branches.md',
   17    basePath: path.join(__dirname, '../../content'),
   18:   languageCode: 'en'
   19  }
   20  
   21: describe('Page class', () => {
   22    test('preserves file path info', async () => {
   23:     const page = await Page.init(opts)
   24:     expect(page.relativePath).toBe('github/collaborating-with-issues-and-pull-requests/about-branches.md')
   25:     expect(page.fullPath.includes(page.relativePath)).toBe(true)
   26    })

   28    test('does not error out on translated TOC with no links', async () => {
   29:     const page = await Page.init({
   30        relativePath: 'translated-toc-with-no-links-index.md',
   31        basePath: path.join(__dirname, '../fixtures'),
   32:       languageCode: 'ja'
   33      })
   34:     expect(typeof page.title).toBe('string')
   35    })
   36  
   37:   describe('showMiniToc page property', () => {
   38:     let article, articleWithFM, tocPage, mapTopic
   39  
   40      beforeAll(async () => {
   41:       article = await Page.init({
   42          relativePath: 'sample-article.md',
   43          basePath: path.join(__dirname, '../fixtures'),
   44:         languageCode: 'en'
   45        })
   46  
   47:       articleWithFM = await Page.init({
   48          showMiniToc: false,

   50          basePath: article.basePath,
   51:         languageCode: article.languageCode
   52        })
   53  
   54:       tocPage = await Page.init({
   55          relativePath: 'sample-toc-index.md',
   56          basePath: path.join(__dirname, '../fixtures'),
   57:         languageCode: 'en'
   58        })
   59  
   60:       mapTopic = await Page.init({
   61          mapTopic: true,

   63          basePath: article.basePath,
   64:         languageCode: article.languageCode
   65        })

   75  
   76:     test('is undefined by default on index.md pages', () => {
   77:       expect(tocPage.showMiniToc).toBeUndefined()
   78      })

   84  
   85:   describe('page.render(context)', () => {
   86:     test('rewrites links to include the current language prefix and version', async () => {
   87:       const page = await Page.init(opts)
   88        const context = {
   89:         page: { version: `enterprise-server@${enterpriseServerReleases.latest}` },
   90          currentVersion: `enterprise-server@${enterpriseServerReleases.latest}`,
   91:         currentPath: '/en/github/collaborating-with-issues-and-pull-requests/about-branches',
   92:         currentLanguage: 'en'
   93        }
   94:       const rendered = await page.render(context)
   95        const $ = cheerio.load(rendered)
   96:       expect(page.markdown.includes('(/articles/about-pull-requests)')).toBe(true)
   97:       expect(page.markdown.includes('(/en/articles/about-pull-requests)')).toBe(false)
   98:       expect($('a[href="/articles/about-pull-requests"]').length).toBe(0)
   99:       expect($(`a[href="/en/${`enterprise-server@${enterpriseServerReleases.latest}`}/articles/about-pull-requests"]`).length).toBeGreaterThan(0)
  100      })
  101  
  102:     test('rewrites links on prerendered GraphQL page include the current language prefix and version', async () => {
  103:       const graphqlVersion = allVersions[`enterprise-server@${enterpriseServerReleases.latest}`].miscVersionName
  104:       const $ = cheerio.load(prerenderedObjects[graphqlVersion].html)
  105:       expect($('a[href^="/graphql/reference/input-objects"]').length).toBe(0)
  106:       expect($(`a[href^="/en/enterprise-server@${enterpriseServerReleases.latest}/graphql/reference/input-objects"]`).length).toBeGreaterThan(0)
  107      })
  108  
  109:     test('rewrites links in the intro to include the current language prefix and version', async () => {
  110:       const page = await Page.init(opts)
  111:       page.rawIntro = '[Pull requests](/articles/about-pull-requests)'
  112        const context = {
  113:         page: { version: nonEnterpriseDefaultVersion },
  114          currentVersion: nonEnterpriseDefaultVersion,
  115:         currentPath: '/en/github/collaborating-with-issues-and-pull-requests/about-branches',
  116:         currentLanguage: 'en'
  117        }
  118:       await page.render(context)
  119:       const $ = cheerio.load(page.intro)
  120:       expect($('a[href="/articles/about-pull-requests"]').length).toBe(0)
  121:       expect($('a[href="/en/articles/about-pull-requests"]').length).toBeGreaterThan(0)
  122      })

  124      test('does not rewrite links that include deprecated enterprise release numbers', async () => {
  125:       const page = await Page.init({
  126:         relativePath: 'admin/enterprise-management/migrating-from-github-enterprise-1110x-to-2123.md',
  127          basePath: path.join(__dirname, '../../content'),
  128:         languageCode: 'en'
  129        })
  130        const context = {
  131:         page: { version: `enterprise-server@${enterpriseServerReleases.latest}` },
  132          currentVersion: `enterprise-server@${enterpriseServerReleases.latest}`,
  133:         currentPath: `/en/enterprise-server@${enterpriseServerReleases.latest}/admin/enterprise-management/migrating-from-github-enterprise-1110x-to-2123`,
  134:         currentLanguage: 'en'
  135        }
  136:       const rendered = await page.render(context)
  137        const $ = cheerio.load(rendered)
  138:       expect(page.markdown.includes('(/enterprise/11.10.340/admin/articles/upgrading-to-the-latest-release/)')).toBe(true)
  139:       expect($(`a[href="/en/enterprise-server@${enterpriseServerReleases.latest}/11.10.340/admin/articles/upgrading-to-the-latest-release"]`).length).toBe(0)
  140:       expect($('a[href="/en/enterprise/11.10.340/admin/articles/upgrading-to-the-latest-release"]').length).toBeGreaterThan(0)
  141      })

  143      test('does not rewrite links to external redirects', async () => {
  144:       const page = await Page.init(opts)
  145:       page.markdown = `${page.markdown}\n\nSee [Capistrano](/capistrano).`
  146        const context = {
  147:         page: { version: nonEnterpriseDefaultVersion },
  148          currentVersion: nonEnterpriseDefaultVersion,
  149:         currentPath: `/en/${nonEnterpriseDefaultVersion}/github/collaborating-with-issues-and-pull-requests/about-branches`,
  150:         currentLanguage: 'en'
  151        }
  152:       const rendered = await page.render(context)
  153        const $ = cheerio.load(rendered)
  154:       expect($('a[href="/capistrano"]').length).toBe(1)
  155      })
  156  
  157:     // Most of our Liquid versioning tests are in https://github.com/docs/render-content,
  158:     // But they don't have access to our currently supported versions, which we're testing here.
  159      // This test ensures that this works as expected: {% if enterpriseServerVersions contains currentVersion %}
  160      test('renders the expected Enterprise Server versioned content', async () => {
  161:       const page = await Page.init({
  162:         relativePath: 'page-versioned-for-all-enterprise-releases.md',
  163          basePath: path.join(__dirname, '../fixtures'),
  164:         languageCode: 'en'
  165        })

  168          currentVersion: `enterprise-server@${enterpriseServerReleases.latest}`,
  169:         currentLanguage: 'en',
  170          enterpriseServerVersions: Object.keys(allVersions).filter(id => id.startsWith('enterprise-server@'))
  171        }
  172:       let rendered = await page.render(context)
  173        let $ = cheerio.load(rendered)

  176  
  177:       // change version to the oldest enterprise version, re-render, and test again;
  178        // the results should be the same
  179        context.currentVersion = `enterprise-server@${enterpriseServerReleases.oldestSupported}`
  180:       rendered = await page.render(context)
  181        $ = cheerio.load(rendered)

  184  
  185:       // change version to non-enterprise, re-render, and test again;
  186        // the results should be the opposite
  187        context.currentVersion = nonEnterpriseDefaultVersion
  188:       rendered = await page.render(context)
  189        $ = cheerio.load(rendered)

  194  
  195:   test('preserves `languageCode`', async () => {
  196:     const page = await Page.init(opts)
  197:     expect(page.languageCode).toBe('en')
  198    })
  199  
  200:   test('parentProductId getter', async () => {
  201:     let page = await Page.init({
  202:       relativePath: 'github/some-category/some-article.md',
  203        basePath: path.join(__dirname, '../fixtures/products'),
  204:       languageCode: 'en'
  205      })
  206:     expect(page.parentProductId).toBe('github')
  207  
  208:     page = await Page.init({
  209:       relativePath: 'actions/some-category/some-article.md',
  210        basePath: path.join(__dirname, '../fixtures/products'),
  211:       languageCode: 'en'
  212      })
  213:     expect(page.parentProductId).toBe('actions')
  214  
  215:     page = await Page.init({
  216:       relativePath: 'admin/some-category/some-article.md',
  217        basePath: path.join(__dirname, '../fixtures/products'),
  218:       languageCode: 'en'
  219      })
  220:     expect(page.parentProductId).toBe('admin')
  221    })

  224      test('is an array', async () => {
  225:       const page = await Page.init(opts)
  226:       expect(Array.isArray(page.permalinks)).toBe(true)
  227      })

  229      test('has a key for every supported enterprise version (and no deprecated versions)', async () => {
  230:       const page = await Page.init(opts)
  231:       const pageVersions = page.permalinks.map(permalink => permalink.pageVersion)
  232:       expect(enterpriseServerReleases.supported.every(version => pageVersions.includes(`enterprise-server@${version}`))).toBe(true)
  233:       expect(enterpriseServerReleases.deprecated.every(version => !pageVersions.includes(`enterprise-server@${version}`))).toBe(true)
  234      })

  236      test('sets versioned values', async () => {
  237:       const page = await Page.init(opts)
  238:       expect(page.permalinks.find(permalink => permalink.pageVersion === nonEnterpriseDefaultVersion).href).toBe('/en/github/collaborating-with-issues-and-pull-requests/about-branches')
  239:       expect(page.permalinks.find(permalink => permalink.pageVersion === `enterprise-server@${enterpriseServerReleases.oldestSupported}`).href).toBe(`/en/enterprise-server@${enterpriseServerReleases.oldestSupported}/github/collaborating-with-issues-and-pull-requests/about-branches`)
  240      })
  241  
  242:     test('homepage permalinks', async () => {
  243:       const page = await Page.init({
  244          relativePath: 'index.md',
  245          basePath: path.join(__dirname, '../../content'),
  246:         languageCode: 'en'
  247        })
  248:       expect(page.permalinks.find(permalink => permalink.pageVersion === 'homepage').href).toBe('/en')
  249:       expect(page.permalinks.find(permalink => permalink.pageVersion === `enterprise-server@${enterpriseServerReleases.oldestSupported}`).href).toBe(`/en/enterprise-server@${enterpriseServerReleases.oldestSupported}`)
  250      })
  251  
  252:     test('permalinks for dotcom-only pages', async () => {
  253:       const page = await Page.init({
  254:         relativePath: 'github/getting-started-with-github/signing-up-for-a-new-github-account.md',
  255          basePath: path.join(__dirname, '../../content'),
  256:         languageCode: 'en'
  257        })
  258:       expect(page.permalinks.find(permalink => permalink.pageVersion === nonEnterpriseDefaultVersion).href).toBe('/en/github/getting-started-with-github/signing-up-for-a-new-github-account')
  259:       expect(page.permalinks.length).toBe(1)
  260      })
  261  
  262:     test('permalinks for enterprise-only pages', async () => {
  263:       const page = await Page.init({
  264:         relativePath: 'products/admin/some-category/some-article.md',
  265          basePath: path.join(__dirname, '../fixtures'),
  266:         languageCode: 'en'
  267        })
  268:       expect(page.permalinks.find(permalink => permalink.pageVersion === `enterprise-server@${enterpriseServerReleases.latest}`).href).toBe(`/en/enterprise-server@${enterpriseServerReleases.latest}/products/admin/some-category/some-article`)
  269:       const pageVersions = page.permalinks.map(permalink => permalink.pageVersion)
  270:       expect(pageVersions.length).toBeGreaterThan(1)
  271:       expect(pageVersions.includes(nonEnterpriseDefaultVersion)).toBe(false)
  272      })
  273  
  274:     test('permalinks for non-GitHub.com products without Enterprise versions', async () => {
  275:       const page = await Page.init({
  276:         relativePath: 'products/actions/some-category/some-article.md',
  277          basePath: path.join(__dirname, '../fixtures'),
  278:         languageCode: 'en'
  279        })
  280:       expect(page.permalinks.find(permalink => permalink.pageVersion === nonEnterpriseDefaultVersion).href).toBe('/en/products/actions/some-category/some-article')
  281:       expect(page.permalinks.length).toBe(1)
  282      })
  283  
  284:     test('permalinks for non-GitHub.com products with Enterprise versions', async () => {
  285:       const page = await Page.init({
  286:         relativePath: '/insights/installing-and-configuring-github-insights/about-github-insights.md',
  287          basePath: path.join(__dirname, '../../content'),
  288:         languageCode: 'en'
  289        })
  290:       expect(page.permalinks.find(permalink => permalink.pageVersion === `enterprise-server@${enterpriseServerReleases.latest}`).href).toBe(`/en/enterprise-server@${enterpriseServerReleases.latest}/insights/installing-and-configuring-github-insights/about-github-insights`)
  291:       const pageVersions = page.permalinks.map(permalink => permalink.pageVersion)
  292:       expect(pageVersions.length).toBeGreaterThan(1)
  293:       expect(pageVersions.includes(nonEnterpriseDefaultVersion)).toBe(false)
  294      })

  296  
  297:   describe('learning tracks', () => {
  298:     let page
  299  
  300      beforeEach(async () => {
  301:       page = await Page.init({
  302:         relativePath: 'article-with-learning-tracks.md',
  303          basePath: path.join(__dirname, '../fixtures'),
  304:         languageCode: 'en'
  305        })

  307  
  308:     it('includes learning tracks specified in frontmatter', async () => {
  309:       expect(page.learningTracks).toStrictEqual(['track_1', 'track_2', 'non_existing_track'])
  310      })
  311  
  312:     it('renders learning tracks that have been defined', async () => {
  313:       const guides = ['/path/guide1', '/path/guide2']
  314        const context = {
  315:         currentLanguage: 'en',
  316          currentProduct: 'snowbird',

  319            data: {
  320:             'learning-tracks': {
  321                snowbird: {

  324                    description: 'description',
  325:                   guides
  326                  },

  329                    description: 'description',
  330:                   guides
  331                  }

  336        }
  337:       await page.render(context)
  338:       expect(getLinkData).toHaveBeenCalledWith(guides, context)
  339:       expect(page.learningTracks).toHaveLength(2)
  340      })

  342  
  343:   describe('includeGuides', () => {
  344:     let page
  345  
  346      beforeEach(async () => {
  347:       page = await Page.init({
  348:         relativePath: 'article-with-includeGuides.md',
  349          basePath: path.join(__dirname, '../fixtures'),
  350:         languageCode: 'en'
  351        })

  353  
  354:     it('includes guide paths specified in frontmatter', async () => {
  355:       expect(page.includeGuides).toStrictEqual(['/path/guide1', '/path/guide2', '/path/guide3'])
  356      })
  357  
  358:     it('renders guides and topics', async () => {
  359:       getLinkData.mockImplementation(() => {
  360          return [{
  361:           page: { topics: ['Spring', 'Summer'] }
  362          }, {
  363:           page: { topics: ['Summer', 'Fall'] }
  364          }, {
  365:           page: { topics: ['Fall', 'Winter'] }
  366          }]
  367        })
  368:       const guides = ['/path/guide1', '/path/guide2', '/path/guide3']
  369        const context = {
  370          currentVersion: nonEnterpriseDefaultVersion,
  371:         currentLanguage: 'en'
  372        }
  373:       await page.render(context)
  374:       expect(getLinkData).toHaveBeenCalledWith(guides, context)
  375:       expect(page.includeGuides).toHaveLength(3)
  376:       expect(page.allTopics).toHaveLength(4)
  377:       expect(page.allTopics).toEqual(
  378:         expect.arrayContaining(['Spring', 'Summer', 'Fall', 'Winter'])
  379        )

  382  
  383:   describe('Page.parseFrontmatter()', () => {
  384      it('throws an error on bad input', () => {

  386        expect(() => {
  387:         Page.parseFrontmatter('some/file.md', markdown)
  388        }).toThrow()

  391  
  392:   describe('Page.getLanguageVariants()', () => {
  393:     it('returns an array of language variants of the given URL', () => {
  394:       const variants = Page.getLanguageVariants('/en')
  395        expect(variants.every(variant => variant.name)).toBe(true)

  399  
  400:     it('works for the homepage', () => {
  401:       const variants = Page.getLanguageVariants('/en')
  402        expect(variants.find(({ code }) => code === 'en').href).toBe('/en')

  406      it('works for enterprise URLs', () => {
  407:       const variants = Page.getLanguageVariants(`/ja/enterprise/${enterpriseServerReleases.oldestSupported}/user/articles/github-glossary`)
  408:       expect(variants.find(({ code }) => code === 'en').href).toBe(`/en/enterprise/${enterpriseServerReleases.oldestSupported}/user/articles/github-glossary`)
  409:       // expect(variants.find(({ code }) => code === 'ja').href).toBe('/ja/enterprise/2.14/user/articles/github-glossary')
  410      })

  413    test('fixes translated frontmatter that includes verdadero', async () => {
  414:     const page = await Page.init({
  415        relativePath: 'article-with-mislocalized-frontmatter.md',
  416        basePath: path.join(__dirname, '../fixtures'),
  417:       languageCode: 'ja'
  418      })
  419:     expect(page.mapTopic).toBe(true)
  420    })
  421  
  422:   describe('page.versions frontmatter', () => {
  423:     test.skip('pages that apply to older enterprise versions', async () => {
  424      // There are none of these in the content at this time!

  426  
  427:     // Note this test will go out of date when we deprecate 2.20
  428:     test('pages that apply to newer enterprise versions', async () => {
  429:       const page = await Page.init({
  430:         relativePath: 'github/administering-a-repository/comparing-releases.md',
  431          basePath: path.join(__dirname, '../../content'),
  432:         languageCode: 'en'
  433        })
  434:       expect(nonEnterpriseDefaultPlan in page.versions).toBe(true)
  435:       expect(page.versions['enterprise-server']).toBe('>=2.21')
  436      })
  437  
  438:     test('index page', async () => {
  439:       const page = await Page.init({
  440          relativePath: 'index.md',
  441          basePath: path.join(__dirname, '../../content'),
  442:         languageCode: 'en'
  443        })
  444:       expect(page.versions).toBe('*')
  445      })
  446  
  447:     test('enterprise admin index page', async () => {
  448:       const page = await Page.init({
  449          relativePath: 'admin/index.md',
  450          basePath: path.join(__dirname, '../../content'),
  451:         languageCode: 'en'
  452        })
  453  
  454:       expect(nonEnterpriseDefaultPlan in page.versions).toBe(false)
  455:       expect(page.versions['enterprise-server']).toBe('*')
  456      })

  459    describe('platform specific content', () => {
  460:     test('page.defaultPlatform frontmatter', async () => {
  461:       const page = await Page.init({
  462:         relativePath: 'actions/hosting-your-own-runners/configuring-the-self-hosted-runner-application-as-a-service.md',
  463          basePath: path.join(__dirname, '../../content'),
  464:         languageCode: 'en'
  465        })
  466:       expect(page.defaultPlatform).toBeDefined()
  467:       expect(page.defaultPlatform).toBe('linux')
  468      })

  471  
  472: describe('catches errors thrown in Page class', () => {
  473:   test('frontmatter parsing error', async () => {
  474:     async function getPage () {
  475:       return await Page.init({
  476:         relativePath: 'page-with-frontmatter-error.md',
  477          basePath: path.join(__dirname, '../fixtures'),
  478:         languageCode: 'en'
  479        })

  481  
  482:     await expect(getPage).rejects.toThrowError('invalid frontmatter entry')
  483    })
  484  
  485:   test('missing versions frontmatter', async () => {
  486:     async function getPage () {
  487:       return await Page.init({
  488:         relativePath: 'page-with-missing-product-versions.md',
  489          basePath: path.join(__dirname, '../fixtures'),
  490:         languageCode: 'en'
  491        })

  493  
  494:     await expect(getPage).rejects.toThrowError('versions')
  495    })
  496  
  497:   test('English page with a version in frontmatter that its parent product is not available in', async () => {
  498:     async function getPage () {
  499:       return await Page.init({
  500:         relativePath: 'admin/some-category/some-article-with-mismatched-versions-frontmatter.md',
  501          basePath: path.join(__dirname, '../fixtures/products'),
  502:         languageCode: 'en'
  503        })

  505  
  506:     expect(getPage).rejects.toThrowError(/`versions` frontmatter.*? product is not available in/)
  507    })
  508  
  509:   test('non-English page with a version in frontmatter that its parent product is not available in', async () => {
  510:     async function getPage () {
  511:       return await Page.init({
  512:         relativePath: 'admin/some-category/some-article-with-mismatched-versions-frontmatter.md',
  513          basePath: path.join(__dirname, '../fixtures/products'),
  514:         languageCode: 'es'
  515        })

  517  
  518:     await expect(getPage).rejects.toThrowError(/`versions` frontmatter.*? product is not available in/)
  519    })

docs • tests\unit\pages.js:
    1  const path = require('path')
    2: const { loadPages, loadPageMap } = require('../../lib/pages')
    3: const languageCodes = Object.keys(require('../../lib/languages'))
    4  const { liquid } = require('../../lib/render-content')
    5  const patterns = require('../../lib/patterns')
    6: const GithubSlugger = require('github-slugger')
    7: const slugger = new GithubSlugger()
    8  const Entities = require('html-entities').XmlEntities

   11  
   12: describe('pages module', () => {
   13    jest.setTimeout(60 * 1000)
   14  
   15:   let pages
   16  
   17    beforeAll(async (done) => {
   18:     pages = await loadPages()
   19      done()

   21  
   22:   describe('loadPages', () => {
   23:     test('yields a non-empty array of Page objects', async () => {
   24:       expect(Array.isArray(pages)).toBe(true)
   25:       expect(pages.length).toBeGreaterThan(100)
   26      })
   27  
   28:     test('every page has a `languageCode`', async () => {
   29:       expect(pages.every(page => languageCodes.includes(page.languageCode))).toBe(true)
   30      })
   31  
   32:     test('every page has a non-empty `permalinks` array', async () => {
   33:       const brokenPages = pages.filter(page => !Array.isArray(page.permalinks) || page.permalinks.length === 0)
   34:       const expectation = JSON.stringify(brokenPages.map(page => page.fullPath), null, 2)
   35:       expect(brokenPages.length, expectation).toBe(0)
   36      })

   38      // we can't put this in tests/redirects because duplicate routes have already been
   39:     // overwritten during context.pages.redirects object assignment and can't be searched for
   40:     test('redirect_from routes are unique across English pages', () => {
   41:       const sourceRedirectFrom = chain(pages)
   42:         .filter(['languageCode', 'en'])
   43          .filter('redirect_from')

   51  
   52:       const message = `Found ${duplicates.length} duplicate redirect_from ${duplicates.length === 1 ? 'path' : 'paths'}.\n
   53    ${duplicates.join('\n')}`
   54:       expect(duplicates.length, message).toBe(0)
   55      })
   56  
   57:     test('every English page has a filename that matches its slugified title', async () => {
   58:       const nonMatches = pages
   59:         .filter(page => {
   60:           slugger.reset()
   61:           return page.languageCode === 'en' && // only check English
   62:           !page.relativePath.includes('index.md') && // ignore TOCs
   63:           !page.allowTitleToDifferFromFilename && // ignore docs with override
   64:           slugger.slug(entities.decode(page.title)) !== path.basename(page.relativePath, '.md')
   65          })
   66          // make the output easier to read
   67:         .map(page => {
   68:           return JSON.stringify({
   69:             file: path.basename(page.relativePath),
   70:             title: page.title,
   71:             path: page.fullPath
   72            }, null, 2)

   74  
   75:       const message = `
   76:   Found ${nonMatches.length} ${nonMatches.length === 1 ? 'file' : 'files'} that do not match their slugified titles.\n
   77    ${nonMatches.join('\n')}\n

   79  
   80:       expect(nonMatches.length, message).toBe(0)
   81      })
   82  
   83:     test('every page has valid frontmatter', async () => {
   84:       const frontmatterErrors = chain(pages)
   85:         // .filter(page => page.languageCode === 'en')
   86:         .map(page => page.frontmatterErrors)
   87          .flatten()

   89  
   90:       const failureMessage = JSON.stringify(frontmatterErrors, null, 2) +
   91          '\n\n' +

   93  
   94:       expect(frontmatterErrors.length, failureMessage).toBe(0)
   95      })
   96  
   97:     test('every page has valid Liquid templating', async () => {
   98        const liquidErrors = []
   99  
  100:       for (const page of pages) {
  101:         const markdown = page.raw
  102          if (!patterns.hasLiquid.test(markdown)) continue

  106            liquidErrors.push({
  107:             filename: page.fullPath,
  108:             error: error.message
  109            })

  112  
  113:       const failureMessage = JSON.stringify(liquidErrors, null, 2)
  114:       expect(liquidErrors.length, failureMessage).toBe(0)
  115      })
  116  
  117:     test('every non-English page has a matching English page', async () => {
  118:       const englishPaths = chain(pages)
  119:         .filter(page => page.languageCode === 'en')
  120:         .map(page => page.relativePath)
  121          .value()
  122:       const nonEnglishPaths = chain(pages)
  123:         .filter(page => page.languageCode !== 'en')
  124:         .map(page => page.relativePath)
  125          .uniq()

  127  
  128:       const diff = difference(nonEnglishPaths, englishPaths)
  129:       const failureMessage = `Unmatched non-English pages:\n - ${diff.join('\n - ')}`
  130:       expect(diff.length, failureMessage).toBe(0)
  131      })

  133  
  134:   describe('loadPageMap', () => {
  135:     let pageMap
  136      beforeAll(async () => {
  137:       pageMap = await loadPageMap(pages)
  138      })
  139  
  140:     test('yields a non-empty object with more unique entries than pages', async () => {
  141        // Why does it contain MORE unique entries, you ask?
  142:       // TL;DR: The pages array contains one item per Page + language, with a `permalinks` array
  143        // property for each product version supported (free-pro-team, enterprise-server@2.22, etc.)
  144:       // The pageMap, on the other hand, is keyed by unique URLs, so it has 1-N (where N is the
  145:       // number of product versions supported) keys pointing to the same Page + language object
  146  
  147:       expect(Array.isArray(pageMap)).toBe(false)
  148:       expect(Object.keys(pageMap).length).toBeGreaterThan(pages.length)
  149      })

  151      test('has an identical key list to the deep permalinks of the array', async () => {
  152:       const allPermalinks = pages.flatMap(page => page.permalinks.map(pl => pl.href)).sort()
  153:       const allPageUrls = Object.keys(pageMap).sort()
  154  
  155:       expect(allPageUrls).toEqual(allPermalinks)
  156      })

docs • tests\unit\permalink.js:
   4  
   5: // Permalink constructor requires: languageCode, pageVersion, relativePath, title
   6: // Permalink.derive requires: languageCode, relativePath, title, versions (<- FM prop)
   7  
   8  describe('Permalink class', () => {
   9:   // We can only use Permalink.derive to get the special 'homepage' permalink
  10:   test('derives info for unversioned homepage', () => {
  11      const versions = {

  15      const permalinks = Permalink.derive('en', 'index.md', 'Hello World', versions)
  16:     expect(permalinks.length).toBeGreaterThan(1)
  17:     const homepagePermalink = permalinks.find(permalink => permalink.pageVersion === 'homepage')
  18:     expect(homepagePermalink.href).toBe('/en')
  19    })
  20  
  21:   test('derives info for non-enterprise versioned homepage', () => {
  22      const permalink = new Permalink('en', nonEnterpriseDefaultVersion, 'index.md', 'Hello World')
  23:     expect(permalink.pageVersionTitle).toBe('GitHub.com')
  24      expect(permalink.href).toBe('/en')

  26  
  27:   test('derives info for enterprise server versioned homepage', () => {
  28      const permalink = new Permalink('en', `enterprise-server@${enterpriseServerReleases.latest}`, 'index.md', 'Hello World')
  29:     expect(permalink.pageVersionTitle).toBe(`Enterprise Server ${enterpriseServerReleases.latest}`)
  30      expect(permalink.href).toBe(`/en/enterprise-server@${enterpriseServerReleases.latest}`)

  32  
  33:   test('derives info for GitHub.com homepage', () => {
  34:     const permalink = new Permalink('en', nonEnterpriseDefaultVersion, 'github/index.md', 'Hello World')
  35:     expect(permalink.pageVersionTitle).toBe('GitHub.com')
  36:     expect(permalink.href).toBe('/en/github')
  37    })
  38  
  39:   test('derives info for enterprise version of GitHub.com homepage', () => {
  40:     const permalink = new Permalink('en', `enterprise-server@${enterpriseServerReleases.latest}`, 'github/index.md', 'Hello World')
  41:     expect(permalink.pageVersionTitle).toBe(`Enterprise Server ${enterpriseServerReleases.latest}`)
  42:     expect(permalink.href).toBe(`/en/enterprise-server@${enterpriseServerReleases.latest}/github`)
  43    })

  46      const permalink = new Permalink('en', nonEnterpriseDefaultVersion, 'index.md', 'Hello World')
  47:     expect(permalink.languageCode).toBe('en')
  48:     expect(permalink.pageVersion).toBe(nonEnterpriseDefaultVersion)
  49      expect(permalink.relativePath).toBe('index.md')

docs • tests\unit\product-names.js:
  4    test('is an object with product codes as keys and human-friendly names as values', () => {
  5:     expect(productNames.dotcom).toBe('GitHub.com')
  6      expect(productNames['2.15']).toBe('Enterprise Server 2.15')

docs • tests\unit\products.js:
   3  const schema = require('../../lib/products-schema')
   4: const { getDOM, getJSON } = require('../helpers/supertest')
   5  const nonEnterpriseDefaultVersion = require('../../lib/non-enterprise-default-version')

   8    test('is an object with product ids as keys', () => {
   9:     expect('github' in products).toBe(true)
  10      expect('desktop' in products).toBe(true)

  15        const { valid, errors } = revalidator.validate(product, schema)
  16:       const expectation = JSON.stringify({ product, errors }, null, 2)
  17        expect(valid, expectation).toBe(true)

  24  
  25:   test('renders current product on various product pages for each product', async () => {
  26:     // Note the unversioned homepage at `/` does not have a product selected in the mobile dropdown
  27:     expect((await getDOM('/github'))('#current-product').text().trim()).toBe('GitHub.com')
  28  
  29      // Enterprise server
  30:     expect((await getDOM('/en/enterprise/admin'))('#current-product').text().trim()).toBe('Enterprise Administrators')
  31:     expect((await getDOM('/en/enterprise/user/github/setting-up-and-managing-your-github-user-account/setting-your-commit-email-address'))('#current-product').text().trim()).toBe('GitHub.com')
  32  
  33:     expect((await getDOM('/desktop'))('#current-product').text().trim()).toBe('GitHub Desktop')
  34  
  35:     expect((await getDOM('/actions'))('#current-product').text().trim()).toBe('GitHub Actions')
  36  
  37      // localized
  38:     expect((await getDOM('/ja/desktop'))('#current-product').text().trim()).toBe('GitHub Desktop')
  39    })

  45    test('adds res.context.activeProducts array', async () => {
  46:     const products = await getJSON('/en?json=activeProducts')
  47      expect(Array.isArray(products)).toBe(true)

  49  
  50:   test('adds res.context.currentProduct string on homepage', async () => {
  51:     const currentProduct = await getJSON('/en?json=currentProduct')
  52:     expect(currentProduct).toBe('homepage')
  53    })

  55    test('adds res.context.currentProduct object', async () => {
  56:     const currentProduct = await getJSON(`/en/${nonEnterpriseDefaultVersion}/github?json=currentProduct`)
  57:     expect(currentProduct).toBe('github')
  58    })

docs • tests\unit\read-frontmatter.js:
    4  title: Hello, World
    5: meaning_of_life: 42
    6  ---

   11  describe('frontmatter', () => {
   12:   it('parses frontmatter and content in a given string (no options required)', () => {
   13      const { data, content, errors } = parse(fixture1)
   14      expect(data.title).toBe('Hello, World')
   15:     expect(data.meaning_of_life).toBe(42)
   16      expect(content.trim()).toBe('I am content.')
   17:     expect(errors.length).toBe(0)
   18    })
   19  
   20:   describe('frontmatter.stringify', () => {
   21      it('is exported', () => {
   22:       expect(typeof parse.stringify).toBe('function')
   23      })

   25  
   26:   describe('YML parsing errors', () => {
   27      it('creates errors if YML has an unescaped quote', () => {
   28        const fixture = `---
   29: intro: 'I've got an unescaped quote'
   30  ---

   34        const { errors } = parse(fixture, { filepath })
   35:       expect(errors.length).toBe(1)
   36        const expectedError = {
   37          filepath: 'path/to/file.md',
   38:         message: 'YML parsing error!',
   39          reason: 'invalid frontmatter entry'

   46  title: Hello, World
   47:  intro: 'I have a bad leading space'
   48  ---

   52        const { errors } = parse(fixture, { filepath })
   53:       expect(errors.length).toBe(1)
   54        const expectedError = {
   55          filepath: 'path/to/file.md',
   56:         message: 'YML parsing error!',
   57:         reason: 'bad indentation of a mapping entry'
   58        }

   67            title: {
   68:             type: 'string'
   69            },
   70:           meaning_of_life: {
   71              type: 'number'

   77        expect(data.title).toBe('Hello, World')
   78:       expect(data.meaning_of_life).toBe(42)
   79        expect(content.trim()).toBe('I am content.')
   80:       expect(errors.length).toBe(0)
   81      })

   85          properties: {
   86:           meaning_of_life: {
   87              type: 'number',

   94        expect(data.title).toBe('Hello, World')
   95:       expect(data.meaning_of_life).toBe(42)
   96        expect(content.trim()).toBe('I am content.')
   97:       expect(errors.length).toBe(1)
   98        const expectedError = {
   99          attribute: 'minimum',
  100:         property: 'meaning_of_life',
  101          expected: 50,
  102          actual: 42,
  103:         message: 'must be greater than or equal to 50'
  104        }

  111            yet_another_key: {
  112:             type: 'string',
  113              required: true

  118        const { errors } = parse(fixture1, { schema })
  119:       expect(errors.length).toBe(1)
  120        const expectedError = {

  124          actual: undefined,
  125:         message: 'is required'
  126        }

  133        properties: {
  134:         age: {
  135            type: 'number'

  141        const { errors } = parse(fixture1, { schema, validateKeyNames: true, filepath })
  142:       expect(errors.length).toBe(2)
  143        const expectedErrors = [

  145            property: 'title',
  146:           message: 'not allowed. Allowed properties are: age',
  147            filepath: 'path/to/file.md'

  149          {
  150:           property: 'meaning_of_life',
  151:           message: 'not allowed. Allowed properties are: age',
  152            filepath: 'path/to/file.md'

  159        const { errors } = parse(fixture1, { schema, validateKeyNames: false })
  160:       expect(errors.length).toBe(0)
  161      })

  167          properties: {
  168:           meaning_of_life: {
  169              type: 'number'

  171            title: {
  172:             type: 'string'
  173            }

  179            property: 'keys',
  180:           message: 'keys must be in order. Current: title,meaning_of_life; Expected: meaning_of_life,title',
  181            filepath: 'path/to/file.md'

  190            title: {
  191:             type: 'string'
  192            },
  193:           meaning_of_life: {
  194              type: 'number'

  198        const { errors } = parse(fixture1, { schema, validateKeyOrder: true })
  199:       expect(errors.length).toBe(0)
  200      })

  205            title: {
  206:             type: 'string',
  207              required: true

  209            yet_another_key: {
  210:             type: 'string'
  211            },
  212:           meaning_of_life: {
  213              type: 'number',

  218        const { errors } = parse(fixture1, { schema, validateKeyOrder: true })
  219:       expect(errors.length).toBe(0)
  220      })

docs • tests\unit\redis-accessor.js:
   17    test('has expected static methods', async () => {
   18:     expect(typeof RedisAccessor.translateSetArguments).toBe('function')
   19    })

   40    describe('#_prefix property', () => {
   41:     test('defaults to empty string', async () => {
   42        const instance = new RedisAccessor()

   50  
   51:     test('removes a trailing colon', async () => {
   52        const instance = new RedisAccessor({ prefix: 'myPrefix:' })

   55  
   56:     test('removes multiple trailing colons', async () => {
   57        const instance = new RedisAccessor({ prefix: 'myPrefix::' })

   64        expect(() => new RedisAccessor({ databaseNumber: 'dbName' })).toThrowError(
   65:         new TypeError('Redis database number must be an integer between 0 and 15 but was: "dbName"')
   66        )

   68  
   69:     test('throws if databaseNumber is provided but is not an integer', async () => {
   70        expect(() => new RedisAccessor({ databaseNumber: 1.5 })).toThrowError(
   71:         new TypeError('Redis database number must be an integer between 0 and 15 but was: 1.5')
   72        )

   76        expect(() => new RedisAccessor({ databaseNumber: -1 })).toThrowError(
   77:         new TypeError('Redis database number must be an integer between 0 and 15 but was: -1')
   78        )

   80  
   81:     test('throws if databaseNumber is provided but is greater than max allowed', async () => {
   82        expect(() => new RedisAccessor({ databaseNumber: 16 })).toThrowError(
   83:         new TypeError('Redis database number must be an integer between 0 and 15 but was: 16')
   84        )

   94  
   95:     test('returns original key if no prefix is configured', async () => {
   96        const instance = new RedisAccessor()

  102        expect(() => instance.prefix()).toThrow(
  103:         new TypeError('Key must be a non-empty string but was: undefined')
  104        )

  107  
  108:   describe('.translateSetArguments method', () => {
  109:     test('defaults to an empty list of arguments if no options are given', async () => {
  110:       expect(RedisAccessor.translateSetArguments()).toEqual([])
  111      })
  112  
  113:     test('adds argument "NX" if option `newOnly` is set to true', async () => {
  114:       expect(RedisAccessor.translateSetArguments({ newOnly: true })).toEqual(['NX'])
  115      })
  116  
  117:     test('adds argument "XX" if option `existingOnly` is set to true', async () => {
  118:       expect(RedisAccessor.translateSetArguments({ existingOnly: true })).toEqual(['XX'])
  119      })
  120  
  121:     test('adds argument "PX n" if option `expireIn` is provided with a positive finite integer', async () => {
  122:       expect(RedisAccessor.translateSetArguments({ expireIn: 20 })).toEqual(['PX', 20])
  123      })
  124  
  125:     test('adds argument "PX n" with rounded integer if option `expireIn` is provided with a positive finite non-integer', async () => {
  126:       expect(RedisAccessor.translateSetArguments({ expireIn: 20.5 })).toEqual(['PX', 21])
  127:       expect(RedisAccessor.translateSetArguments({ expireIn: 29.1 })).toEqual(['PX', 29])
  128      })
  129  
  130:     test('adds argument "KEEPTTL" if option `rollingExpiration` is set to false', async () => {
  131:       expect(RedisAccessor.translateSetArguments({ rollingExpiration: false })).toEqual(['KEEPTTL'])
  132      })
  133  
  134:     test('adds expected arguments if multiple options are configured', async () => {
  135        expect(
  136:         RedisAccessor.translateSetArguments({
  137            newOnly: true,

  142        expect(
  143:         RedisAccessor.translateSetArguments({
  144:           existingOnly: true,
  145            expireIn: 20

  149        expect(
  150:         RedisAccessor.translateSetArguments({
  151:           existingOnly: true,
  152            expireIn: 20,
  153:           rollingExpiration: false
  154          })

  157        expect(
  158:         RedisAccessor.translateSetArguments({
  159:           existingOnly: true,
  160:           rollingExpiration: false
  161          })

  164  
  165:     test('throws a misconfiguration error if options `newOnly` and `existingOnly` are both set to true', async () => {
  166        expect(
  167:         () => RedisAccessor.translateSetArguments({ newOnly: true, existingOnly: true })
  168        ).toThrowError(
  169:         new TypeError('Misconfiguration: entry cannot be both new and existing')
  170        )

  172  
  173:     test('throws a misconfiguration error if option `expireIn` is set to a finite number that rounds to less than 1', async () => {
  174:       const misconfigurationError = new TypeError('Misconfiguration: cannot set a TTL of less than 1 millisecond')
  175  
  176        expect(
  177:         () => RedisAccessor.translateSetArguments({ expireIn: 0 })
  178:       ).toThrowError(misconfigurationError)
  179  
  180        expect(
  181:         () => RedisAccessor.translateSetArguments({ expireIn: -1 })
  182:       ).toThrowError(misconfigurationError)
  183  
  184        expect(
  185:         () => RedisAccessor.translateSetArguments({ expireIn: 0.4 })
  186:       ).toThrowError(misconfigurationError)
  187      })
  188  
  189:     test('throws a misconfiguration error if option `rollingExpiration` is set to false but `newOnly` is set to true', async () => {
  190        expect(
  191:         () => RedisAccessor.translateSetArguments({ newOnly: true, rollingExpiration: false })
  192        ).toThrowError(
  193:         new TypeError('Misconfiguration: cannot keep an existing TTL on a new entry')
  194        )

  258  
  259:     test('rejects if value is an empty string', async () => {
  260        const instance = new RedisAccessor()

  262        await expect(instance.set('myKey', '')).rejects.toThrow(
  263:         new TypeError('Value must be a non-empty string but was: ""')
  264        )

  266  
  267:     test('rejects if value is a non-string value', async () => {
  268        const instance = new RedisAccessor()

  270        await expect(instance.set('myKey', true)).rejects.toThrow(
  271:         new TypeError('Value must be a non-empty string but was: true')
  272        )

  274  
  275:     test('invokes .translateSetArguments before sending values to Redis', async () => {
  276:       const argSpy = jest.spyOn(RedisAccessor, 'translateSetArguments')
  277        const instance = new RedisAccessor()

  280        await instance.set('myKey', 'myValue', { expireIn: 20 })
  281:       expect(argSpy).toBeCalled()
  282        expect(setSpy).toBeCalledWith('myKey', 'myValue', 'PX', 20)
  283  
  284:       argSpy.mockRestore()
  285      })

  287  
  288:   describe('#get method', () => {
  289:     test('resolves to expected value if matching entry exists in Redis', async () => {
  290        const instance = new RedisAccessor()

  293  
  294:       const result = await instance.get('myKey')
  295        expect(result).toBe('myValue')

  297  
  298:     test('resolves to null if no matching entry exists in Redis', async () => {
  299        const instance = new RedisAccessor()
  300  
  301:       const result = await instance.get('fakeKey')
  302        expect(result).toBe(null)

  304  
  305:     test('retrieves matching entry from Redis with #_client.get', async () => {
  306        const instance = new RedisAccessor()
  307:       const getSpy = jest.spyOn(instance._client, 'get')
  308  
  309        await instance.set('myKey', 'myValue')
  310:       await instance.get('myKey')
  311  
  312:       expect(getSpy).toBeCalledWith('myKey')
  313:       expect(getSpy).toHaveReturnedWith(Promise.resolve('myValue'))
  314      })

  317    describe('#exists method', () => {
  318:     test('resolves to true if matching entry exists in Redis', async () => {
  319        const instance = new RedisAccessor()

  326  
  327:     test('resolves to false if no matching entry exists in Redis', async () => {
  328        const instance = new RedisAccessor()

  333  
  334:     test('checks for matching entry from Redis with #_client.exists', async () => {
  335        const instance = new RedisAccessor()

docs • tests\unit\render-content.js:
    4  
    5: // Use platform-specific line endings for realistic tests when templates have
    6  // been loaded from disk
    7: const nl = str => str.replace(/\n/g, EOL)
    8  

   10    test(
   11:     'takes a template and a context and returns a string (async)',
   12      async () => {
   13        const template = 'my favorite color is {{ color }}.'
   14:       const context = { color: 'orange' }
   15        const output = await renderContent(template, context)
   16:       expect(output, '<p>my favorite color is orange.</p>')
   17      }

   19  
   20:   test('preserves content within {% raw %} tags', async () => {
   21      const template = nl(

   29    test(
   30:     'removes extra newlines to prevent lists from breaking',
   31      async () => {

   40        const $ = cheerio.load(html, { xmlMode: true })
   41:       expect($('ol').length).toBe(1)
   42:       expect($('ol > li').length).toBe(3)
   43      }

   52      const $ = cheerio.load(html, { xmlMode: true })
   53:     expect($('ul p').length, 0)
   54    })

   57      const template = 'my favorite color is {{ color }}.'
   58:     const context = { color: 'orange' }
   59      const output = await renderContent(template, context, { textOnly: true })
   60:     expect(output, 'my favorite color is orange.')
   61    })
   62  
   63:   test('throws on rendering errors', async () => {
   64      const template = 1

   78    test(
   79:     'warns and throws on rendering errors when the file name is passed',
   80      async () => {

   87        const error = console.error
   88:       console.error = message => {
   89:         expect(message, 'renderContent failed on file: name')
   90          console.error = error

  117      })
  118:     expect(output).toBe('&lt;p&gt;&lt;beep&gt;&lt;/beep&gt;&lt;/p&gt;')
  119    })

  124  |-----------|------------
  125: |<kbd>g</kbd> <kbd>c</kbd> | Go to the **Code** tab
  126: |<kbd>g</kbd> <kbd>i</kbd> | Go to the **Issues** tab. For more information, see "[About issues](/articles/about-issues)."
  127      `)

  140        const template = nl(`
  141: | Package manager | formats |
  142  | --- | --- |

  158  | ------------- | -------------
  159: | <code>user:<em>USERNAME</em></code> | [**user:defunkt ubuntu**](https://github.com/search?q=user%3Adefunkt+ubuntu&type=Issues) matches issues with the word "ubuntu" from repositories owned by @defunkt.
  160      `)

  167      const template = nl(`
  168: 1. This is a list item with code containing a comment:
  169    \`\`\`shell

  176      const $ = cheerio.load(html, { xmlMode: true })
  177:     expect($('ol').length).toBe(1)
  178      expect($.html().includes('# some comment here')).toBeTruthy()

  182  
  183:   test('renders headings at the right level', async () => {
  184      const template = nl(`

  223  
  224:   test('does syntax highlighting', async () => {
  225      const template = nl(`

  231      const $ = cheerio.load(html, { xmlMode: true })
  232:     expect($.html().includes('<pre><code class="hljs language-js">')).toBeTruthy()
  233    })
  234  
  235:   test('does not autoguess code block language', async () => {
  236      const template = nl(`

docs • tests\unit\toc-links.js:
   1: const { loadPages } = require('../../lib/pages')
   2  const renderContent = require('../../lib/render-content')

   8    test('every toc link works without redirects', async () => {
   9:     const pages = await loadPages()
  10  
  11:     const englishIndexPages = pages
  12:       .filter(page => page.languageCode === 'en' && page.relativePath.endsWith('index.md'))
  13  

  15  
  16:     for (const pageVersion of allVersions) {
  17:       for (const page of englishIndexPages) {
  18:         // skip page if it doesn't have a permalink for the current product version
  19:         if (!page.permalinks.some(permalink => permalink.pageVersion === pageVersion)) continue
  20  
  21:         // build fake context object for rendering the page
  22          const context = {
  23:           page,
  24:           pages,
  25            redirects: {},
  26:           currentLanguage: 'en',
  27:           currentVersion: pageVersion
  28          }
  29  
  30:         // ensure all toc pages can render
  31          try {
  32:           await renderContent(page.markdown, context)
  33          } catch (err) {
  34            issues.push({
  35:             'TOC path': page.relativePath,
  36:             error: err.message,
  37:             pageVersion
  38            })

  42  
  43:     const message = 'broken link in a TOC: ' + JSON.stringify(issues, null, 2)
  44:     expect(issues.length, message).toBe(0)
  45    })

docs • tests\unit\versions.js:
   4  const schema = require('../../lib/versions-schema')
   5: const { getJSON } = require('../helpers/supertest')
   6  const nonEnterpriseDefaultVersion = require('../../lib/non-enterprise-default-version')

  16        const { valid, errors } = revalidator.validate(versionObj, schema)
  17:       const expectation = JSON.stringify({ versionObj, errors }, null, 2)
  18        expect(valid, expectation).toBe(true)

  26    test('adds res.context.allVersions object', async () => {
  27:     const allVersionsFromMiddleware = await getJSON('/en?json=allVersions')
  28      expect(allVersionsFromMiddleware).toEqual(allVersions)

  30  
  31:   test('adds res.context.currentVersion string', async () => {
  32:     let currentVersion = await getJSON('/en?json=currentVersion')
  33:     expect(currentVersion).toBe('homepage')
  34  
  35:     currentVersion = await getJSON(`/en/${nonEnterpriseDefaultVersion}?json=currentVersion`)
  36:     expect(currentVersion).toBe('homepage')
  37  
  38:     currentVersion = await getJSON(`/en/enterprise-server@${latest}?json=currentVersion`)
  39      expect(currentVersion).toBe(`enterprise-server@${latest}`)

docs • tests\unit\algolia\parse-page-sections-into-records.js:
   3  const cheerio = require('cheerio')
   4: const parsePageSectionsIntoRecords = require('../../../lib/search/parse-page-sections-into-records')
   5  const fixtures = {
   6:   pageWithSections: fs.readFileSync(path.join(__dirname, 'fixtures/page-with-sections.html'), 'utf8'),
   7:   pageWithoutSections: fs.readFileSync(path.join(__dirname, 'fixtures/page-without-sections.html'), 'utf8')
   8  }
   9  
  10: describe('search parsePageSectionsIntoRecords module', () => {
  11:   test('works for pages with sections', () => {
  12:     const html = fixtures.pageWithSections
  13      const $ = cheerio.load(html)
  14      const href = '/example/href'
  15:     const records = parsePageSectionsIntoRecords(href, $)
  16      expect(Array.isArray(records)).toBe(true)
  17:     expect(records.length).toBe(2)
  18      const expected = [

  20          objectID: '/example/href#first',
  21:         url: 'https://docs.github.com/example/href#first',
  22:         slug: 'first',
  23          breadcrumbs: 'a / b / c',
  24:         heading: 'First heading',
  25:         title: 'I am the page title',
  26:         content: "Here's a paragraph. And another."
  27        },

  29          objectID: '/example/href#second',
  30:         url: 'https://docs.github.com/example/href#second',
  31:         slug: 'second',
  32          breadcrumbs: 'a / b / c',
  33:         heading: 'Second heading',
  34:         title: 'I am the page title',
  35:         content: "Here's a paragraph in the second section. And another."
  36        }

  41  
  42:   test('works for pages without sections', () => {
  43:     const html = fixtures.pageWithoutSections
  44      const $ = cheerio.load(html)
  45      const href = '/example/href'
  46:     const records = parsePageSectionsIntoRecords(href, $)
  47      expect(Array.isArray(records)).toBe(true)
  48:     expect(records.length).toBe(1)
  49      const expected = [

  51          objectID: '/example/href',
  52:         url: 'https://docs.github.com/example/href',
  53          breadcrumbs: 'x / y / z',
  54:         title: 'A page without sections',
  55:         content: 'First paragraph. Second paragraph.'
  56        }

docs • tests\unit\algolia\rank.js:
   2  
   3: test('search custom rankings', () => {
   4:   const expectedRankings = [
   5:     ['https://docs.github.com/en/github/actions', 3],
   6:     ['https://docs.github.com/en/rest/reference', 2],
   7:     ['https://docs.github.com/en/graphql', 1],
   8:     ['https://docs.github.com/en/github/site-policy', 0]
   9    ]
  10  
  11:   expectedRankings.forEach(([url, expectedRanking]) => {
  12:     const expectationMessage = `expected ${url} to have a custom ranking of ${expectedRanking}`
  13:     expect(rank({ url }), expectationMessage).toBe(expectedRanking)
  14    })

docs • tests\unit\algolia\fixtures\page-with-sections.html:
   1: <div class="article-grid-body">
   2    <nav class="breadcrumbs">

   7    
   8:   <h1>I am the page title</h1>
   9  
  10    <h3 id="in-this-article">In this article</h3>
  11:   <p>This should be ignored.</p>
  12  
  13:   <h3 id="first">First heading</h3>
  14:   <p>Here's a paragraph.</p>
  15  

  17  
  18:   <h3 id="second">Second heading</h3>
  19:   <p>Here's a paragraph in the second section.</p>
  20  

  22  
  23:   <h3 id="further-reading">Further reading</h3>
  24:   <p>This should be ignored.</p>
  25  </div>
  26  
  27: <h3 id="outside-the-article">This is out the article tag so it should be ignored</h3>

docs • tests\unit\algolia\fixtures\page-without-sections.html:
   2  
   3: <div class="article-grid-body">
   4    <nav class="breadcrumbs">

   9  
  10:   <h1>A page without sections</h1>
  11  
  12:   <p>First paragraph.</p>
  13  
  14:   <p>Second paragraph.</p>
  15  </div>

docs • tests\unit\data-directory\filename-to-key.js:
  7  
  8:   test('ignores leading slash on filenames', () => {
  9      expect(filenameToKey('/foo/bar/baz.txt')).toBe('foo.bar.baz')

docs • tests\unit\data-directory\index.js:
   8      const expected = {
   9:       bar: { another_markup_language: 'yes' },
  10:       foo: { meaningOfLife: 42 },
  11        nested: { baz: 'I am markdown!' }

  27      expect('bar' in data).toBe(true)
  28:     expect('foo' in data).toBe(false) // JSON file should be ignored
  29    })
  30  
  31:   test('option: ignorePatterns', async () => {
  32:     const ignorePatterns = []
  33  
  34:     // README is ignored by default
  35      expect('README' in await dataDirectory(fixturesDir)).toBe(false)
  36  
  37:     // README can be included by setting empty ignorePatterns array
  38:     expect('README' in await dataDirectory(fixturesDir, { ignorePatterns })).toBe(true)
  39    })

docs • tests\unit\data-directory\fixtures\bar.yaml:
  1: another_markup_language: 'yes'

docs • tests\unit\data-directory\fixtures\foo.json:
  1: {"meaningOfLife": 42}

docs • tests\unit\data-directory\fixtures\README.md:
  1: I am a README. I am ignored by default.

GitHub • .gitignore:
  10  # Precompiled Headers
  11: *.gch
  12  *.pch

GitHub • bayesian.log:
  1: info: Starting Bayesian
  2: info: Starting Bayesian
  3: info: Starting Bayesian
  4: info: Starting Bayesian
  5: info: Starting Bayesian
  6: info: Starting Bayesian

GitHub • LICENSE:
    2                             Version 2.0, January 2004
    3:                         http://www.apache.org/licenses/
    4  

    9        "License" shall mean the terms and conditions for use, reproduction,
   10:       and distribution as defined by Sections 1 through 9 of this document.
   11  
   12:       "Licensor" shall mean the copyright owner or entity authorized by
   13:       the copyright owner that is granting the License.
   14  
   15:       "Legal Entity" shall mean the union of the acting entity and all
   16        other entities that control, are controlled by, or are under common

   18        "control" means (i) the power, direct or indirect, to cause the
   19:       direction or management of such entity, whether by contract or
   20        otherwise, or (ii) ownership of fifty percent (50%) or more of the
   21:       outstanding shares, or (iii) beneficial ownership of such entity.
   22  
   23:       "You" (or "Your") shall mean an individual or Legal Entity
   24:       exercising permissions granted by this License.
   25  
   26:       "Source" form shall mean the preferred form for making modifications,
   27:       including but not limited to software source code, documentation
   28:       source, and configuration files.
   29  
   30:       "Object" form shall mean any form resulting from mechanical
   31:       transformation or translation of a Source form, including but
   32:       not limited to compiled object code, generated documentation,
   33        and conversions to other media types.

   36        Object form, made available under the License, as indicated by a
   37:       copyright notice that is included in or attached to the work
   38        (an example is provided in the Appendix below).

   42        editorial revisions, annotations, elaborations, or other modifications
   43:       represent, as a whole, an original work of authorship. For the purposes
   44        of this License, Derivative Works shall not include works that remain

   47  
   48:       "Contribution" shall mean any work of authorship, including
   49:       the original version of the Work and any modifications or additions
   50        to that Work or Derivative Works thereof, that is intentionally
   51:       submitted to Licensor for inclusion in the Work by the copyright owner
   52:       or by an individual or Legal Entity authorized to submit on behalf of
   53:       the copyright owner. For the purposes of this definition, "submitted"
   54        means any form of electronic, verbal, or written communication sent
   55:       to the Licensor or its representatives, including but not limited to
   56:       communication on electronic mailing lists, source code control systems,
   57:       and issue tracking systems that are managed by, or on behalf of, the
   58:       Licensor for the purpose of discussing and improving the Work, but
   59:       excluding communication that is conspicuously marked or otherwise
   60:       designated in writing by the copyright owner as "Not a Contribution."
   61  
   62:       "Contributor" shall mean Licensor and any individual or Legal Entity
   63        on behalf of whom a Contribution has been received by Licensor and

   65  
   66:    2. Grant of Copyright License. Subject to the terms and conditions of
   67:       this License, each Contributor hereby grants to You a perpetual,
   68:       worldwide, non-exclusive, no-charge, royalty-free, irrevocable
   69:       copyright license to reproduce, prepare Derivative Works of,
   70        publicly display, publicly perform, sublicense, and distribute the

   72  
   73:    3. Grant of Patent License. Subject to the terms and conditions of
   74:       this License, each Contributor hereby grants to You a perpetual,
   75:       worldwide, non-exclusive, no-charge, royalty-free, irrevocable
   76        (except as stated in this section) patent license to make, have made,

   78        where such license applies only to those patent claims licensable
   79:       by such Contributor that are necessarily infringed by their
   80        Contribution(s) alone or by combination of their Contribution(s)
   81        with the Work to which such Contribution(s) was submitted. If You
   82:       institute patent litigation against any entity (including a
   83:       cross-claim or counterclaim in a lawsuit) alleging that the Work
   84        or a Contribution incorporated within the Work constitutes direct
   85:       or contributory patent infringement, then any patent licenses
   86:       granted to You under this License for that Work shall terminate
   87:       as of the date such litigation is filed.
   88  

   91        modifications, and in Source or Object form, provided that You
   92:       meet the following conditions:
   93  
   94:       (a) You must give any other recipients of the Work or
   95            Derivative Works a copy of this License; and

   97        (b) You must cause any modified files to carry prominent notices
   98:           stating that You changed the files; and
   99  
  100        (c) You must retain, in the Source form of any Derivative Works
  101:           that You distribute, all copyright, patent, trademark, and
  102            attribution notices from the Source form of the Work,
  103:           excluding those notices that do not pertain to any part of
  104            the Derivative Works; and

  108            include a readable copy of the attribution notices contained
  109:           within such NOTICE file, excluding those notices that do not
  110            pertain to any part of the Derivative Works, in at least one
  111:           of the following places: within a NOTICE text file distributed
  112            as part of the Derivative Works; within the Source form or
  113:           documentation, if provided along with the Derivative Works; or,
  114:           within a display generated by the Derivative Works, if and
  115            wherever such third-party notices normally appear. The contents

  117            do not modify the License. You may add Your own attribution
  118:           notices within Derivative Works that You distribute, alongside
  119            or as an addendum to the NOTICE text from the Work, provided
  120            that such additional attribution notices cannot be construed
  121:           as modifying the License.
  122  
  123:       You may add Your own copyright statement to Your modifications and
  124        may provide additional or different license terms and conditions

  133        this License, without any additional terms or conditions.
  134:       Notwithstanding the above, nothing herein shall supersede or modify
  135:       the terms of any separate license agreement you may have executed
  136:       with Licensor regarding such Contributions.
  137  
  138:    6. Trademarks. This License does not grant permission to use the trade
  139        names, trademarks, service marks, or product names of the Licensor,
  140:       except as required for reasonable and customary use in describing the
  141:       origin of the Work and reproducing the content of the NOTICE file.
  142  
  143     7. Disclaimer of Warranty. Unless required by applicable law or
  144:       agreed to in writing, Licensor provides the Work (and each
  145        Contributor provides its Contributions) on an "AS IS" BASIS,
  146        WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
  147:       implied, including, without limitation, any warranties or conditions
  148:       of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A
  149:       PARTICULAR PURPOSE. You are solely responsible for determining the
  150:       appropriateness of using or redistributing the Work and assume any
  151        risks associated with Your exercise of permissions under this License.
  152  
  153:    8. Limitation of Liability. In no event and under no legal theory,
  154:       whether in tort (including negligence), contract, or otherwise,
  155:       unless required by applicable law (such as deliberate and grossly
  156:       negligent acts) or agreed to in writing, shall any Contributor be
  157:       liable to You for damages, including any direct, indirect, special,
  158:       incidental, or consequential damages of any character arising as a
  159        result of this License or out of the use or inability to use the
  160:       Work (including but not limited to damages for loss of goodwill,
  161:       work stoppage, computer failure or malfunction, or any and all
  162:       other commercial damages or losses), even if such Contributor
  163:       has been advised of the possibility of such damages.
  164  
  165:    9. Accepting Warranty or Additional Liability. While redistributing
  166        the Work or Derivative Works thereof, You may choose to offer,
  167:       and charge a fee for, acceptance of support, warranty, indemnity,
  168:       or other liability obligations and/or rights consistent with this
  169:       License. However, in accepting such obligations, You may act only
  170        on Your own behalf and on Your sole responsibility, not on behalf
  171:       of any other Contributor, and only if You agree to indemnify,
  172        defend, and hold each Contributor harmless for any liability
  173:       incurred by, or claims asserted against, such Contributor by reason
  174:       of your accepting any such warranty or additional liability.
  175  

  179  
  180:       To apply the Apache License to your work, attach the following
  181        boilerplate notice, with the fields enclosed by brackets "[]"
  182:       replaced with your own identifying information. (Don't include
  183        the brackets!)  The text should be enclosed in the appropriate

  185        file or class name and description of purpose be included on the
  186:       same "printed page" as the copyright notice for easier
  187        identification within third-party archives.
  188  
  189:    Copyright [yyyy] [name of copyright owner]
  190  

  194  
  195:        http://www.apache.org/licenses/LICENSE-2.0
  196  
  197:    Unless required by applicable law or agreed to in writing, software
  198     distributed under the License is distributed on an "AS IS" BASIS,
  199     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  200:    See the License for the specific language governing permissions and
  201     limitations under the License.

GitHub • README.md:
  1: # GitHub
  2   
