#!/bin/sh
[ -n "$CI" ] && exit 0
if command -v git-lfs >/dev/null 2>&1
then
  if ! (git lfs post-checkout "$@")
  then
    printf >&2 "\nGitHub Docs requires Git LFS but using the 'git-lfs' on your path failed.\n"
  fi
else
  printf >&2 "\nGitHub Docs requires Git LFS but 'git-lfs' was not found on your path.\nLearn how to install Git LFS at <https://docs.github.com/en/github/managing-large-files/versioning-large-files/installing-git-large-file-storage>.\n"
fi
Skip to content
Search or jump to…
Pull requests
Issues
Marketplace
Explore
 
@zakwarlord7 
Your account has been flagged.
Because of that, your profile is hidden from the public. If you believe this is a mistake, contact support to have your account status reviewed.
zakwarlord7
/
bitcore.sig-Bitore.sigs
Public
generated from zakwarlord7/libanki
Code
Issues
Pull requests
Actions
Projects
Wiki
Security
Insights
Settings
Initial commit
 master
@zakwarlord7
zakwarlord7 committed 22 minutes ago 
0 parents commit a453a603bbd6d1eab970cf25baf17aed2f331878
Show file tree Hide file tree
Showing 59 changed files with 16,778 additions and 0 deletions.
 36  
.github/workflows/python-package-conda.yml
@@ -0,0 +1,36 @@
name: Python Package using Conda

on: [push]

jobs:
  build-linux:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 5

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: 3.10
    - name: Add conda to system path
      run: |
        # $CONDA is an environment variable pointing to the root of the miniconda directory
        echo $CONDA/bin >> $GITHUB_PATH
    - name: Install dependencies
      run: |
        conda env update --file environment.yml --name base
    - name: Lint with flake8
      run: |
        conda install flake8
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        conda install pytest
        pytest
# libanki :
# wet boew :
 7  
.gitignore
@@ -0,0 +1,7 @@
*.pyc
*~
*.mo
*\#
.*.swp
samples
unihan.db
 688  
COPYING
Large diffs are not rendered by default.

 5,091  
ChangeLog.old
Large diffs are not rendered by default.

 58  
anki/__init__.py
@@ -0,0 +1,58 @@
# -*- coding: utf-8 -*-
# Copyright: Damien Elmes <anki@ichi2.net>
# License: GNU GPL, version 3 or later; http://www.gnu.org/copyleft/gpl.html

"""\
Anki (libanki)
====================
Open a deck:
    deck = anki.DeckStorage.Deck(path)
Get a card:
    card = deck.getCard()
    if not card:
        # deck is finished
Show the card:
    print card.question, card.answer
Answer the card:
    deck.answerCard(card, ease)
Edit the card:
    fields = card.fact.model.fieldModels
    for field in fields:
        card.fact[field.name] = "newvalue"
    card.fact.setModified(textChanged=True)
    deck.setModified()
Get all cards via ORM (slow):
    from anki.cards import Card
    cards = deck.s.query(Card).all()
Get all q/a/ids via SQL (fast):
    cards = deck.s.all("select id, question, answer from cards")
Save & close:
    deck.save()
    deck.close()
"""
__docformat__ = 'restructuredtext'

try:
    __import__('pkg_resources').declare_namespace(__name__)
except ImportError:
    pass

version = "0.9.9.8.6"

from anki.deck import DeckStorage
 289  
anki/cards.py
@@ -0,0 +1,289 @@
# -*- coding: utf-8 -*-
# Copyright: Damien Elmes <anki@ichi2.net>
# License: GNU GPL, version 3 or later; http://www.gnu.org/copyleft/gpl.html

"""\
Cards
====================
"""
__docformat__ = 'restructuredtext'

import time, sys, math, random
from anki.db import *
from anki.models import CardModel, Model, FieldModel, formatQA
from anki.facts import Fact, factsTable, Field
from anki.utils import parseTags, findTag, stripHTML, genID, hexifyID

# Cards
##########################################################################

cardsTable = Table(
    'cards', metadata,
    Column('id', Integer, primary_key=True),
    Column('factId', Integer, ForeignKey("facts.id"), nullable=False),
    Column('cardModelId', Integer, ForeignKey("cardModels.id"), nullable=False),
    Column('created', Float, nullable=False, default=time.time),
    Column('modified', Float, nullable=False, default=time.time),
    Column('tags', UnicodeText, nullable=False, default=u""),
    Column('ordinal', Integer, nullable=False),
    # cached - changed on fact update
    Column('question', UnicodeText, nullable=False, default=u""),
    Column('answer', UnicodeText, nullable=False, default=u""),
    # default to 'normal' priority;
    # this is indexed in deck.py as we need to create a reverse index
    Column('priority', Integer, nullable=False, default=2),
    Column('interval', Float, nullable=False, default=0),
    Column('lastInterval', Float, nullable=False, default=0),
    Column('due', Float, nullable=False, default=time.time),
    Column('lastDue', Float, nullable=False, default=0),
    Column('factor', Float, nullable=False, default=2.5),
    Column('lastFactor', Float, nullable=False, default=2.5),
    Column('firstAnswered', Float, nullable=False, default=0),
    # stats
    Column('reps', Integer, nullable=False, default=0),
    Column('successive', Integer, nullable=False, default=0),
    Column('averageTime', Float, nullable=False, default=0),
    Column('reviewTime', Float, nullable=False, default=0),
    Column('youngEase0', Integer, nullable=False, default=0),
    Column('youngEase1', Integer, nullable=False, default=0),
    Column('youngEase2', Integer, nullable=False, default=0),
    Column('youngEase3', Integer, nullable=False, default=0),
    Column('youngEase4', Integer, nullable=False, default=0),
    Column('matureEase0', Integer, nullable=False, default=0),
    Column('matureEase1', Integer, nullable=False, default=0),
    Column('matureEase2', Integer, nullable=False, default=0),
    Column('matureEase3', Integer, nullable=False, default=0),
    Column('matureEase4', Integer, nullable=False, default=0),
    # this duplicates the above data, because there's no way to map imported
    # data to the above
    Column('yesCount', Integer, nullable=False, default=0),
    Column('noCount', Integer, nullable=False, default=0),
    # caching
    Column('spaceUntil', Float, nullable=False, default=0),
    Column('relativeDelay', Float, nullable=False, default=0), # obsolete
    Column('isDue', Boolean, nullable=False, default=0),
    Column('type', Integer, nullable=False, default=2),
    Column('combinedDue', Integer, nullable=False, default=0))

class Card(object):
    "A card."

    def __init__(self, fact=None, cardModel=None, created=None):
        self.tags = u""
        self.id = genID()
        # new cards start as new & due
        self.type = 2
        self.isDue = True
        self.timerStarted = False
        self.timerStopped = False
        self.modified = time.time()
        if created:
            self.created = created
            self.due = created
        else:
            self.due = self.modified
        self.combinedDue = self.due
        if fact:
            self.fact = fact
        if cardModel:
            self.cardModel = cardModel
            # for non-orm use
            self.cardModelId = cardModel.id
            self.ordinal = cardModel.ordinal
            d = {}
            for f in self.fact.model.fieldModels:
                d[f.name] = (f.id, self.fact[f.name])
            qa = formatQA(None, fact.modelId, d, self.splitTags(), cardModel)
            self.question = qa['question']
            self.answer = qa['answer']

    def setModified(self):
        self.modified = time.time()

    def startTimer(self):
        self.timerStarted = time.time()

    def stopTimer(self):
        self.timerStopped = time.time()

    def thinkingTime(self):
        return (self.timerStopped or time.time()) - self.timerStarted

    def totalTime(self):
        return time.time() - self.timerStarted

    def genFuzz(self):
        "Generate a random offset to spread intervals."
        self.fuzz = random.uniform(0.95, 1.05)

    def htmlQuestion(self, type="question", align=True):
        div = '''<div class="card%s" id="cm%s%s">%s</div>''' % (
            type[0], type[0], hexifyID(self.cardModelId),
            getattr(self, type))
        # add outer div & alignment (with tables due to qt's html handling)
        if not align:
            return div
        attr = type + 'Align'
        if getattr(self.cardModel, attr) == 0:
            align = "center"
        elif getattr(self.cardModel, attr) == 1:
            align = "left"
        else:
            align = "right"
        return (("<center><table width=95%%><tr><td align=%s>" % align) +
                div + "</td></tr></table></center>")

    def htmlAnswer(self, align=True):
        return self.htmlQuestion(type="answer", align=align)

    def updateStats(self, ease, state):
        self.reps += 1
        if ease > 1:
            self.successive += 1
        else:
            self.successive = 0
        delay = self.totalTime()
        # ignore any times over 60 seconds
        if delay < 60:
            self.reviewTime += delay
            if self.averageTime:
                self.averageTime = (self.averageTime + delay) / 2.0
            else:
                self.averageTime = delay
        # we don't track first answer for cards
        if state == "new":
            state = "young"
        # update ease and yes/no count
        attr = state + "Ease%d" % ease
        setattr(self, attr, getattr(self, attr) + 1)
        if ease < 2:
            self.noCount += 1
        else:
            self.yesCount += 1
        if not self.firstAnswered:
            self.firstAnswered = time.time()
        self.setModified()

    def splitTags(self):
        return (self.fact.tags, self.fact.model.tags, self.cardModel.name)

    def allTags(self):
        "Non-canonified string of all tags."
        return (self.fact.tags + "," +
                self.fact.model.tags)

    def hasTag(self, tag):
        return findTag(tag, parseTags(self.allTags()))

    def fromDB(self, s, id):
        r = s.first("""select
id, factId, cardModelId, created, modified, tags, ordinal, question, answer,
priority, interval, lastInterval, due, lastDue, factor,
lastFactor, firstAnswered, reps, successive, averageTime, reviewTime,
youngEase0, youngEase1, youngEase2, youngEase3, youngEase4,
matureEase0, matureEase1, matureEase2, matureEase3, matureEase4,
yesCount, noCount, spaceUntil, isDue, type, combinedDue
from cards where id = :id""", id=id)
        if not r:
            return
        (self.id,
         self.factId,
         self.cardModelId,
         self.created,
         self.modified,
         self.tags,
         self.ordinal,
         self.question,
         self.answer,
         self.priority,
         self.interval,
         self.lastInterval,
         self.due,
         self.lastDue,
         self.factor,
         self.lastFactor,
         self.firstAnswered,
         self.reps,
         self.successive,
         self.averageTime,
         self.reviewTime,
         self.youngEase0,
         self.youngEase1,
         self.youngEase2,
         self.youngEase3,
         self.youngEase4,
         self.matureEase0,
         self.matureEase1,
         self.matureEase2,
         self.matureEase3,
         self.matureEase4,
         self.yesCount,
         self.noCount,
         self.spaceUntil,
         self.isDue,
         self.type,
         self.combinedDue) = r
        return True

    def toDB(self, s):
        "Write card to DB. Note that isDue assumes card is not spaced."
        if self.reps == 0:
            self.type = 2
        elif self.successive:
            self.type = 1
        else:
            self.type = 0
        s.execute("""update cards set
modified=:modified,
tags=:tags,
interval=:interval,
lastInterval=:lastInterval,
due=:due,
lastDue=:lastDue,
factor=:factor,
lastFactor=:lastFactor,
firstAnswered=:firstAnswered,
reps=:reps,
successive=:successive,
averageTime=:averageTime,
reviewTime=:reviewTime,
youngEase0=:youngEase0,
youngEase1=:youngEase1,
youngEase2=:youngEase2,
youngEase3=:youngEase3,
youngEase4=:youngEase4,
matureEase0=:matureEase0,
matureEase1=:matureEase1,
matureEase2=:matureEase2,
matureEase3=:matureEase3,
matureEase4=:matureEase4,
yesCount=:yesCount,
noCount=:noCount,
spaceUntil = :spaceUntil,
isDue = :isDue,
type = :type,
combinedDue = max(:spaceUntil, :due),
relativeDelay = 0,
priority = :priority
where id=:id""", self.__dict__)

mapper(Card, cardsTable, properties={
    'cardModel': relation(CardModel),
    'fact': relation(Fact, backref="cards", primaryjoin=
                     cardsTable.c.factId == factsTable.c.id),
    })

mapper(Fact, factsTable, properties={
    'model': relation(Model),
    'fields': relation(Field, backref="fact", order_by=Field.ordinal),
    })


# Card deletions
##########################################################################

cardsDeletedTable = Table(
    'cardsDeleted', metadata,
    Column('cardId', Integer, ForeignKey("cards.id"),
           nullable=False),
    Column('deletedTime', Float, nullable=False))
 149  
anki/db.py
@@ -0,0 +1,149 @@
# -*- coding: utf-8 -*-
# Copyright: Damien Elmes <anki@ichi2.net>
# License: GNU GPL, version 3 or later; http://www.gnu.org/copyleft/gpl.html

"""\
DB tools
====================
SessionHelper is a wrapper for the standard sqlalchemy session, which provides
some convenience routines, and manages transactions itself.
object_session() is a replacement for the standard object_session(), which
provides the features of SessionHelper, and avoids taking out another
transaction.
"""
__docformat__ = 'restructuredtext'

try:
    from pysqlite2 import dbapi2 as sqlite
except ImportError:
    try:
        from sqlite3 import dbapi2 as sqlite
    except:
        raise "Please install pysqlite2 or python2.5"

from sqlalchemy import (Table, Integer, Float, Column, MetaData,
                        ForeignKey, Boolean, String, Date,
                        UniqueConstraint, Index, PrimaryKeyConstraint)
from sqlalchemy import create_engine
from sqlalchemy.orm import mapper, sessionmaker as _sessionmaker, relation, backref, \
     object_session as _object_session, class_mapper
from sqlalchemy.sql import select, text, and_
from sqlalchemy.exceptions import DBAPIError, OperationalError
from sqlalchemy.pool import NullPool
import sqlalchemy

# some users are still on 0.4.x..
import warnings
warnings.filterwarnings('ignore', 'Use session.add()')
warnings.filterwarnings('ignore', 'Use session.expunge_all()')

# sqlalchemy didn't handle the move to unicodetext nicely
try:
    from sqlalchemy import UnicodeText
except ImportError:
    from sqlalchemy import Unicode
    UnicodeText = Unicode

from anki.hooks import runHook

# shared metadata
metadata = MetaData()

# this class assumes the provided session is called with transactional=False
class SessionHelper(object):
    "Add some convenience routines to a session."

    def __init__(self, session, lock=False, transaction=True):
        self._session = session
        self._lock = lock
        self._transaction = transaction
        if self._transaction:
            self._session.begin()
        if self._lock:
            self._lockDB()
        self._seen = True

    def save(self, obj):
        # compat
        if sqlalchemy.__version__.startswith("0.4."):
            self._session.save(obj)
        else:
            self._session.add(obj)

    def clear(self):
        # compat
        if sqlalchemy.__version__.startswith("0.4."):
            self._session.clear()
        else:
            self._session.expunge_all()

    def update(self, obj):
        # compat
        if sqlalchemy.__version__.startswith("0.4."):
            self._session.update(obj)
        else:
            self._session.add(obj)

    def execute(self, *a, **ka):
        x = self._session.execute(*a, **ka)
        runHook("dbFinished")
        return x

    def __getattr__(self, k):
        return getattr(self.__dict__['_session'], k)

    def scalar(self, sql, **args):
        return self.execute(text(sql), args).scalar()

    def all(self, sql, **args):
        return self.execute(text(sql), args).fetchall()

    def first(self, sql, **args):
        c = self.execute(text(sql), args)
        r = c.fetchone()
        c.close()
        return r

    def column0(self, sql, **args):
        return [x[0] for x in self.execute(text(sql), args).fetchall()]

    def statement(self, sql, **kwargs):
        "Execute a statement without returning any results. Flush first."
        return self.execute(text(sql), kwargs)

    def statements(self, sql, data):
        "Execute a statement across data. Flush first."
        return self.execute(text(sql), data)

    def __repr__(self):
        return repr(self._session)

    def commit(self):
        self._session.commit()
        if self._transaction:
            self._session.begin()
        if self._lock:
            self._lockDB()

    def _lockDB(self):
        "Take out a write lock."
        self._session.execute(text("update decks set modified=modified"))

def object_session(*args):
    s = _object_session(*args)
    if s:
        return SessionHelper(s, transaction=False)
    return None

def sessionmaker(*args, **kwargs):
    if sqlalchemy.__version__ < "0.5":
        if 'autocommit' in kwargs:
            kwargs['transactional'] = not kwargs['autocommit']
            del kwargs['autocommit']
    else:
        if 'transactional' in kwargs:
            kwargs['autocommit'] = not kwargs['transactional']
            del kwargs['transactional']
    return _sessionmaker(*args, **kwargs)
 3,446  
anki/deck.py
Large diffs are not rendered by default.

 49  
anki/errors.py
@@ -0,0 +1,49 @@
# -*- coding: utf-8 -*-
# Copyright: Damien Elmes <anki@ichi2.net>
# License: GNU GPL, version 3 or later; http://www.gnu.org/copyleft/gpl.html

"""\
Errors
==============================
"""
__docformat__ = 'restructuredtext'

class Error(Exception):
    def __init__(self, message="", **data):
        self.data = data
        self._message = message
    def __str__(self):
        m = self._message
        if self.data:
            m += ": %s" % repr(self.data)
        return m

class DeckAccessError(Error):
    pass

class ImportFileError(Error):
    "Unable to load file to import from."
    pass

class ImportFormatError(Error):
    "Unable to determine pattern in text file."
    pass

class ImportEncodingError(Error):
    "The file was not in utf-8."
    pass

class ExportFileError(Error):
    "Unable to save file."
    pass

class SyncError(Error):
    "A problem occurred during syncing."
    pass

# facts, models
class FactInvalidError(Error):
    """A fact was invalid/not unique according to the model.
'field' defines the problem field.
'type' defines the type of error ('fieldEmpty', 'fieldNotUnique')"""
    pass
 270  
anki/exporting.py
@@ -0,0 +1,270 @@
# -*- coding: utf-8 -*-
# Copyright: Damien Elmes <anki@ichi2.net>
# License: GNU GPL, version 3 or later; http://www.gnu.org/copyleft/gpl.html

"""\
Exporting support
==============================
"""
__docformat__ = 'restructuredtext'

import itertools, time, re, os
from operator import itemgetter
from anki import DeckStorage
from anki.cards import Card
from anki.sync import SyncClient, SyncServer, copyLocalMedia
from anki.lang import _
from anki.utils import findTag, parseTags, stripHTML, ids2str
from anki.tags import tagIds
from anki.db import *

class Exporter(object):
    def __init__(self, deck):
        self.deck = deck
        self.limitTags = []
        self.limitCardIds = []

    def exportInto(self, path):
        self._escapeCount = 0
        file = open(path, "wb")
        self.doExport(file)
        file.close()

    def escapeText(self, text, removeFields=False):
        "Escape newlines and tabs, and strip Anki HTML."
        from BeautifulSoup import BeautifulSoup as BS
        text = text.replace("\n", "<br>")
        text = text.replace("\t", " " * 8)
        if removeFields:
            # beautifulsoup is slow
            self._escapeCount += 1
            if self._escapeCount % 100 == 0:
                self.deck.updateProgress()
            s = BS(text)
            all = s('span', {'class': re.compile("fm.*")})
            for e in all:
                e.replaceWith("".join([unicode(x) for x in e.contents]))
            text = unicode(s)
        return text

    def cardIds(self):
        "Return all cards, limited by tags or provided ids."
        if self.limitCardIds:
            return self.limitCardIds
        if not self.limitTags:
            cards = self.deck.s.column0("select id from cards")
        else:
            d = tagIds(self.deck.s, self.limitTags, create=False)
            cards = self.deck.s.column0(
                "select cardId from cardTags where tagid in %s" %
                ids2str(d.values()))
        self.count = len(cards)
        return cards

class AnkiExporter(Exporter):

    key = _("Anki Deck (*.anki)")
    ext = ".anki"

    def __init__(self, deck):
        Exporter.__init__(self, deck)
        self.includeSchedulingInfo = False
        self.includeMedia = True

    def exportInto(self, path):
        n = 3
        if not self.includeSchedulingInfo:
            n += 1
        self.deck.startProgress(n)
        self.deck.updateProgress(_("Exporting..."))
        try:
            os.unlink(path)
        except (IOError, OSError):
            pass
        self.newDeck = DeckStorage.Deck(path)
        client = SyncClient(self.deck)
        server = SyncServer(self.newDeck)
        server._mediaSupported = self.includeMedia
        client.setServer(server)
        client.localTime = self.deck.modified
        client.remoteTime = 0
        self.deck.s.flush()
        # set up a custom change list and sync
        lsum = self.localSummary()
        rsum = server.summary(0)
        self.deck.updateProgress()
        payload = client.genPayload((lsum, rsum))
        self.deck.updateProgress()
        res = server.applyPayload(payload)
        if not self.includeSchedulingInfo:
            self.deck.updateProgress()
            self.newDeck.s.statement("""
delete from reviewHistory""")
            self.newDeck.s.statement("""
update cards set
interval = 0,
lastInterval = 0,
due = created,
lastDue = 0,
factor = 2.5,
firstAnswered = 0,
reps = 0,
successive = 0,
averageTime = 0,
reviewTime = 0,
youngEase0 = 0,
youngEase1 = 0,
youngEase2 = 0,
youngEase3 = 0,
youngEase4 = 0,
matureEase0 = 0,
matureEase1 = 0,
matureEase2 = 0,
matureEase3 = 0,
matureEase4 = 0,
yesCount = 0,
noCount = 0,
spaceUntil = 0,
isDue = 1,
type = 2,
combinedDue = created,
modified = :now
""", now=time.time())
            self.newDeck.s.statement("""
delete from stats""")
        # media
        copyLocalMedia(client.deck, server.deck)
        # need to save manually
        self.newDeck.rebuildCounts()
        self.newDeck.updateAllPriorities()
        self.exportedCards = self.newDeck.cardCount
        self.newDeck.utcOffset = -1
        self.newDeck.s.commit()
        self.newDeck.close()
        self.deck.finishProgress()

    def localSummary(self):
        cardIds = self.cardIds()
        cStrIds = ids2str(cardIds)
        cards = self.deck.s.all("""
select id, modified from cards
where id in %s""" % cStrIds)
        facts = self.deck.s.all("""
select facts.id, facts.modified from cards, facts where
facts.id = cards.factId and
cards.id in %s""" % cStrIds)
        models = self.deck.s.all("""
select models.id, models.modified from models, facts where
facts.modelId = models.id and
facts.id in %s""" % ids2str([f[0] for f in facts]))
        media = self.deck.s.all("""
select id, created from media""")
        return {
            # cards
            "cards": cards,
            "delcards": [],
            # facts
            "facts": facts,
            "delfacts": [],
            # models
            "models": models,
            "delmodels": [],
            # media
            "media": media,
            "delmedia": [],
            }

class TextCardExporter(Exporter):

    key = _("Text files (*.txt)")
    ext = ".txt"

    def __init__(self, deck):
        Exporter.__init__(self, deck)
        self.includeTags = False

    def doExport(self, file):
        ids = self.cardIds()
        strids = ids2str(ids)
        self.deck.startProgress((len(ids) + 1) / 50)
        self.deck.updateProgress(_("Exporting..."))
        cards = self.deck.s.all("""
select cards.question, cards.answer, cards.id from cards
where cards.id in %s
order by cards.created""" % strids)
        self.deck.updateProgress()
        if self.includeTags:
            self.cardTags = dict(self.deck.s.all("""
select cards.id, facts.tags from cards, facts
where cards.factId = facts.id
and cards.id in %s
order by cards.created""" % strids))
        out = u"\n".join(["%s\t%s%s" % (
            self.escapeText(c[0], removeFields=True),
            self.escapeText(c[1], removeFields=True),
            self.tags(c[2]))
                          for c in cards])
        if out:
            out += "\n"
        file.write(out.encode("utf-8"))
        self.deck.finishProgress()

    def tags(self, id):
        if self.includeTags:
            return "\t" + ", ".join(parseTags(self.cardTags[id]))
        return ""

class TextFactExporter(Exporter):

    key = _("Text files (*.txt)")
    ext = ".txt"

    def __init__(self, deck):
        Exporter.__init__(self, deck)
        self.includeTags = False

    def doExport(self, file):
        cardIds = self.cardIds()
        self.deck.startProgress()
        self.deck.updateProgress(_("Exporting..."))
        facts = self.deck.s.all("""
select factId, value, facts.created from facts, fields
where
facts.id in
(select distinct factId from cards
where cards.id in %s)
and facts.id = fields.factId
order by factId, ordinal""" % ids2str(cardIds))
        txt = ""
        self.deck.updateProgress()
        if self.includeTags:
            self.factTags = dict(self.deck.s.all(
                "select id, tags from facts where id in %s" %
                ids2str([fact[0] for fact in facts])))
        groups = itertools.groupby(facts, itemgetter(0))
        groups = [[x for x in y[1]] for y in groups]
        groups = [(group[0][2],
                   "\t".join([self.escapeText(x[1]) for x in group]) +
                   self.tags(group[0][0]))
                  for group in groups]
        self.deck.updateProgress()
        groups.sort(key=itemgetter(0))
        out = [ret[1] for ret in groups]
        self.count = len(out)
        out = "\n".join(out)
        file.write(out.encode("utf-8"))
        self.deck.finishProgress()

    def tags(self, id):
        if self.includeTags:
            return "\t" + self.factTags[id]
        return ""

# Export modules
##########################################################################

def exporters():
    return (
        (_("Anki Deck (*.anki)"), AnkiExporter),
        (_("Cards in tab-separated text file (*.txt)"), TextCardExporter),
        (_("Facts in tab-separated text file (*.txt)"), TextFactExporter))
 151  
anki/facts.py
@@ -0,0 +1,151 @@
# -*- coding: utf-8 -*-
# Copyright: Damien Elmes <anki@ichi2.net>
# License: GNU GPL, version 3 or later; http://www.gnu.org/copyleft/gpl.html

"""\
Facts
========
"""
__docformat__ = 'restructuredtext'

import time
from anki.db import *
from anki.errors import *
from anki.models import Model, FieldModel, fieldModelsTable, formatQA
from anki.utils import genID
from anki.hooks import runHook

# Fields in a fact
##########################################################################

fieldsTable = Table(
    'fields', metadata,
    Column('id', Integer, primary_key=True),
    Column('factId', Integer, ForeignKey("facts.id"), nullable=False),
    Column('fieldModelId', Integer, ForeignKey("fieldModels.id"),
           nullable=False),
    Column('ordinal', Integer, nullable=False),
    Column('value', UnicodeText, nullable=False))

class Field(object):
    "A field in a fact."

    def __init__(self, fieldModel=None):
        if fieldModel:
            self.fieldModel = fieldModel
            self.ordinal = fieldModel.ordinal
        self.value = u""
        self.id = genID()

    def getName(self):
        return self.fieldModel.name
    name = property(getName)

mapper(Field, fieldsTable, properties={
    'fieldModel': relation(FieldModel)
    })

# Facts: a set of fields and a model
##########################################################################
# mapped in cards.py

factsTable = Table(
    'facts', metadata,
    Column('id', Integer, primary_key=True),
    Column('modelId', Integer, ForeignKey("models.id"), nullable=False),
    Column('created', Float, nullable=False, default=time.time),
    Column('modified', Float, nullable=False, default=time.time),
    Column('tags', UnicodeText, nullable=False, default=u""),
    # the following two fields are obsolete and now stored in cards table
    Column('spaceUntil', Float, nullable=False, default=0),
    Column('lastCardId', Integer, ForeignKey(
    "cards.id", use_alter=True, name="lastCardIdfk")))

class Fact(object):
    "A single fact. Fields exposed as dict interface."

    def __init__(self, model=None):
        self.model = model
        self.id = genID()
        if model:
            for fm in model.fieldModels:
                self.fields.append(Field(fm))
        self.new = True

    def isNew(self):
        return getattr(self, 'new', False)

    def keys(self):
        return [field.name for field in self.fields]

    def values(self):
        return [field.value for field in self.fields]

    def __getitem__(self, key):
        try:
            return [f.value for f in self.fields if f.name == key][0]
        except IndexError:
            raise KeyError(key)

    def __setitem__(self, key, value):
        try:
            [f for f in self.fields if f.name == key][0].value = value
        except IndexError:
            raise KeyError

    def get(self, key, default):
        try:
            return self[key]
        except (IndexError, KeyError):
            return default

    def assertValid(self):
        "Raise an error if required fields are empty."
        for field in self.fields:
            if not self.fieldValid(field):
                raise FactInvalidError(type="fieldEmpty",
                                       field=field.name)

    def fieldValid(self, field):
        return not (field.fieldModel.required and not field.value.strip())

    def assertUnique(self, s):
        "Raise an error if duplicate fields are found."
        for field in self.fields:
            if not self.fieldUnique(field, s):
                raise FactInvalidError(type="fieldNotUnique",
                                       field=field.name)

    def fieldUnique(self, field, s):
        if not field.fieldModel.unique:
            return True
        req = ("select value from fields "
               "where fieldModelId = :fmid and value = :val")
        if field.id:
            req += " and id != %s" % field.id
        return not s.scalar(req, val=field.value, fmid=field.fieldModel.id)

    def focusLost(self, field):
        runHook('fact.focusLost', self, field)

    def setModified(self, textChanged=False):
        "Mark modified and update cards."
        self.modified = time.time()
        if textChanged:
            d = {}
            for f in self.model.fieldModels:
                d[f.name] = (f.id, self[f.name])
            for card in self.cards:
                qa = formatQA(None, self.modelId, d, card.splitTags(), card.cardModel)
                card.question = qa['question']
                card.answer = qa['answer']
                card.setModified()

# Fact deletions
##########################################################################

factsDeletedTable = Table(
    'factsDeleted', metadata,
    Column('factId', Integer, ForeignKey("facts.id"),
           nullable=False),
    Column('deletedTime', Float, nullable=False))
 55  
anki/fonts.py
@@ -0,0 +1,55 @@
# -*- coding: utf-8 -*-
# Copyright: Damien Elmes <anki@ichi2.net>
# License: GNU GPL, version 3 or later; http://www.gnu.org/copyleft/gpl.html

"""\
Fonts - mapping to/from platform-specific fonts
==============================================================
"""

import sys

# set this to 'all', to get all fonts in a list
policy="platform"

mapping = [
    [u"Mincho", u"MS Mincho", "win32"],
    [u"Mincho", u"ＭＳ 明朝", "win32"],
    [u"Mincho", u"ヒラギノ明朝 Pro W3", "mac"],
    [u"Mincho", u"Kochi Mincho", "linux"],
    [u"Mincho", u"東風明朝", "linux"],
    ]

def platform():
    if sys.platform == "win32":
        return "win32"
    elif sys.platform.startswith("darwin"):
        return "mac"
    else:
        return "linux"

def toCanonicalFont(family):
    "Turn a platform-specific family into a canonical one."
    for (s, p, type) in mapping:
        if family == p:
            return s
    return family

def toPlatformFont(family):
    "Turn a canonical font into a platform-specific one."
    if policy == "all":
        return allFonts(family)
    ltype = platform()
    for (s, p, type) in mapping:
        if family == s and type == ltype:
            return p
    return family

def substitutions():
    "Return a tuple mapping canonical fonts to platform ones."
    type = platform()
    return [(s, p) for (s, p, t) in mapping if t == type]

def allFonts(family):
    ret = ", ".join([p for (s, p, t) in mapping if s == family])
    return ret or family
 346  
anki/graphs.py
@@ -0,0 +1,346 @@
# -*- coding: utf-8 -*-
# Copyright: Damien Elmes <anki@ichi2.net>
# License: GNU GPL, version 3 or later; http://www.gnu.org/copyleft/gpl.html

"""\
Graphs of deck statistics
==============================
"""
__docformat__ = 'restructuredtext'

import os, sys, time
import anki.stats
from anki.lang import _

import datetime

#colours for graphs
dueYoungC = "#ffb380"
dueMatureC = "#ff5555"
dueCumulC = "#ff8080"

reviewNewC = "#80b3ff"
reviewYoungC = "#5555ff"
reviewMatureC = "#0f5aff"
reviewTimeC = "#0fcaff"

easesNewC = "#80b3ff"
easesYoungC = "#5555ff"
easesMatureC = "#0f5aff"

addedC = "#b3ff80"
firstC = "#b380ff"
intervC = "#80e5ff"

# support frozen distribs
if sys.platform.startswith("darwin"):
    try:
        del os.environ['MATPLOTLIBDATA']
    except:
        pass
elif getattr(sys, "frozen", None):
    os.environ['MATPLOTLIBDATA'] = os.path.dirname(sys.argv[0])

try:
    from matplotlib.figure import Figure
except UnicodeEncodeError:
    # haven't tracked down the cause of this yet, but reloading fixes it
    try:
        from matplotlib.figure import Figure
    except ImportError:
        pass
except ImportError:
    pass

def graphsAvailable():
    return 'matplotlib' in sys.modules

class DeckGraphs(object):

    def __init__(self, deck, width=8, height=3, dpi=75):
        self.deck = deck
        self.stats = None
        self.width = width
        self.height = height
        self.dpi = dpi

    def calcStats (self):
        if not self.stats:
            days = {}
            daysYoung = {}
            daysMature =  {}
            months = {}
            next = {}
            lowestInDay = 0
            midnightOffset = time.timezone - self.deck.utcOffset
            now = list(time.localtime(time.time()))
            now[3] = 23; now[4] = 59
            self.endOfDay = time.mktime(now) - midnightOffset
            t = time.time()
            young = self.deck.s.all("""
select interval, combinedDue
from cards where priority in (1,2,3,4) and
type in (0, 1) and interval <= 21""")
            mature = self.deck.s.all("""
select interval, combinedDue
from cards where type = 1 and priority in (1,2,3,4) and interval > 21""")

            for (src, dest) in [(young, daysYoung),
                                (mature, daysMature)]:
                for (interval, due) in src:
                    day=int(round(interval))
                    days[day] = days.get(day, 0) + 1
                    indays = int(((due - self.endOfDay) / 86400.0) + 1)
                    next[indays] = next.get(indays, 0) + 1 # type-agnostic stats
                    dest[indays] = dest.get(indays, 0) + 1 # type-specific stats
                    if indays < lowestInDay:
                        lowestInDay = indays
            self.stats = {}
            self.stats['next'] = next
            self.stats['days'] = days
            self.stats['daysByType'] = {'young': daysYoung,
                                        'mature': daysMature}
            self.stats['months'] = months
            self.stats['lowestInDay'] = lowestInDay

            dayReps = self.deck.s.all("""
select day,
       matureEase0+matureEase1+matureEase2+matureEase3+matureEase4 as matureReps,
       reps-(newEase0+newEase1+newEase2+newEase3+newEase4) as combinedYoungReps,
       reps as combinedNewReps
from stats
where type = 1""")

            dayTimes = self.deck.s.all("""
select day, reviewTime as reviewTime
from stats
where type = 1""")

            todaydt = datetime.datetime(*list(time.localtime(time.time())[:3]))
            for dest, source in [("dayRepsNew", "combinedNewReps"),
                                 ("dayRepsYoung", "combinedYoungReps"),
                                 ("dayRepsMature", "matureReps")]:
                self.stats[dest] = dict(
                    map(lambda dr: (-(todaydt -datetime.datetime(
                    *(int(x)for x in dr["day"].split("-")))).days, dr[source]), dayReps))

            self.stats['dayTimes'] = dict(
                map(lambda dr: (-(todaydt -datetime.datetime(
                *(int(x)for x in dr["day"].split("-")))).days, dr["reviewTime"]/60.0), dayTimes))

    def nextDue(self, days=30):
        self.calcStats()
        fig = Figure(figsize=(self.width, self.height), dpi=self.dpi)
        graph = fig.add_subplot(111)
        dayslists = [self.stats['next'], self.stats['daysByType']['mature']]

        for dayslist in dayslists:
            self.addMissing(dayslist, self.stats['lowestInDay'], days)

        argl = []

        for dayslist in dayslists:
            dl = [x for x in dayslist.items() if x[0] <= days]
            argl.extend(list(self.unzip(dl)))

        self.filledGraph(graph, days, [dueYoungC, dueMatureC], *argl)

        cheat = fig.add_subplot(111)
        b1 = cheat.bar(0, 0, color = dueYoungC)
        b2 = cheat.bar(1, 0, color = dueMatureC)

        cheat.legend([b1, b2], [
            "Young",
            "Mature"], loc='upper right')

        graph.set_xlim(xmin=self.stats['lowestInDay'], xmax=days)
        return fig

    def workDone(self, days=30):
        self.calcStats()

        for type in ["dayRepsNew", "dayRepsYoung", "dayRepsMature"]:
            self.addMissing(self.stats[type], -days, 0)

        fig = Figure(figsize=(self.width, self.height), dpi=self.dpi)
        graph = fig.add_subplot(111)

        args = sum((self.unzip(self.stats[type].items(), limit=days, reverseLimit=True) for type in ["dayRepsMature", "dayRepsYoung", "dayRepsNew"][::-1]), [])

        self.filledGraph(graph, days, [reviewNewC, reviewYoungC, reviewMatureC], *args)

        cheat = fig.add_subplot(111)
        b1 = cheat.bar(-3, 0, color = reviewNewC)
        b2 = cheat.bar(-4, 0, color = reviewYoungC)
        b3 = cheat.bar(-5, 0, color = reviewMatureC)

        cheat.legend([b1, b2, b3], [
            "New",
            "Young",
            "Mature"], loc='upper left')

        graph.set_xlim(xmin=-days, xmax=0)
        graph.set_ylim(ymax=max(max(a for a in args[1::2])) + 10)

        return fig

    def timeSpent(self, days=30):
        self.calcStats()
        fig = Figure(figsize=(self.width, self.height), dpi=self.dpi)
        times = self.stats['dayTimes']
        self.addMissing(times, -days, 0)
        times = self.unzip([(day,y) for (day,y) in times.items()
                            if day + days >= 0])
        graph = fig.add_subplot(111)
        self.filledGraph(graph, days, reviewTimeC, *times)
        graph.set_xlim(xmin=-days, xmax=0)
        graph.set_ylim(ymax=max(a for a in times[1]) + 0.1)
        return fig

    def cumulativeDue(self, days=30):
        self.calcStats()
        fig = Figure(figsize=(self.width, self.height), dpi=self.dpi)
        graph = fig.add_subplot(111)
        dl = [x for x in self.stats['next'].items() if x[0] <= days]
        (x, y) = self.unzip(dl)
        count=0
        y = list(y)
        for i in range(len(x)):
            count = count + y[i]
            if i == 0:
                continue
            y[i] = count
            if x[i] > days:
                break
        x = list(x); x.append(99999)
        y.append(count)
        self.filledGraph(graph, days, dueCumulC, x, y)
        graph.set_xlim(xmin=self.stats['lowestInDay'], xmax=days)
        graph.set_ylim(ymax=graph.get_ylim()[1]+10)
        return fig

    def intervalPeriod(self, days=30):
        self.calcStats()
        fig = Figure(figsize=(self.width, self.height), dpi=self.dpi)
        ints = self.stats['days']
        self.addMissing(ints, 0, days)
        intervals = self.unzip(ints.items(), limit=days)
        graph = fig.add_subplot(111)
        self.filledGraph(graph, days, intervC, *intervals)
        graph.set_xlim(xmin=0, xmax=days)
        return fig

    def addedRecently(self, numdays=30, attr='created'):
        self.calcStats()
        days = {}
        fig = Figure(figsize=(self.width, self.height), dpi=self.dpi)
        limit = self.endOfDay - (numdays + 1) * 86400
        res = self.deck.s.column0("select %s from cards where %s >= %f" %
                                  (attr, attr, limit))
        for r in res:
            d = int((r - self.endOfDay) / 86400.0)
            days[d] = days.get(d, 0) + 1
        self.addMissing(days, -numdays, 0)
        graph = fig.add_subplot(111)
        intervals = self.unzip(days.items())
        if attr == 'created':
            colour = addedC
        else:
            colour = firstC
        self.filledGraph(graph, numdays, colour, *intervals)
        graph.set_xlim(xmin=-numdays, xmax=0)
        return fig

    def addMissing(self, dic, min, max):
        for i in range(min, max+1):
            if not i in dic:
                dic[i] = 0

    def unzip(self, tuples, fillFix=True, limit=None, reverseLimit=False):
        tuples.sort(cmp=lambda x,y: cmp(x[0], y[0]))
        if limit:
            if reverseLimit:
                tuples = tuples[-limit - 1:]
            else:
                tuples = tuples[:limit + 1]

        new = zip(*tuples)
        return new

    def filledGraph(self, graph, days, colours=["b"], *args):
        if isinstance(colours, str):
            colours = [colours]
        thick = True
        for triplet in [(args[n], args[n + 1], colours[n / 2]) for n in range(0, len(args), 2)]:
            x = list(triplet[0])
            y = list(triplet[1])
            c = triplet[2]
            lowest = 99999
            highest = -lowest
            for i in range(len(x)):
                if x[i] < lowest:
                    lowest = x[i]
                if x[i] > highest:
                    highest = x[i]
            # ensure the filled area reaches the bottom
            x.insert(0, lowest - 1)
            y.insert(0, 0)
            x.append(highest + 1)
            y.append(0)
            # plot
            lw = 0
            if days < 180:
                lw += 1
            if thick:
                lw += 1
            if days > 360:
                lw = 0
            graph.fill(x, y, c, lw = lw)
            thick = False

        graph.grid(True)
        graph.set_ylim(ymin=0, ymax=max(2, graph.get_ylim()[1]))

    def easeBars(self):
        fig = Figure(figsize=(3, 3), dpi=self.dpi)
        graph = fig.add_subplot(111)
        types = ("new", "young", "mature")
        enum = 5
        offset = 0
        arrsize = 16
        arr = [0] * arrsize
        n = 0
        colours = [easesNewC, easesYoungC, easesMatureC]
        bars = []
        gs = anki.stats.globalStats(self.deck)
        for type in types:
            total = (getattr(gs, type + "Ease0") +
                     getattr(gs, type + "Ease1") +
                     getattr(gs, type + "Ease2") +
                     getattr(gs, type + "Ease3") +
                     getattr(gs, type + "Ease4"))
            setattr(gs, type + "Ease1", getattr(gs, type + "Ease0") +
                    getattr(gs, type + "Ease1"))
            setattr(gs, type + "Ease0", -1)
            for e in range(1, enum):
                try:
                    arr[e+offset] = (getattr(gs, type + "Ease%d" % e)
                                     / float(total)) * 100 + 1
                except ZeroDivisionError:
                    arr[e+offset] = 0
            bars.append(graph.bar(range(arrsize), arr, width=1.0,
                                  color=colours[n], align='center'))
            arr = [0] * arrsize
            offset += 5
            n += 1
        x = ([""] + [str(n) for n in range(1, enum)]) * 3
        graph.legend([p[0] for p in bars], ("New",
                                            "Young",
                                            "Mature"),
                     'upper left')
        graph.set_ylim(ymax=100)
        graph.set_xlim(xmax=15)
        graph.set_xticks(range(arrsize))
        graph.set_xticklabels(x)
        graph.grid(True)
        return fig
 75  
anki/history.py
@@ -0,0 +1,75 @@
# -*- coding: utf-8 -*-
# Copyright: Damien Elmes <anki@ichi2.net>
# License: GNU GPL, version 3 or later; http://www.gnu.org/copyleft/gpl.html

"""\
History - keeping a record of all reviews
==========================================
If users run 'check db', duplicate records will be inserted into the DB - I
really should have used the time stamp as the key. You can remove them by
keeping the lowest id for any given timestamp.
"""

__docformat__ = 'restructuredtext'

import time
from anki.db import *

reviewHistoryTable = Table(
    'reviewHistory', metadata,
    Column('cardId', Integer, nullable=False),
    Column('time', Float, nullable=False, default=time.time),
    Column('lastInterval', Float, nullable=False),
    Column('nextInterval', Float, nullable=False),
    Column('ease', Integer, nullable=False),
    Column('delay', Float, nullable=False),
    Column('lastFactor', Float, nullable=False),
    Column('nextFactor', Float, nullable=False),
    Column('reps', Float, nullable=False),
    Column('thinkingTime', Float, nullable=False),
    Column('yesCount', Float, nullable=False),
    Column('noCount', Float, nullable=False),
    PrimaryKeyConstraint("cardId", "time"))

class CardHistoryEntry(object):
    "Create after rescheduling card."

    def __init__(self, card=None, ease=None, delay=None):
        if not card:
            return
        self.cardId = card.id
        self.lastInterval = card.lastInterval
        self.nextInterval = card.interval
        self.lastFactor = card.lastFactor
        self.nextFactor = card.factor
        self.reps = card.reps
        self.yesCount = card.yesCount
        self.noCount = card.noCount
        self.ease = ease
        self.delay = delay
        self.thinkingTime = card.thinkingTime()

    def writeSQL(self, s):
        s.statement("""
insert into reviewHistory
(cardId, lastInterval, nextInterval, ease, delay, lastFactor,
nextFactor, reps, thinkingTime, yesCount, noCount, time)
values (
:cardId, :lastInterval, :nextInterval, :ease, :delay,
:lastFactor, :nextFactor, :reps, :thinkingTime, :yesCount, :noCount,
:time)""",
                    cardId=self.cardId,
                    lastInterval=self.lastInterval,
                    nextInterval=self.nextInterval,
                    ease=self.ease,
                    delay=self.delay,
                    lastFactor=self.lastFactor,
                    nextFactor=self.nextFactor,
                    reps=self.reps,
                    thinkingTime=self.thinkingTime,
                    yesCount=self.yesCount,
                    noCount=self.noCount,
                    time=time.time())

mapper(CardHistoryEntry, reviewHistoryTable)
 62  
anki/hooks.py
@@ -0,0 +1,62 @@
# -*- coding: utf-8 -*-
# Copyright: Damien Elmes <anki@ichi2.net>
# License: GNU GPL, version 3 or later; http://www.gnu.org/copyleft/gpl.html

"""\
Hooks - hook management and tools for extending Anki
==============================================================================
To find available hooks, grep for runHook in the source code.
Instrumenting allows you to modify functions that don't have hooks available.
If you call wrap() with pos='around', the original function will not be called
automatically but can be called with _old().
"""

# Hooks
##############################################################################

_hooks = {}

def runHook(hook, *args):
    "Run all functions on hook."
    hook = _hooks.get(hook, None)
    if hook:
        for func in hook:
            func(*args)

def runFilter(hook, arg, *args):
    hook = _hooks.get(hook, None)
    if hook:
        for func in hook:
            arg = func(arg, *args)
    return arg

def addHook(hook, func):
    "Add a function to hook. Ignore if already on hook."
    if not _hooks.get(hook, None):
        _hooks[hook] = []
    if func not in _hooks[hook]:
        _hooks[hook].append(func)

def removeHook(hook, func):
    "Remove a function if is on hook."
    hook = _hooks.get(hook, [])
    if func in hook:
        hook.remove(func)

# Instrumenting
##############################################################################

def wrap(old, new, pos="after"):
    "Override an existing function."
    def repl(*args, **kwargs):
        if pos == "after":
            old(*args, **kwargs)
            return new(*args, **kwargs)
        elif pos == "before":
            new(*args, **kwargs)
            return old(*args, **kwargs)
        else:
            return new(_old=old, *args, **kwargs)
    return repl
 283  
anki/importing/__init__.py
@@ -0,0 +1,283 @@
# -*- coding: utf-8 -*-
# Copyright: Damien Elmes <anki@ichi2.net>
# License: GNU GPL, version 3 or later; http://www.gnu.org/copyleft/gpl.html

"""\
Importing support
==============================
To import, a mapping is created of the form: [FieldModel, ...]. The mapping
may be extended by calling code if a file has more fields. To ignore a
particular FieldModel, replace it with None. A special number 0 donates a tags
field. The same field model should not occur more than once."""

__docformat__ = 'restructuredtext'

import time
from anki.cards import cardsTable
from anki.facts import factsTable, fieldsTable
from anki.lang import _
from anki.utils import genID, canonifyTags
from anki.errors import *
from anki.utils import canonifyTags
from anki.deck import NEW_CARDS_RANDOM

# Base importer
##########################################################################

class ForeignCard(object):
    "An temporary object storing fields and attributes."
    def __init__(self):
        self.fields = []
        self.tags = u""

class Importer(object):

    needMapper = True
    tagDuplicates = False
    multipleCardsAllowed = True
    needDelimiter = False

    def __init__(self, deck, file):
        self.file = file
        self._model = deck.currentModel
        self._mapping = None
        self.log = []
        self.deck = deck
        self.total = 0
        self.tagsToAdd = u""

    def doImport(self):
        "Import."
        random = self.deck.newCardOrder == NEW_CARDS_RANDOM
        num = 7
        if random:
            num += 1
        self.deck.startProgress(num)
        self.deck.updateProgress(_("Importing..."))
        c = self.foreignCards()
        if self.importCards(c):
            self.deck.updateProgress()
            self.deck.updateCardTags(self.cardIds)
            self.deck.updateProgress()
            self.deck.updatePriorities(self.cardIds)
            if random:
                self.deck.updateProgress()
                self.deck.randomizeNewCards(self.cardIds)
        self.deck.finishProgress()
        if c:
            self.deck.setModified()

    def fields(self):
        "The number of fields."
        return 0

    def foreignCards(self):
        "Return a list of foreign cards for importing."
        assert 0

    def resetMapping(self):
        "Reset mapping to default."
        numFields = self.fields()
        m = [f for f in self.model.fieldModels]
        m.append(0)
        rem = max(0, self.fields() - len(m))
        m += [None] * rem
        del m[numFields:]
        self._mapping = m

    def getMapping(self):
        if not self._mapping:
            self.resetMapping()
        return self._mapping

    def setMapping(self, mapping):
        self._mapping = mapping

    mapping = property(getMapping, setMapping)

    def getModel(self):
        return self._model

    def setModel(self, model):
        self._model = model
        # update the mapping for the new model
        self._mapping = None
        self.getMapping()

    model = property(getModel, setModel)

    def importCards(self, cards):
        "Convert each card into a fact, apply attributes and add to deck."
        # ensure all unique and required fields are mapped
        for fm in self.model.fieldModels:
            if fm.required or fm.unique:
                if fm not in self.mapping:
                    raise ImportFormatError(
                        type="missingRequiredUnique",
                        info=_("Missing required/unique field '%(field)s'") %
                        {'field': fm.name})
        active = 0
        for cm in self.model.cardModels:
            if cm.active: active += 1
        if active > 1 and not self.multipleCardsAllowed:
            raise ImportFormatError(type="tooManyCards",
                info=_("""\
The current importer only supports a single active card template. Please disable\
 all but one card template."""))
        # strip invalid cards
        cards = self.stripInvalid(cards)
        cards = self.stripOrTagDupes(cards)
        self.cardIds = []
        if cards:
            self.addCards(cards)
        return cards

    def addCards(self, cards):
        "Add facts in bulk from foreign cards."
        # map tags field to attr
        try:
            idx = self.mapping.index(0)
            for c in cards:
                c.tags += " " + c.fields[idx]
        except ValueError:
            pass
        # add facts
        self.deck.updateProgress()
        factIds = [genID() for n in range(len(cards))]
        def fudgeCreated(d, tmp=[]):
            if not tmp:
                tmp.append(time.time())
            else:
                tmp[0] += 0.00001
            d['created'] = tmp[0]
            return d
        self.deck.s.execute(factsTable.insert(),
            [fudgeCreated({'modelId': self.model.id,
              'tags': canonifyTags(self.tagsToAdd + " " + cards[n].tags),
              'id': factIds[n]}) for n in range(len(cards))])
        self.deck.factCount += len(factIds)
        self.deck.s.execute("""
delete from factsDeleted
where factId in (%s)""" % ",".join([str(s) for s in factIds]))
        # add all the fields
        self.deck.updateProgress()
        for fm in self.model.fieldModels:
            try:
                index = self.mapping.index(fm)
            except ValueError:
                index = None
            data = [{'factId': factIds[m],
                     'fieldModelId': fm.id,
                     'ordinal': fm.ordinal,
                     'id': genID(),
                     'value': (index is not None and
                               cards[m].fields[index] or u"")}
                    for m in range(len(cards))]
            self.deck.s.execute(fieldsTable.insert(),
                                data)
        # and cards
        self.deck.updateProgress()
        now = time.time()
        active = 0
        for cm in self.model.cardModels:
            self._now = now
            if cm.active:
                active += 1
                data = [self.addMeta({
                    'id': genID(),
                    'factId': factIds[m],
                    'cardModelId': cm.id,
                    'ordinal': cm.ordinal,
                    'question': u"",
                    'answer': u"",
                    'type': 2},cards[m]) for m in range(len(cards))]
                self.deck.s.execute(cardsTable.insert(),
                                    data)
        self.deck.updateProgress()
        self.deck.updateCardsFromFactIds(factIds)
        self.deck.cardCount += len(cards) * active
        self.total = len(factIds)

    def addMeta(self, data, card):
        "Add any scheduling metadata to cards"
        if 'fields' in card.__dict__:
            del card.fields
        t = self._now + data['ordinal']
        data['created'] = t
        data['modified'] = t
        data['due'] = t
        self._now += .00001
        data.update(card.__dict__)
        data['tags'] = u""
        self.cardIds.append(data['id'])
        data['combinedDue'] = data['due']
        data['isDue'] = data['combinedDue'] < time.time()
        return data

    def stripInvalid(self, cards):
        return [c for c in cards if self.cardIsValid(c)]

    def cardIsValid(self, card):
        fieldNum = len(card.fields)
        for n in range(len(self.mapping)):
            if self.mapping[n] and self.mapping[n].required:
                if fieldNum <= n or not card.fields[n].strip():
                    self.log.append("Fact is missing field '%s': %s" %
                                    (self.mapping[n].name,
                                     ", ".join(card.fields)))
                    return False
        return True

    def stripOrTagDupes(self, cards):
        # build a cache of items
        self.uniqueCache = {}
        for field in self.mapping:
            if field and field.unique:
                self.uniqueCache[field.id] = self.getUniqueCache(field)
        return [c for c in cards if self.cardIsUnique(c)]

    def getUniqueCache(self, field):
        "Return a dict with all fields, to test for uniqueness."
        return dict(self.deck.s.all(
            "select value, 1 from fields where fieldModelId = :fmid",
            fmid=field.id))

    def cardIsUnique(self, card):
        fieldsAsTags = []
        for n in range(len(self.mapping)):
            if self.mapping[n] and self.mapping[n].unique:
                if card.fields[n] in self.uniqueCache[self.mapping[n].id]:
                    if not self.tagDuplicates:
                        self.log.append("Fact has duplicate '%s': %s" %
                                        (self.mapping[n].name,
                                         ", ".join(card.fields)))
                        return False
                    fieldsAsTags.append(self.mapping[n].name.replace(" ", "-"))
                else:
                    self.uniqueCache[self.mapping[n].id][card.fields[n]] = 1
        if fieldsAsTags:
            card.tags += u" Duplicate:" + (
                "+".join(fieldsAsTags))
            card.tags = canonifyTags(card.tags)
        return True

# Export modules
##########################################################################

from anki.importing.csvfile import TextImporter
from anki.importing.anki10 import Anki10Importer
from anki.importing.mnemosyne10 import Mnemosyne10Importer
from anki.importing.wcu import WCUImporter
from anki.importing.supermemo_xml import SupermemoXmlImporter
from anki.importing.dingsbums import DingsBumsImporter

Importers = [
    (_("Text separated by tabs or semicolons (*)"), TextImporter),
    (_("Anki Deck (*.anki)"), Anki10Importer),
    (_("Mnemosyne Deck (*.mem)"), Mnemosyne10Importer),
    (_("CueCard Deck (*.wcu)"), WCUImporter),
    (_("Supermemo XML export (*.xml)"), SupermemoXmlImporter),
    # Hack: should be "DingsBums?!" but QT appears to take offence at the punctuation
    (_("DingsBums Deck (*.xml)"), DingsBumsImporter),
    ]
 89  
anki/importing/anki10.py
@@ -0,0 +1,89 @@
# -*- coding: utf-8 -*-
# Copyright: Damien Elmes <anki@ichi2.net>
# License: GNU GPL, version 3 or later; http://www.gnu.org/copyleft/gpl.html

"""\
Importing Anki 0.9+ decks
==========================
"""
__docformat__ = 'restructuredtext'

from anki import DeckStorage
from anki.importing import Importer
from anki.sync import SyncClient, SyncServer, copyLocalMedia
from anki.lang import _
from anki.utils import ids2str
from anki.deck import NEW_CARDS_RANDOM
import time

class Anki10Importer(Importer):

    needMapper = False

    def doImport(self):
        "Import."
        random = self.deck.newCardOrder == NEW_CARDS_RANDOM
        num = 4
        if random:
            num += 1
        self.deck.startProgress(num)
        self.deck.updateProgress(_("Importing..."))
        src = DeckStorage.Deck(self.file, backup=False)
        client = SyncClient(self.deck)
        server = SyncServer(src)
        client.setServer(server)
        # if there is a conflict, sync local -> src
        client.localTime = self.deck.modified
        client.remoteTime = 0
        src.s.execute("update facts set modified = 1")
        src.s.execute("update models set modified = 1")
        src.s.execute("update cards set modified = 1")
        src.s.execute("update media set created = 1")
        self.deck.s.flush()
        # set up a custom change list and sync
        lsum = client.summary(0)
        self._clearDeleted(lsum)
        rsum = server.summary(0)
        self._clearDeleted(rsum)
        payload = client.genPayload((lsum, rsum))
        # no need to add anything to src
        payload['added-models'] = []
        payload['added-cards'] = []
        payload['added-facts'] = {'facts': [], 'fields': []}
        assert payload['deleted-facts'] == []
        assert payload['deleted-cards'] == []
        assert payload['deleted-models'] == []
        self.deck.updateProgress()
        res = server.applyPayload(payload)
        self.deck.updateProgress()
        client.applyPayloadReply(res)
        copyLocalMedia(server.deck, client.deck)
        # add tags
        self.deck.updateProgress()
        fids = [f[0] for f in res['added-facts']['facts']]
        self.deck.addTags(fids, self.tagsToAdd)
        # mark import material as newly added
        self.deck.s.statement(
            "update cards set modified = :t where id in %s" %
            ids2str([x[0] for x in res['added-cards']]), t=time.time())
        self.deck.s.statement(
            "update facts set modified = :t where id in %s" %
            ids2str([x[0] for x in res['added-facts']['facts']]), t=time.time())
        self.deck.s.statement(
            "update models set modified = :t where id in %s" %
            ids2str([x['id'] for x in res['added-models']]), t=time.time())
        # update total and refresh
        self.total = len(res['added-facts']['facts'])
        src.s.rollback()
        src.engine.dispose()
        # randomize?
        if random:
            self.deck.updateProgress()
            self.deck.randomizeNewCards([x[0] for x in res['added-cards']])
        self.deck.flushMod()
        self.deck.finishProgress()

    def _clearDeleted(self, sum):
        sum['delcards'] = []
        sum['delfacts'] = []
        sum['delmodels'] = []
 132  
anki/importing/csvfile.py
@@ -0,0 +1,132 @@
# -*- coding: utf-8 -*-
# Copyright: Damien Elmes <anki@ichi2.net>
# License: GNU GPL, version 3 or later; http://www.gnu.org/copyleft/gpl.html

"""\
Importing CSV/TSV files
========================
"""
__docformat__ = 'restructuredtext'

import codecs, csv, re
from anki.importing import Importer, ForeignCard
from anki.lang import _
from anki.errors import *
from anki.utils import tidyHTML

class TextImporter(Importer):

    needDelimiter = True
    patterns = ("\t", ";")

    def __init__(self, *args):
        Importer.__init__(self, *args)
        self.lines = None
        self.fileobj = None
        self.delimiter = None

    def foreignCards(self):
        self.sniff()
        # process all lines
        log = []
        cards = []
        lineNum = 0
        ignored = 0
        if self.delimiter:
            reader = csv.reader(self.data, delimiter=self.delimiter)
        else:
            reader = csv.reader(self.data, self.dialect)
        for row in reader:
            try:
                row = [unicode(x, "utf-8") for x in row]
            except UnicodeDecodeError, e:
                raise ImportFormatError(
                    type="encodingError",
                    info=_("The file was not in UTF8 format."))
            if len(row) != self.numFields:
                log.append(_(
                    "'%(row)s' had %(num1)d fields, "
                    "expected %(num2)d") % {
                    "row": u" ".join(row),
                    "num1": len(row),
                    "num2": self.numFields,
                    })
                ignored += 1
                continue
            card = self.cardFromFields(row)
            cards.append(card)
        self.log = log
        self.ignored = ignored
        self.fileobj.close()
        return cards

    def sniff(self):
        "Parse the top line and determine the pattern and number of fields."
        # load & look for the right pattern
        self.cacheFile()

    def cacheFile(self):
        "Read file into self.lines if not already there."
        if not self.fileobj:
            self.openFile()

    def openFile(self):
        self.dialect = None
        self.fileobj = open(self.file, "rbU")
        self.data = self.fileobj.read()
        self.data = re.sub("^ *#.*", "", self.data)
        self.data = [x for x in self.data.split("\n") if x]
        if self.data:
            self.updateDelimiter()
        if not self.dialect and not self.delimiter:
            raise ImportFormatError(
                type="encodingError",
                info=_("Couldn't determine format of file."))

    def updateDelimiter(self):
        def err():
            raise ImportFormatError(
                type="encodingError",
                info=_("File is not encoded in UTF-8."))
        self.dialect = None
        sniffer = csv.Sniffer()
        delims = [',', '\t', ';', ':']
        if not self.delimiter:
            try:
                self.dialect = sniffer.sniff("\n".join(self.data[:10]),
                                             delims)
            except:
                try:
                    self.dialect = sniffer.sniff(self.data[0], delims)
                except:
                    pass
        if self.dialect:
            try:
                reader = csv.reader(self.data, self.dialect)
            except:
                err()
        else:
            if not self.delimiter:
                if "\t" in self.data[0]:
                    self.delimiter = "\t"
                elif ";" in self.data[0]:
                    self.delimiter = ";"
                elif "," in self.data[0]:
                    self.delimiter = ","
                else:
                    self.delimiter = " "
            reader = csv.reader(self.data, delimiter=self.delimiter)
        try:
            self.numFields = len(reader.next())
        except:
            err()

    def fields(self):
        "Number of fields."
        self.sniff()
        return self.numFields

    def cardFromFields(self, fields):
        card = ForeignCard()
        card.fields.extend([x.strip() for x in fields])
        return card
 224  
anki/importing/dingsbums.py
@@ -0,0 +1,224 @@
# -*- coding: utf-8 -*-
# Copyright: rick@vanosten.net
# License: GNU GPL, version 3 or later; http://www.gnu.org/copyleft/gpl.html

"""\
Importing DingsBums?! decks (see dingsbums.vanosten.net)
========================================================
GENERAL:
* DingsBums?! files are xml with relational content.
* DingsBums?!'s data format is more relational than Anki's. Therefore some of the relations are denormalized.
* A stack in DingsBums?! is a deck in Anki
* An entry type in DingsBums?! is a model in Anki
* An entry type attribute in DingsBums?! is a field in Anki
* An entry type attribute item in DingsBums?! does not exist in Anki. It is just the contents of a field denormalized.
* There is not concept of units and categories in Anki.
* An entry in DingsBums?! is basically a fact in Anki
* There are no cards in DingsBums?!
* There is a special plugin in Anki for Pinyin. Therefore syllable settings from DingsBums?! are ignored.
* The locale settings in DingsBums?! have never been active and are therefore ignored.
* All statistics will get lost - i.e. no historic informaiton about progress will be migrated to Anki.
* The DingsBums?! stack needs to end with *.xml in order to be recognizable in Anki import.
* The learning levels from DingsBums?! are not taken into account because they do not really match spaced repetition.
DESIGN OF MAPPING FROM DingsBums?! TO Anki
*
* The contents of units and categories are transferred as tags to Anki: unit/category label + "_" + unit/category name.
* If unit/category name has space, then it is replaced by "_"
* The fields "base", "target", explanation", example", "pronounciation" and "relation" are created as fields in Anki
* The fields are only created and used in Anki, if they were visible in DingsBums?!, i.e. < 3:
VISIBILITY_ALWAYS = 0;
VISIBILITY_QUERY = 1;
VISIBILITY_SOLUTION = 2;
VISIBILITY_NEVER = 3;
* The name of the fields in Anki is taken from the labels defined in the stack properties
* The description field of Anki is not used/displayed. Therefore there is not much sense to transfer the contents of title, author, notes, copyright and license.
* The visibility options in DingsBums?! are used as hints to make cards in Anki:
    + Two card templates are made for each model and then applied to each fact when importing.
    + "Forward": Base -> "Question", target -> "Answer"; if "always", then part of question; if "solution" or "part of query" then part of answer
    + "Reverse": Target -> "Answer", base -> "Question"
    + Unit and category are not shown, as they are tags and there is no possibility to distinguish between visibility settings in this case.
CHANGES MADE TO LIBANKI:
* Added libanki/anki/import/dingsbums.py
* Added DingsBumsImporter to importers at end of file libanki/anki/import/__init__.py
* Added libanki/tests/importing/dingsbums.xml
* Added method test_dingsbums() to libanki/anki/tests/test_importing.py
"""

from anki.importing import Importer
from anki import DeckStorage
from anki.facts import Fact
from anki.models import FieldModel
from anki.models import CardModel
from anki.models import Model
from anki.lang import _

from xml.sax import make_parser
from xml.sax.handler import ContentHandler
import sys

class DingsBumsHandler(ContentHandler):

    def __init__(self, deck):
        self.eid = "0"
        self.attributeItems = {}
        self.unitCategories = {}
        self.attributes = {}
        self.currentContent = ""
        self.labels = {}
        self.labels["pro"] = u"Pronunciation" # the user cannot change this label and therefore not in xml-file
        self.labels["rel"] = u"Relation"
        self.visibility = {}
        self.models = {}
        self.typeAttributes = {} # mapping of entry type and attribute name (e.g. "ET8_A1", "ET8_A2", ...)
        self.deck = deck
        self.f = None # the current fact
        self.countFacts = 0

    def startElement(self, name, attrs):
        """Implements SAX interface"""
        if name in ["etai", "unit", "category"]:
            self.eid = attrs["eid"]
        elif "eta" == name:
            self.attributes[attrs["eid"]] = attrs["n"]
        elif "entrytype" == name:
            self.createModel(attrs)
        elif "e" == name:
            self.createFact(attrs)

    def endElement(self, name):
        """Implements SAX interface"""
        if "vocabulary" == name:
            self.deck.updateProgress()
        elif name.endswith("label"):
            self.labels[name.replace("label", "")] = self.currentContent
        elif name.startswith("vis"):
            self.visibility[name.replace("vis", "")] = self.currentContent
        elif "etai" == name:
            self.attributeItems[self.eid] = self.currentContent
        elif "etattributes" == name:
            self.deck.updateProgress()
        elif "entrytypes" == name:
            self.deck.updateProgress()
        elif "name" == name:
            self.unitCategories[self.eid] = self.prepareTag(self.currentContent)
        elif "units" == name:
            self.deck.updateProgress()
        elif "categories" == name:
            self.deck.updateProgress()
        elif "entries" == name:
            self.deck.updateProgress()
        elif "e" == name:
            self.deck.addFact(self.f)
            self.countFacts += 1
        # there is a not logical mapping between the tags for fields and names in VocabInfo
        # See net.vanosten.dings.consts.Constants.XML_*
        elif "o" == name:
            self.f.__setitem__(self.labels["b"], self.currentContent)
        elif "d" == name:
            self.f.__setitem__(self.labels["t"], self.currentContent)
        elif "ep" == name:
            self.f.__setitem__(self.labels["exp"], self.currentContent)
        elif "ea" == name:
            self.f.__setitem__(self.labels["ex"], self.currentContent)
        elif "p" == name:
            self.f.__setitem__(self.labels["pro"], self.currentContent)
        elif "r" == name:
            self.f.__setitem__(self.labels["rel"], self.currentContent)

    def characters(self, content):
        """Implements SAX interface"""
        self.currentContent = content.strip()

    def createModel(self, attrs):
        """Makes a new Anki (fact) model from an entry type.
        The card models are made each time from scratch in order that evt. model specific fields (attributes) can make part."""
        m = Model(attrs["n"])
        # field model for standard fields
        m.addFieldModel(FieldModel(self.labels["b"], True, False)) #there is no uniqueness check in DingsBums?!
        m.addFieldModel(FieldModel(self.labels["t"], True, False))
        for aField in ["exp", "ex", "pro", "rel"]:
            if self.visibility[aField] in "012":
                m.addFieldModel(FieldModel(self.labels[aField], False, False))
        # field models for attributes
        for attr in ["a1", "a2" "a3", "a4"]:
            if attr in attrs.keys():
                m.addFieldModel(FieldModel(self.attributes[attrs[attr]], False, False))
                self.typeAttributes[attrs["eid"] + "_" + attr] = self.attributes[attrs[attr]]

        # card model for front
        frontStrings = ["%(" + self.labels["b"] + ")s"]
        backStrings = ["%(" + self.labels["t"] + ")s"]
        for aField in ["exp", "ex", "pro", "rel"]:
            if self.visibility[aField] in "01":
                frontStrings.append("%(" + self.labels[aField] + ")s")
            if self.visibility[aField] in "02":
                backStrings.append("%(" + self.labels[aField] + ")s")
        m.addCardModel(CardModel(u'Forward', "<br>".join(frontStrings), "<br>".join(backStrings)))
        # card model for back
        m.addCardModel(CardModel(u'Reverse', unicode("%(" + self.labels["t"] + ")s"), unicode("%(" + self.labels["b"] + ")s")))
        # tags is just the name without spaces
        m.tags = self.prepareTag(m.name)

        # link
        self.models[attrs["eid"]] = m
        self.deck.addModel(m)

    def createFact(self, attrs):
        """Makes a new Anki fact from an entry."""
        model = self.models[attrs["et"]]
        self.f = Fact(model)
        # process attributes
        for attr in ["a1", "a2" "a3", "a4"]:
            if attr in attrs.keys():
                self.f.__setitem__(self.typeAttributes[attrs["et"] + "_" + attr], self.attributeItems[attrs[attr]])
        # process tags. Unit, Category plus entry type name
        tagString = unicode(self.unitCategories[attrs["u"]] + " " + self.unitCategories[attrs["c"]] + " " + model.tags)
        self.f.tags = tagString

    def prepareTag(self, stringWithSpace):
        parts = stringWithSpace.split()
        return "_".join(parts)

class DingsBumsImporter(Importer):
    needMapper = False # needs to overwrite default in Importer - otherwise Mapping dialog is shown in GUI

    def __init__(self, deck, file):
        Importer.__init__(self, deck, file)
        self.deck = deck
        self.file = file
        self.total = 0

    def doImport(self):
        """Totally overrides the method in Importer"""
        num = 7 # the number of updates to progress bar (see references in method endElement in DingsBumsHandler
        self.deck.startProgress(num)
        self.deck.updateProgress(_("Importing..."))

        # parse the DingsBums?! xml file
        handler = DingsBumsHandler(self.deck)
        saxparser = make_parser(  )
        saxparser.setContentHandler(handler)
        saxparser.parse(self.file)
        self.total = handler.countFacts
        self.deck.finishProgress()
        self.deck.setModified()

if __name__ == '__main__':
    print "Starting ..."

    # for testing you can start it standalone. Use an argument to specify the file to import
    filename = str(sys.argv[1])

    mydeck = DeckStorage.Deck()
    i = DingsBumsImporter(mydeck, filename)
    i.doImport()
    assert 7 == i.total
    mydeck.s.close()

    print "... Finished"
    sys.exit(1)
 78  
anki/importing/mnemosyne10.py
@@ -0,0 +1,78 @@
# -*- coding: utf-8 -*-
# Copyright: Damien Elmes <anki@ichi2.net>
# License: GNU GPL, version 3 or later; http://www.gnu.org/copyleft/gpl.html

"""\
Importing Mnemosyne 1.0 decks
==============================
"""
__docformat__ = 'restructuredtext'

import sys, pickle, time, re
from anki.importing import Importer, ForeignCard
from anki.errors import *

class Mnemosyne10Importer(Importer):

    multipleCardsAllowed = False

    def foreignCards(self):
        # empty objects so we can load the native mnemosyne file
        class MnemosyneModule(object):
            class StartTime:
                pass
            class Category:
                pass
            class Item:
                pass
        for module in ('mnemosyne',
                       'mnemosyne.core',
                       'mnemosyne.core.mnemosyne_core'):
            sys.modules[module] = MnemosyneModule()
        try:
            file = open(self.file, "rb")
        except (IOError, OSError), e:
            raise ImportFormatError(type="systemError",
                                    info=str(e))
        header = file.readline().strip()
        # read the structure in
        try:
            struct = pickle.load(file)
        except (EOFError, KeyError):
            raise ImportFormatError(type="invalidFile")
        startTime = struct[0].time
        daysPassed = (time.time() - startTime) / 86400.0
        # gather cards
        cards = []
        for item in struct[2]:
            card = ForeignCard()
            card.fields.append(self.fudgeText(item.q))
            card.fields.append(self.fudgeText(item.a))
            # scheduling data
            card.interval = item.next_rep - item.last_rep
            secDelta = (item.next_rep - daysPassed) * 86400.0
            card.due = card.nextTime = time.time() + secDelta
            card.factor = item.easiness
            # for some reason mnemosyne starts cards off on 1 instead of 0
            card.successive = max(
                (item.acq_reps_since_lapse + item.ret_reps_since_lapse -1), 0)
            card.yesCount = max((item.acq_reps + item.ret_reps) - 1, 0)
            card.noCount = item.lapses
            card.reps = card.yesCount + card.noCount
            if item.cat.name != u"<default>":
                card.tags = item.cat.name.replace(" ", "_")
            if card.reps:
                card.type = 1
            cards.append(card)
        return cards

    def fields(self):
        return 2

    def fudgeText(self, text):
        text = text.replace("\n", "<br>")
        text = re.sub('<sound src="(.*?)">', '[sound:\\1]', text)
        text = re.sub('<(/?latex)>', '[\\1]', text)
        text = re.sub('<(/?\$)>', '[\\1]', text)
        text = re.sub('<(/?\$\$)>', '[\\1]', text)
        return text
 491  
anki/importing/supermemo_xml.py
Large diffs are not rendered by default.

 57  
anki/importing/wcu.py
@@ -0,0 +1,57 @@
# -*- coding: utf-8 -*-
# Author Chris Aakre <caaakre@gmail.com>
# License: GNU GPL, version 3 or later; http://www.gnu.org/copyleft/gpl.html

"""\
Importing WCU files
====================
"""
__docformat__ = 'restructuredtext'

import codecs
from anki.importing import Importer, ForeignCard
from anki.lang import _
from anki.errors import *

class WCUImporter(Importer):
    def __init__(self, *args):
        Importer.__init__(self, *args)
        self.lines = None
        self.numFields=int(2)

    def foreignCards(self):
        from xml.dom import minidom, Node
        cards = []
        f = None
        try:
            f = codecs.open(self.file, encoding="utf-8")
        except:
            raise ImportFormatError(type="encodingError", info=_("The file was not in UTF8 format."))
        f.close()
        def wcuwalk(parent, cards, level=0):
                for node in parent.childNodes:
                    if node.nodeType == Node.ELEMENT_NODE:
                        myCard=ForeignCard()
                        if node.attributes.has_key("QuestionPicture"):
                            question = [unicode('<img src="'+node.attributes.get("QuestionPicture").nodeValue+'"><br/>'+node.attributes.get("Question").nodeValue)]
                        else:
                            question = [unicode(node.attributes.get("Question").nodeValue)]
                        if node.attributes.has_key("AnswerPicture"):
                            answer = [unicode('<img src="'+node.attributes.get("AnswerPicture").nodeValue+'"><br/>'+node.attributes.get("Answer").nodeValue)]
                        else:
                            answer = [unicode(node.attributes.get("Answer").nodeValue)]
                        myCard.fields.extend(question)
                        myCard.fields.extend(answer)
                        cards.append(myCard)
                        wcuwalk(node, cards, level+1)

        def importwcu(file):
            wcuwalk(minidom.parse(file).documentElement,cards)
        importwcu(self.file)
        return cards

    def fields(self):
        return self.numFields

    def setNumFields(self):
        self.numFields = int(2)
 59  
anki/lang.py
@@ -0,0 +1,59 @@
# -*- coding: utf-8 -*-
# Copyright: Damien Elmes <anki@ichi2.net>
# License: GNU GPL, version 3 or later; http://www.gnu.org/copyleft/gpl.html

"""\
Internationalisation
=====================
"""
__docformat__ = 'restructuredtext'

import os, sys
import gettext
import threading

threadLocal = threading.local()

# global defaults
currentLang = None
currentTranslation = None

def localTranslation():
    "Return the translation local to this thread, or the default."
    if getattr(threadLocal, 'currentTranslation', None):
        return threadLocal.currentTranslation
    else:
        return currentTranslation

def _(str):
    return localTranslation().ugettext(str)

def ngettext(single, plural, n):
    return localTranslation().ungettext(single, plural, n)

def setLang(lang, local=True):
    base = os.path.dirname(os.path.abspath(__file__))
    localeDir = os.path.join(base, "locale")
    if not os.path.exists(localeDir):
        localeDir = os.path.join(
            os.path.dirname(sys.argv[0]), "locale")
    trans = gettext.translation('libanki', localeDir,
                                languages=[lang],
                                fallback=True)
    if local:
        threadLocal.currentLang = lang
        threadLocal.currentTranslation = trans
    else:
        global currentLang, currentTranslation
        currentLang = lang
        currentTranslation = trans

def getLang():
    "Return the language local to this thread, or the default."
    if getattr(threadLocal, 'currentLang', None):
        return threadLocal.currentLang
    else:
        return currentLang

if not currentTranslation:
    setLang("en_US", local=False)
 162  
anki/latex.py
@@ -0,0 +1,162 @@
# -*- coding: utf-8 -*-
# Copyright: Damien Elmes <anki@ichi2.net>
# License: GNU GPL, version 3 or later; http://www.gnu.org/copyleft/gpl.html

"""\
Latex support
==============================
"""
__docformat__ = 'restructuredtext'

import re, tempfile, os, sys, subprocess, stat, time, shutil
from anki.utils import genID, checksum
from htmlentitydefs import entitydefs

latexPreamble = ("\\documentclass[12pt]{article}\n"
                 "\\special{papersize=3in,5in}"
                 "\\usepackage[utf8]{inputenc}"
                 "\\pagestyle{empty}\n"
                 "\\begin{document}")
latexPostamble = "\\end{document}"
latexDviPngCmd = ["dvipng", "-D", "200", "-T", "tight"]

regexps = {
    "standard": re.compile(r"\[latex\](.+?)\[/latex\]", re.DOTALL | re.IGNORECASE),
    "expression": re.compile(r"\[\$\](.+?)\[/\$\]", re.DOTALL | re.IGNORECASE),
    "math": re.compile(r"\[\$\$\](.+?)\[/\$\$\]", re.DOTALL | re.IGNORECASE),
    }

tmpdir = tempfile.mkdtemp(prefix="anki")

# add standard tex install location to osx
if sys.platform == "darwin":
    os.environ['PATH'] += ":/usr/texbin"

def renderLatex(deck, text, build=True):
    "Convert TEXT with embedded latex tags to image links."
    for match in regexps['standard'].finditer(text):
        text = text.replace(match.group(), imgLink(deck, match.group(1),
                                                   build))
    for match in regexps['expression'].finditer(text):
        text = text.replace(match.group(), imgLink(
            deck, "$" + match.group(1) + "$", build))
    for match in regexps['math'].finditer(text):
        text = text.replace(match.group(), imgLink(
            deck,
            "\\begin{displaymath}" + match.group(1) + "\\end{displaymath}",
            build))
    return text

def stripLatex(text):
    for match in regexps['standard'].finditer(text):
        text = text.replace(match.group(), "")
    for match in regexps['expression'].finditer(text):
        text = text.replace(match.group(), "")
    for match in regexps['math'].finditer(text):
        text = text.replace(match.group(), "")
    return text

def call(argv, wait=True, **kwargs):
    try:
        o = subprocess.Popen(argv, **kwargs)
    except OSError:
        # command not found
        return -1
    if wait:
        while 1:
            try:
                ret = o.wait()
            except OSError:
                # interrupted system call
                continue
            break
    else:
        ret = 0
    return ret

def latexImgFile(deck, latexCode):
    key = checksum(latexCode)
    return "latex-%s.png" % key

def mungeLatex(latex):
    "Convert entities, fix newlines, and convert to utf8."
    for match in re.compile("&([a-z]+);", re.IGNORECASE).finditer(latex):
        if match.group(1) in entitydefs:
            latex = latex.replace(match.group(), entitydefs[match.group(1)])
    latex = re.sub("<br( /)?>", "\n", latex)
    latex = latex.encode("utf-8")
    return latex

def deleteAllLatexImages(deck):
    mdir = deck.mediaDir()
    if not mdir:
        return
    deck.startProgress()
    for c, f in enumerate(os.listdir(mdir)):
        if f.startswith("latex-"):
            os.unlink(os.path.join(mdir, f))
        if c % 100 == 0:
            deck.updateProgress()
    deck.finishProgress()

def cacheAllLatexImages(deck):
    deck.startProgress()
    fields = deck.s.column0("select value from fields")
    for c, field in enumerate(fields):
        if c % 10 == 0:
            deck.updateProgress()
        renderLatex(deck, field)
    deck.finishProgress()

def buildImg(deck, latex):
    log = open(os.path.join(tmpdir, "latex_log.txt"), "w+")
    texpath = os.path.join(tmpdir, "tmp.tex")
    texfile = file(texpath, "w")
    texfile.write(latexPreamble + "\n")
    texfile.write(latex + "\n")
    texfile.write(latexPostamble + "\n")
    texfile.close()
    texpath = texpath.encode(sys.getfilesystemencoding())
    # make sure we have a valid mediaDir
    deck.mediaDir(create=True)
    oldcwd = os.getcwd()
    if sys.platform == "win32":
        si = subprocess.STARTUPINFO()
        si.dwFlags |= subprocess.STARTF_USESHOWWINDOW
    else:
        si = None
    try:
        os.chdir(tmpdir)
        errmsg = _("Error executing %s.\n") + _(
            "A log file is available here:\n%s") % tmpdir
        if call(["latex", "-interaction=nonstopmode",
                 texpath], stdout=log, stderr=log, startupinfo=si):
            return (False, errmsg % "latex")
        if call(latexDviPngCmd + ["tmp.dvi", "-o", "tmp.png"],
                stdout=log, stderr=log, startupinfo=si):
            return (False, errmsg % "dvipng")
        # add to media
        target = latexImgFile(deck, latex)
        shutil.copy2("tmp.png", os.path.join(deck.mediaDir(), target))
        return (True, target)
    finally:
        os.chdir(oldcwd)

def imageForLatex(deck, latex, build=True):
    "Return an image that represents 'latex', building if necessary."
    imageFile = latexImgFile(deck, latex)
    ok = True
    if build and (not imageFile or not os.path.exists(imageFile)):
        (ok, imageFile) = buildImg(deck, latex)
    if not ok:
        return (False, imageFile)
    return (True, imageFile)

def imgLink(deck, latex, build=True):
    "Parse LATEX and return a HTML image representing the output."
    latex = mungeLatex(latex)
    (ok, img) = imageForLatex(deck, latex, build)
    if ok:
        return '<img src="%s">' % img
    else:
        return img
 297  
anki/media.py
@@ -0,0 +1,297 @@
# -*- coding: utf-8 -*-
# Copyright: Damien Elmes <anki@ichi2.net>
# License: GNU GPL, version 3 or later; http://www.gnu.org/copyleft/gpl.html

"""\
Media support
====================
"""
__docformat__ = 'restructuredtext'

import os, stat, time, shutil, re, sys, urllib2
from anki.db import *
from anki.facts import Fact
from anki.utils import addTags, genID, ids2str, checksum
from anki.lang import _

regexps = (("(\[sound:([^]]+)\])",
            "[sound:%s]"),
           ("(<img src=[\"']?([^\"'>]+)[\"']? ?/?>)",
            "<img src=\"%s\">"))

# Tables
##########################################################################

mediaTable = Table(
    'media', metadata,
    Column('id', Integer, primary_key=True, nullable=False),
    Column('filename', UnicodeText, nullable=False),
    Column('size', Integer, nullable=False),
    Column('created', Float, nullable=False),
    Column('originalPath', UnicodeText, nullable=False, default=u""),
    Column('description', UnicodeText, nullable=False, default=u""))

class Media(object):
    pass

mapper(Media, mediaTable)

mediaDeletedTable = Table(
    'mediaDeleted', metadata,
    Column('mediaId', Integer, ForeignKey("cards.id"),
           nullable=False),
    Column('deletedTime', Float, nullable=False))

# Helper functions
##########################################################################

def mediaFilename(path):
    "Return checksum.ext for path"
    new = checksum(open(path, "rb").read())
    ext = os.path.splitext(path)[1].lower()
    return "%s%s" % (new, ext)

def copyToMedia(deck, path):
    """Copy PATH to MEDIADIR, and return new filename.
Update media table. If file already exists, don't copy."""
    origPath = path
    description = os.path.splitext(os.path.basename(path))[0]
    newBase = mediaFilename(path)
    new = os.path.join(deck.mediaDir(create=True), newBase)
    # copy if not existing
    if not os.path.exists(new):
        if new.lower() == path.lower():
            # case insensitive filesystems suck
            os.rename(path, new)
        else:
            shutil.copy2(path, new)
    newSize = os.stat(new)[stat.ST_SIZE]
    if not deck.s.scalar(
        "select 1 from media where filename = :f",
        f=newBase):
        # if the user has modified a hashed file, try to remember the old
        # filename
        old = deck.s.scalar(
            "select originalPath from media where filename = :s",
            s=os.path.basename(origPath))
        if old:
            origPath = old
            description = os.path.splitext(os.path.basename(origPath))[0]
        try:
            path = unicode(path, sys.getfilesystemencoding())
        except TypeError:
            pass
        deck.s.statement("""
insert into media (id, filename, size, created, originalPath,
description)
values (:id, :filename, :size, :created, :originalPath,
:description)""",
                         id=genID(),
                         filename=newBase,
                         size=newSize,
                         created=time.time(),
                         originalPath=origPath,
                         description=description)
    deck.flushMod()
    return newBase

def _modifyFields(deck, fieldsToUpdate, modifiedFacts, dirty):
    factIds = ids2str(modifiedFacts.keys())
    if fieldsToUpdate:
        deck.s.execute("update fields set value = :val where id = :id",
                       fieldsToUpdate)
    deck.s.statement(
        "update facts set modified = :time where id in %s" %
        factIds, time=time.time())
    ids = deck.s.all("""select cards.id, cards.cardModelId, facts.id,
facts.modelId from cards, facts where
cards.factId = facts.id and facts.id in %s"""
                     % factIds)
    deck.updateCardQACache(ids, dirty)
    deck.flushMod()


def mediaRefs(string):
    "Return list of (fullMatch, filename, replacementString)."
    l = []
    for (reg, repl) in regexps:
        for (full, fname) in re.findall(reg, string):
            l.append((full, fname, repl))
    return l

def stripMedia(txt):
    for (reg, x) in regexps:
        txt = re.sub(reg, "", txt)
    return txt

# Rebuilding DB
##########################################################################

def rebuildMediaDir(deck, deleteRefs=False, dirty=True):
    "Delete references to missing files, delete unused files."
    localFiles = {}
    modifiedFacts = {}
    unmodifiedFacts = {}
    renamedFiles = {}
    existingFiles = {}
    factsMissingMedia = {}
    updateFields = []
    usedFiles = {}
    unusedFileCount = 0
    missingFileCount = 0
    deck.mediaDir(create=True)
    deck.startProgress(16, 0, _("Check Media DB"))
    # rename all files to checksum versions, note non-renamed ones
    deck.updateProgress(_("Checksum files..."))
    files = os.listdir(unicode(deck.mediaDir()))
    mod = len(files) / 10
    for c, oldBase in enumerate(files):
        if mod and not c % mod:
            deck.updateProgress()
        if oldBase.startswith("latex-"):
            continue
        oldPath = os.path.join(deck.mediaDir(), oldBase)
        if oldBase.startswith("."):
            continue
        if os.path.isdir(oldPath):
            continue
        newBase = copyToMedia(deck, oldPath)
        if oldBase.lower() == newBase.lower():
            existingFiles[oldBase] = 1
        else:
            renamedFiles[oldBase] = newBase
    deck.updateProgress(value=10)
    # now look through all fields, and update references to files
    deck.updateProgress(_("Scan fields..."))
    for (id, fid, val) in deck.s.all(
        "select id, factId, value from fields"):
        oldval = val
        for (full, fname, repl) in mediaRefs(val):
            if fname in renamedFiles:
                # renamed
                newBase = renamedFiles[fname]
                val = re.sub(re.escape(full), repl % newBase, val)
                usedFiles[newBase] = 1
            elif fname in existingFiles:
                # used & current
                usedFiles[fname] = 1
            else:
                # missing
                missingFileCount += 1
                if deleteRefs:
                    val = re.sub(re.escape(full), "", val)
                else:
                    factsMissingMedia[fid] = 1
        if val != oldval:
            updateFields.append({'id': id, 'val': val})
            modifiedFacts[fid] = 1
        else:
            if fid not in factsMissingMedia:
                unmodifiedFacts[fid] = 1
    # update modified fields
    deck.updateProgress(_("Modify fields..."))
    if modifiedFacts:
        _modifyFields(deck, updateFields, modifiedFacts, dirty)
    # fix tags
    deck.updateProgress(_("Update tags..."))
    if dirty:
        deck.deleteTags(unmodifiedFacts.keys(), _("MediaMissing"))
        if deleteRefs:
            deck.deleteTags(modifiedFacts.keys(), _("MediaMissing"))
        else:
            deck.addTags(factsMissingMedia.keys(), _("MediaMissing"))
    # build cache of db records
    deck.updateProgress(_("Delete unused files..."))
    mediaIds = dict(deck.s.all("select filename, id from media"))
    # look through the media dir for any unused files, and delete
    for f in os.listdir(unicode(deck.mediaDir())):
        if f.startswith("."):
            continue
        if f.startswith("latex-"):
            continue
        path = os.path.join(deck.mediaDir(), f)
        if os.path.isdir(path):
            shutil.rmtree(path)
            continue
        if f in usedFiles:
            del mediaIds[f]
        else:
            os.unlink(path)
            unusedFileCount += 1
    deck.updateProgress(_("Delete stale references..."))
    for (fname, id) in mediaIds.items():
        # maybe delete from db
        if id:
            deck.s.statement("delete from media where id = :id", id=id)
            deck.s.statement("""
insert into mediaDeleted (mediaId, deletedTime)
values (:id, strftime('%s', 'now'))""", id=id)
    # update deck and save
    deck.flushMod()
    deck.save()
    deck.finishProgress()
    return missingFileCount, unusedFileCount - len(renamedFiles)

# Download missing
##########################################################################

def downloadMissing(deck):
    from anki.latex import renderLatex
    urls = dict(
        deck.s.all("select id, features from models where features != ''"))
    if not urls:
        return None
    mdir = deck.mediaDir(create=True)
    os.chdir(mdir)
    deck.startProgress()
    missing = {}
    for (id, fid, val, mid) in deck.s.all("""
select fields.id, factId, value, modelId from fields, facts
where facts.id = fields.factId"""):
        # add latex tags
        val = renderLatex(deck, val, False)
        for (full, fname, repl) in mediaRefs(val):
            if not os.path.exists(os.path.join(mdir, fname)) and mid in urls:
                missing[fname] = mid
    success = 0
    for c, file in enumerate(missing.keys()):
        deck.updateProgress(label=_("Downloading %(a)d of %(b)d...") % {
            'a': c,
            'b': len(missing),
            })
        try:
            data = urllib2.urlopen(urls[missing[file]] + file).read()
            open(file, "wb").write(data)
            success += 1
        except:
            pass
    deck.finishProgress()
    return len(missing), success

# Export original files
##########################################################################

def exportOriginalFiles(deck):
    deck.startProgress()
    origDir = deck.mediaDir(create=True)
    newDir = origDir.replace(".media", ".originals")
    try:
        os.mkdir(newDir)
    except (IOError, OSError):
        pass
    cnt = 0
    for row in deck.s.all("select filename, originalPath from media"):
        (fname, path) = row
        base = os.path.basename(path)
        if base == fname:
            continue
        cnt += 1
        deck.updateProgress(label="Exporting %s" % base)
        old = os.path.join(origDir, fname)
        new = os.path.join(newDir, base)
        if os.path.exists(new):
            new = re.sub("(.*)(\..*?)$", "\\1-%s\\2" %
                         os.path.splitext(fname)[0], new)
        shutil.copy2(old, new)
    deck.finishProgress()
    return cnt
 217  
anki/models.py
@@ -0,0 +1,217 @@
# -*- coding: utf-8 -*-
# Copyright: Damien Elmes <anki@ichi2.net>
# License: GNU GPL, version 3 or later; http://www.gnu.org/copyleft/gpl.html

"""\
Model - define the way in which facts are added and shown
==========================================================
- Field models
- Card models
- Models
"""

import time
from sqlalchemy.ext.orderinglist import ordering_list
from anki.db import *
from anki.utils import genID, canonifyTags
from anki.fonts import toPlatformFont
from anki.utils import parseTags, hexifyID, checksum, stripHTML
from anki.lang import _
from anki.hooks import runFilter
from copy import copy

def alignmentLabels():
    return {
        0: _("Center"),
        1: _("Left"),
        2: _("Right"),
        }

# Field models
##########################################################################

fieldModelsTable = Table(
    'fieldModels', metadata,
    Column('id', Integer, primary_key=True),
    Column('ordinal', Integer, nullable=False),
    Column('modelId', Integer, ForeignKey('models.id'), nullable=False),
    Column('name', UnicodeText, nullable=False),
    Column('description', UnicodeText, nullable=False, default=u""), # obsolete
    # reused as RTL marker
    Column('features', UnicodeText, nullable=False, default=u""),
    Column('required', Boolean, nullable=False, default=True),
    Column('unique', Boolean, nullable=False, default=True), # sqlite keyword
    Column('numeric', Boolean, nullable=False, default=False),
    # display
    Column('quizFontFamily', UnicodeText),
    Column('quizFontSize', Integer),
    Column('quizFontColour', String(7)),
    Column('editFontFamily', UnicodeText),
    Column('editFontSize', Integer, default=20))

class FieldModel(object):
    "The definition of one field in a fact."

    def __init__(self, name=u"", required=True, unique=True):
        self.name = name
        self.required = required
        self.unique = unique
        self.id = genID()

    def copy(self):
        new = FieldModel()
        for p in class_mapper(FieldModel).iterate_properties:
            setattr(new, p.key, getattr(self, p.key))
        new.id = genID()
        new.model = None
        return new

mapper(FieldModel, fieldModelsTable)

# Card models
##########################################################################

cardModelsTable = Table(
    'cardModels', metadata,
    Column('id', Integer, primary_key=True),
    Column('ordinal', Integer, nullable=False),
    Column('modelId', Integer, ForeignKey('models.id'), nullable=False),
    Column('name', UnicodeText, nullable=False),
    Column('description', UnicodeText, nullable=False, default=u""), # obsolete
    Column('active', Boolean, nullable=False, default=True),
    # formats: question/answer/last(not used)
    Column('qformat', UnicodeText, nullable=False),
    Column('aformat', UnicodeText, nullable=False),
    Column('lformat', UnicodeText),
    # question/answer editor format (not used yet)
    Column('qedformat', UnicodeText),
    Column('aedformat', UnicodeText),
    Column('questionInAnswer', Boolean, nullable=False, default=False),
    # display
    Column('questionFontFamily', UnicodeText, default=u"Arial"),
    Column('questionFontSize', Integer, default=20),
    Column('questionFontColour', String(7), default=u"#000000"),
    Column('questionAlign', Integer, default=0),
    Column('answerFontFamily', UnicodeText, default=u"Arial"),
    Column('answerFontSize', Integer, default=20),
    Column('answerFontColour', String(7), default=u"#000000"),
    Column('answerAlign', Integer, default=0),
    # not used
    Column('lastFontFamily', UnicodeText, default=u"Arial"),
    Column('lastFontSize', Integer, default=20),
    # used as background colour
    Column('lastFontColour', String(7), default=u"#FFFFFF"),
    Column('editQuestionFontFamily', UnicodeText, default=None),
    Column('editQuestionFontSize', Integer, default=None),
    Column('editAnswerFontFamily', UnicodeText, default=None),
    Column('editAnswerFontSize', Integer, default=None),
    # empty answer
    Column('allowEmptyAnswer', Boolean, nullable=False, default=True),
    Column('typeAnswer', UnicodeText, nullable=False, default=u""))

class CardModel(object):
    """Represents how to generate the front and back of a card."""
    def __init__(self, name=u"", qformat=u"q", aformat=u"a", active=True):
        self.name = name
        self.qformat = qformat
        self.aformat = aformat
        self.active = active
        self.id = genID()

    def copy(self):
        new = CardModel()
        for p in class_mapper(CardModel).iterate_properties:
            setattr(new, p.key, getattr(self, p.key))
        new.id = genID()
        new.model = None
        return new

mapper(CardModel, cardModelsTable)

def formatQA(cid, mid, fact, tags, cm):
    "Return a dict of {id, question, answer}"
    d = {'id': cid}
    fields = {}
    for (k, v) in fact.items():
        fields["text:"+k] = stripHTML(v[1])
        if v[1]:
            fields[k] = '<span class="fm%s">%s</span>' % (
                hexifyID(v[0]), v[1])
        else:
            fields[k] = u""
    fields['tags'] = tags[0]
    fields['Tags'] = tags[0]
    fields['modelTags'] = tags[1]
    fields['cardModel'] = tags[2]
    # render q & a
    ret = []
    for (type, format) in (("question", cm.qformat),
                           ("answer", cm.aformat)):
        try:
            html = format % fields
        except (KeyError, TypeError, ValueError):
            html = _("[invalid question/answer format]")
        d[type] = runFilter("formatQA", html, type, cid, mid, fact, tags, cm)
    return d

# Model table
##########################################################################

modelsTable = Table(
    'models', metadata,
    Column('id', Integer, primary_key=True),
    Column('deckId', Integer, ForeignKey("decks.id", use_alter=True, name="deckIdfk")),
    Column('created', Float, nullable=False, default=time.time),
    Column('modified', Float, nullable=False, default=time.time),
    Column('tags', UnicodeText, nullable=False, default=u""),
    Column('name', UnicodeText, nullable=False),
    Column('description', UnicodeText, nullable=False, default=u""), # obsolete
    Column('features', UnicodeText, nullable=False, default=u""), # used as mediaURL
    Column('spacing', Float, nullable=False, default=0.1),
    Column('initialSpacing', Float, nullable=False, default=60),
    Column('source', Integer, nullable=False, default=0))

class Model(object):
    "Defines the way a fact behaves, what fields it can contain, etc."
    def __init__(self, name=u""):
        self.name = name
        self.id = genID()

    def setModified(self):
        self.modified = time.time()

    def addFieldModel(self, field):
        "Add a field model."
        self.fieldModels.append(field)
        s = object_session(self)
        if s:
            s.flush()

    def addCardModel(self, card):
        "Add a card model."
        self.cardModels.append(card)
        s = object_session(self)
        if s:
            s.flush()

mapper(Model, modelsTable, properties={
    'fieldModels': relation(FieldModel, backref='model',
                             collection_class=ordering_list('ordinal'),
                             order_by=[fieldModelsTable.c.ordinal],
                            cascade="all, delete-orphan"),
    'cardModels': relation(CardModel, backref='model',
                           collection_class=ordering_list('ordinal'),
                           order_by=[cardModelsTable.c.ordinal],
                           cascade="all, delete-orphan"),
       })

# Model deletions
##########################################################################

modelsDeletedTable = Table(
    'modelsDeleted', metadata,
    Column('modelId', Integer, ForeignKey("models.id"),
           nullable=False),
    Column('deletedTime', Float, nullable=False))
 339  
anki/sound.py
@@ -0,0 +1,339 @@
# -*- coding: utf-8 -*-
# Copyright: Damien Elmes <anki@ichi2.net>
# License: GNU GPL, version 3 or later; http://www.gnu.org/copyleft/gpl.html

"""\
Sound support
==============================
"""
__docformat__ = 'restructuredtext'

import re, sys, threading, time, subprocess, os, signal, atexit, errno
from anki.hooks import addHook, runHook

# Shared utils
##########################################################################

def playFromText(text):
    for match in re.findall("\[sound:(.*?)\]", text):
        play(match)

def stripSounds(text):
    return re.sub("\[sound:.*?\]", "", text)

def hasSound(text):
    return re.search("\[sound:.*?\]", text) is not None

##########################################################################

# the amount of noise to cancel
NOISE_AMOUNT = "0.1"
# the amount of amplification
NORM_AMOUNT = "-3"
# the amount of bass
BASS_AMOUNT = "+0"
# the amount to fade at end
FADE_AMOUNT = "0.25"

noiseProfile = ""

processingSrc = "tmp.wav"
processingDst = "tmp.mp3"
processingChain = []
tmpFiles = ["tmp2.wav", "tmp3.wav"]

cmd = ["sox", processingSrc, "tmp2.wav"]
processingChain = [
    None, # placeholder
    ["sox", "tmp2.wav", "tmp3.wav", "norm", NORM_AMOUNT,
     "bass", BASS_AMOUNT, "fade", FADE_AMOUNT, "0"],
    ["lame", "tmp3.wav", processingDst, "--noreplaygain", "--quiet"],
    ]

# don't show box on windows
if sys.platform == "win32":
    si = subprocess.STARTUPINFO()
    si.dwFlags |= subprocess.STARTF_USESHOWWINDOW
else:
    si = None

if sys.platform.startswith("darwin"):
    # make sure lame, which is installed in /usr/local/bin, is in the path
    os.environ['PATH'] += ":" + "/usr/local/bin"
    dir = os.path.dirname(os.path.abspath(__file__))
    dir = os.path.abspath(dir + "/../../../..")
    os.environ['PATH'] += ":" + dir + "/audio"

def retryWait(proc):
    # osx throws interrupted system call errors frequently
    while 1:
        try:
            return proc.wait()
        except OSError:
            continue

# Noise profiles
##########################################################################

def checkForNoiseProfile():
    global processingChain
    if sys.platform.startswith("darwin"):
        # not currently supported
        processingChain = [
            ["lame", "tmp.wav", "tmp.mp3", "--noreplaygain", "--quiet"]]
    else:
        cmd = ["sox", processingSrc, "tmp2.wav"]
        if os.path.exists(noiseProfile):
            cmd = cmd + ["noisered", noiseProfile, NOISE_AMOUNT]
        processingChain[0] = cmd

def generateNoiseProfile():
    try:
        os.unlink(noiseProfile)
    except OSError:
        pass
    retryWait(subprocess.Popen(
        ["sox", processingSrc, tmpFiles[0], "trim", "1.5", "1.5"],
        startupinfo=si))
    retryWait(subprocess.Popen(["sox", tmpFiles[0], tmpFiles[1],
                                "noiseprof", noiseProfile],
                               startupinfo=si))
    processingChain[0] = ["sox", processingSrc, "tmp2.wav",
                          "noisered", noiseProfile, NOISE_AMOUNT]

# Mplayer settings
##########################################################################

if sys.platform.startswith("win32"):
    mplayerCmd = ["mplayer.exe", "-ao", "win32", "-really-quiet"]
    dir = os.path.dirname(os.path.abspath(sys.argv[0]))
    os.environ['PATH'] += ";" + dir
    os.environ['PATH'] += ";" + dir + "\\..\\dist" # for testing
else:
    mplayerCmd = ["mplayer", "-really-quiet"]

# Mplayer in slave mode
##########################################################################

mplayerQueue = []
mplayerManager = None
mplayerReader = None
mplayerCond = threading.Condition()

class MplayerReader(threading.Thread):
    "Read any debugging info to prevent mplayer from blocking."

    def run(self):
        while 1:
            mplayerCond.acquire()
            mplayerCond.wait()
            mplayerCond.release()
            try:
                mplayerManager.mplayer.stdout.read()
            except:
                pass

class MplayerMonitor(threading.Thread):

    def run(self):
        self.mplayer = None
        while 1:
            mplayerCond.acquire()
            while not mplayerQueue:
                if not mplayerCond:
                    return
                mplayerCond.wait()
            if not self.mplayer:
                self.startProcess()
            if self.mplayer != -1 and self.mplayer.poll() is not None:
                self.mplayer.wait()
                self.startProcess()
            nextClears = False
            while mplayerQueue:
                item = mplayerQueue.pop(0)
                if item is None:
                    nextClears = True
                    continue
                if nextClears:
                    nextClears = False
                    extra = ""
                else:
                    extra = " 1"
                cmd = 'loadfile "%s"%s\n' % (item, extra)
                self.mplayer.stdin.write(cmd)
            mplayerCond.release()

    def startProcess(self):
        try:
            cmd = mplayerCmd + ["-slave", "-idle"]
            self.mplayer = subprocess.Popen(
                cmd, startupinfo=si, stdin=subprocess.PIPE,
                stdout=subprocess.PIPE, stderr=subprocess.STDOUT)
        except OSError:
            mplayerCond.release()
            raise Exception("Audio player not found")

def queueMplayer(path):
    ensureMplayerThreads()
    path = path.encode(sys.getfilesystemencoding())
    mplayerCond.acquire()
    mplayerQueue.append(path)
    mplayerCond.notifyAll()
    mplayerCond.release()
    runHook("soundQueued")

def clearMplayerQueue():
    mplayerCond.acquire()
    mplayerQueue.append(None)
    mplayerCond.release()

def ensureMplayerThreads():
    global mplayerManager, mplayerReader
    if not mplayerManager:
        mplayerManager = MplayerMonitor()
        mplayerManager.daemon = True
        mplayerManager.start()
        mplayerReader = MplayerReader()
        mplayerReader.daemon = True
        mplayerReader.start()
        atexit.register(stopMplayer)

def stopMplayer(restart=False):
    if not mplayerManager:
        return
    mplayerCond.acquire()
    if mplayerManager.mplayer:
        while 1:
            try:
                mplayerManager.mplayer.stdin.write("quit\n")
                break
            except OSError, e:
                if e.errno != errno.EINTR:
                    # osx throws interrupt errors regularly, but we want to
                    # ignore other errors on shutdown
                    break
            except IOError:
                # already closed
                break
            except ValueError:
                # already closed
                break
    if not restart:
        mplayerManager.mplayer = -1
    mplayerCond.notifyAll()
    mplayerCond.release()

def stopMplayerOnce():
    stopMplayer(restart=True)

addHook("deckClosed", stopMplayerOnce)

# PyAudio recording
##########################################################################

try:
    import pyaudio
    import wave

    PYAU_FORMAT = pyaudio.paInt16
    PYAU_CHANNELS = 1
    PYAU_RATE = 44100
    PYAU_INPUT_INDEX = None
except:
    pass

class _Recorder(object):

    def postprocess(self, encode=True):
        self.encode = encode
        for c in processingChain:
            #print c
            if not self.encode and c[0] == 'lame':
                continue
            ret = retryWait(subprocess.Popen(c, startupinfo=si))
            if ret:
                raise Exception(_("""
Error processing audio.
If you're on Linux and don't have sox 14.1+, you
need to disable normalization. See the wiki.
Command was:\n""") + " ".join(c))

class PyAudioThreadedRecorder(threading.Thread):

    def __init__(self):
        threading.Thread.__init__(self)
        self.finish = False

    def run(self):
        chunk = 1024
        try:
            p = pyaudio.PyAudio()
        except NameError:
            raise Exception(
                "Pyaudio not installed (recording not supported on OSX10.3)")
        stream = p.open(format=PYAU_FORMAT,
                        channels=PYAU_CHANNELS,
                        rate=PYAU_RATE,
                        input=True,
                        input_device_index=PYAU_INPUT_INDEX,
                        frames_per_buffer=chunk)
        all = []
        while not self.finish:
            try:
                data = stream.read(chunk)
            except IOError, e:
                if e[1] == pyaudio.paInputOverflowed:
                    data = None
                else:
                    raise
            if data:
                all.append(data)
        stream.close()
        p.terminate()
        data = ''.join(all)
        wf = wave.open(processingSrc, 'wb')
        wf.setnchannels(PYAU_CHANNELS)
        wf.setsampwidth(p.get_sample_size(PYAU_FORMAT))
        wf.setframerate(PYAU_RATE)
        wf.writeframes(data)
        wf.close()

class PyAudioRecorder(_Recorder):

    def __init__(self):
        for t in tmpFiles + [processingSrc, processingDst]:
            try:
                os.unlink(t)
            except OSError:
                pass
        self.encode = False

    def start(self):
        self.thread = PyAudioThreadedRecorder()
        self.thread.start()

    def stop(self):
        self.thread.finish = True
        self.thread.join()

    def file(self):
        if self.encode:
            return processingDst
        else:
            return tmpFiles[1]

# Audio interface
##########################################################################

_player = queueMplayer
_queueEraser = clearMplayerQueue

def play(path):
    _player(path)

def clearAudioQueue():
    _queueEraser()

Recorder = PyAudioRecorder
 573  
anki/stats.py
Large diffs are not rendered by default.

 40  
anki/stdmodels.py
@@ -0,0 +1,40 @@
# -*- coding: utf-8 -*-
# Copyright: Damien Elmes <anki@ichi2.net>
# License: GNU GPL, version 3 or later; http://www.gnu.org/copyleft/gpl.html

"""\
Standard Models.
==============================================================
Plugins can add to the 'models' dict to provide more standard
models.
"""

from anki.models import Model, CardModel, FieldModel
from anki.lang import _

models = {}

def byName(name):
    fn = models.get(name)
    if fn:
        return fn()
    raise ValueError("No such model available!")

def names():
    return models.keys()

# Basic
##########################################################################

def BasicModel():
    m = Model(_('Basic'))
    m.addFieldModel(FieldModel(u'Front', True, True))
    m.addFieldModel(FieldModel(u'Back', False, False))
    m.addCardModel(CardModel(u'Forward', u'%(Front)s', u'%(Back)s'))
    m.addCardModel(CardModel(u'Reverse', u'%(Back)s', u'%(Front)s',
                             active=False))
    m.tags = u"Basic"
    return m

models['Basic'] = BasicModel
 1,171  
anki/sync.py
Large diffs are not rendered by default.

 59  
anki/tags.py
@@ -0,0 +1,59 @@
# -*- coding: utf-8 -*-
# Copyright: Damien Elmes <anki@ichi2.net>
# License: GNU GPL, version 3 or later; http://www.gnu.org/copyleft/gpl.html

"""\
Tags
====================
"""
__docformat__ = 'restructuredtext'


from anki.db import *

#src 0 = fact
#src 1 = model
#src 2 = card model

# Tables
##########################################################################

def initTagTables(s):
    try:
        s.statement("""
create table tags (
id integer not null,
tag text not null collate nocase,
priority integer not null default 2,
primary key(id))""")
        s.statement("""
create table cardTags (
id integer not null,
cardId integer not null,
tagId integer not null,
src integer not null,
primary key(id))""")
    except:
        pass

def tagId(s, tag, create=True):
    "Return ID for tag, creating if necessary."
    id = s.scalar("select id from tags where tag = :tag", tag=tag)
    if id or not create:
        return id
    s.statement("""
insert or ignore into tags
(tag) values (:tag)""", tag=tag)
    return s.scalar("select id from tags where tag = :tag", tag=tag)

def tagIds(s, tags, create=True):
    "Return an ID for all tags, creating if necessary."
    ids = {}
    if create:
        s.statements("insert or ignore into tags (tag) values (:tag)",
                    [{'tag': t} for t in tags])
    tagsD = dict([(x.lower(), y) for (x, y) in s.all("""
select tag, id from tags
where tag in (%s)""" % ",".join([
        "'%s'" % t.replace("'", "''") for t in tags]))])
    return tagsD
 242  
anki/utils.py
@@ -0,0 +1,242 @@
# -*- coding: utf-8 -*-
# Copyright: Damien Elmes <anki@ichi2.net>
# License: GNU GPL, version 3 or later; http://www.gnu.org/copyleft/gpl.html

"""\
Miscellaneous utilities
==============================
"""
__docformat__ = 'restructuredtext'

import re, os, random, time, types

try:
    import hashlib
    md5 = hashlib.md5
except ImportError:
    import md5
    md5 = md5.new

from anki.db import *
from anki.lang import _, ngettext
import locale, sys

if sys.version_info[1] < 5:
    def format_string(a, b):
        return a % b
    locale.format_string = format_string

# Time handling
##############################################################################

timeTable = {
    "years": lambda n: ngettext("%s year", "%s years", n),
    "months": lambda n: ngettext("%s month", "%s months", n),
    "days": lambda n: ngettext("%s day", "%s days", n),
    "hours": lambda n: ngettext("%s hour", "%s hours", n),
    "minutes": lambda n: ngettext("%s minute", "%s minutes", n),
    "seconds": lambda n: ngettext("%s second", "%s seconds", n),
    }

afterTimeTable = {
    "years": lambda n: ngettext("%s year<!--after>", "%s years<!--after>", n),
    "months": lambda n: ngettext("%s month<!--after>", "%s months<!--after>", n),
    "days": lambda n: ngettext("%s day<!--after>", "%s days<!--after>", n),
    "hours": lambda n: ngettext("%s hour<!--after>", "%s hours<!--after>", n),
    "minutes": lambda n: ngettext("%s minute<!--after>", "%s minutes<!--after>", n),
    "seconds": lambda n: ngettext("%s second<!--after>", "%s seconds<!--after>", n),
    }

shortTimeTable = {
    "years": _("%sy"),
    "months": _("%sm"),
    "days": _("%sd"),
    "hours": _("%sh"),
    "minutes": _("%sm"),
    "seconds": _("%ss"),
    }

def fmtTimeSpan(time, pad=0, point=0, short=False, after=False):
    "Return a string representing a time span (eg '2 days')."
    (type, point) = optimalPeriod(time, point)
    time = convertSecondsTo(time, type)
    if short:
        fmt = shortTimeTable[type]
    else:
        if after:
            fmt = afterTimeTable[type](_pluralCount(time, point))
        else:
            fmt = timeTable[type](_pluralCount(time, point))
    timestr = "%(a)d.%(b)df" % {'a': pad, 'b': point}
    return locale.format_string("%" + (fmt % timestr), time)

def optimalPeriod(time, point):
    if abs(time) < 60:
        type = "seconds"
        point -= 1
    elif abs(time) < 3599:
        type = "minutes"
    elif abs(time) < 60 * 60 * 24:
        type = "hours"
    elif abs(time) < 60 * 60 * 24 * 30:
        type = "days"
    elif abs(time) < 60 * 60 * 24 * 365:
        type = "months"
        point += 1
    else:
        type = "years"
        point += 1
    return (type, max(point, 0))

def convertSecondsTo(seconds, type):
    if type == "seconds":
        return seconds
    elif type == "minutes":
        return seconds / 60.0
    elif type == "hours":
        return seconds / 3600.0
    elif type == "days":
        return seconds / 86400.0
    elif type == "months":
        return seconds / 2592000.0
    elif type == "years":
        return seconds / 31536000.0
    assert False

def _pluralCount(time, point):
    if point:
        return 2
    return round(time)

# Locale
##############################################################################

def fmtPercentage(float_value, point=1):
    "Return float with percentage sign"
    fmt = '%' + "0.%(b)df" % {'b': point}
    return locale.format_string(fmt, float_value) + "%"

def fmtFloat(float_value, point=1):
    "Return a string with decimal separator according to current locale"
    fmt = '%' + "0.%(b)df" % {'b': point}
    return locale.format_string(fmt, float_value)

# HTML
##############################################################################

def stripHTML(s):
    s = re.sub("(?s)<style.*?>.*?</style>", "", s)
    s = re.sub("<.*?>", "", s)
    s = s.replace("&lt;", "<")
    s = s.replace("&gt;", ">")
    return s

def tidyHTML(html):
    "Remove cruft like body tags and return just the important part."
    # contents of body - no head or html tags
    html = re.sub(u".*<body.*?>(.*)</body></html>",
                  "\\1", html.replace("\n", u""))
    # strip superfluous Qt formatting
    html = re.sub(u"(?:-qt-table-type: root; )?"
                  "margin-top:\d+px; margin-bottom:\d+px; margin-left:\d+px; "
                  "margin-right:\d+px;(?: -qt-block-indent:0; "
                  "text-indent:0px;)?", u"", html)
    html = re.sub(u"-qt-paragraph-type:empty;", u"", html)
    # strip leading space in style statements, and remove if no contents
    html = re.sub(u'style=" ', u'style="', html)
    html = re.sub(u' style=""', u"", html)
    # convert P tags into SPAN and/or BR
    html = re.sub(u'<p( style=.+?)>(.*?)</p>', u'<span\\1>\\2</span><br>', html)
    html = re.sub(u'<p>(.*?)</p>', u'\\1<br>', html)
    html = re.sub(u'<br>$', u'', html)
    html = re.sub(u"^<table><tr><td style=\"border: none;\">(.*)<br></td></tr></table>$", u"\\1", html)
    return html

# IDs
##############################################################################

def genID(static=[]):
    "Generate a random, unique 64bit ID."
    # 23 bits of randomness, 41 bits of current time
    # random rather than a counter to ensure efficient btree
    t = long(time.time()*1000)
    if not static:
        static.extend([t, {}])
    else:
        if static[0] != t:
            static[0] = t
            static[1] = {}
    while 1:
        rand = random.getrandbits(23)
        if rand not in static[1]:
            static[1][rand] = True
            break
    x = rand << 41 | t
    # turn into a signed long
    if x >= 9223372036854775808L:
        x -= 18446744073709551616L
    return x

def hexifyID(id):
    if id < 0:
        id += 18446744073709551616L
    return "%x" % id

def dehexifyID(id):
    id = int(id, 16)
    if id >= 9223372036854775808L:
        id -= 18446744073709551616L
    return id

def ids2str(ids):
    """Given a list of integers, return a string '(int1,int2,.)'
The caller is responsible for ensuring only integers are provided.
This is safe if you use sqlite primary key columns, which are guaranteed
to be integers."""
    return "(%s)" % ",".join([str(i) for i in ids])

# Tags
##############################################################################

def parseTags(tags):
    "Parse a string and return a list of tags."
    tags = re.split(" |, ?", tags)
    return [t.strip() for t in tags if t.strip()]

def joinTags(tags):
    return u" ".join(tags)

def canonifyTags(tags):
    "Strip leading/trailing/superfluous commas and duplicates."
    return joinTags(sorted(set(parseTags(tags))))

def findTag(tag, tags):
    "True if TAG is in TAGS. Ignore case."
    if not isinstance(tags, types.ListType):
        tags = parseTags(tags)
    return tag.lower() in [t.lower() for t in tags]

def addTags(tagstr, tags):
    "Add tags if they don't exist."
    currentTags = parseTags(tags)
    for tag in parseTags(tagstr):
        if not findTag(tag, currentTags):
            currentTags.append(tag)
    return joinTags(currentTags)

def deleteTags(tagstr, tags):
    "Delete tags if they don't exists."
    currentTags = parseTags(tags)
    for tag in parseTags(tagstr):
        try:
            currentTags.remove(tag)
        except ValueError:
            pass
    return joinTags(currentTags)

# Misc
##############################################################################

def checksum(data):
    return md5(data).hexdigest()
 228  
ez_setup.py
@@ -0,0 +1,228 @@
#!python
"""Bootstrap setuptools installation
If you want to use setuptools in your package's setup.py, just include this
file in the same directory with it, and add this to the top of your setup.py::
    from ez_setup import use_setuptools
    use_setuptools()
If you want to require a specific version of setuptools, set a download
mirror, or use an alternate download directory, you can do so by supplying
the appropriate options to ``use_setuptools()``.
This file can also be run as a script to install or upgrade setuptools.
"""
import sys
DEFAULT_VERSION = "0.6c5"
DEFAULT_URL     = "http://cheeseshop.python.org/packages/%s/s/setuptools/" % sys.version[:3]

md5_data = {
    'setuptools-0.6b1-py2.3.egg': '8822caf901250d848b996b7f25c6e6ca',
    'setuptools-0.6b1-py2.4.egg': 'b79a8a403e4502fbb85ee3f1941735cb',
    'setuptools-0.6b2-py2.3.egg': '5657759d8a6d8fc44070a9d07272d99b',
    'setuptools-0.6b2-py2.4.egg': '4996a8d169d2be661fa32a6e52e4f82a',
    'setuptools-0.6b3-py2.3.egg': 'bb31c0fc7399a63579975cad9f5a0618',
    'setuptools-0.6b3-py2.4.egg': '38a8c6b3d6ecd22247f179f7da669fac',
    'setuptools-0.6b4-py2.3.egg': '62045a24ed4e1ebc77fe039aa4e6f7e5',
    'setuptools-0.6b4-py2.4.egg': '4cb2a185d228dacffb2d17f103b3b1c4',
    'setuptools-0.6c1-py2.3.egg': 'b3f2b5539d65cb7f74ad79127f1a908c',
    'setuptools-0.6c1-py2.4.egg': 'b45adeda0667d2d2ffe14009364f2a4b',
    'setuptools-0.6c2-py2.3.egg': 'f0064bf6aa2b7d0f3ba0b43f20817c27',
    'setuptools-0.6c2-py2.4.egg': '616192eec35f47e8ea16cd6a122b7277',
    'setuptools-0.6c3-py2.3.egg': 'f181fa125dfe85a259c9cd6f1d7b78fa',
    'setuptools-0.6c3-py2.4.egg': 'e0ed74682c998bfb73bf803a50e7b71e',
    'setuptools-0.6c3-py2.5.egg': 'abef16fdd61955514841c7c6bd98965e',
    'setuptools-0.6c4-py2.3.egg': 'b0b9131acab32022bfac7f44c5d7971f',
    'setuptools-0.6c4-py2.4.egg': '2a1f9656d4fbf3c97bf946c0a124e6e2',
    'setuptools-0.6c4-py2.5.egg': '8f5a052e32cdb9c72bcf4b5526f28afc',
    'setuptools-0.6c5-py2.3.egg': 'ee9fd80965da04f2f3e6b3576e9d8167',
    'setuptools-0.6c5-py2.4.egg': 'afe2adf1c01701ee841761f5bcd8aa64',
    'setuptools-0.6c5-py2.5.egg': 'a8d3f61494ccaa8714dfed37bccd3d5d',
}

import sys, os

def _validate_md5(egg_name, data):
    if egg_name in md5_data:
        from md5 import md5
        digest = md5(data).hexdigest()
        if digest != md5_data[egg_name]:
            print >>sys.stderr, (
                "md5 validation of %s failed!  (Possible download problem?)"
                % egg_name
            )
            sys.exit(2)
    return data


def use_setuptools(
    version=DEFAULT_VERSION, download_base=DEFAULT_URL, to_dir=os.curdir,
    download_delay=15
):
    """Automatically find/download setuptools and make it available on sys.path
    `version` should be a valid setuptools version number that is available
    as an egg for download under the `download_base` URL (which should end with
    a '/').  `to_dir` is the directory where setuptools will be downloaded, if
    it is not already available.  If `download_delay` is specified, it should
    be the number of seconds that will be paused before initiating a download,
    should one be required.  If an older version of setuptools is installed,
    this routine will print a message to ``sys.stderr`` and raise SystemExit in
    an attempt to abort the calling script.
    """
    try:
        import setuptools
        if setuptools.__version__ == '0.0.1':
            print >>sys.stderr, (
            "You have an obsolete version of setuptools installed.  Please\n"
            "remove it from your system entirely before rerunning this script."
            )
            sys.exit(2)
    except ImportError:
        egg = download_setuptools(version, download_base, to_dir, download_delay)
        sys.path.insert(0, egg)
        import setuptools; setuptools.bootstrap_install_from = egg

    import pkg_resources
    try:
        pkg_resources.require("setuptools>="+version)

    except pkg_resources.VersionConflict, e:
        # XXX could we install in a subprocess here?
        print >>sys.stderr, (
            "The required version of setuptools (>=%s) is not available, and\n"
            "can't be installed while this script is running. Please install\n"
            " a more recent version first.\n\n(Currently using %r)"
        ) % (version, e.args[0])
        sys.exit(2)

def download_setuptools(
    version=DEFAULT_VERSION, download_base=DEFAULT_URL, to_dir=os.curdir,
    delay = 15
):
    """Download setuptools from a specified location and return its filename
    `version` should be a valid setuptools version number that is available
    as an egg for download under the `download_base` URL (which should end
    with a '/'). `to_dir` is the directory where the egg will be downloaded.
    `delay` is the number of seconds to pause before an actual download attempt.
    """
    import urllib2, shutil
    egg_name = "setuptools-%s-py%s.egg" % (version,sys.version[:3])
    url = download_base + egg_name
    saveto = os.path.join(to_dir, egg_name)
    src = dst = None
    if not os.path.exists(saveto):  # Avoid repeated downloads
        try:
            from distutils import log
            if delay:
                log.warn("""
---------------------------------------------------------------------------
This script requires setuptools version %s to run (even to display
help).  I will attempt to download it for you (from
%s), but
you may need to enable firewall access for this script first.
I will start the download in %d seconds.
(Note: if this machine does not have network access, please obtain the file
   %s
and place it in this directory before rerunning this script.)
---------------------------------------------------------------------------""",
                    version, download_base, delay, url
                ); from time import sleep; sleep(delay)
            log.warn("Downloading %s", url)
            src = urllib2.urlopen(url)
            # Read/write all in one block, so we don't create a corrupt file
            # if the download is interrupted.
            data = _validate_md5(egg_name, src.read())
            dst = open(saveto,"wb"); dst.write(data)
        finally:
            if src: src.close()
            if dst: dst.close()
    return os.path.realpath(saveto)

def main(argv, version=DEFAULT_VERSION):
    """Install or upgrade setuptools and EasyInstall"""

    try:
        import setuptools
    except ImportError:
        egg = None
        try:
            egg = download_setuptools(version, delay=0)
            sys.path.insert(0,egg)
            from setuptools.command.easy_install import main
            return main(list(argv)+[egg])   # we're done here
        finally:
            if egg and os.path.exists(egg):
                os.unlink(egg)
    else:
        if setuptools.__version__ == '0.0.1':
            # tell the user to uninstall obsolete version
            use_setuptools(version)

    req = "setuptools>="+version
    import pkg_resources
    try:
        pkg_resources.require(req)
    except pkg_resources.VersionConflict:
        try:
            from setuptools.command.easy_install import main
        except ImportError:
            from easy_install import main
        main(list(argv)+[download_setuptools(delay=0)])
        sys.exit(0) # try to force an exit
    else:
        if argv:
            from setuptools.command.easy_install import main
            main(argv)
        else:
            print "Setuptools version",version,"or greater has been installed."
            print '(Run "ez_setup.py -U setuptools" to reinstall or upgrade.)'



def update_md5(filenames):
    """Update our built-in md5 registry"""

    import re
    from md5 import md5

    for name in filenames:
        base = os.path.basename(name)
        f = open(name,'rb')
        md5_data[base] = md5(f.read()).hexdigest()
        f.close()

    data = ["    %r: %r,\n" % it for it in md5_data.items()]
    data.sort()
    repl = "".join(data)

    import inspect
    srcfile = inspect.getsourcefile(sys.modules[__name__])
    f = open(srcfile, 'rb'); src = f.read(); f.close()

    match = re.search("\nmd5_data = {\n([^}]+)}", src)
    if not match:
        print >>sys.stderr, "Internal error!"
        sys.exit(2)

    src = src[:match.start(1)] + repl + src[match.end(1):]
    f = open(srcfile,'w')
    f.write(src)
    f.close()


if __name__=='__main__':
    if len(sys.argv)>2 and sys.argv[1]=='--md5update':
        update_md5(sys.argv[2:])
    else:
        main(sys.argv[1:])





 36  
instructions.yml
@@ -0,0 +1,36 @@
from python.read~v :
      - sets-up/rake.io :import octocokit_sets-up :toolbelt :
use_setuptools()
from setuptools import setup, find_packages
import sys, os

import anki

setup(name='bitore.sig',
     kind :kite.yarn :
      version'@v'-"0.4.10.1":,,
      description='An intelligent spaced-repetition memory training library',
      long_description="",
      # Get strings from http://www.python.org/pypi?%3Aaction=list_classifiers
      classifiers=[
    'Intended Audience :: Developers',
    'Intended Audience :: Education',
    'License :: OSI Approved :: GNU General Public License (GPL)',
    'Operating System :: OS Independent',
    'Programming Language :: Python',
    'Topic :: Education',
    'Topic :: Software Development :: Libraries :: Python Modules',
        ],
      keywords='',
     '" author'"' ':' '"ZachryTWood'@'Administrator'@'.it'.git'"','
      author's :e-mail :zachryiixixiiwood@gmail.com :''
      'WebBaseUrl=' ':' '"https://www.bitcore.net/"'":,
      'url='http://ichi2.net/anki/index.html',
      license='GPLv3',
      packages=["anki", "anki.importing"],
      package_data={'anki': ['locale/*/*/*'],},
      include_package_data=True,
      zip_safe=False,
      install_requires=[
        ],
      )
 0  
setup.cfg
Empty file.
 0  
tests/__init__.py
Empty file.
 1  
tests/deck/fake.png
Unable to render rich display

 50  
tests/importing/dingsbums.xml
@@ -0,0 +1,50 @@
<?xml version="1.0" encoding="UTF-8"?>
<vocabulary version="3">
<info><title>Deutsch - Italienisch</title><author>Rick Gruber-Riemer</author><notes>Klett Grund- und Aufbauwortschatz</notes><copyright></copyright><licence></licence><blabel>Deutsch</blabel><tlabel>Italienisch</tlabel><alabel>Attributes</alabel><ulabel>Lektion</ulabel><clabel>Kategori</clabel><olabel>Others</olabel><explabel>Erklärung</explabel><exlabel>Unregelmässig</exlabel><bor>en_US</bor><tor>en_US</tor><aor>en_US</aor><uor>en_US</uor><cor>en_US</cor><expor>en_US</expor><exor>en_US</exor><por>en_US</por><ror>en_US</ror><visa>1</visa><visu>0</visu><viscat>0</viscat><visexp>0</visexp><visex>2</visex><vispro>2</vispro><visrel>2</visrel><syllb>false</syllb><syllt>false</syllt></info>
<etattributes>
<eta eid="ETA4" n="Steigerung" di="ETAI10" lu="20061222 07:56:27 CET"><etai eid="ETAI10" ir="false">Regelmässig</etai><etai eid="ETAI11" ir="false">Unregelmässig</etai></eta>
<eta eid="ETA5" n="Perfekt" di="ETAI12" lu="20070210 13:20:09 CET"><etai eid="ETAI12" ir="false">avere</etai><etai eid="ETAI13" ir="false">essere</etai><etai eid="ETAI14" ir="false">avere oder essere</etai></eta>
<eta eid="ETA1" n="Konjugation" di="ETAI1" lu="20070211 12:35:19 CET"><etai eid="ETAI1" ir="false">-are (regelmässig)</etai><etai eid="ETAI16" ir="false">-ere (regelmässig)</etai><etai eid="ETAI15" ir="false">-ire (regelmässig)</etai><etai eid="ETAI2" ir="false">Unregelmässig</etai></eta>
<eta eid="ETA2" n="Geschlecht" di="ETAI3" lu="20070210 21:08:17 CET"><etai eid="ETAI3" ir="false">il</etai><etai eid="ETAI4" ir="false">la</etai></eta>
<eta eid="ETA3" n="Mehrzahl" di="ETAI6" lu="20070212 10:03:56 CET"><etai eid="ETAI6" ir="false">Regelmässig</etai><etai eid="ETAI7" ir="false">Unregelmässig</etai><etai eid="ETAI8" ir="false">Nur Einzahl</etai><etai eid="ETAI9" ir="false">Nur Mehrzahl</etai></eta>
</etattributes>
<entrytypes>
<entrytype eid="ET8" n="Sätze und Redewendungen" lu="20070310 20:16:30 CET"></entrytype>
<entrytype eid="ET7" n="Slang" lu="20070210 20:58:29 CET"></entrytype>
<entrytype eid="ET4" n="Adjektiv / Adverb" a1="ETA4" lu="20061222 07:58:14 CET"></entrytype>
<entrytype eid="ET3" n="Substantiv" a1="ETA2" a2="ETA3" lu="20061222 07:55:39 CET"></entrytype>
<entrytype eid="ET6" n="Modi di dire" lu="20070210 13:29:14 CET"></entrytype>
<entrytype eid="ET5" n="Konjugation" lu="20070210 13:20:36 CET"></entrytype>
<entrytype eid="ET2" n="Anderes" lu="20061222 07:52:31 CET"></entrytype>
<entrytype eid="ET1" n="Verb" a1="ETA1" a2="ETA5" lu="20061222 07:57:41 CET"></entrytype>
</entrytypes>
<units>
<unit eid="U4" lu="20070217 20:14:02 CET"><name>Rest</name><desc></desc></unit>
<unit eid="U3" lu="20070217 20:03:30 CET"><name>Harenberg Kalender Italienisch 2007</name><desc></desc></unit>
<unit eid="U5" lu="20070310 20:15:52 CET"><name>50. Restaurant, Café, Hotel</name><desc></desc></unit>
<unit eid="U2" lu="20070210 13:31:47 CET"><name>Berlitz Kalender 2005</name><desc></desc></unit>
<unit eid="U1" lu="20061222 07:48:58 CET"><name>A</name><desc></desc></unit>
</units>
<categories>
<category eid="C1" lu="20061222 07:46:40 CET"><name>Default</name><desc></desc></category>
</categories>
<entries>
<e et="ET1" eid="E113" u="U1" c="C1" lv="1" st="true" lu="20070211 14:18:49 CET" ll="19700101 01:00:00 CET" a1="ETAI1" a2="ETAI12"><o>entfernen, beseitigen</o><d>allontanare</d></e>
<e et="ET2" eid="E114" u="U1" c="C1" lv="2" st="true" lu="20070211 14:20:31 CET" ll="19700101 01:00:00 CET"><o>dann; damals, also; früher</o><d>allora</d></e>
<e et="ET3" eid="E112" u="U1" c="C1" lv="3" st="true" lu="20070211 14:17:19 CET" ll="19700101 01:00:00 CET" a1="ETAI3" a2="ETAI6"><o>Schüler, Zögling</o><d>allievo</d></e>
<e et="ET4" eid="E110" u="U1" c="C1" lv="4" st="true" lu="20070211 14:10:56 CET" ll="19700101 01:00:00 CET" a1="ETAI10"><o>lustig, heiter</o><d>allegro</d></e>
<e et="ET6" eid="E8" u="U2" c="C1" lv="5" st="true" lu="20070210 13:31:58 CET" ll="19700101 01:00:00 CET"><o>sich in einer unbequemen Situation befinden</o><d>essere un pesche four d&apos; aqua</d></e>
<e et="ET7" eid="E49" u="U2" c="C1" lv="6" st="true" lu="20070210 20:59:34 CET" ll="19700101 01:00:00 CET"><o>das ist mir egal</o><d>me ne frego</d><ep>Geste: unter dem Kinn mit der Hand vonhinten nach vorne reiben</ep></e>
<e et="ET3" eid="E251" u="U5" c="C1" lv="7" st="true" lu="20070310 20:29:49 CET" ll="19700101 01:00:00 CET" a1="ETAI4" a2="ETAI6"><o>Wirtin</o><d>ostessa</d></e>
</entries>
<stats>
<sset ts="20070310 21:16:36 CET"><sne lv="1">236</sne><sne lv="2">19</sne><sne lv="3">1</sne><sne lv="4">5</sne><sne lv="5">3</sne><sne lv="6">1</sne><sne lv="7">2</sne></sset>
<sset ts="20070217 20:37:22 CET"><sne lv="1">196</sne><sne lv="2">19</sne><sne lv="3">1</sne><sne lv="4">5</sne><sne lv="5">3</sne><sne lv="6">1</sne><sne lv="7">2</sne></sset>
<sset ts="20070212 10:13:05 CET"><sne lv="1">125</sne><sne lv="2">12</sne><sne lv="3">5</sne><sne lv="4">1</sne><sne lv="5">1</sne><sne lv="6">0</sne><sne lv="7">0</sne></sset>
<sset ts="20070228 21:44:04 CET"><sne lv="1">202</sne><sne lv="2">19</sne><sne lv="3">1</sne><sne lv="4">5</sne><sne lv="5">3</sne><sne lv="6">1</sne><sne lv="7">2</sne></sset>
<sset ts="20070217 19:10:49 CET"><sne lv="1">188</sne><sne lv="2">12</sne><sne lv="3">5</sne><sne lv="4">1</sne><sne lv="5">1</sne><sne lv="6">0</sne><sne lv="7">0</sne></sset>
<sset ts="20070211 20:55:08 CET"><sne lv="1">124</sne><sne lv="2">18</sne><sne lv="3">1</sne><sne lv="4">1</sne><sne lv="5">0</sne><sne lv="6">0</sne><sne lv="7">0</sne></sset>
<sset ts="20070217 19:14:04 CET"><sne lv="1">176</sne><sne lv="2">19</sne><sne lv="3">1</sne><sne lv="4">5</sne><sne lv="5">3</sne><sne lv="6">1</sne><sne lv="7">2</sne></sset>
<sset ts="20070211 20:57:10 CET"><sne lv="1">124</sne><sne lv="2">18</sne><sne lv="3">1</sne><sne lv="4">1</sne><sne lv="5">0</sne><sne lv="6">0</sne><sne lv="7">0</sne></sset>
</stats>
</vocabulary>
 89  
tests/importing/supermemo1.xml
@@ -0,0 +1,89 @@
<?xml version="1.0" encoding="UTF-8"?>
<SuperMemoCollection>
  <Count>3572</Count>

  <SuperMemoElement>
    <ID>1</ID>

    <Type>Topic</Type>

    <Content>
      <Question />

      <Answer />
    </Content>

    <SuperMemoElement>
      <ID>40326</ID>

      <Title>aoeu</Title>

      <Type>Topic</Type>

      <SuperMemoElement>
        <ID>40327</ID>

        <Title>1-400</Title>

        <Type>Topic</Type>

        <SuperMemoElement>
          <ID>40615</ID>

          <Title>aoeu</Title>

          <Type>Topic</Type>

          <SuperMemoElement>
            <ID>10247</ID>

            <Type>Item</Type>

            <Content>
              <Question>aoeu</Question>

              <Answer>aoeu</Answer>
            </Content>

            <LearningData>
              <Interval>1844</Interval>

              <Repetitions>7</Repetitions>

              <Lapses>0</Lapses>

              <LastRepetition>19.09.2002</LastRepetition>

              <AFactor>5,701</AFactor>

              <UFactor>2,452</UFactor>
            </LearningData>
          </SuperMemoElement>

        </SuperMemoElement>

        <Type>Topic</Type>

        <Content>
          <Question>aoeu</Question>
          <Answer />
        </Content>

        <LearningData>
          <Interval>0</Interval>

          <Repetitions>0</Repetitions>

          <Lapses>0</Lapses>

          <LastRepetition>04.08.2000</LastRepetition>

          <AFactor>3,000</AFactor>

          <UFactor>0,000</UFactor>
        </LearningData>

      </SuperMemoElement>
    </SuperMemoElement>
  </SuperMemoElement>
</SuperMemoCollection>
 219  
tests/importing/test.mem
@@ -0,0 +1,219 @@
--- Mnemosyne Data Base --- Format Version 1 ---
(lp1
(imnemosyne.core.mnemosyne_core
StartTime
p2
(dp3
S'time'
p4
F1183141800
sba(lp5
(imnemosyne.core.mnemosyne_core
Category
p6
(dp7
S'active'
p8
I01
sS'name'
p9
V<default>
p10
sba(imnemosyne.core.mnemosyne_core
Category
p11
(dp12
S'active'
p13
I01
sS'name'
p14
Vfoo
p15
sba(imnemosyne.core.mnemosyne_core
Category
p16
(dp17
g13
I01
sg14
Vbaz, quux
p18
sbaa(lp19
(imnemosyne.core.mnemosyne_core
Item
p20
(dp21
S'a'
Vbar
p22
sS'last_rep'
p23
L34L
sS'ret_reps'
p24
I0
sS'cat'
p25
g16
sS'q'
Vfoo
p26
sS'grade'
p27
I0
sS'acq_reps'
p28
I1
sS'ret_reps_since_lapse'
p29
I0
sS'easiness'
p30
F2.5
sS'lapses'
p31
I0
sS'acq_reps_since_lapse'
p32
I1
sS'next_rep'
p33
L34L
sS'id'
p34
S'9f401476'
p35
sba(imnemosyne.core.mnemosyne_core
Item
p36
(dp37
S'a'
Vfoo
p38
sg23
L34L
sg24
I0
sg25
g6
sS'q'
Vbar
p39
sg27
I0
sg28
I1
sg29
I0
sg30
F2.5
sg31
I0
sg32
I1
sg33
L34L
sg34
S'a869958d'
p40
sba(imnemosyne.core.mnemosyne_core
Item
p41
(dp42
S'a'
Vquux
p43
sg23
L34L
sg24
I0
sg25
g11
sS'q'
Vbaz
p44
sg27
I5
sg28
I2
sg29
I0
sg30
F2.5
sg31
I0
sg32
I2
sg33
L35L
sg34
S'74651aa3'
p45
sba(imnemosyne.core.mnemosyne_core
Item
p46
(dp47
S'a'
Vbaz
p48
sg23
L34L
sg24
I0
sg25
g6
sS'q'
Vquux
p49
sg27
I0
sg28
I1
sg29
I0
sg30
F2.5
sg31
I0
sg32
I1
sg33
L34L
sg34
S'0bd8f10b'
p50
sba(imnemosyne.core.mnemosyne_core
Item
p51
(dp52
S'a'
Vcard
p53
sg23
L34L
sg24
I0
sg25
g11
sS'q'
Vonesided
p54
sg27
I0
sg28
I1
sg29
I0
sg30
F2.5
sg31
I0
sg32
I1
sg33
L34L
sg34
S'bb503cf1'
p55
sbaa.
 BIN +3.84 KB 
tests/importing/test03.anki
Binary file not shown.
 BIN +31 KB 
tests/importing/test10-2.anki
Binary file not shown.
 BIN +40 KB 
tests/importing/test10-3.anki
Binary file not shown.
 BIN +31 KB 
tests/importing/test10.anki
Binary file not shown.
 11  
tests/importing/text-2fields.txt
@@ -0,0 +1,11 @@
# this is a test file

食べる	to eat
飲む	to drink
テスト	test
to eat	食べる
飲む	to drink
多すぎる	too many	fields
not, enough, fields
遊ぶ	
	to play
 2  
tests/importing/text-tags.txt
@@ -0,0 +1,2 @@
foo	bar	baz,qux
foo2	bar2	baz2
 7  
tests/shared.py
@@ -0,0 +1,7 @@
def assertException(exception, func):
    found = False
    try:
        func()
    except exception:
        found = True
    assert found
 BIN +42 KB 
tests/syncing/media-tests/1.anki
Binary file not shown.
 BIN +545 Bytes 
tests/syncing/media-tests/1.media/834a227f8d0abc4e2193f08138e59885.png
Unable to render rich display

 BIN +580 Bytes 
tests/syncing/media-tests/1.media/c4ad64a7afe9b09602cdf91e18897959.png
Unable to render rich display

 BIN +42 KB 
tests/syncing/media-tests/2.anki
Binary file not shown.
 BIN +644 Bytes 
tests/syncing/media-tests/2.media/22161b29b0c18e068038021f54eee1ee.png
Unable to render rich display

 279  
tests/test_deck.py
@@ -0,0 +1,279 @@
# coding: utf-8

import nose, os, re
from tests.shared import assertException

from anki.errors import *
from anki import DeckStorage
from anki.db import *
from anki.models import FieldModel, Model, CardModel
from anki.stdmodels import BasicModel
from anki.utils import stripHTML

newPath = None
newModified = None

testDir = os.path.dirname(__file__)

## opening/closing

def test_new():
    deck = DeckStorage.Deck()
    assert not deck.path
    assert deck.engine
    assert deck.modified

def test_attachNew():
    global newPath, newModified
    path = "/tmp/test_attachNew.anki"
    try:
        os.unlink(path)
    except OSError:
        pass
    deck = DeckStorage.Deck(path)
    # for attachOld()
    newPath = deck.path
    deck.setVar("pageSize", 4096)
    deck.save()
    newModified = deck.modified
    deck.close()
    del deck

def test_attachOld():
    deck = DeckStorage.Deck(newPath, backup=False)
    assert deck.modified == newModified
    deck.close()

def test_attachReadOnly():
    # non-writeable dir
    assertException(Exception,
                    lambda: DeckStorage.Deck("/attachroot"))
    # reuse tmp file from before, test non-writeable file
    os.chmod(newPath, 0)
    assertException(Exception,
                    lambda: DeckStorage.Deck(newPath))
    os.chmod(newPath, 0666)
    os.unlink(newPath)

def test_saveAs():
    path = "/tmp/test_saveAs.anki"
    try:
        os.unlink(path)
    except OSError:
        pass
    path2 = "/tmp/test_saveAs2.anki"
    try:
        os.unlink(path2)
    except OSError:
        pass
    # start with an in-memory deck
    deck = DeckStorage.Deck()
    deck.addModel(BasicModel())
    # add a card
    f = deck.newFact()
    f['Front'] = u"foo"; f['Back'] = u"bar"
    deck.addFact(f)
    assert deck.cardCount == 1
    # save in new deck
    newDeck = deck.saveAs(path)
    assert newDeck.cardCount == 1
    # delete card
    id = newDeck.s.scalar("select id from cards")
    newDeck.deleteCard(id)
    # save into new deck
    newDeck2 = newDeck.saveAs(path2)
    # new deck should have zero cards
    assert newDeck2.cardCount == 0
    # but old deck should have reverted the unsaved changes
    newDeck = DeckStorage.Deck(path)
    assert newDeck.cardCount == 1
    newDeck.close()

def test_factAddDelete():
    deck = DeckStorage.Deck()
    deck.addModel(BasicModel())
    # set rollback point
    deck.s.commit()
    f = deck.newFact()
    # empty fields
    try:
        deck.addFact(f)
    except Exception, e:
        pass
    assert e.data['type'] == 'fieldEmpty'
    # add a fact
    f['Front'] = u"one"; f['Back'] = u"two"
    f = deck.addFact(f)
    assert len(f.cards) == 1
    deck.rollback()
    # try with two cards
    f = deck.newFact()
    f['Front'] = u"one"; f['Back'] = u"two"
    f.model.cardModels[1].active = True
    f = deck.addFact(f)
    assert len(f.cards) == 2
    # ensure correct order
    c0 = [c for c in f.cards if c.ordinal == 0][0]
    assert re.sub("</?.+?>", "", c0.question) == u"one"
    # now let's make a duplicate
    f2 = deck.newFact()
    f2['Front'] = u"one"; f2['Back'] = u"three"
    try:
        f2 = deck.addFact(f2)
    except Exception, e:
        pass
    assert e.data['type'] == 'fieldNotUnique'
    # try delete the first card
    id1 = f.cards[0].id; id2 = f.cards[1].id
    deck.deleteCard(id1)
    # and the second should clear the fact
    deck.deleteCard(id2)

def test_modelAddDelete():
    deck = DeckStorage.Deck()
    deck.addModel(BasicModel())
    deck.addModel(BasicModel())
    f = deck.newFact()
    f['Front'] = u'1'
    f['Back'] = u'2'
    deck.addFact(f)
    assert deck.cardCount == 1
    deck.deleteModel(deck.currentModel)
    assert deck.cardCount == 0
    deck.s.refresh(deck)

def test_modelCopy():
    deck = DeckStorage.Deck()
    m = BasicModel()
    assert len(m.fieldModels) == 2
    assert len(m.cardModels) == 2
    deck.addModel(m)
    f = deck.newFact()
    f['Front'] = u'1'
    deck.addFact(f)
    m2 = deck.copyModel(m)
    assert m2.name == "Basic copy"
    assert m2.id != m.id
    assert m2.fieldModels[0].id != m.fieldModels[0].id
    assert m2.cardModels[0].id != m.cardModels[0].id
    assert len(m2.fieldModels) == 2
    assert len(m.fieldModels) == 2
    assert len(m2.fieldModels) == len(m.fieldModels)
    assert len(m.cardModels) == 2
    assert len(m2.cardModels) == 2

def test_media():
    deck = DeckStorage.Deck()
    # create a media dir
    deck.mediaDir(create=True)
    # put a file into it
    file = unicode(os.path.join(testDir, "deck/fake.png"))
    deck.addMedia(file)
    # make sure it gets copied on saveas
    path = "/tmp/saveAs2.anki"
    sum = "0bee89b07a248e27c83fc3d5951213c1.png"
    try:
        os.unlink(path)
    except OSError:
        pass
    deck.saveAs(path)
    assert os.path.exists("/tmp/saveAs2.media/%s" % sum)

def test_modelChange():
    deck = DeckStorage.Deck()
    m = Model(u"Japanese")
    m1 = m
    f = FieldModel(u'Expression', True, True)
    m.addFieldModel(f)
    m.addFieldModel(FieldModel(u'Meaning', False, False))
    f = FieldModel(u'Reading', False, False)
    m.addFieldModel(f)
    m.addCardModel(CardModel(u"Recognition",
                             u"%(Expression)s",
                             u"%(Reading)s<br>%(Meaning)s"))
    m.addCardModel(CardModel(u"Recall",
                             u"%(Meaning)s",
                             u"%(Expression)s<br>%(Reading)s",
                             active=False))
    m.tags = u"Japanese"
    m1.cardModels[1].active = True
    deck.addModel(m1)
    f = deck.newFact()
    f['Expression'] = u'e'
    f['Meaning'] = u'm'
    f['Reading'] = u'r'
    f = deck.addFact(f)
    f2 = deck.newFact()
    f2['Expression'] = u'e2'
    f2['Meaning'] = u'm2'
    f2['Reading'] = u'r2'
    deck.addFact(f2)
    m2 = BasicModel()
    m2.cardModels[1].active = True
    deck.addModel(m2)
    # convert to basic
    assert deck.modelUseCount(m1) == 2
    assert deck.modelUseCount(m2) == 0
    assert deck.cardCount == 4
    assert deck.factCount == 2
    fmap = {m1.fieldModels[0]: m2.fieldModels[0],
            m1.fieldModels[1]: None,
            m1.fieldModels[2]: m2.fieldModels[1]}
    cmap = {m1.cardModels[0]: m2.cardModels[0],
            m1.cardModels[1]: None}
    deck.changeModel([f.id], m2, fmap, cmap)
    assert deck.modelUseCount(m1) == 1
    assert deck.modelUseCount(m2) == 1
    assert deck.cardCount == 3
    assert deck.factCount == 2
    (q, a) = deck.s.first("""
select question, answer from cards where factId = :id""",
                          id=f.id)
    assert stripHTML(q) == u"e"
    assert stripHTML(a) == u"r"

def test_findCards():
    deck = DeckStorage.Deck()
    deck.addModel(BasicModel())
    f = deck.newFact()
    f['Front'] = u'dog'
    f['Back'] = u'cat'
    f.tags = u"monkey"
    deck.addFact(f)
    f = deck.newFact()
    f['Front'] = u'goats are fun'
    f['Back'] = u'sheep'
    f.tags = u"sheep goat horse"
    deck.addFact(f)
    f = deck.newFact()
    f['Front'] = u'cat'
    f['Back'] = u'sheep'
    deck.addFact(f)
    assert not deck.findCards("tag:donkey")
    assert len(deck.findCards("tag:sheep")) == 1
    assert len(deck.findCards("tag:sheep tag:goat")) == 1
    assert len(deck.findCards("tag:sheep tag:monkey")) == 0
    assert len(deck.findCards("tag:monkey")) == 1
    assert len(deck.findCards("tag:sheep -tag:monkey")) == 1
    assert len(deck.findCards("-tag:sheep")) == 2
    assert len(deck.findCards("cat")) == 2
    assert len(deck.findCards("cat -dog")) == 1
    assert len(deck.findCards("cat -dog")) == 1
    assert len(deck.findCards("are goats")) == 1
    assert len(deck.findCards('"are goats"')) == 0
    assert len(deck.findCards('"goats are"')) == 1
    # make sure card templates and models match too
    assert len(deck.findCards('tag:basic')) == 3
    assert len(deck.findCards('tag:forward')) == 3
    deck.addModel(BasicModel())
    f = deck.newFact()
    f['Front'] = u'foo'
    f['Back'] = u'bar'
    deck.addFact(f)
    deck.currentModel.cardModels[1].active = True
    f = deck.newFact()
    f['Front'] = u'baz'
    f['Back'] = u'qux'
    c = deck.addFact(f)
    assert len(deck.findCards('tag:forward')) == 5
    assert len(deck.findCards('tag:reverse')) == 1
 62  
tests/test_exporting.py
@@ -0,0 +1,62 @@
# coding: utf-8

import nose, os, tempfile
import anki
from anki import DeckStorage
from anki.exporting import *
from anki.stdmodels import *

deck = None
ds = None
testDir = os.path.dirname(__file__)

def setup1():
    global deck
    deck = DeckStorage.Deck()
    deck.addModel(BasicModel())
    deck.currentModel.cardModels[1].active = True
    f = deck.newFact()
    f['Front'] = u"foo"; f['Back'] = u"bar"; f.tags = u"tag, tag2"
    deck.addFact(f)
    f = deck.newFact()
    f['Front'] = u"baz"; f['Back'] = u"qux"
    deck.addFact(f)

##########################################################################

@nose.with_setup(setup1)
def test_export_anki():
    oldTime = deck.modified
    e = AnkiExporter(deck)
    newname = unicode(tempfile.mkstemp(prefix="ankitest")[1])
    os.unlink(newname)
    e.exportInto(newname)
    assert deck.modified == oldTime
    # connect to new deck
    d2 = DeckStorage.Deck(newname, backup=False)
    assert d2.cardCount == 4
    # try again, limited to a tag
    newname = unicode(tempfile.mkstemp(prefix="ankitest")[1])
    os.unlink(newname)
    e.limitTags = ['tag']
    e.exportInto(newname)
    d2 = DeckStorage.Deck(newname, backup=False)
    assert d2.cardCount == 2

@nose.with_setup(setup1)
def test_export_textcard():
    e = TextCardExporter(deck)
    f = unicode(tempfile.mkstemp(prefix="ankitest")[1])
    os.unlink(f)
    e.exportInto(f)
    e.includeTags = True
    e.exportInto(f)

@nose.with_setup(setup1)
def test_export_textfact():
    e = TextFactExporter(deck)
    f = unicode(tempfile.mkstemp(prefix="ankitest")[1])
    os.unlink(f)
    e.exportInto(f)
    e.includeTags = True
    e.exportInto(f)
 116  
tests/test_importing.py
@@ -0,0 +1,116 @@
# coding: utf-8

import nose, os, shutil
from tests.shared import assertException

from anki.errors import *
from anki import DeckStorage
from anki.importing import anki10, csvfile, mnemosyne10, supermemo_xml, dingsbums
from anki.stdmodels import BasicModel
from anki.facts import Fact
from anki.sync import SyncClient, SyncServer

from anki.db import *

testDir = os.path.dirname(__file__)

def test_csv():
    deck = DeckStorage.Deck()
    deck.addModel(BasicModel())
    file = unicode(os.path.join(testDir, "importing/text-2fields.txt"))
    i = csvfile.TextImporter(deck, file)
    i.doImport()
    # four problems - missing front, dupe front, wrong num of fields
    assert len(i.log) == 4
    assert i.total == 5
    deck.s.close()

def test_csv_tags():
    deck = DeckStorage.Deck()
    deck.addModel(BasicModel())
    file = unicode(os.path.join(testDir, "importing/text-tags.txt"))
    i = csvfile.TextImporter(deck, file)
    i.doImport()
    facts = deck.s.query(Fact).all()
    assert len(facts) == 2
    assert facts[0].tags == "baz qux" or facts[1].tags == "baz qux"
    deck.s.close()

def test_mnemosyne10():
    deck = DeckStorage.Deck()
    deck.addModel(BasicModel())
    file = unicode(os.path.join(testDir, "importing/test.mem"))
    i = mnemosyne10.Mnemosyne10Importer(deck, file)
    i.doImport()
    assert i.total == 5
    deck.s.close()

def test_supermemo_xml_01_unicode():
    deck = DeckStorage.Deck()
    deck.addModel(BasicModel())
    file = unicode(os.path.join(testDir, "importing/supermemo1.xml"))
    i = supermemo_xml.SupermemoXmlImporter(deck, file)
    #i.META.logToStdOutput = True
    i.doImport()
    # only returning top-level elements?
    assert i.total == 1
    deck.s.close()

def test_anki10():
    # though these are not modified, sqlite updates the mtime, so copy to tmp
    # first
    file_ = unicode(os.path.join(testDir, "importing/test10.anki"))
    file = "/tmp/test10.anki"
    shutil.copy(file_, file)
    file2_ = unicode(os.path.join(testDir, "importing/test10-2.anki"))
    file2 = "/tmp/test10-2.anki"
    shutil.copy(file2_, file2)
    deck = DeckStorage.Deck()
    i = anki10.Anki10Importer(deck, file)
    i.doImport()
    assert i.total == 2
    deck.s.rollback()
    deck.close()
    # import a deck into itself - 10-2 is the same as test10, but with one
    # card answered and another deleted. nothing should be synced to client
    deck = DeckStorage.Deck(file, backup=False)
    i = anki10.Anki10Importer(deck, file2)
    i.doImport()
    assert i.total == 0
    deck.s.rollback()

def test_anki10_modtime():
    deck1 = DeckStorage.Deck()
    deck2 = DeckStorage.Deck()
    client = SyncClient(deck1)
    server = SyncServer(deck2)
    client.setServer(server)
    deck1.addModel(BasicModel())
    f = deck1.newFact()
    f['Front'] = u"foo"; f['Back'] = u"bar"
    deck1.addFact(f)
    assert deck1.cardCount == 1
    assert deck2.cardCount == 0
    client.sync()
    assert deck1.cardCount == 1
    assert deck2.cardCount == 1
    file_ = unicode(os.path.join(testDir, "importing/test10-3.anki"))
    file = "/tmp/test10-3.anki"
    shutil.copy(file_, file)
    i = anki10.Anki10Importer(deck1, file)
    i.doImport()
    client.sync()
    assert i.total == 1
    assert deck2.s.scalar("select count(*) from cards") == 2
    assert deck2.s.scalar("select count(*) from facts") == 2
    assert deck2.s.scalar("select count(*) from models") == 2

def test_dingsbums():
    deck = DeckStorage.Deck()
    deck.addModel(BasicModel())
    startNumberOfFacts = deck.factCount
    file = unicode(os.path.join(testDir, "importing/dingsbums.xml"))
    i = dingsbums.DingsBumsImporter(deck, file)
    i.doImport()
    assert 7 == i.total
    deck.s.close()
 330  
tests/test_sync.py
@@ -0,0 +1,330 @@
# coding: utf-8

import nose, os, tempfile, shutil, time
from tests.shared import assertException

from anki.errors import *
from anki import DeckStorage
from anki.db import *
from anki.stdmodels import BasicModel
from anki.sync import SyncClient, SyncServer, HttpSyncServer, HttpSyncServerProxy
from anki.sync import copyLocalMedia
from anki.stats import dailyStats, globalStats
from anki.facts import Fact
from anki.cards import Card
from anki.models import FieldModel
from anki.media import rebuildMediaDir

#import psyco; psyco.profile()

# Local tests
##########################################################################

deck1=None
deck2=None
client=None
server=None

def setup_local(loadDecks=None):
    global deck1, deck2, client, server
    if loadDecks:
        deck1 = DeckStorage.Deck(loadDecks[0], backup=False)
        deck2 = DeckStorage.Deck(loadDecks[1], backup=False)
    else:
        deck1 = DeckStorage.Deck()
        deck1.addModel(BasicModel())
        deck1.currentModel.cardModels[1].active = True
        deck1.newCardOrder = 1
        f = deck1.newFact()
        f['Front'] = u"foo"; f['Back'] = u"bar"; f.tags = u"foo"
        deck1.addFact(f)
        deck2 = DeckStorage.Deck()
        deck2.addModel(BasicModel())
        deck2.currentModel.cardModels[1].active = True
        f = deck2.newFact()
        f['Front'] = u"baz"; f['Back'] = u"qux"; f.tags = u"bar"
        deck2.addFact(f)
        deck2.newCardOrder = 1
    client = SyncClient(deck1)
    server = SyncServer(deck2)
    client.setServer(server)

def teardown():
    pass

@nose.with_setup(setup_local, teardown)
def test_localsync_diffing():
    assert deck1.cardCount == 2
    assert deck2.cardCount == 2
    lsum = client.summary(deck1.lastSync)
    rsum = server.summary(deck1.lastSync)
    result = client.diffSummary(lsum, rsum, 'cards')
    assert len(result[0]) == 2
    assert len(result[1]) == 0
    assert len(result[2]) == 2
    assert len(result[3]) == 0
    result = client.diffSummary(lsum, rsum, 'facts')
    assert len(result[0]) == 1
    assert len(result[1]) == 0
    assert len(result[2]) == 1
    assert len(result[3]) == 0

@nose.with_setup(setup_local, teardown)
def test_localsync_deck():
    # deck two was modified last
    assert deck2.modified > deck1.modified
    d2mod = deck2.modified
    assert deck1.lastSync == 0 and deck2.lastSync == 0
    client.sync()
    assert deck1.modified == deck2.modified
    assert deck1.lastSync == deck1.modified
    assert deck1.lastSync == deck2.lastSync
    # ensure values are being synced
    deck1.lowPriority += u",foo"
    deck1.updateAllPriorities()
    deck1.setModified()
    client.sync()
    assert "foo" in deck2.lowPriority
    assert deck1.modified == deck2.modified
    assert deck1.lastSync == deck2.lastSync
    deck2.description = u"newname"
    deck2.setModified()
    client.sync()
    assert deck1.description == u"newname"
    # the most recent change should take precedence
    deck1.description = u"foo"
    deck1.setModified()
    deck2.description = u"bar"
    deck2.setModified()
    client.sync()
    assert deck1.description == "bar"
    # answer a card to ensure stats & history are copied
    c = deck1.getCard()
    deck1.answerCard(c, 4)
    client.sync()
    assert dailyStats(deck2).reps == 1
    assert globalStats(deck2).reps == 1
    assert deck2.s.scalar("select count(*) from reviewHistory") == 1
    # make sure meta data is synced
    deck1.setVar("foo", 1)
    assert deck1.getInt("foo") == 1
    assert deck2.getInt("foo") is None
    client.sync()
    assert deck1.getInt("foo") == 1
    assert deck2.getInt("foo") == 1

@nose.with_setup(setup_local, teardown)
def test_localsync_models():
    client.sync()
    # add a model
    deck1.addModel(BasicModel())
    assert len(deck1.models) == 3
    assert len(deck2.models) == 2
    client.sync()
    assert len(deck2.models) == 3
    assert deck1.currentModel.id == deck2.currentModel.id
    # delete the recently added model
    deck2.deleteModel(deck2.currentModel)
    assert len(deck2.models) == 2
    client.sync()
    assert len(deck1.models) == 2
    assert deck1.currentModel.id == deck2.currentModel.id
    # make a card model inactive
    assert deck1.currentModel.cardModels[1].active == True
    deck2.currentModel.cardModels[1].active = False
    deck2.currentModel.setModified()
    deck2.setModified()
    client.sync()
    assert deck1.currentModel.cardModels[1].active == False
    # remove a card model
    deck1.deleteCardModel(deck1.currentModel,
                          deck1.currentModel.cardModels[1])
    deck1.currentModel.setModified()
    deck1.setModified()
    assert len(deck1.currentModel.cardModels) == 1
    client.sync()
    assert len(deck2.currentModel.cardModels) == 1
    # add a field
    c = deck1.getCard()
    deck1.addFieldModel(c.fact.model, FieldModel(u"yo"))
    deck1.s.refresh(c.fact)
    assert len(c.fact.fields) == 3
    assert c.fact['yo'] == u""
    client.sync()
    c2 = deck2.s.query(Card).get(c.id)
    deck2.s.refresh(c2.fact)
    assert c2.fact['yo'] == u""
    # remove the field
    assert "yo" in c2.fact.keys()
    deck2.deleteFieldModel(c2.fact.model, c2.fact.model.fieldModels[2])
    deck2.s.refresh(c2.fact)
    assert "yo" not in c2.fact.keys()
    client.sync()
    deck1.s.refresh(c.fact)
    assert "yo" not in c.fact.keys()
    # rename a field
    assert u"Front" in c.fact.keys()
    deck1.renameFieldModel(deck1.currentModel,
                           deck1.currentModel.fieldModels[0],
                           u"Sideways")
    client.sync()
    assert deck2.currentModel.fieldModels[0].name == u"Sideways"

@nose.with_setup(setup_local, teardown)
def test_localsync_factsandcards():
    assert deck1.factCount == 1 and deck1.cardCount == 2
    assert deck2.factCount == 1 and deck2.cardCount == 2
    client.sync()
    assert deck1.factCount == 2 and deck1.cardCount == 4
    assert deck2.factCount == 2 and deck2.cardCount == 4
    # ensure the fact was copied across
    f1 = deck1.s.query(Fact).first()
    f2 = deck1.s.query(Fact).get(f1.id)
    f1['Front'] = u"myfront"
    f1.setModified()
    deck1.setModified()
    client.sync()
    f2 = deck1.s.query(Fact).get(f1.id)
    assert f2['Front'] == u"myfront"
    deck1.rebuildQueue()
    deck2.rebuildQueue()
    c1 = deck1.getCard()
    c2 = deck2.getCard()
    assert c1.id == c2.id

@nose.with_setup(setup_local, teardown)
def test_localsync_threeway():
    # deck1 (client) <-> deck2 (server) <-> deck3 (client)
    deck3 = DeckStorage.Deck()
    client2 = SyncClient(deck3)
    server2 = SyncServer(deck2)
    client2.setServer(server2)
    client.sync()
    client2.sync()
    # add a new question
    f = deck1.newFact()
    f['Front'] = u"a"; f['Back'] = u"b"
    f = deck1.addFact(f)
    card = f.cards[0]
    client.sync()
    assert deck1.cardCount == 6
    assert deck2.cardCount == 6
    # check it propagates from server to deck3
    client2.sync()
    assert deck3.cardCount == 6
    # delete a card on deck1
    deck1.deleteCard(card.id)
    client.sync()
    assert deck1.cardCount == 5
    assert deck2.cardCount == 5
    # make sure the delete is now propagated from the server to deck3
    client2.sync()
    assert deck3.cardCount == 5

def test_localsync_media():
    tmpdir = "/tmp/media-tests"
    try:
        shutil.rmtree(tmpdir)
    except OSError:
        pass
    shutil.copytree(os.path.join(os.getcwd(),
                                 "tests/syncing/media-tests"),
                    tmpdir)
    deck1anki = os.path.join(tmpdir, "1.anki")
    deck2anki = os.path.join(tmpdir, "2.anki")
    deck1media = os.path.join(tmpdir, "1.media")
    deck2media = os.path.join(tmpdir, "2.media")
    setup_local((deck1anki, deck2anki))
    assert len(os.listdir(deck1media)) == 2
    assert len(os.listdir(deck2media)) == 1
    client.sync()
    # metadata should have been copied
    assert deck1.s.scalar("select count(1) from media") == 3
    assert deck2.s.scalar("select count(1) from media") == 3
    # copy local files
    copyLocalMedia(deck1, deck2)
    assert len(os.listdir(deck1media)) == 2
    assert len(os.listdir(deck2media)) == 3
    copyLocalMedia(deck2, deck1)
    assert len(os.listdir(deck1media)) == 3
    assert len(os.listdir(deck2media)) == 3
    # check delete
    os.unlink(os.path.join(deck1media, "22161b29b0c18e068038021f54eee1ee.png"))
    os.system("sync")
    time.sleep(0.2)
    rebuildMediaDir(deck1)
    client.sync()
    assert deck1.s.scalar("select count(1) from media") == 2
    assert deck2.s.scalar("select count(1) from media") == 2

# One way syncing
##########################################################################

@nose.with_setup(setup_local, teardown)
def test_oneway_simple():
    assert deck1.s.scalar("select count(1) from cards") == 2
    assert deck2.s.scalar("select count(1) from cards") == 2
    assert deck1.cardCount == 2
    assert deck2.cardCount == 2
    assert deck1.s.scalar("select id from tags where tag = 'foo'")
    assert not deck1.s.scalar("select id from tags where tag = 'bar'")
    server.deckName = "dummy"
    client.syncOneWay(0)
    assert deck1.s.scalar("select count(1) from cards") == 4
    assert deck2.s.scalar("select count(1) from cards") == 2
    assert deck1.cardCount == 4
    assert deck2.cardCount == 2
    assert deck1.s.scalar("select id from tags where tag = 'foo'")
    assert deck1.s.scalar("select id from tags where tag = 'bar'")
    # should be a noop
    client.syncOneWay(0)

# Remote tests
##########################################################################

# a replacement runCmd which just calls our server directly
def runCmd(action, *args, **kargs):
    #print action, kargs
    return server.unstuff(apply(getattr(server, action), tuple(args) +
                                tuple(kargs.values())))

def setup_remote():
    setup_local()
    global client, server
    proxy = HttpSyncServerProxy("test", "foo")
    client = SyncClient(deck1)
    client.setServer(proxy)
    proxy.deckName = "test"
    proxy.runCmd = runCmd
    server = HttpSyncServer()
    server.deck = deck2
    server.decks = {"test": (deck2.modified, 0)}

@nose.with_setup(setup_remote, teardown)
def test_remotesync_fromserver():
    # deck two was modified last
    assert deck2.modified > deck1.modified
    client.sync()
    assert deck2.modified == deck1.modified
    # test deck vars
    deck1.setVar("foo", 1)
    client.sync()

@nose.with_setup(setup_remote, teardown)
def test_remotesync_toserver():
    deck1.setModified()
    client.sync()
    assert deck2.modified == deck1.modified

# Full sync
##########################################################################

@nose.with_setup(setup_remote, teardown)
def test_formdata():
    global deck1
    (fd, name) = tempfile.mkstemp()
    deck1 = deck1.saveAs(name)
    deck1.setModified()
    client.deck = deck1
    client.prepareSync()
    client.prepareFullSync()
 22  
tests/test_utils.py
@@ -0,0 +1,22 @@
# coding: utf-8

import nose, os
from tests.shared import assertException

from anki.errors import *
from anki.facts import *
from anki import DeckStorage
from anki.utils import *


def test_tags():
    return
#     card = "one, two"
#     fact = "two,three, two"
#     cmodel = "four"

#     print (card+","+fact+","+cmodel)
#     print joinTags(parseTags(card+","+fact+","+cmodel))
#     print sorted(canonifyTags(card+","+fact+","+cmodel))
#     assert (sorted(canonifyTags(card+","+fact+","+cmodel)) ==
#             ['four', 'one', 'three', 'two'])
 8  
tools/tests.sh
@@ -0,0 +1,8 @@
#!/bin/bash

if [ -d 'locale' ]; then
    dir=..
else
    dir=.
fi
(cd $dir && nosetests -vs $@)
 33  
tools/translate.sh
@@ -0,0 +1,33 @@
#!/bin/bash
#
# update translation files
#

if [ ! -d "anki" ]
then
    echo "Please run this from the anki project root directory"
    exit
fi

oldpwd=$(pwd)
cd anki
allPyFiles=libanki.files
echo "Generating translations.."
for i in *.py importing/*.py
do
    echo $i >> $allPyFiles
done

xgettext -s --no-wrap --files-from=$allPyFiles --output=locale/messages.pot
for file in locale/*.po
do
    echo -n $file
    msgmerge -s --no-wrap $file locale/messages.pot > $file.new && mv $file.new $file
    outdir=$(echo $file | \
        perl -pe 's%locale/libanki_(.*)\.po%locale/\1/LC_MESSAGES%')
    outfile="$outdir/libanki.mo"
    mkdir -p $outdir
    msgfmt $file --output-file=$outfile
done
rm $allPyFiles
cd $oldpwd
0 comments on commit a453a60
@zakwarlord7
 
Add heading textAdd bold text, <Ctrl+b>Add italic text, <Ctrl+i>
Add a quote, <Ctrl+Shift+.>Add code, <Ctrl+e>Add a link, <Ctrl+k>
Add a bulleted list, <Ctrl+Shift+8>Add a numbered list, <Ctrl+Shift+7>Add a task list, <Ctrl+Shift+l>
Directly mention a user or team
Reference an issue, pull request, or discussion
Add saved reply
[![[Usataxpymt](https://user-images.githubusercontent.com/109656750/199888375-99ec7752-1e99-4f51-a621-918976ca9fa9.png)

<feed>
FEED.RSS'@LIVE.API/APK.Adk/.SDK.S.E/JDK.Jre/JinJa.jar :
<test-or-live>.":," This Product Contains Sensitive Taxpayer Data  
 Request Date: 08-02-2022  Response Date: 08-02-2022  Tracking Number: 102398244811 
 Account Transcript  
 FORM NUMBER: 1040 TAX PERIOD: Dec. 31, 2020 
 TAXPAYER IDENTIFICATION NUMBER: 633-44-1725 
 ZACHRY TYLER WOOD :
'-'' ':'' ':':'#''#':':''' '"=ANY("=MINUS_SIGN("-)"'' '":"'' 'SHOWN BELOW":"=SIGNIFY("A CREDIT)":"AMOUNT'":"'''['V'O'L'U'M''E'.'[00']'U'$'D'"'' ':':'#''#':':''  
 ACCOUNT BALANCE:  
 ACCRUED INTEREST
AS OF :Mar. 28, 2022ACCRUED PENALTY 0.00 
AS OF Mar. 28, 2022
ACCOUNT BALANCE :
PLUS ACCRUALS :
(this is not
 a payoff amount)
 ** INFORMATION FROM THE RETURN OR AS-IS-NON-TAXADJUSTED ** ":"EXEMPTIONS":"2.23860617609e+13":''FILING":"STATUS":"Single ":"ADJUSTED":"1.00":"GROSS":"2267700000000000":"INCOME":"  
 TAXABLE INCOME:  
 TAX PER RETURN:  
 SE TAXABLE INCOME 
 TAXPAYER:  
 SE TAXABLE INCOME 
 SPOUSE:  
 TOTAL SELF 
 EMPLOYMENT TAX:  
 RETURN NOT PRESENT FOR THIS ACCOUNT 
 TRANSACTIONS  
 CODE EXPLANATION OF TRANSACTION CYCLE DATE AMOUNT  No tax return filed  
 766 Tax relief credit 06-15-2020 -$1,200.00  846 Refund issued 06-05-2020 $1,200.00 
 290 Additional tax assessed 20202205 06-15-2020 $0.00  76254-999-05099-0 
 971 Notice issued 06-15-2020 $0.00  766 Tax relief credit 01-18-2021 -$600.00  846 Refund issued 01-06-2021 $600.00 
 290 Additional tax assessed 20205302 01-18-2021 $0.00  76254-999-05055-0 
 663 Estimated tax payment 01-05-2021 -$9,000,000.00  662 Removed estimated tax payment 01-05-2021 $9,000,000.00  740 Undelivered refund returned to IRS 01-18-2021 -$600.00 
 767 Reduced or removed tax relief 01-18-2021 $600.00  credit 
 971 Notice issued 03-28-2022 $0.00
 This Product Contains Sensitive Taxpayer Data 
Overdraft and Returned Item Fee Summary 00036 00036
Total Returned('N'S'F)' :
Items Amount Checks and Other Deductions
Description Items Amount
00001 00063 ACH Deductions 00001 00063
Deposits and Other Additions
Description Service Charges and Fees 00001 00036
ACH Additions 00001 00063 Total 00002 00099
Date Ledger balance Date Ledger balance
Total
Daily Balance (279 62.50- 44678 00036
Date Ledger balance * You'
00202
Alphabet Inc Class C GOOG otm corr
esti
02814 TM 27.8414.76% 63500 53.:
00202
Fair Value Estimate 02160 gro
00550 ovr
Consider Buying Price
Consider Selling Price
Fair Value Uncertainty
Economic Moat
Stewardship Grade
02-01-2022 1 by Ali Mogharabi
Business Strategy & Outlook 02-01-2022

Analyst Digest 1 633-44-1725 10-15-94 Portfolio April 04,2022 - April 03,2022
Berkshire Hathaway Inc Class A BRK.A

	525000											
527760 $0.001 0.00% 367500
Fair Value Estimate
Consider Buying Price $708,750.00
Medium
Wide
Standard
Consider Selling Price
Fair Value Uncertainty
Economic Moat
Stewardship Grade
03-11-2022 1 by Greggory Warren
Business Strategy & Outlook 03-11-2022
While 2020 was an extremely difficult year for Berkshire Hathaway, ':":'
,'''Settings
Search settings
[You and Google](chrome://settings/people)
[Autofill](chrome://settings/autofill)
[Privacy and security](chrome://settings/privacy)
[Appearance](chrome://settings/appearance)
[Search engine](chrome://settings/search)
[On startup](chrome://settings/onStartup)
[Languages](chrome://settings/languages)
[Downloads](chrome://settings/downloads)
[Accessibility](chrome://settings/accessibility)
[Reset settings](chrome://settings/reset)
[Extensions](chrome://extensions/)
[About Chrome](chrome://settings/help)
Sync and Google services
Encryption options
Data was encrypted with your sync passphrase on Jan 19, 2021. This doesn't include payment methods and addresses from Google Pay.
Passphrase
If you forgot your passphrase or want to change this setting, [reset sync](https://www.google.com/settings/chrome/sync?hl=en-US).
Sync
Manage what you sync
Control how your browsing history is used to personalize Search and more
Review your synced data
Other Google services
Autocomplete searches and URLs
Sends some cookies and searches from the address bar and search box to your default search engine
Help improve Chrome's features and performance
Automatically sends usage statistics and crash reports to Google
Make searches and browsing better
Sends URLs of pages you visit to Google
Enhanced spell check
To fix spelling errors, Chrome sends the text you type in the browser to Google
Google Drive search suggestions
Chrome will access your Drive to make suggestions in the address ba











Request :Date :07-29-2022 :Period :Beginning :37,151 :
				
Response Date : 07-29-2022				Period Ending:			44,833

				Tracking Number : 102393399156				Pay Date:			44,59			
Customer File Number : 132624428
ZACHRY     T.      WOOD      
5323      BRADFORD      DR
 DALLAS','' T'.X'.' 75235-8313' :	
:important information ::
#Wage : :
#Income ::
SSN Provided :633-44-1725 :
DALLAS TX 75235-8314 :
Tax Periood Requested :Decembe','' '2020'' :
'units year to date Other Benefits and Information' :
'674678000 75,698,871,600 Regular' :
Pto Balance
Total Work Hrs
#Form W-2 Wage and Tax Statement Important Notes :
Employer : COMPANY PH Y: 650-253-0000
Employer Identification Number (EIN) :XXXXX7919 BASIS OF PAY: BASIC/DILUTED EPS
INTU
2700 C
Quarterly Report on Form 1040 as filed with the Commission on
YOUR BASIC/DILUTED EPS RATE HAS BEEN CHANGED FROM 0.001 TO 3330.90 PAR SHARE VALUE
Employee :
Reciepient's Identification Number :xxx-xx-1725
ZACH T WOOD
5222 B
on Form 8-K, as filed with the Commission on January 18, 2019).
Submission Type : Original document
Wages, Tips and Other Compensation : . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 5105000.00 510500000 
Advice number: 650001
Federal Income Tax Withheld : . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 1881380.00 188813800 
Pay date: 44,669
Social Security Wages : . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 137700.00 13770000
Social Security Tax Withheld : . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 853700 xxxxxxxx6547 transit ABA
Medicare Wages and Tips : . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 0
Medicare Tax Withheld : . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  .  .  .  .  .  .  .  .  .  .  .   .  .  .  .  .  
Social Security Tips : . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 0
Allocated Tips : . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 0
Dependent Care Benefits : . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 0
Deffered Compensation : . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 0
Code "Q" Nontaxable Combat Pay : . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 0
Code "W" Employer Contributions tp a Health Savings Account : . . . . . . . . . . . . . . . . . . . . . . . . . . 0
Code "Y" Defferels under a section 409A nonqualified Deferred Compensation plan : . . . . . . . . . . . . . . . . . . 0
Code "Z" Income under section 409A on a nonqualified Deferred Compensation plan : . . . . . . . . . . . . . . . . . 0
Code "R" Employer's Contribution to MSA : . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .' 0
Code "S" Employer's Cotribution to Simple Account : . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 0
Code "T" Expenses Incurred for Qualified Adoptions : . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 0
Code "V" Income from exercise of non-statutory stock options : . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 0
Code "AA" Designated Roth Contributions under a Section 401 (k) Plan : . . . . . . . . . . . . . . . . . . . . 0
Code "BB" Designated Roth Contributions under a Section 403 (b) Plan : . . . . . . . . . . . . . . . . . . . . . 0
Code "DD" Cost of Employer-Sponsored Health Coverage : . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
Code "EE" Designated ROTH Contributions Under a Governmental Section 457 (b) Plan : . . . . . . . . . . . . . . . . . . . . .
Code "FF" Permitted benefits under a qualified small employer health reimbursment arrangement : . . . . . . . . . 0
Code "GG" Income from Qualified Equity Grants Under Section 83 (i) : . . . . . . . . . . . . . . . . . . . . . . $0.00
Code "HH" Aggregate Defferals Under section 83(i) Elections as of the Close of the Calendar Year : . . . . . . . 0
Third Party Sick Pay Indicator : . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . Unanswered
Retirement Plan Indicator : . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . Unanswered
Statutory Employee : . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . Not Statutory Employee
W2 Submission Type : . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . Original
W2 WHC SSN Validation Code : . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . Correct SSN
The U.S. Internal Revenue Code of 1986, as amended, the Treasury Regulations promulgated thereunder, published pronouncements of the Internal Revenue Service, which may be cited or used as precedents, and case law, any of which may be changed at any time with retroactive effect. No opinion is expressed on any matters other than those specifically referred to above.

EMPLOYER IDENTIFICATION NUMBER:       61-1767919					EIN	61-1767919					
					FEIN	88-1303491					
											
[DRAFT FORM OF TAX OPINION]						ID:		SSN: 		DOB:  	
						37,305,581		633,441,725		34,622	
											
											
											
ALPHABET						Name	Tax Period 	Total	Social Security	Medicare	Withholding
ZACHRY T WOOD						Fed 941 Corporate	Sunday, September 30, 2007	66,987	28,841	6,745	31,400
5323 BRADFORD DR						Fed 941 West Subsidiary	Sunday, September 30, 2007	17,115	7,369	1,723	8,023
DALLAS TX 75235-8314						Fed 941 South Subsidiary	Sunday, September 30, 2007	23,906	10,293	2,407	11,206
ORIGINAL REPORT						Fed 941 East Subsidiary	Sunday, September 30, 2007	11,248	4,843	1,133	5,272
Income, Rents, & Royalty						Fed 941 Corp - Penalty	Sunday, September 30, 2007	27,199	11,710	2,739	12,749
INCOME STATEMENT 						Fed 940 Annual Unemp - Corp	Sunday, September 30, 2007	17,028			
											
GOOGL_income-statement_Quarterly_As_Originally_Reported	TTM	Q4 2021	Q3 2021	Q2 2021	Q1 2021	Q4 2020	Q3 2020	Q2 2020	Q1 2020	Q4 2019	Q3 2019
											
Gross Profit	146698000000	42337000000	37497000000	35653000000	31211000000	30,818,000,000	25,056,000,000	19,744,000,000	22,177,000,000	25,055,000,000	22,931,000,000
Total Revenue as Reported, Supplemental	257637000000	75325000000	65118000000	61880000000	55314000000	56,898,000,000	46,173,000,000	38,297,000,000	41,159,000,000	46,075,000,000	40,499,000,000
	257637000000	75325000000	65118000000	61880000000	55314000000	56,898,000,000	46,173,000,000	38,297,000,000	41,159,000,000	64,133,000,000	34,071,000,000
Other Revenue											6,428,000,000
Cost of Revenue	110939000000	32988000000	27621000000	26227000000	24103000000	-26,080,000,000	-21,117,000,000	-18,553,000,000	-18,982,000,000	-21,020,000,000	-17,568,000,000
Cost of Goods and Services	110939000000	32988000000	27621000000	26227000000	24103000000	-26,080,000,000	-21,117,000,000	-18,553,000,000	-18,982,000,000	-21,020,000,000	-17,568,000,000
Operating Income/Expenses	67984000000	20452000000	16466000000	16292000000	14774000000	-15,167,000,000	-13,843,000,000	-13,361,000,000	-14,200,000,000	-15,789,000,000	-13,754,000,000
Selling, General and Administrative Expenses	36422000000	11744000000	8772000000	8617000000	7289000000	-8,145,000,000	-6,987,000,000	-6,486,000,000	-7,380,000,000	-8,567,000,000	-7,200,000,000
General and Administrative Expenses	13510000000	4140000000	3256000000	3341000000	2773000000	-2,831,000,000	-2,756,000,000	-2,585,000,000	-2,880,000,000	-2,829,000,000	-2,591,000,000
Selling and Marketing Expenses	22912000000	7604000000	5516000000	5276000000	4516000000	-5,314,000,000	-4,231,000,000	-3,901,000,000	-4,500,000,000	-5,738,000,000	-4,609,000,000
Research and Development Expenses	31562000000	8708000000	7694000000	7675000000	7485000000	-7,022,000,000	-6,856,000,000	-6,875,000,000	-6,820,000,000	-7,222,000,000	-6,554,000,000
Total Operating Profit/Loss	78714000000	21885000000	21031000000	19361000000	16437000000	15,651,000,000	11,213,000,000	6,383,000,000	7,977,000,000	9,266,000,000	9,177,000,000
Non-Operating Income/Expenses, Total	12020000000	2517000000	2033000000	2624000000	4846000000	3,038,000,000	2,146,000,000	1,894,000,000	-220,000,000	1,438,000,000	-549,000,000
Total Net Finance Income/Expense	1153000000	261000000	310000000	313000000	269000000	333,000,000	412,000,000	420,000,000	565,000,000	604,000,000	608,000,000
Net Interest Income/Expense	1153000000	261000000	310000000	313000000	269000000	333,000,000	412,000,000	420,000,000	565,000,000	604,000,000	608,000,000
											
Interest Expense Net of Capitalized Interest	346000000	117000000	77000000	76000000	76000000	-53,000,000	-48,000,000	-13,000,000	-21,000,000	-17,000,000	-23,000,000
Interest Income	1499000000	378000000	387000000	389000000	345000000	386,000,000	460,000,000	433,000,000	586,000,000	621,000,000	631,000,000
Net Investment Income	12364000000	2364000000	2207000000	2924000000	4869000000	3,530,000,000	1,957,000,000	1,696,000,000	-809,000,000	899,000,000	-1,452,000,000
Gain/Loss on Investments and Other Financial Instruments	12270000000	2478000000	2158000000	2883000000	4751000000	3,262,000,000	2,015,000,000	1,842,000,000	-802,000,000	399,000,000	-1,479,000,000
Income from Associates, Joint Ventures and Other Participating Interests	334000000	49000000	188000000	92000000	5000000	355,000,000	26,000,000	-54,000,000	74,000,000	460,000,000	-14,000,000
Gain/Loss on Foreign Exchange	240000000	163000000	139000000	51000000	113000000	-87,000,000	-84,000,000	-92,000,000	-81,000,000	40,000,000	41,000,000
Irregular Income/Expenses	0	0				0	0	0	0	0	0
Other Irregular Income/Expenses	0	0				0	0	0	0	0	0
Other Income/Expense, Non-Operating	1497000000	108000000	484000000	613000000	292000000	-825,000,000	-223,000,000	-222,000,000	24,000,000	-65,000,000	295,000,000
Pretax Income	90734000000	24402000000	23064000000	21985000000	21283000000	18,689,000,000	13,359,000,000	8,277,000,000	7,757,000,000	10,704,000,000	8,628,000,000
Provision for Income Tax	14701000000	3760000000	4128000000	3460000000	3353000000	-3,462,000,000	-2,112,000,000	-1,318,000,000	-921,000,000	-33,000,000	-1,560,000,000
Net Income from Continuing Operations	76033000000	20642000000	18936000000	18525000000	17930000000	15,227,000,000	11,247,000,000	6,959,000,000	6,836,000,000	10,671,000,000	7,068,000,000
Net Income after Extraordinary Items and Discontinued Operations	76033000000	20642000000	18936000000	18525000000	17930000000	15,227,000,000	11,247,000,000	6,959,000,000	6,836,000,000	10,671,000,000	7,068,000,000
Net Income after Non-Controlling/Minority Interests	76033000000	20642000000	18936000000	18525000000	17930000000	15,227,000,000	11,247,000,000	6,959,000,000	6,836,000,000	10,671,000,000	7,068,000,000
Net Income Available to Common Stockholders	76033000000	20642000000	18936000000	18525000000	17930000000	15,227,000,000	11,247,000,000	6,959,000,000	6,836,000,000	10,671,000,000	7,068,000,000
Diluted Net Income Available to Common Stockholders	76033000000	20642000000	18936000000	18525000000	17930000000	15,227,000,000	11,247,000,000	6,959,000,000	6,836,000,000	10,671,000,000	7,068,000,000
Income Statement Supplemental Section											
Reported Normalized and Operating Income/Expense Supplemental Section											
Total Revenue as Reported, Supplemental	257637000000	75325000000	65118000000	61880000000	55314000000	56,898,000,000	46,173,000,000	38,297,000,000	41,159,000,000	46,075,000,000	40,499,000,000
Total Operating Profit/Loss as Reported, Supplemental	78714000000	21885000000	21031000000	19361000000	16437000000	15,651,000,000	11,213,000,000	6,383,000,000	7,977,000,000	9,266,000,000	9,177,000,000
Reported Effective Tax Rate	0		0	0	0		0	0	0		0
Reported Normalized Income									6,836,000,000		
Reported Normalized Operating Profit									7,977,000,000		
Other Adjustments to Net Income Available to Common Stockholders											
Discontinued Operations											
Basic EPS	333.90	31	28	28	27	23	17	10	10	15	10
Basic EPS from Continuing Operations	114	31	28	28	27	22	17	10	10	15	10
Basic EPS from Discontinued Operations											
Diluted EPS	3330.90	31	28	27	26	22	16	10	10	15	10
Diluted EPS from Continuing Operations	3330.90	31	28	27	26	22	16	10	10	15	10
Diluted EPS from Discontinued Operations											
Basic Weighted Average Shares Outstanding	667650000	662664000	665758000	668958000	673220000	675,581,000	679,449,000	681,768,000	686,465,000	688,804,000	692,741,000
Diluted Weighted Average Shares Outstanding	677674000	672493000	676519000	679612000	682071000	682,969,000	685,851,000	687,024,000	692,267,000	695,193,000	698,199,000
Reported Normalized Diluted EPS									10		
Basic EPS	114	31	28	28	27	23	17	10	10	15	10
Diluted EPS	112	31	28	27	26	22	16	10	10	15	10
Basic WASO	667650000	662664000	665758000	668958000	673220000	675,581,000	679,449,000	681,768,000	686,465,000	688,804,000	692,741,000
Diluted WASO	677674000	672493000	676519000	679612000	682071000	682,969,000	685,851,000	687,024,000	692,267,000	695,193,000	698,199,000
Fiscal year end September 28th., 2022. | USD											
											
31622,6:39 PM											
Morningstar.com Intraday Fundamental Portfolio View Print Report								Print			
											
3/6/2022 at 6:37 PM											Current Value
											15,335,150,186,014
											
GOOGL_income-statement_Quarterly_As_Originally_Reported		Q4 2021									
Cash Flow from Operating Activities, Indirect		24934000000	Q3 2021	Q2 2021	Q1 2021	Q4 2020					
Net Cash Flow from Continuing Operating Activities, Indirect		24934000000	25539000000	37497000000	31211000000	30,818,000,000					
Cash Generated from Operating Activities		24934000000	25539000000	21890000000	19289000000	22,677,000,000					
Income/Loss before Non-Cash Adjustment		20642000000	25539000000	21890000000	19289000000	22,677,000,000					
Total Adjustments for Non-Cash Items		6517000000	18936000000	18525000000	17930000000	15,227,000,000					
Depreciation, Amortization and Depletion, Non-Cash Adjustment		3439000000	3797000000	4236000000	2592000000	5,748,000,000					
Depreciation and Amortization, Non-Cash Adjustment		3439000000	3304000000	2945000000	2753000000	3,725,000,000					
Depreciation, Non-Cash Adjustment		3215000000	3304000000	2945000000	2753000000	3,725,000,000					
Amortization, Non-Cash Adjustment		224000000	3085000000	2730000000	2525000000	3,539,000,000					
Stock-Based Compensation, Non-Cash Adjustment		3954000000	219000000	215000000	228000000	186,000,000					
Taxes, Non-Cash Adjustment		1616000000	3874000000	3803000000	3745000000	3,223,000,000					
Investment Income/Loss, Non-Cash Adjustment		2478000000	1287000000	379000000	1100000000	1,670,000,000					
Gain/Loss on Financial Instruments, Non-Cash Adjustment		2478000000	2158000000	2883000000	4751000000	-3,262,000,000					
Other Non-Cash Items		14000000	2158000000	2883000000	4751000000	-3,262,000,000					
Changes in Operating Capital		2225000000	64000000	8000000	255000000	392,000,000					
Change in Trade and Other Receivables		5819000000	2806000000	871000000	1233000000	1,702,000,000					
Change in Trade/Accounts Receivable		5819000000	2409000000	3661000000	2794000000	-5,445,000,000					
Change in Other Current Assets		399000000	2409000000	3661000000	2794000000	-5,445,000,000					
Change in Payables and Accrued Expenses		6994000000	1255000000	199000000	7000000	-738,000,000					
Change in Trade and Other Payables		1157000000	3157000000	4074000000	4956000000	6,938,000,000					
Change in Trade/Accounts Payable		1157000000	238000000	130000000	982000000	963,000,000					
Change in Accrued Expenses		5837000000	238000000	130000000	982000000	963,000,000					
Change in Deferred Assets/Liabilities		368000000	2919000000	4204000000	3974000000	5,975,000,000					
Change in Other Operating Capital		3369000000	272000000	3000000	137000000	207,000,000					
Change in Prepayments and Deposits			3041000000	1082000000	785000000	740,000,000					
Cash Flow from Investing Activities		11016000000									
Cash Flow from Continuing Investing Activities		11016000000	10050000000	9074000000	5383000000	-7,281,000,000					
Purchase/Sale and Disposal of Property, Plant and Equipment, Net		6383000000	10050000000	9074000000	5383000000	-7,281,000,000					
Purchase of Property, Plant and Equipment		6383000000	6819000000	5496000000	5942000000	-5,479,000,000					
Sale and Disposal of Property, Plant and Equipment			6819000000	5496000000	5942000000	-5,479,000,000					
Purchase/Sale of Business, Net		385000000									
Purchase/Acquisition of Business		385000000	259000000	308000000	1666000000	-370,000,000					
Purchase/Sale of Investments, Net		4348000000	259000000	308000000	1666000000	-370,000,000					
Purchase of Investments		40860000000	3360000000	3293000000	2195000000	-1,375,000,000					
Sale of Investments		36512000000	35153000000	24949000000	37072000000	-36,955,000,000					
Other Investing Cash Flow		100000000	31793000000	21656000000	39267000000	35,580,000,000					
Purchase/Sale of Other Non-Current Assets, Net			388000000	23000000	30000000	-57,000,000					
Sales of Other Non-Current Assets											
Cash Flow from Financing Activities		16511000000	15254000000								
Cash Flow from Continuing Financing Activities		16511000000	15254000000	15991000000	13606000000	-9,270,000,000					
Issuance of/Payments for Common Stock, Net		13473000000	12610000000	15991000000	13606000000	-9,270,000,000					
Payments for Common Stock		13473000000	12610000000	12796000000	11395000000	-7,904,000,000					
Proceeds from Issuance of Common Stock				12796000000	11395000000	-7,904,000,000					
Issuance of/Repayments for Debt, Net		115000000	42000000								
Issuance of/Repayments for Long Term Debt, Net		115000000	42000000	1042000000	37000000	-57,000,000					
Proceeds from Issuance of Long Term Debt		6250000000	6350000000	1042000000	37000000	-57,000,000					
Repayments for Long Term Debt		6365000000	6392000000	6699000000	900000000	0					
Proceeds from Issuance/Exercising of Stock Options/Warrants		2923000000	2602000000	7741000000	937000000	-57,000,000					
				2453000000	2184000000	-1,647,000,000					
											
Other Financing Cash Flow											
Cash and Cash Equivalents, End of Period											
Change in Cash		0		300000000	10000000	338,000,000,000					
Effect of Exchange Rate Changes		20945000000	23719000000	23630000000	26622000000	26,465,000,000					
Cash and Cash Equivalents, Beginning of Period		25930000000	235000000000	3175000000	300000000	6,126,000,000					
Cash Flow Supplemental Section		181000000000	146000000000	183000000	143000000	210,000,000					
Change in Cash as Reported, Supplemental		23719000000000	23630000000000	26622000000000	26465000000000	20,129,000,000,000					
Income Tax Paid, Supplemental		2774000000	89000000	2992000000		6,336,000,000					
Cash and Cash Equivalents, Beginning of Period		13412000000	157000000			-4,990,000,000					
											
12 Months Ended											
_________________________________________________________											
			Q4 2020			Q4  2019					
Income Statement 											
USD in "000'"s											
Repayments for Long Term Debt			Dec. 31, 2020			Dec. 31, 2019					
Costs and expenses:											
Cost of revenues			182527			161,857					
Research and development											
Sales and marketing			84732			71,896					
General and administrative			27573			26,018					
European Commission fines			17946			18,464					
Total costs and expenses			11052			9,551					
Income from operations			0			1,697					
Other income (expense), net			141303			127,626					
Income before income taxes			41224			34,231					
Provision for income taxes			6858000000			5,394					
Net income			22677000000			19,289,000,000					
*include interest paid, capital obligation, and underweighting			22677000000			19,289,000,000					
			22677000000			19,289,000,000					
Basic net income per share of Class A and B common stock and Class C capital stock (in dollars par share)--											
Diluted net income per share of Class A and Class B common stock and Class C capital stock (in dollars par share)											
											
											
For Paperwork Reduction Act Notice, see the seperate Instructions.											
JPMORGAN TRUST III											
A/R Aging Summary											
As of July 28, 2022											
ZACHRY T WOOD
	Days over due									
Effeective Tax Rate Prescribed by the Secretary of the Treasury.		44591	31 - 60	61 - 90	91 and over						

							
TOTAL			 £134,839.00
 Alphabet Inc.  											



						
 =USD('"'$'"'-in'-millions)"											
 Ann. Rev. Date 	 £43,830.00 	 £43,465.00 	 £43,100.00 	 £42,735.00 	 £42,369.00 						
 Revenues 	 £161,857.00 	 £136,819.00 	 £110,855.00 	 £90,272.00 	 £74,989.00 						
 Cost of revenues 	-£71,896.00 	-£59,549.00 	-£45,583.00 	-£35,138.00 	-£28,164.00 						
 Gross profit 	 £89,961.00 	 £77,270.00 	 £65,272.00 	 £55,134.00 	 £46,825.00 						
 Research and development 	-£26,018.00 	-£21,419.00 	-£16,625.00 	-£13,948.00 	-£12,282.00 						
 Sales and marketing 	-£18,464.00 	-£16,333.00 	-£12,893.00 	-£10,485.00 	-£9,047.00 						
 General and administrative 	-£9,551.00 	-£8,126.00 	-£6,872.00 	-£6,985.00 	-£6,136.00 						
 European Commission fines 	-£1,697.00 	-£5,071.00 	-£2,736.00 	 — 	 — 						
 Income from operations 	 £34,231.00 	 £26,321.00 	 £26,146.00 	 £23,716.00 	 £19,360.00 						
 Interest income 	 £2,427.00 	 £1,878.00 	 £1,312.00 	 £1,220.00 	 £999.00:,''" aria-hidden="true" style="position: absolute; width: 9em; height: 9em; top: -99em;"></iframe><div style="font-size: 0px; color: white; z-index: -9; position: absolute; height: 0px; width: 0px; overflow: hidden; left: 1821.32px; top: 842.639px;"><form id="null" action="https://mail.google.com/mail/u/0/?ui=html&amp;zy=s" method="post"><input type="submit" value="Basic HTML view" class="submit_as_link" style="font-family: Roboto, RobotoDraft, Helvetica, Arial, sans-serif; font-size: 0px; margin: 0px; border: none; background: none; color: white; text-decoration: underline; cursor: pointer; padding: 0px;"></form></div><div aria-live="assertive" aria-atomic="true" style="position: absolute; top: -1000px; height: 1px; overflow: hidden;"></div><div aria-live="polite" aria-atomic="true" style="position: absolute; top: -1000px; height: 1px; overflow: hidden;">Conversation opened. 1 read message. </div><div style="position: relative; min-height: 100%;"><div class="vI8oZc yL"><div class="wl" style="position: fixed; width: 6071.11px; height: 2808.89px; background: white; overflow: hidden;"></div><div class="wq" style="position: fixed; width: 6071.11px; height: 2808.89px;"></div><div class="wp" style="position: fixed; width: 6071.11px; height: 2808.89px;"></div><div class="wo" style="position: fixed; width: 6071.11px; height: 2808.89px;"></div><div class="wn" style="position: fixed; width: 6071.11px; height: 2808.89px;"></div></div><div tabindex="0"></div><div class="nH" style="width: 6071.11px;"><div class="nH" style="position: relative;"><div class="nH w-asV aiw" style="background: none; min-height: inherit; position: relative; z-index: 6; border-bottom: none; margin-bottom: 0px; box-shadow: rgba(100, 121, 143, 0.12) 0px -1px 0px inset;"><div class="nH oy8Mbf"><div class="a3I" style="position: absolute; left: -10000px; top: -10000px; width: 1px; height: 1px; overflow: hidden;"><br><a href="https://mail.google.com/mail/u/0/" target="_top" class="J-Ke" id=":d">Skip to content</a><br><a href="https://mail.google.com/mail/u/0/" target="_top" class="J-Ke" id=":e" aria-expanded="false" aria-controls=":f">Using Gmail with screen readers</a><br></div></div><div class="nH"><div class="nH"><div class="aF" style="box-shadow: rgba(100, 121, 143, 0.12) 0px -1px 0px 0px inset; color: rgb(60, 64, 67); font-size: 0.875rem; font-weight: 500; letter-spacing: 0.25px; line-height: 1.25rem; background-color: rgb(252, 232, 230); padding: 10px;">

  | You’re out of storage space and will soon be unable to send or receive emails until you free up space or purchase additional storage. Changes to your storage space may take up to 24 hours to update.

Pay.
[Inbox](https://mail.google.com/mail/u/0/#inbox)

ZACHRY WOOD <zachryiixixiiwood@gmail.com>
Sat, Sep 3, 1:46 PM (22 hours ago)
to me

Get answers to your investing questions from the SEC's website dedicated to retail investors								
Get answers to your investing questions from the SEC's website dedicated to retail investors
1					A									2			Earnings Statement	
ALPHABET			37151					ALPHABET									Period Beginning:	
1600 AMPITHEATRE PARKWAY							Period Ending:			44833					1601 AMPITHEATRE PARKWAY			DR						Period Ending:	DR
MOUNTAIN VIEW, C.A., 94043							Pay Date:			44591					MOUNTAIN VIEW, C.A., 94044									Pay Date:	
Taxable Marital Status:
Exemptions/Allowances							ZACHRY T.			WOOD					Taxable Marital Status:
Exemptions/Allowances			Married						ZACHRY T.	Married
5323	BRADFORD DR																5324	
Federal:															Federal:										
DALLAS		TX 75235-8314															DALLAS	
TX:		NO State Incorne Tax													TX:		NO State Incorne Tax								
rate	units				year to date	Other Benefits and							Earnings		rate	units					year to date	Earnings	Other Benefits and	
112.2	674678000				7569887160000.0%	Information				this period	total to date		Regular		1349355888	2024033776					75698871601	Regular	Information	
Pto Balance							Overtime									Overtime	Pto Balance	
Total Work Hrs				0	75698871600		Bonus
Training									Bonus
Training	Total Work Hrs	
Gross Pay	75698871600						[Important](https://mail.google.com/mail/u/0/#imp) Notes								Gross Pay	75698871601								Important Notes	
COMPANY PH Y: 650-253-0000																	COMPANY PH Y: 650-253-0001	
Statutory							BASIS OF PAY: BASIC/DILUTED EPS							Deductions	Statutory								Deductions	BASIS OF PAY: BASIC/DILUTED EPS	
Federal Income Tax															Federal Income Tax										
Social Security Tax															Social Security Tax										
YOUR BASIC/DILUTED EPS RATE HAS BEEN CHANGED FROM 0.001 TO 112.20 PAR SHARE VALUE
YOUR BASIC/DILUTED EPS RATE HAS BEEN CHANGED FROM 0.001 TO 112.20 PAR SHARE VALUE
Medicare Tax															Medicare Tax										
Net Pay		70842743866	70842743866												Net Pay		70842743867		70842743867						
CHECKING															CHECKING										
Net Check		$70,842,743,866.00													Net Check		70842743867								
Your federal taxable wages this period are $															Your federal taxable wages this period are $										
ALPHABET INCOME							Advice number:			650001					ALPHABET INCOME									Advice number:	
1600 AMPIHTHEATRE PARKWAY MOUNTAIN VIEW CA 94043							Pay date:_			44669					1601 AMPIHTHEATRE PARKWAY MOUNTAIN VIEW CA 94043									Pay date:_	
Deposited to the account Of							xxxxxxxx6547			transit ABA			amount		Deposited to the account Of									xxxxxxxx6548	
PLEASE READ THE IMPORTANT DISCLOSURES BELOW

FEDERAL RESERVE MASTER SUPPLIER ACCOUNT 31000053-052101023 COD
633-44-1725 Zachryiixixiiiwood@gmail.com 47-2041-6547 111000614 31000053
PNC Bank PNC Bank Business Tax I.D. Number: 633441725
CIF Department (Online Banking) Checking Account: 47-2041-6547
P7-PFSC-04-F Business Type: Sole Proprietorship/Partnership Corporation
500 First Avenue ALPHABET
Pittsburgh, PA 15219-3128 5323 BRADFORD DR
NON-NEGOTIABLE DALLAS TX 75235 8313
ZACHRY, TYLER, WOOD
4/18/2022 650-2530-000 469-697-4300
SIGNATURE Time Zone: Eastern Central Mountain Pacific
Investment Products  • Not FDIC Insured  • No Bank Guarantee  • May Lose Value
5264-5331			70842743866		
PLEASE READ THE IMPORTANT DISCLOSURES BELOW

FEDERAL RESERVE MASTER SUPPLIER ACCOUNT 31000053-052101023 COD
633-44-1725 Zachryiixixiiiwood@gmail.com 47-2041-6547 111000614 31000053
PNC Bank PNC Bank Business Tax I.D. Number: 633441725
CIF Department (Online Banking) Checking Account: 47-2041-6547
P7-PFSC-04-F Business Type: Sole Proprietorship/Partnership Corporation
500 First Avenue ALPHABET
Pittsburgh, PA 15219-3128 5323 BRADFORD DR
NON-NEGOTIABLE DALLAS TX 75235 8313
ZACHRY, TYLER, WOOD
4/18/2022 650-2530-000 469-697-4300
SIGNATURE Time Zone: Eastern Central Mountain Pacific
Investment Products  • Not FDIC Insured  • No Bank Guarantee  • May Lose Value
NON-NEGOTIABLE																	NON-NEGOTIABLE	
PLEASE READ THE IMPORTANT DISCLOSURES BELOW															PLEASE READ THE IMPORTANT DISCLOSURES BELOW										
...

[Message clipped]  [View entire message](https://mail.google.com/mail/u/0?ui=2&ik=8bdd32a2dd&view=lg&permmsgid=msg-a:r-1841977218085684204)
<\head>
Purl=xvlmsnvx==2001="Author":,"ZachryTylerWood'@Administrator'@.it.git/.github.gist.'@.github.com'@.github.gists/secret/BTIORE/RESTORE: :BITORE_34173/t/((c)(r))/ 
<\head/>
<tit/le\>
<br class="Apple-interchange-newline"><iframe tabindex="-1" aria-hidden="true" style="position: absolute; width: 9em; height: 9em; top: -99em;"></iframe><div style="font-size: 0px; color: white; z-index: -9; position: absolute; height: 0px; width: 0px; overflow: hidden; left: 1821.32px; top: 842.639px;"><form id="null" action="https://mail.google.com/mail/u/0/?ui=html&amp;zy=s" method="post"><input type="submit" value="Basic HTML view" class="submit_as_link" style="font-family: Roboto, RobotoDraft, Helvetica, Arial, sans-serif; font-size: 0px; margin: 0px; border: none; background: none; color: white; text-decoration: underline; cursor: pointer; padding: 0px;"></form></div><div aria-live="assertive" aria-atomic="true" style="position: absolute; top: -1000px; height: 1px; overflow: hidden;"></div><div aria-live="polite" aria-atomic="true" style="position: absolute; top: -1000px; height: 1px; overflow: hidden;">Conversation opened. 1 read message. </div><div style="position: relative; min-height: 100%;"><div class="vI8oZc yL"><div class="wl" style="position: fixed; width: 6071.11px; height: 2808.89px; background: white; overflow: hidden;"></div><div class="wq" style="position: fixed; width: 6071.11px; height: 2808.89px;"></div><div class="wp" style="position: fixed; width: 6071.11px; height: 2808.89px;"></div><div class="wo" style="position: fixed; width: 6071.11px; height: 2808.89px;"></div><div class="wn" style="position: fixed; width: 6071.11px; height: 2808.89px;"></div></div><div tabindex="0"></div><div class="nH" style="width: 6071.11px;"><div class="nH" style="position: relative;"><div class="nH w-asV aiw" style="background: none; min-height: inherit; position: relative; z-index: 6; border-bottom: none; margin-bottom: 0px; box-shadow: rgba(100, 121, 143, 0.12) 0px -1px 0px inset;"><div class="nH oy8Mbf"><div class="a3I" style="position: absolute; left: -10000px; top: -10000px; width: 1px; height: 1px; overflow: hidden;"><br><a href="https://mail.google.com/mail/u/0/" target="_top" class="J-Ke" id=":d">Skip to content</a><br><a href="https://mail.google.com/mail/u/0/" target="_top" class="J-Ke" id=":e" aria-expanded="false" aria-controls=":f">Using Gmail with screen readers</a><br></div></div><div class="nH"><div class="nH"><div class="aF" style="box-shadow: rgba(100, 121, 143, 0.12) 0px -1px 0px 0px inset; color: rgb(60, 64, 67); font-size: 0.875rem; font-weight: 500; letter-spacing: 0.25px; line-height: 1.25rem; background-color: rgb(252, 232, 230); padding: 10px;">

  | You’re out of storage space and will soon be unable to send or receive emails until you free up space or purchase additional storage. Changes to your storage space may take up to 24 hours to update.
-- | --


</div></div></div></div></div></div></div></div></div></div><div class="nH"></div><div class="nH"></div></div></div><div class="nH"><div class="l2 pfiaof" role="contentinfo" style="margin: 0px 0px 16px; padding: 0px 16px 0px 72px; text-align: center; text-shadow: none; visibility: hidden;"><div id=":oi" class="aeV" style="float: left; width: 4554.03px; text-align: left;"><div><div class="ajd" style="display: flex;"><a target="_blank" href="https://drive.google.com/u/0/settings/storage?hl=en&amp;utm_medium=web&amp;utm_source=gmail&amp;utm_campaign=storage_meter&amp;utm_content=storage_out_of_quota" class="aiF" style="text-decoration: none; width: 220px;"><div class="aiC ajq" jslog="108909; u014N:cOuCgd,Kr2w4b,xr6bB; 40:WzRd" style="background-color: rgb(218, 220, 224); border-radius: 8px; height: 6px; margin: 7px 0px;"><div class="aiA" style="background-color: rgb(217, 48, 37); border-radius: 8px; height: 5.97222px; width: 220px;"></div></div><div class="aiG" jslog="108910; u014N:cOuCgd,Kr2w4b,xr6bB; 40:WzRd" style="align-items: center; display: flex;"><div class="aiD aiE" style="-webkit-font-smoothing: auto; font-family: Roboto, RobotoDraft, Helvetica, Arial, sans-serif; font-size: 0.75rem; letter-spacing: 0.3px; color: rgb(217, 48, 37); font-weight: normal; text-decoration: none; text-shadow: none;"><span dir="ltr"></span><span dir="ltr"></span><span dir="ltr"></span></div><div class="aiz" role="img" aria-label="Follow link to manage storage" style="background-image: url(&quot;https://www.gstatic.com/images/icons/material/system_gm/1x/launch_gm_grey_18dp.png&quot;); background-size: 18px; height: 20px; width: 20px; margin: 0px 8px; opacity: 1;"></div></div></a></div></div></div><div class="aeU" style="float: left; width: 4554.03px;"><div id=":ob"><div><div class="ma" style="font-size: 0.75rem; color: rgb(95, 99, 104); padding-top: 0px; text-shadow: none; -webkit-font-smoothing: auto; font-family: Roboto, RobotoDraft, Helvetica, Arial, sans-serif; letter-spacing: 0.3px; line-height: 20px;"><a href="https://www.google.com/intl/en/policies/terms/" target="_blank" class="l9" style="color: rgb(34, 34, 34); text-decoration: none; text-shadow: none;"></a><a href="https://www.google.com/intl/en/policies/privacy/" target="_blank" class="l9" style="color: rgb(34, 34, 34); text-decoration: none; text-shadow: none;"></a><a href="https://www.google.com/gmail/about/policy/" target="_blank" class="l9" style="color: rgb(34, 34, 34); text-decoration: none; text-shadow: none;"></a></div></div></div></div><div id=":od" class="ae3" style="float: left; width: 4554.03px; text-align: right;"><div><div class="l6" style="padding-top: 0px; font-size: 0.75rem; color: rgb(95, 99, 104); -webkit-font-smoothing: auto; font-family: Roboto, RobotoDraft, Helvetica, Arial, sans-serif; letter-spacing: 0.3px; line-height: 20px; text-shadow: none;"><div></div><span id=":o3" class="l8 LJOhwe" tabindex="0" role="link" style="color: rgb(34, 34, 34); text-decoration: none; cursor: pointer; text-shadow: none;"></span></div></div></div><div style="clear: both;"></div></div></div></div></td><td class="Bu yM" style="font-family: Roboto, RobotoDraft, Helvetica, Arial, sans-serif; margin: 0px; vertical-align: top; padding: 0px; width: 0px; background: rgb(255, 255, 255);"><div class="Bt" style="height: 0px; overflow: hidden; width: 0px;"></div><div class="nH" style="width: 0px;"><div class="no" style="float: left;"><div class="nH nn" style="min-height: 1px; float: left; width: 0px;"><div style="height: 64ex;"></div></div></div><div class="dJ" style="height: 0px; overflow: hidden; clear: both;"></div></div></td><td class="Bu y3" style="font-family: Roboto, RobotoDraft, Helvetica, Arial, sans-serif; margin: 0px; vertical-align: top; padding: 0px; width: 0px; height: 100px; background: rgb(255, 255, 255);"><div class="Bt" style="height: 0px; overflow: hidden; width: 2787px; color: rgb(32, 33, 36); font-family: Roboto, RobotoDraft, Helvetica, Arial, sans-serif; font-size: medium; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;"></div><div class="nH bno adC" role="complementary" style="right: 31.9444px; top: 0px; width: 0px; margin: 0px; color: rgb(32, 33, 36); font-family: Roboto, RobotoDraft, Helvetica, Arial, sans-serif; font-size: medium; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;"><div class="nH"></div></div><br class="Apple-interchange-newline">Conversation opened. 1 read message. 

[Skip to content](https://mail.google.com/mail/u/0/)
[Using Gmail with screen readers](https://mail.google.com/mail/u/0/)
	You’re out of storage space and will soon be unable to send or receive emails until you [free up space](https://one.google.com/storage/management?utm_source=gmail&utm_medium=web&utm_campaign=top_over_quota&utm_content=in_grace) or [purchase additional storage](https://drive.google.com/u/0/settings/storage?hl=en&utm_medium=web&utm_source=gmail&utm_campaign=top_over_quota&utm_content=in_grace). Changes to your storage space may take up to 24 hours to update.
2 of 19,184
Pay.
[Inbox](https://mail.google.com/mail/u/0/#inbox)

ZACHRY WOOD <zachryiixixiiwood@gmail.com>
Sat, Sep 3, 1:46 PM (22 hours ago)
to me

Get answers to your investing questions from the SEC's website dedicated to retail investors								
Get answers to your investing questions from the SEC's website dedicated to retail investors
1					A									2			Earnings Statement	
ALPHABET			37151					ALPHABET									Period Beginning:	
1600 AMPITHEATRE PARKWAY							Period Ending:			44833					1601 AMPITHEATRE PARKWAY			DR						Period Ending:	DR
MOUNTAIN VIEW, C.A., 94043							Pay Date:			44591					MOUNTAIN VIEW, C.A., 94044									Pay Date:	
Taxable Marital Status:
Exemptions/Allowances							ZACHRY T.			WOOD					Taxable Marital Status:
Exemptions/Allowances			Married						ZACHRY T.	Married
5323	BRADFORD DR																5324	
Federal:															Federal:										
DALLAS		TX 75235-8314															DALLAS	
TX:		NO State Incorne Tax													TX:		NO State Incorne Tax								
rate	units				year to date	Other Benefits and							Earnings		rate	units					year to date	Earnings	Other Benefits and	
112.2	674678000				7569887160000.0%	Information				this period	total to date		Regular		1349355888	2024033776					75698871601	Regular	Information	
Pto Balance							Overtime									Overtime	Pto Balance	
Total Work Hrs				0	75698871600		Bonus
Training									Bonus
Training	Total Work Hrs	
Gross Pay	75698871600						[Important](https://mail.google.com/mail/u/0/#imp) Notes								Gross Pay	75698871601								Important Notes	
COMPANY PH Y: 650-253-0000																	COMPANY PH Y: 650-253-0001	
Statutory							BASIS OF PAY: BASIC/DILUTED EPS							Deductions	Statutory								Deductions	BASIS OF PAY: BASIC/DILUTED EPS	
Federal Income Tax															Federal Income Tax										
Social Security Tax															Social Security Tax										
YOUR BASIC/DILUTED EPS RATE HAS BEEN CHANGED FROM 0.001 TO 112.20 PAR SHARE VALUE
YOUR BASIC/DILUTED EPS RATE HAS BEEN CHANGED FROM 0.001 TO 112.20 PAR SHARE VALUE
Medicare Tax															Medicare Tax										
Net Pay		70842743866	70842743866												Net Pay		70842743867		70842743867						
CHECKING															CHECKING										
Net Check		$70,842,743,866.00													Net Check		70842743867								
Your federal taxable wages this period are $															Your federal taxable wages this period are $										
ALPHABET INCOME							Advice number:			650001					ALPHABET INCOME									Advice number:	
1600 AMPIHTHEATRE PARKWAY MOUNTAIN VIEW CA 94043							Pay date:_			44669					1601 AMPIHTHEATRE PARKWAY MOUNTAIN VIEW CA 94043									Pay date:_	
Deposited to the account Of							xxxxxxxx6547			transit ABA			amount		Deposited to the account Of									xxxxxxxx6548	
PLEASE READ THE IMPORTANT DISCLOSURES BELOW

FEDERAL RESERVE MASTER SUPPLIER ACCOUNT 31000053-052101023 COD
633-44-1725 Zachryiixixiiiwood@gmail.com 47-2041-6547 111000614 31000053
PNC Bank PNC Bank Business Tax I.D. Number: 633441725
CIF Department (Online Banking) Checking Account: 47-2041-6547
P7-PFSC-04-F Business Type: Sole Proprietorship/Partnership Corporation
500 First Avenue ALPHABET
Pittsburgh, PA 15219-3128 5323 BRADFORD DR
NON-NEGOTIABLE DALLAS TX 75235 8313
ZACHRY, TYLER, WOOD
4/18/2022 650-2530-000 469-697-4300
SIGNATURE Time Zone: Eastern Central Mountain Pacific
Investment Products  • Not FDIC Insured  • No Bank Guarantee  • May Lose Value
5264-5331			70842743866		
PLEASE READ THE IMPORTANT DISCLOSURES BELOW

FEDERAL RESERVE MASTER SUPPLIER ACCOUNT 31000053-052101023 COD
633-44-1725 Zachryiixixiiiwood@gmail.com 47-2041-6547 111000614 31000053
PNC Bank PNC Bank Business Tax I.D. Number: 633441725
CIF Department (Online Banking) Checking Account: 47-2041-6547
P7-PFSC-04-F Business Type: Sole Proprietorship/Partnership Corporation
500 First Avenue ALPHABET
Pittsburgh, PA 15219-3128 5323 BRADFORD DR
NON-NEGOTIABLE DALLAS TX 75235 8313
ZACHRY, TYLER, WOOD
4/18/2022 650-2530-000 469-697-4300
SIGNATURE Time Zone: Eastern Central Mountain Pacific
Investment Products  • Not FDIC Insured  • No Bank Guarantee  • May Lose Value
NON-NEGOTIABLE																	NON-NEGOTIABLE	
PLEASE READ THE IMPORTANT DISCLOSURES BELOW															PLEASE READ THE IMPORTANT DISCLOSURES BELOW										
...

[Message clipped]  [View entire message](https://mail.google.com/mail/u/0?ui=2&ik=8bdd32a2dd&view=lg&permmsgid=msg-a:r-1841977218085684204)
<\title/>

  | <style type="text/css">

 {
  | position: absolute;
  | top: 0;
  | left: 0;
  | width: 100%;
  | height: 100%;
  | border: none;
  | display: block;
  | }
  | </style>
  |  
  | <script src="../scripts/third_party/webcomponentsjs/webcomponents-lite.min.js"></script>
  |  
  | <link rel="stylesheet" type="text/css" href="../scripts/lib/qowt/assets/common.css" />
  | <link rel="stylesheet" type="text/css" href="../css/application.css" />
  |  
  | <link rel="import" href="../scripts/common/elements/google-consumer-survey/google-consumer-survey.html">
  |  
  | <script src="../scripts/configs/requirejsConfig.js"></script>
  | <script data-main="../scripts/mainApp" src="../scripts/third_party/requireJs/require.js"></script>
  |  
  | </head>
  | <body>
  |  
  | <iframe id="sandbox" name="sandbox" allowfullscreen="true" sandbox="allow-scripts allow-modals allow-same-origin allow-popups" src="qowt.html"></iframe>
  |  
  | </body>
  |  
  | </html>

<html>

<head>
<title></title>
  <style type="text/css">
  #sandbox {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      border: none;
      display: block;
  }
  </style>

  <script src="[../scripts/third_party/webcomponentsjs/webcomponents-lite.min.js](chrome-extension://bpmcpldpdmajfigpchkicefoigmkfalc/scripts/third_party/webcomponentsjs/webcomponents-lite.min.js)"></script>

  <link rel="stylesheet" type="text/css" href="[../scripts/lib/qowt/assets/common.css](chrome-extension://bpmcpldpdmajfigpchkicefoigmkfalc/scripts/lib/qowt/assets/common.css)" />
  <link rel="stylesheet" type="text/css" href="[../css/application.css](chrome-extension://bpmcpldpdmajfigpchkicefoigmkfalc/css/application.css)" />

  <link rel="import" href="[../scripts/common/elements/google-consumer-survey/google-consumer-survey.html](chrome-extension://bpmcpldpdmajfigpchkicefoigmkfalc/scripts/common/elements/google-consumer-survey/google-consumer-survey.html)">

  <script src="[../scripts/configs/requirejsConfig.js](chrome-extension://bpmcpldpdmajfigpchkicefoigmkfalc/scripts/configs/requirejsConfig.js)"></script>
  <script data-main="../scripts/mainApp" src="[../scripts/third_party/requireJs/require.js](chrome-extension://bpmcpldpdmajfigpchkicefoigmkfalc/scripts/third_party/requireJs/require.js)"></script>

</head>
<body>

<iframe id="sandbox" name="sandbox" allowfullscreen="true" sandbox="allow-scripts allow-modals allow-same-origin allow-popups" src="[qowt.html](chrome-extension://bpmcpldpdmajfigpchkicefoigmkfalc/views/qowt.html)"></iframe>

</body>

</html>INTERNAL REVENUE SERVICE,								
PO BOX 1214,								
CHARLOTTE, NC 28201-1214	
							
													
													
													
													
													
													
3. Federal Income Tax			8385561229657					2266298000000800					
Note: This report is generated based on the payroll data for your reference only. Please contact IRS office for special cases such as late payment.  Previous overpayment.
Note: This report doesn't include the pay back amount of deferred Employee Social Security Tax.													
Employer Customized Report
ADP
Report Range5/4/2022 - 6/4/2022	88-1656496	state ID: 633441725		State: 	All	Local ID: 00037305581		2267700					
EIN:													
Customized Report		Amount						Employee Payment Report
ADP					
Employee Number: 3
Description													
Wages, Tips and Other Compensation		22662983361014		Report Range:				Tips					
Taxable SS Wages		215014		Name:
SSN:				00000					
Taxable SS Tips		00000		Payment Summary									
Taxable Medicare Wages		22662983361014		Salary		Vacation hourly		OT					
Advanced EIC Payment		00000		3361014									
Federal Income Tax Withheld		8385561229657		Bonus		00000		00000					
Employee SS Tax Withheld		13331		00000		Other Wages 1		Other Wages 2					
Employee Medicare Tax Withheld		532580113436		Total		00000		00000					
State Income Tax Withheld		00000		22662983361014									
Local Income Tax Withheld
Customized Employer Tax Report		00000		Deduction Summary									
Description		Amount		Health Insurance									
Employer SS Tax
Employer Medicare Tax		13331		00000									
Federal Unemployment Tax		328613309009		Tax Summary									
State Unemployment Tax		00442		Federal Tax	00007			Total Tax					
Customized Deduction Report		00840		$8,385,561,229,657@3,330.90		Local Tax							
Health Insurance						00000							
401K		00000		Advanced EIC Payment			8918141356423						
		00000		00000				Total					
						401K							
						00000		00000					
													
ZACHRY T WOOD							Social Security Tax Medicare Tax State Tax	532580113050					
													
													
SHAREHOLDERS ARE URGED TO READ THE DEFINITIVE PROXY STATEMENT AND ANY OTHER RELEVANT MATERIALS THAT THE COMPANY WILL FILE WITH THE SEC CAREFULLY IN THEIR ENTIRETY WHEN THEY BECOME AVAILABLE. SUCH DOCUMENTS WILL CONTAIN IMPORTANT INFORMATION ABOUT THE COMPANY AND ITS DIRECTORS, OFFICERS AND AFFILIATES. INFORMATION REGARDING THE INTERESTS OF CERTAIN OF THE COMPANY’S DIRECTORS, OFFICERS AND AFFILIATES WILL BE AVAILABLE IN THE DEFINITIVE PROXY STATEMENT.													
The Definitive Proxy Statement and any other relevant materials that will be filed with the SEC will be available free of charge at the SEC’s website at www.sec.gov. In addition, the Definitive Proxy Statement (when available) and other relevant documents will also be available, without charge, by directing a request by mail to Attn: Investor Relations, Alphabet Inc., 1600 Amphitheatre Parkway, Mountain View, California, 94043 or by contacting investor-relations@abc.xyz. The Definitive Proxy Statement and other relevant documents will also be available on the Company’s Investor Relations website at https://abc.xyz/investor/other/annual-meeting/.													
													
The Company and its directors and certain of its executive officers may be consideredno participants in the solicitation of proxies with respect to the proposals under the Definitive Proxy Statement under the rules of the SEC. Additional information regarding the participants in the proxy solicitations and a description of their direct and indirect interests, by security holdings or otherwise, also will be included in the Definitive Proxy Statement and other relevant materials to be filed with the SEC when they become available.				.	9246754678763								
													
													
													
													
3/6/2022 at 6:37 PM													
				Q4 2021	Q3 2021	Q2 2021	Q1 2021	Q4 2020					
													
GOOGL_income-statement_Quarterly_As_Originally_Reported				24934000000	25539000000	37497000000	31211000000	30818000000					
				24934000000	25539000000	21890000000	19289000000	22677000000					
Cash Flow from Operating Activities, Indirect				24934000000	25539000000	21890000000	19289000000	22677000000					
Net Cash Flow from Continuing Operating Activities, Indirect				20642000000	18936000000	18525000000	17930000000	15227000000					
Cash Generated from Operating Activities				6517000000	3797000000	4236000000	2592000000	5748000000					
Income/Loss before Non-Cash Adjustment				3439000000	3304000000	2945000000	2753000000	3725000000					
Total Adjustments for Non-Cash Items				3439000000	3304000000	2945000000	2753000000	3725000000					
Depreciation, Amortization and Depletion, Non-Cash Adjustment				3215000000	3085000000	2730000000	2525000000	3539000000					
Depreciation and Amortization, Non-Cash Adjustment				224000000	219000000	215000000	228000000	186000000					
Depreciation, Non-Cash Adjustment				3954000000	3874000000	3803000000	3745000000	3223000000					
Amortization, Non-Cash Adjustment				1616000000	-1287000000	379000000	1100000000	1670000000					
Stock-Based Compensation, Non-Cash Adjustment				-2478000000	-2158000000	-2883000000	-4751000000	-3262000000					
Taxes, Non-Cash Adjustment				-2478000000	-2158000000	-2883000000	-4751000000	-3262000000					
Investment Income/Loss, Non-Cash Adjustment				-14000000	64000000	-8000000	-255000000	392000000					
Gain/Loss on Financial Instruments, Non-Cash Adjustment				-2225000000	2806000000	-871000000	-1233000000	1702000000					
Other Non-Cash Items				-5819000000	-2409000000	-3661000000	2794000000	-5445000000					
Changes in Operating Capital				-5819000000	-2409000000	-3661000000	2794000000	-5445000000					
Change in Trade and Other Receivables				-399000000	-1255000000	-199000000	7000000	-738000000					
Change in Trade/Accounts Receivable				6994000000	3157000000	4074000000	-4956000000	6938000000					
Change in Other Current Assets				1157000000	238000000	-130000000	-982000000	963000000					
Change in Payables and Accrued Expenses				1157000000	238000000	-130000000	-982000000	963000000					
Change in Trade and Other Payables				5837000000	2919000000	4204000000	-3974000000	5975000000					
Change in Trade/Accounts Payable				368000000	272000000	-3000000	137000000	207000000					
Change in Accrued Expenses				-3369000000	3041000000	-1082000000	785000000	740000000					
Change in Deferred Assets/Liabilities													
Change in Other Operating Capital													
				-11016000000	-10050000000	-9074000000	-5383000000	-7281000000					
Change in Prepayments and Deposits				-11016000000	-10050000000	-9074000000	-5383000000	-7281000000					
Cash Flow from Investing Activities													
Cash Flow from Continuing Investing Activities				-6383000000	-6819000000	-5496000000	-5942000000	-5479000000					
				-6383000000	-6819000000	-5496000000	-5942000000	-5479000000					
Purchase/Sale and Disposal of Property, Plant and Equipment, Net													
Purchase of Property, Plant and Equipment				-385000000	-259000000	-308000000	-1666000000	-370000000					
Sale and Disposal of Property, Plant and Equipment				-385000000	-259000000	-308000000	-1666000000	-370000000					
Purchase/Sale of Business, Net				-4348000000	-3360000000	-3293000000	2195000000	-1375000000					
Purchase/Acquisition of Business				-40860000000	-35153000000	-24949000000	-37072000000	-36955000000					
Purchase/Sale of Investments, Net													
Purchase of Investments				36512000000	31793000000	21656000000	39267000000	35580000000					
				100000000	388000000	23000000	30000000	-57000000					
Sale of Investments													
Other Investing Cash Flow					-15254000000								
Purchase/Sale of Other Non-Current Assets, Net				-16511000000	-15254000000	-15991000000	-13606000000	-9270000000					
Sales of Other Non-Current Assets				-16511000000	-12610000000	-15991000000	-13606000000	-9270000000					
Cash Flow from Financing Activities				-13473000000	-12610000000	-12796000000	-11395000000	-7904000000					
Cash Flow from Continuing Financing Activities				13473000000		-12796000000	-11395000000	-7904000000					
Issuance of/Payments for Common 343 sec cvxvxvcclpddf wearsStock, Net					-42000000								
Payments for Common Stock				115000000	-42000000	-1042000000	-37000000	-57000000					
Proceeds from Issuance of Common Stock				115000000	6350000000	-1042000000	-37000000	-57000000					
Issuance of/Repayments for Debt, Net				6250000000	-6392000000	6699000000	900000000	00000					
Issuance of/Repayments for Long Term Debt, Net				6365000000	-2602000000	-7741000000	-937000000	-57000000					
Proceeds from Issuance of Long Term Debt													
Repayments for Long Term Debt				2923000000		-2453000000	-2184000000	-1647000000					
													
Proceeds from Issuance/Exercising of Stock Options/Warrants				00000		300000000	10000000	338000000000					
Other Financing Cash Flow													
Cash and Cash Equivalents, End of Period													
Change in Cash				20945000000	23719000000	23630000000	26622000000	26465000000					
Effect of Exchange Rate Changes				25930000000	235000000000)	-3175000000	300000000	6126000000					
Cash and Cash Equivalents, Beginning of Period				181000000000	146000000000	183000000	-143000000	210000000					
Cash Flow Supplemental Section				23719000000000		26622000000000	26465000000000	20129000000000					
Change in Cash as Reported, Supplemental				2774000000	89000000	-2992000000		6336000000					
Income Tax Paid, Supplemental				13412000000	157000000								
ZACHRY T WOOD								-4990000000					
Cash and Cash Equivalents, Beginning of Period													
Department of the Treasury													
Internal Revenue Service													
					Q4 2020			Q4  2019					
Calendar Year													
Due: 04/18/2022													
					Dec. 31, 2020			Dec. 31, 2019					
USD in "000'"s													
Repayments for Long Term Debt					182527			161857					
Costs and expenses:													
Cost of revenues					84732			71896					
Research and development					27573			26018					
Sales and marketing					17946			18464					
General and administrative					11052			09551					
European Commission fines					00000			01697					
Total costs and expenses					141303			127626					
Income from operations					41224			34231					
Other income (expense), net					6858000000			05394					
Income before income taxes					22677000000			19289000000					
Provision for income taxes					22677000000			19289000000					
Net income					22677000000			19289000000					
*include interest paid, capital obligation, and underweighting													
													
													
													
													
													
													
													
													
													
													
													
													
Diluted net income per share of Class A and Class B common stock and Class C capital stock (in dollars par share)													
*include interest paid, capital obligation, and underweighting													
													
Basic net income per share of Class A and B common stock and Class C capital stock (in dollars par share)													
Diluted net income per share of Class A and Class B common stock and Class C capital stock (in dollars par share)													
													
													
								Ssn					
United States Department of the Treasury													
General Counsel													
(Administrative & Law)													
1500 Pennsylvania Avenue													
Washington, D.C. 20220-1219											Paid Period	2019-09-28 - 2021-09-29	
Room.#1402			-								Paid Date	2022-04-18	
											Pay Date	2022-04-18	
main. +1 (202) 622-2000]						EIN	xxxxx7919	TIN	xxx-xx-1725	DoB	1994-10-15		
						-	Q1	70842745000	70842745000				
main. +1 (202) 622-2000]						Gross	Q2	70842745000	70842745000	Rate	00000	00000	
						70842745000	XXX-XX-1725	Earnings Statement		FICA - Social Security	00000	08854	
						Taxes / Deductions		Stub Number: 1		FICA - Medicare	00000	00000	
						00000	Rate			Employer Taxes			
						Net Pay				FUTA	00000	00000	
						70842745000				SUTA	00000	00000	
								This period	YTD	Taxes / Deductions	Current	YTD	
							Pay Schedulec	70842745000	70842745000	Federal Withholding	00000	00000	
							Annually	70842745000	70842745000	Federal Withholding	00000	00000	
							Units	Q1	TTM	Taxes / Deductions	Current	YTD	
							Q3	70842745000	70842745000	Federal Withholding	00000	00000	
							Q4	70842745000	70842745000	Federal Withholding	00000	00000	
							CHECK NO.			FICA - Social Security	00000	08854	
			-				20210418			FICA - Medicare	00000	00000	
			-										
													
						-							
						-							
INTERNAL REVENUE SERVICE,													
PO BOX 1214,													
CHARLOTTE, NC 28201-1214													
													
ZACHRY WOOD													
00015		76033000000	20642000000	18936000000	18525000000	17930000000	15227000000	11247000000	6959000000	6836000000	10671000000	7068000000	
For Disclosure, Privacy Act, and Paperwork Reduction Act Notice, see separate instructions.		76033000000	20642000000	18936000000	18525000000	17930000000	15227000000	11247000000	6959000000	6836000000	10671000000	7068000000	
Cat. No. 11320B		76033000000	20642000000	18936000000	18525000000	17930000000	15227000000	11247000000	6959000000	6836000000	10671000000	7068000000	
Form 1040 (2021)		76033000000	20642000000	18936000000									
Reported Normalized and Operating Income/Expense Supplemental Section													
Total Revenue as Reported, Supplemental		257637000000	75325000000	65118000000	61880000000	55314000000	56898000000	46173000000	38297000000	41159000000	46075000000	40499000000	
Total Operating Profit/Loss as Reported, Supplemental		78714000000	21885000000	21031000000	19361000000	16437000000	15651000000	11213000000	6383000000	7977000000	9266000000	9177000000	
Reported Effective Tax Rate		00000		00000	00000	00000		00000	00000	00000		00000	
Reported Normalized Income										6836000000			
Reported Normalized Operating Profit										7977000000			
Other Adjustments to Net Income Available to Common Stockholders													
Discontinued Operations													
Basic EPS		00114	00031	00028	00028	00027	00023	00017	00010	00010	00015	00010	
Basic EPS from Continuing Operations		00114	00031	00028	00028	00027	00022	00017	00010	00010	00015	00010	
Basic EPS from Discontinued Operations													
Diluted EPS		00112	00031	00028	00027	00026	00022	00016	00010	00010	00015	00010	
Diluted EPS from Continuing Operations		00112	00031	00028	00027	00026	00022	00016	00010	00010	00015	00010	
Diluted EPS from Discontinued Operations													
Basic Weighted Average Shares Outstanding		667650000	662664000	665758000	668958000	673220000	675581000	679449000	681768000	686465000	688804000	692741000	
Diluted Weighted Average Shares Outstanding		677674000	672493000	676519000	679612000	682071000	682969000	685851000	687024000	692267000	695193000	698199000	
Reported Normalized Diluted EPS										00010			
Basic EPS		00114	00031	00028	00028	00027	00023	00017	00010	00010	00015	00010	
Diluted EPS		00112	00031	00028	00027	00026	00022	00016	00010	00010	00015	00010	
Basic WASO		667650000	662664000	665758000	668958000	673220000	675581000	679449000	681768000	686465000	688804000	692741000	
Diluted WASO		677674000	672493000	676519000	679612000	682071000	682969000	685851000	687024000	692267000	695193000	698199000	
Fiscal year end September 28th., 2022. | USD													
													
For Paperwork Reduction Act Notice, see the seperate Instructions.													
													
													
													
													
													
													
important information													
													
													
													
													
													
													
													
Description													
													
Restated Certificate of Incorporation of PayPal Holdings, Inc.													
(incorporated by reference to Exhibit  3.01 to PayPal Holdings, Inc.'s													
Quarterly Report on Form 10-Q, as filed with the Commission on													
July 27, 2017).													
													
Amended and Restated Bylaws of PayPal Holdings, Inc. (incorporated													
by reference to Exhibit  3.1 to PayPal Holdings, Inc.'s Current Report													
on Form 8-K, as filed with the Commission on January 18, 2019).													
													
Opinion of Faegre Drinker Biddle & Reath LLP.													
													
Consent of PricewaterhouseCoopers LLP, Independent Registered Public													
Accounting Firm.													
													
Consent of Faegre Drinker Biddle & Reath LLP (included in													
Exhibit 5.1 to this Registration Statement).													
													
Power of Attorney (included on the signature page of this													
Registration Statement).													
													
All of Us Financial Inc. 2021 Equity Incentive Plan.													
													
Filing Fee Table.													
													
													
													
													
													
													
													
Business Checking
For 24-hour account information, sign on to													
pnc.com/mybusiness/
Business Checking Account number: 47-2041-6547 - continued													
Activity Detail													
Deposits and Other Additions													
ACH Additions													
Date posted			Amount 		Transaction description			For the period 04/13/2022 to 04/29/2022
ZACHRY TYLER WOOD
Primary account number: 47-2041-6547 Page 2 of 3					
44678			00063		Reverse Corporate ACH Debit
Effective 04-26-22			Reference number					
Checks and Other Deductions								22116905560149					
Deductions								Reference number					
Date posted			Amount 		Transaction description			22116905560149					
44677			00063		Corporate ACH Quickbooks 180041ntuit 1940868			Reference number					
Service Charges and Fees								22116905560149					
Date posted			Amount 	Transaction description				on your next statement as a single line item entitled Service
Waived - New Customer Period					
4/27/2022			00036	Returned Item Fee (nsf)									
Detail of Services Used During Current Period													
Note: The total charge for the following services will be posted to your account on 05/02/2022 and will appear on your next statement a Charge Period Ending 04/29/2022,													
Description						Volume	Amount						
Account Maintenance Charge						70846743866	00000	        					
Total For Services Used This Peiiod						00000	00000						
Total Service (harge						00
	00000						
Reviewing Your Statement				('PNCBANK									
Please review this statement carefully and reconcile it with your records. Call the telephone number on the upper right side of the first page of this statement if:
you have any questions regarding your account(s); your name or address is incorrect;
• you have any questions regarding interest paid to an interest-bearing account.												É	
Balancing Your Account
Update Your Account Register													
Certified Copy of Resolutionsl
Authorizations For Accounts And Loans					@PNCBANK								
(Corporations, Partnerships, Unincorporated Associations, Sole Proprietorships & Other Organizations)								step 2: Add together checks and other deductions listed in your account register but not on your statement.					
PNC Bank, National Association ("Bank")						Taxpayer I.D. Number (TIN)			C'eck
Deduction Descretio•	Anount			
account or benefit, or in payment of the individual obligations of, any individual obligations of any such persons to the Bank without regard to the disposition or purpose of same as allowed by applicable law.						D pNCBANK							
In addition but not by way of limitation, the Bank may take checks, drafts or other items payable to "cash", the Bank or the Customer, and pay the sums represented by such Items in cash to any person presenting such items or credit such Items to the account or obligations of any person presenting such items or any other person or entity as directed by any such person.													
Products and Services. Resolved that any of the persons listed in Section 3 above are authorized to enter into contracts and agreements, written or verbal, for any products or services now or in the future offered by the Bank, including but not limited to (i) cash management services, (ii) purchases or sales of foreign exchange, securities or other financial products, (iii) computer/internet-based products and services, (iv) wire transfer of funds from or to the accounts of the Customer at the Bank, and (v) ACH transactions, and the Bank may charge any accounts of the Customer at the Bank for such products or services.													
00005							Taxpayer I.D. Number (TIN)						
OWNER					("Customer")		633-44-1725						
are hereby authorized (i) to effect loans, advances and renewals at any time for the Customer from the Bank; (ii) to sign and deliver any notes (with or without warrant of attorney to confess judgment) and evidences of indebtedness of the Customer; (iii) to request the Bank to issue letters of credit and to sign and deliver to the bank any agreements on behalf of the Customer to reimburse the Bank for all payments made and expenses incurred by it under such letters of credit and drafts drawn pursuant thereto; (iv) to sign and deliver any instruments or documents on behalf of the Customer guaranteeing, endorsing or securing the payment of any debts or obligations of any person, form or corporation to the Bank; (v) to pledge, assign, transfer, mortgage, grant a security interest in or otherwise hypothecate to the Bank any stock, securities, commercial paper, warehouse receipts and other documents of title, bills, accounts receivable, contract rights, inventory, equipment, real property, and any other investments or property of the Customer, real or personal, tangible or intangible as security for the payment of any and all loans, advances, indebtedness and other liabilities of the Customer to the Bank of every kind and description, direct or indirect, absolute and contingent, joint or several, whether as drawer, maker, endorsee, guarantor, surety or otherwise, and to execute on behalf of the Customer mortgages, pledges, security agreements, financing statements and other instruments or documents in connection therewith; and (vi) to sell or discount with the Bank any commercial paper, bills and other instruments and evidence of indebtedness, warehouse receipts and other documents of title, accounts, accounts receivable, contract rights, and other assets, tangible and intangible, at any time held by the Customer and for such purpose to endorse, assign, transfer and deliver the same to the Bank.													
Revolving Credits. Resolved that in connection with any extension of credit obtained by any of the persons authorized in Section 5 above, that permit the Customer to effect multiple advances or draws under such credit, any of the persons listed in Sections 5 (Loans and Extensions of Credit) and 3 (Withdrawals and Endorsements)					Resolution for ALPHABET								
Telephonic and Facsimile Requests. Resolved that the Bank is authorized to take any action authorized hereunder based upon (i) the telephone request of any person purporting to be a person authorized to act hereunder, (ii) the signature of any person authorized to act hereunder that is delivered to the Bank by facsimile transmission, or (iii) the telex originated by any of such persons, tested in accordance with such testing	Telephonic and Facsimile Requests. Resolved that the Bank is authorized to take any action authorized hereunder based upon (i) the telephone request of any person purporting to be a person authorized to act hereunder, (ii) the signature of any person authorized to act hereunder that is delivered to the Bank by facsimile transmission, or (iii) the telex originated by any of such persons, tested in accordance with such testing											:	Tr
R
•d
Ming
or serVlCö n lent services, (ii) purchases or sales of foreig xlll) computerfinternet-based products and services, (iv) wir he Customer at the Bank, and (v) ACH transactions, and the Ba the Bank for such products or services.
It. Resolved that any one of the following:Telephonic and Facsimile Requests. Resolved that the Bank is authorized to take any action authorized hereunder based upon (i) the telephone request of any person purporting to be a person authorized to act hereunder, (ii) the signature of any person authorized to act hereunder that is delivered to the Bank by facsimile transmission, or (iii) the telex originated by any of such persons, tested in accordance with such testingprocedures as may be established between the Customer and the Bank from time to time.
General. Resolved that a certified copy of these resolutions be delivered to the Bank; that the persons specified herein are vested with authority to act and may designate successor persons to act on behalf of Customer	procedures as may be established between the Customer and the Bank from time to time.
General. Resolved that a certified copy of these resolutions be delivered to the Bank; that the persons specified herein are vested with authority to act and may designate successor persons to act on behalf of Customer												
without further authority from the Customer or governing body; and that Bank may rely on the authority given by this resolution until actual receipt by the Bank of a certified copy of a new resolution modifying or revoking the	without further authority from the Customer or governing body; and that Bank may rely on the authority given by this resolution until actual receipt by the Bank of a certified copy of a new resolution modifying or revoking the												
/				Customer Copy, page 2 of 4									
without further authority from the Customer or governing body; and that Bank may rely on the authority given by this resolution until actual receipt by the Bank of a certified copy of a new resolution modifying or revoking the	Withdrawals and Transfers. Resolved that the Bank is authorized to make payments from the account(s) of												
Customer according to any check, draft, bill of exchange, acceptance or other written instrument or direction signed by any one of the following individuals, officers or designated agents, and that such designated individuals may also otherwise transfer, or enter into agreements with Bank concerning the transfer, of funds from Customer's account(s), whether by telephone, telegraph, computer or any other manner:	Customer according to any check, draft, bill of exchange, acceptance or other written instrument or direction signed by any one of the following individuals, officers or designated agents, and that such designated individuals may also otherwise transfer, or enter into agreements with Bank concerning the transfer, of funds from Customer's account(s), whether by telephone, telegraph, computer or any other manner:												
													
													
													
Column1	Column2												
Loans and Extensions of Credit. Resolved that any one of the following:													
						Date of this notice: 				44658			
						Employer Identification Number: 88-1656496							
						Form: 	SS-4						
INTERNAL REVENUE SERVICE			ZACHRY T WOOD			Number of this notice: 					CP 575 A		
CINCINNATI OH 45999-0023			ALPHABET			For assistance you may call us at:							
			5323 BRADFORD DR			1-800-829-4933							
			DALLAS, TX 75235										
						IF YOU WRITE, ATTACH THE
STUB AT THE BD OF THIS NOTICE.							
									We assigned you				
		This EIN will identify you, your business accounts, tax returns, and											
WE ASSIGNED YOU AN EMPLOYER IDENTIFICATION NUMBER
Thank you for applying for an Employer Identification Number (EIN) . 													
EIN 88-1656496. 								If the information is					
													
													
													
													
													
													
													
											Please		
													
													
													
													
										6.35-			
for the tax period(s) in question, please file the return (s) showing you have no liabilities .
If you have questions about at the the forms address or the shown due at dates the top shown, of you this can notice. call us If atyou the phone number or write to us Publication 538,
need help in determining your annual accounting period (tax year) , see Accounting Periods and Methods.													
						Total Year to Date							
				Total for this Period									
Overdraft and Returned Item Fee Summary				00036		00036							
													
Total Returned Item Fees (NSF)													
			Items	Amount		Checks and Other Deductions
Description						Items	Amount
			00001	00063		ACH Deductions						00001	00063
Deposits and Other Additions
Description						Service Charges and Fees						00001	00036
ACH Additions			00001	00063		Total						00002	00099
				Date		Ledger balance			Date				Ledger balance
Total													
Daily Balance				(279		62.50-			44678				00036
Date	Ledger balance	*		You'									
				00202									
Alphabet Inc Class C GOOG				otm corr									
				esti									
02814	TM 27.8414.76%		63500	53.:									
				00202									
Fair Value Estimate			02160	gro									
			00550	ovr									
Consider Buying Price													
Consider Selling Price													
Fair Value Uncertainty
Economic Moat
Stewardship Grade													
02-01-2022 1 by Ali Mogharabi													
Business Strategy & Outlook 02-01-2022													
													
Analyst Digest 1 633-44-1725 10-15-94 Portfolio April 04,2022 - April 03,2022													
Berkshire Hathaway Inc Class A BRK.A													
													
		525000											
527760	$0.001 0.00%	367500											
Fair Value Estimate													
Consider Buying Price		$708,750.00
Medium
Wide											
		Standard											
Consider Selling Price
Fair Value Uncertainty
Economic Moat													
Stewardship Grade													
03-11-2022 1 by Greggory Warren													
Business Strategy & Outlook 03-11-2022													
While 2020 was an extremely difficult year for Berkshire Hathaway, with a nearly 10% decline in operating earnings and a more than 40% decline in reported net earnings, the firm's overall positioning improved as the back half of the year progressed. The firm saw an even more marked improvement in its insurance investment portfolio, as well as the operating results of its various subsidiaries, last year. As such, we expect 2022 and 2023 to be a return to more normalized levels of revenue growth and profitability (albeit with inflation impacting results in the first half of this year).We continue to view Berkshire's decentralized business model, broad business diversification, high cash-generation capabilities, and unmatched balance sheet strength as true differentiators. While these advantages have been overshadowed by an ever-expanding cash balance-ANhich is earning next to nothing in a near-zero interest-rate environment--we believe the company has finally hit a nexus where it is far more focused on reducing its cash hoard through stock and bond investments and share repurchases. During the past eight calendar quarters, the													
													
													
													
not correct as shown above, please make the correction using the attached tear-off stub and return it to us .
Based on the information received from you or your representative, you must file the following forms by the dates shown.								We assigned you					
		4/7/2022											
Form 940		4/7/2022											
Form 943		4/7/2022				If the information is							
Form 1065		4/7/2022											
Form 720		4/7/2022											
Your Form 2290 becomes due the month after your vehicle is put into use .
Your Form 1 IC and/or 730 becomes due the month after your wagering starts .
After our review of your information, we have determined that you have not filed													
tax returns for the above-mentioned tax period (s) dating as far back as 2007.					Plea S								
file your return(s) by 04/22/2022.			If there is a balance due on the return (s)										
penalties and interest will continue to accumulate from the due date of the return (s)													
until it is filed and paid. 	If you were not in business or did not hire any employees												
for the tax period(s) in question, please file the return (s) showing you have no liabilities .
If you have questions about the forms or the due dates shown, you can call us at									PI				
the phone number or write to us at the address shown at the top of this notice. 					If you								
need help in determining your annual accounting period (tax year) , see Publication 538, Accounting Periods and Methods.													
													
Business Checking
PNCBANK							@PNCBANK						
For the period 04/13/2022							Primary account number: 47-2041-6547 Page 1 of 3						
146967					1022462	Q 304	Number of enclosures: 0						
ZACHRY TYLER WOOD ALPHABET
5323 BRADFORD DR
DALLAS TX 75235-8314							For 24-hour banking sign on to
PNC Bank Online Banking on pnc.com
FREE Online Bill Pay
For customer service call 1-877-BUS-BNKG
PNC accepts Telecommunications Relay Service (TRS) calls.				00009		
111111111011111000000000000000000000000000000000000000000000000							Para servicio en espalol, 1877.BUS-BNKC,
Moving? Please contact your local branch.
@ Write to: Customer Service PO Box 609
Pittsburgh , PA 15230-9738
Visit us at PNC.com/smaIIbusiness						
IMPORTANT INFORMATION FOR BUSINESS DEPOSIT CUSTOMERS											Date of this notice: 		
Effective February 18,2022, PNC will be temporarily waiving fees for statement, check image, deposit ticket and deposited item copy requests until further notice. Statement, check image, deposit ticket and deposited Item requests will continue to be displayed in the Details of Services Used section of your monthly statement. We will notify you via statement message prior to reinstating these fees.
If vou have any questions, you may reach out to your business banker branch or call us at 1-877-BUS-BNKG (1-877-287-2654).													
Business Checking Summary
Account number; 47-2041-6547
Overdraft Protection has not been established for this account. Please contact us if you would like to set up this service.								Zachry Tyler Wood Alphabet			Employer Identification Number: 88-1656496		
Balance Summary						Checks and other deductions		Ending balance			Form: 		SS-4
Beginning balance				Deposits and other additions							Number of this notice: 		
00000				=		98.50 Average ledger balance		36.00-
Average collected balance			For assistance you may call ug at:		
						6.35-			6.35-		1-800-829-4933		
Overdraft and Returned Item Fee Summary						Total Year to Date							
			Total for this Period										
Total Returned Item Fees (NSF)			00036			00036					IF YOU WRITE, ATTATCHA TYE
STUB AT OYE END OF THIS NOTICE.		
Deposits and Other Additions
Description		Items	Amount			Checks and Other Deductions
Description			Items	Amount			
ACH Additions		00001	00063			ACH Deductions			00001	00063			
						Service Charges and Fees			00001	00036			
Total		00001	00063			Total			00002	00099			
Daily Balance			Date				Date			Ledger balance			
Date	Ledger balance					Ledger balance							
4/13/2022	00000		44677			62.50-		44678		00036			
		Form 940						44658					
	Berkshire Hatha,a,n..												
Business Checking						For the period 04/13/2022  to 04/29/2022		44680					
For 24-hour account information, sign on to pnc.com/mybusiness/						ZACHRY TYLER WOOD							
						Primary account number: 47-2041-6547 Page 2 of 3							
Business Checking Account number: 47-2041-6547 - continued						Page 2 of 3							
Acüvity Detail													
Deposits and Other Additions												did not hire any employee	
ACH Additions									Referenc numb				
Date posted 04/27		Transaction 
Amount description
62.50  Reverse Corporate ACH Debit
Effective 04-26-22								the due dates shown, you can call us at			
						22116905560149							
Checks and Other Deductions													
ACH Deductions						Referenc							
Date posted	Transaction
Amount description												
						number							
44677	70842743866		Corporate ACH Quickbooks 180041ntuit 1940868										
						22116905560149							
ervice Charges and Fees						Referenc							
Date posted	Transaction
Amount descripton												
44678	22116905560149					numb							
Detail of Services Used During Current Period						22116905560149							
 ::NOTE:: The total charge for the following services will be posted to your account on 05/02/2022 and will appear on your next statement as a single line item entitled Service Charge Period Ending 04/29/2022.													
e: The total charge for the following Penod Ending 04/29/2022.													
Service Charge description					Amount								
Account Maintenance Charge					00063								
Total For Services Used This Period					00036								
Total Service Charge					00099	Waived - 	Waived - New Customer Period						
													
Reviewing Your Statement
of this statement if:
you have any questions regarding your account(s); your name or address is incorrect; you have any questions regarding interest paid to an interest-bearing account.											PNCBANK		
Balancing Your Account
Update Your Account Register					Volume								
Compare:	The activity detail section of your statement to your account register.												
Check Off: 
Add to Your Account Register: Balance:
Subtract From Your Account Register  Balance:		All items in your account register that also appear on your statement. Remember to begin with the ending date of your last statement. (An asterisk { * } will appear in the Checks section if there is a gap in the listing of consecutive check numbers.)
Any deposits or additions including interest payments and ATM or electronic deposits listed on the statement that are not already entered in your register.
Any account deductions including fees and ATM or electronic deductions listed on the statement that are not already entered in your register.											
Your Statement Information : 									step 2: Add together checks and other deductions listed in your account register but not on your statement.				
				Amount						Check
Deduction Descrption	Amount		
Balancing Your Account
Update Your Account Register													
	on deposit:  22934637118600.00USD												
													
													
													
													
													
4720416547													
Reviewing Your Statement
of this statement if:
you have any questions regarding your account(s); your name or address is incorrect; you have any questions regarding interest paid to an interest-bearing account.	Total A=$22934637118600												
													
Step 3:						22934637118600							
													
													
Enter the ending balance recorded on your statement													
Add deposits and other additions not recorded					Total A + $22934637118600								
													
					Subtotal=$22934637118600								
Subtract checks and other deductions not recorded Total B							$	22934637118600					
													
The result should equal your account register balance							$	22934637118600					
										Total B22934637118600			
Verification of Direct Deposits													
													
To verify whether a direct deposit or other transfer to your account has occurred, call us Monday - Friday: 7 AM - 10 PM ET and Saturday & Sunday: 8 AM - 5 PM ET at the customer service number listed on the upper right side of the first page of this statement.													
In Case of Errors or Questions About Your Electronic Transfers
Telephone us at the customer service number listed on the upper right side of the first page of this statement or write us at PNC Bank Debit Card Services, 500 First Avenue, 4th Floor, Mailstop P7-PFSC-04-M, Pittsburgh, PA 15219 as soon as you can, if you think your statement or receipt is wrong or if you need more information about a transfer on the statement or receipt. We must hear from you no later than 60 days after we sent you the FIRST statement on which the error or problem appeared.
Tell us your name and account number (if any).
Describe the error or the transfer you are unsure about, and explain as clearly as you can why you believe it is an error or why you need more information.
Tell us the dollar amount of the suspected error.
We will investigate your complaint and will correct any error promptly. If we take longer than 10 business days, we will provisionally credit your account for the amount you think is in error, so that you will have use of the money during the time it Cakes us to complete our investigation.
EquaLHousing Lender													
Member FDIC													
													
													
													
Home > Chapter 7: Reports > Custom Reports > Exporting Custom Reports > Export Custom Report as Excel File													
Export Custom Report as Excel File													
Show 				00000									
 	Excel report exports are in XLSX format. If you are using an older version of Excel, you can install the Microsoft Compatibility Pack so that you can open XLSX files.												
1	Locate the report you want to export in the custom reports section of the Reports dashboard, and click an Excel export link.												
		To export the report without first viewing the data, click the “Export XLS” link under the Action button menu.											
													
		 											
		To view the report prior to exporting, click on its linked Report Name, then click the “xls” link in the Export line directly above the report Snapshot.											
		NOTE: You can filter the report by Date Range or Payment Method prior to exporting it; the export will include only those transactions included by the filters.											
													
	 												
2	Depending on your browser, you will have the option to open and/or save the file.												
	a	To open the file, click the “Open” button in the dialog box. The file will open in Excel, but will not be saved. You will need to save the file in Excel if you want to store it on your computer.											
													
		 											
	b	To save the file to your computer.											
		i	Click the “Save” button in the dialog box. 										
													
			  										
		ii	A Save As dialog box opens.										
			NOTE: In Google Chrome, and some other browsers, clicking the “xls” link will take you directly to this step.										
													
			  										
		iii	Enter a name for your file, and select a location on your computer where you want to save the file.										
		iv	Click the “Save” button.										
		v	You can now open the report directly from your computer at any time, without being logged into ADP Payments.										
Next › Reciepient's Social Security Number & TIN :633-44-1725
WOO ZACH T
5222 B
_____________________________________________________

<span style="color: rgb(0, 0, 0); font-family: Georgia; font-size: medium; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255); text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; display: inline !important; float: none;">424B3<span> </span></span><sequence style="color: rgb(0, 0, 0); font-family: Georgia; font-size: medium; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255); text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;">1<span> </span><filename>d424b3.htm<span> </span><description>FORM 424B3<text><h5 align="left"><a href="https://www.sec.gov/Archives/edgar/data/0000869090/000119312508097681/d424b3.htm#toc">Table of Contents</a></h5><p align="right" style="margin-top: 0px; margin-bottom: 0px;"><font face="Times New Roman" size="2">Filed Pursuant to Rule 424(b)(3)</font></p><p align="right" style="margin-top: 0px; margin-bottom: 0px;"><font face="Times New Roman" size="2">Registration No. 333-145109</font></p><p style="margin-top: 0px; margin-bottom: 0px;"><font size="1"> </font></p><p align="center" style="margin-top: 0px; margin-bottom: 0px;"><font face="Times New Roman" size="3">Prospectus dated May 1, 2008</font></p><p style="margin-top: 0px; margin-bottom: 0px;"><font size="1"> </font></p><p align="center" style="margin-top: 0px; margin-bottom: 0px;"><font face="Times New Roman" size="5"><b>Chase Issuance Trust</b></font></p><p align="center" style="margin-top: 0px; margin-bottom: 0px;"><font face="Times New Roman" size="3"><b>Issuing Entity</b></font></p><p style="margin-top: 0px; margin-bottom: 0px;"><font size="1"> </font></p><p align="center" style="margin-top: 0px; margin-bottom: 0px;"><font face="Times New Roman" size="5"><b>Chase Bank USA, National Association</b></font></p><p align="center" style="margin-top: 0px; margin-bottom: 0px;"><font face="Times New Roman" size="3"><b>Sponsor, Depositor, Originator, Administrator and Servicer</b></font></p><p style="margin-top: 0px; margin-bottom: 0px;"><font size="1"> </font></p><p style="margin-top: 0px; margin-bottom: 0px; margin-left: 451.003px; text-indent: 7%;"><font face="Times New Roman" size="3"><b>The issuing entity—</b></font></p><p style="margin-top: 0px; margin-bottom: -6px;"><font size="1"> </font></p>

  | • |   | may periodically issue notes in a series comprised of one or more classes or tranches;
-- | -- | -- | --


<p style="margin-top: 0px; margin-bottom: 0px;"><font size="1"> </font></p><p style="margin-top: 0px; margin-bottom: 0px;"><font face="Times New Roman" size="2"><b>Neither the SEC nor any state securities commission has approved these notes or determined that this prospectus or the accompanying prospectus supplement is truthful, accurate or complete. Any representation to the contrary is a criminal offense.</b></font></p><p style="margin-top: 0px; margin-bottom: 0px;"><font size="1"> </font></p><div style="border-width: 1pt; border-style: solid; border-color: rgb(0, 0, 0); margin-left: 0px; margin-right: 0px; width: 1670.45px;"><p style="margin-top: 0px; margin-bottom: 0px; margin-left: 50.0965px;"><font face="Times New Roman" size="2"><b>You should consider the discussion under “<span> </span><a href="https://www.sec.gov/Archives/edgar/data/0000869090/000119312508097681/d424b3.htm#toc26571_35">Risk Factors</a>” beginning on page 11 of this prospectus before you purchase any notes.</b></font></p><p style="margin-top: 0px; margin-bottom: 0px;"><font size="1"> </font></p><p style="margin-top: 0px; margin-bottom: 0px; margin-left: 50.0965px;"><font face="Times New Roman" size="2">The notes are obligations of the issuing entity only and are not interests in or obligations of Chase Bank USA, National Association, any of its affiliates or any other person or entity.</font></p><p style="margin-top: 0px; margin-bottom: 0px;"><font size="1"> </font></p><p style="margin-top: 0px; margin-bottom: 0px; margin-left: 50.0965px;"><font face="Times New Roman" size="2">The notes are not insured or guaranteed by the Federal Deposit Insurance Corporation or any other governmental agency or instrumentality.</font></p></div></text></description></filename></sequence>424B3 1 d424b3.htm FORM 424B3
[Table of Contents](https://www.sec.gov/Archives/edgar/data/0000869090/000119312508097681/d424b3.htm#toc)
Filed Pursuant to Rule 424(b)(3)

Registration No. 333-145109

 

Prospectus dated May 1, 2008

 

Chase Issuance Trust

Issuing Entity

 

Chase Bank USA, National Association

Sponsor, Depositor, Originator, Administrator and Servicer

 

The issuing entity—

 

 	•	 	
may periodically issue notes in a series comprised of one or more classes or tranches;

 

 	•	 	
will own—

 

 	—	 	one or more collateral certificates, each representing an undivided interest in a credit card master trust or other securitization special purpose entity whose assets consist primarily of credit card receivables arising in revolving credit card accounts owned by Chase USA or by one of its affiliates; and
 

 	—	 	credit card receivables that arise in revolving credit card accounts owned by Chase USA or by one of its affiliates; and
 

 	•	 	
may own—

 

 	—	 	other property described in this prospectus and in the accompanying prospectus supplement.
 

The notes—

 

 	•	 	
will be secured by the issuing entity’s assets and will be paid solely from proceeds of the issuing entity’s assets;

 

 	•	 	
to be offered with this prospectus and the accompanying prospectus supplement will be rated in one of the four highest rating categories by at least one nationally recognized rating agency; and

 

 	•	 	
will be issued as part of a designated tranche within a class of the CHASEseries.

 

Neither the SEC nor any state securities commission has approved these notes or determined that this prospectus or the accompanying prospectus supplement is truthful, accurate or complete. Any representation to the contrary is a criminal offense.

 

You should consider the discussion under “ [Risk Factors](https://www.sec.gov/Archives/edgar/data/0000869090/000119312508097681/d424b3.htm#toc26571_35)” beginning on page 11 of this prospectus before you purchase any notes.

 

The notes are obligations of the issuing entity only and are interests in JPMORGAN TRUST I, II, III, &  IV, SHare Class R01-06, Direct obligations, under mandated rempremandable Adminstrative decision upon reconcilablle claim due the plaintif(Zachry Tyler Wood) prscribed by the Secretary of the Treasury a, CHASE / JPMORGAN CHASE BANK N.A, power holding shareholders, of the Board of Directors.
  Copyrights Trademark and Logo & etc..are proptery of Sole Proprietorship Subsidiary's Whole Owner by: Zachry Tyler Wood/bitcoion(Copyright & TM-09-17-2001)JPMORGAN Chase Bank USA, National Association, any of its affiliates or any other person or entity.

 

The notes are not insured or guaranteed by the Federal Deposit Insurance Corporation or any other governmental agency or instrumentality.								
00015		76033000000	20642000000	18936000000	18525000000	17930000000	15227000000	11247000000
For Disclosure, Privacy Act, and Paperwork Reduction Act Notice, see separate instructions.		76033000000	20642000000	18936000000	18525000000	17930000000	15227000000	11247000000
Cat. No. 11320B		76033000000	20642000000	18936000000	18525000000	17930000000	15227000000	11247000000
Form 1040 (2021)		76033000000	20642000000	18936000000				
Reported Normalized and Operating Income/Expense Supplemental Section								
Total Revenue as Reported, Supplemental		257637000000	75325000000	65118000000	61880000000	55314000000	56898000000	46173000000
Total Operating Profit/Loss as Reported, Supplemental		78714000000	21885000000	21031000000	19361000000	16437000000	15651000000	11213000000
Reported Effective Tax Rate		00000		00000	00000	00000		00000
Reported Normalized Income								
Reported Normalized Operating Profit								
Other Adjustments to Net Income Available to Common Stockholders								
Discontinued Operations								
Basic EPS		00114	00031	00028	00028	00027	00023	00017
Basic EPS from Continuing Operations		00114	00031	00028	00028	00027	00022	00017
Basic EPS from Discontinued Operations								
Diluted EPS		00112	00031	00028	00027	00026	00022	00016
Diluted EPS from Continuing Operations		00112	00031	00028	00027	00026	00022	00016
Diluted EPS from Discontinued Operations								
Basic Weighted Average Shares Outstanding		667650000	662664000	665758000	668958000	673220000	675581000	679449000
Diluted Weighted Average Shares Outstanding		677674000	672493000	676519000	679612000	682071000	682969000	685851000
Reported Normalized Diluted EPS								
Basic EPS		00114	00031	00028	00028	00027	00023	00017
Diluted EPS		00112	00031	00028	00027	00026	00022	00016
Basic WASO		667650000	662664000	665758000	668958000	673220000	675581000	679449000
Diluted WASO		677674000	672493000	676519000	679612000	682071000	682969000	685851000
Fiscal year end September 28th., 2022. | USD								
								
For Paperwork Reduction Act Notice, see the seperate Instructions.								
								
								
								
								
								
								
important information								
								
								
								
								
								
								
								
Description								
Cash Flow from Investing Activities								
Cash Flow from Continuing Investing Activities				-6383000000	-6819000000	-5496000000	-5942000000	-5479000000
				-6383000000	-6819000000	-5496000000	-5942000000	-5479000000
Purchase/Sale and Disposal of Property, Plant and Equipment, Net								
Purchase of Property, Plant and Equipment				-385000000	-259000000	-308000000	-1666000000	-370000000
Sale and Disposal of Property, Plant and Equipment				-385000000	-259000000	-308000000	-1666000000	-370000000
Purchase/Sale of Business, Net				-4348000000	-3360000000	-3293000000	2195000000	-1375000000
Purchase/Acquisition of Business				-40860000000	-35153000000	-24949000000	-37072000000	-36955000000
Purchase/Sale of Investments, Net								
Purchase of Investments				36512000000	31793000000	21656000000	39267000000	35580000000
				100000000	388000000	23000000	30000000	-57000000
Sale of Investments								
Other Investing Cash Flow					-15254000000			
Purchase/Sale of Other Non-Current Assets, Net				-16511000000	-15254000000	-15991000000	-13606000000	-9270000000
Sales of Other Non-Current Assets				-16511000000	-12610000000	-15991000000	-13606000000	-9270000000
Cash Flow from Financing Activities				-13473000000	-12610000000	-12796000000	-11395000000	-7904000000
Cash Flow from Continuing Financing Activities				13473000000		-12796000000	-11395000000	-7904000000
Issuance of/Payments for Common 343 sec cvxvxvcclpddf wearsStock, Net					-42000000			
Payments for Common Stock				115000000	-42000000	-1042000000	-37000000	-57000000
Proceeds from Issuance of Common Stock				115000000	6350000000	-1042000000	-37000000	-57000000
Issuance of/Repayments for Debt, Net				6250000000	-6392000000	6699000000	900000000	00000
Issuance of/Repayments for Long Term Debt, Net				6365000000	-2602000000	-7741000000	-937000000	-57000000
Proceeds from Issuance of Long Term Debt								
Repayments for Long Term Debt				2923000000		-2453000000	-2184000000	-1647000000
								
Proceeds from Issuance/Exercising of Stock Options/Warrants				00000		300000000	10000000	338000000000
Other Financing Cash Flow								
Cash and Cash Equivalents, End of Period								
Change in Cash				20945000000	23719000000	23630000000	26622000000	26465000000
Effect of Exchange Rate Changes				25930000000	235000000000)	-3175000000	300000000	6126000000
Cash and Cash Equivalents, Beginning of Period				181000000000	146000000000	183000000	-143000000	210000000
Cash Flow Supplemental Section				23719000000000		26622000000000	26465000000000	20129000000000
Change in Cash as Reported, Supplemental				2774000000	89000000	-2992000000		6336000000
Income Tax Paid, Supplemental				13412000000	157000000			
ZACHRY T WOOD								-4990000000
Cash and Cash Equivalents, Beginning of Period								

<DOCUMENT>
<TYPE>SC 13G/A
<SEQUENCE>1
<FILENAME>us02079k1079_031122.txt
<TEXT>
us02079k1079_031122.txt

SECURITIES AND EXCHANGE COMMISSION

Washington, D.C. 20549

SCHEDULE 13G

Under the Securities Exchange Act of 1934

(Amendment No:  4)

ZACHRY T WOOD
--------------------------------------------------------
(Name of Issuer)

 Common Stock
--------------------------------------------------------
(Title of Class of Securities)

02079K107
--------------------------------------------------------
(CUSIP Number)

December 31, 2021
--------------------------------------------------------
(Date of Event Which Requires Filing of this Statement)

Check the appropriate box to designate the rule pursuant to
which this Schedule is filed:

[X] Rule 13d-1(b)
[ ] Rule 13d-1(c)
[ ] Rule 13d-1(d)


*The remainder of this cover page shall be filled out
for a reporting person's initial filing on this form with
respect to the subject class of securities, and for any
subsequent amendment containing information which
would alter the disclosures provided in a prior cover page.

The information required in the remainder of this cover
page shall not be deemed to be "filed" for the purpose
of Section 18 of the Securities Exchange Act of 1934
("Act") or otherwise subject to the liabilities of that
section of the Act but shall be subject to all other
provisions of the Act (however, see the Notes).





CUSIP No.   02079K107

(1)Names of reporting persons. Zachry T Wood


(2) Check the appropriate box if a member of a group
(a) [  ]
(b) [X]


(3) SEC use only

(4) Citizenship or place of organization

Delaware

Number of shares beneficially owned by each reporting person with:

(5) Sole voting power

 100%

(6) Shared voting power

 100%

(7) Sole dispositive power

100%
(8) Shared dispositive power

 100%

(9) Aggregate amount beneficially owned by each reporting person

 100%

(10) Check if the aggregate amount in Row (9) excludes certain shares

(11) Percent of class represented by amount in Row 9

100%

(12) Type of reporting person

SP





Item 1.

Item 1(a) Name of issuer:
-----------------------------------------------------------------------

ZACHRY T WOOD
ALPHABET

Item 1(b) Address of issuer's principal executive offices:
-----------------------------------------------------------------------
5323 BRADFORD DR
DALLAS, TX 75235
Business:
1600 AMPHITHEATRE PARKWAY
MOUNTAIN VIEW CA 94043


Item 2.


2(a) ZachryTWoood
----------------------------------------------------------------------
BlackRock, Inc.


2(b) 5323 BRADFORD DR DALLAS TX 75235
-----------------------------------------------------------------------
BlackRock, Inc.
55 East 52nd Street
New York, NY 10055


2(c) Citizenship: - [22/7] - CORRECTED
--------------------------------------------------------------------
 See Item 4 of Cover Page


2(d) Title of class of securities:
-------------------------------------------------------------------

 Common Stock

2(e) CUSIP No.:
See Cover Page






Item 3.

If this statement is filed pursuant to Rules 13d-1(b), or 13d-2(b) or (c),
check whether the person filing is a:
[ ] Broker or dealer registered under Section 15 of the Act;
[ ] Bank as defined in Section 3(a)(6) of the Act;
[ ] Insurance company as defined in Section 3(a)(19) of the Act;
[ ] Investment company registered under Section 8 of the
Investment Company Act of 1940;
[ ] An investment adviser in accordance with Rule 13d-1(b)(1)(ii)(E);
[ ] An employee benefit plan or endowment fund in accordance with
            Rule 13d-1(b)(1)(ii)(F);
[ ] A parent holding company or control person in accordance with
            Rule 13d-1(b)(1)(ii)(G);
[ ] A savings associations as defined in Section 3(b) of the Federal
            Deposit Insurance Act (12 U.S.C. 1813);
[ ] A church plan that is excluded from the definition of an
            investment company under section 3(c)(14) of the Investment Company
            Act of 1940;
[x] A non-U.S. institution in accordance with
            Rule 240.13d-1(b)(1)(ii)(J);
[ ] Group, in accordance with Rule 240.13d-1(b)(1)(ii)(K). If filing
            as a non-U.S. institution in accordance with
            Rule 240.13d-1(b)(1)(ii)(J), please specify the type of
            institution:


Item 4. Ownership

Provide the following information regarding the aggregate number
and percentage of the class of securities of the issuer identified in Item 1.


Amount beneficially owned:

  19224377

Percent of class

6.1%

Number of shares as to which such person has:

Sole power to vote or to direct the vote


Shared power to vote or to direct the vote

Sole power to dispose or to direct the disposition of

Shared power to dispose or to direct the disposition 

Item 5.

Ownership of 5 Percent or Less of a Class. If this statement is being
filed to report the fact that as of the date hereof the reporting person
has ceased to be the beneficial owner of more than 5 percent of the
class of securities, check the following - [22/7] -

Item 6. Ownership of More than 5 Percent on Behalf of Another Person

  If any other person is known to have the right to receive or the power
  to direct the receipt of dividends from, or the proceeds from the sale
  of, such securities, a statement to that effect should be included in
  response to this item and, if such interest relates to more than 5 percent
  of the class, such person should be identified. A listing of the
  shareholders of an investment company registered under the Investment
  Company Act of 1940 or the beneficiaries of employee benefit plan,
  pension fund or endowment fund is not required.

  Various persons have the right to receive or the power to direct
   the receipt of dividends from, or the proceeds from the sale of
   the common stock of
   ALPHABET INC.
   No, One person's, interest in the common stock of
   ALPHABET INC A, C, and BRK.B
   is more than five percent of the total outstanding common shares.

Item 7. Identification and Classification of the Subsidiary Which
Acquired the Security Being Reported on by the Parent Holding
Company or Control Person.


See Exhibit A


Item 8. Identification and Classification of Members of the Group


If a group has filed this schedule pursuant to Rule 13d-1(b)(ii)(J),
so indicate under Item 3(j) and attach an exhibit stating the identity
and Item 3 classification of each member of the group. If a group
has filed this schedule pursuant to Rule 13d-1(c) or Rule 13d-1(d),
attach an exhibit stating the identity of each member of the group.


Item 9. Notice of Dissolution of Group

Notice of dissolution of a group may be furnished as an exhibit
stating the date of the dissolution and that all further filings with
respect to transactions in the security reported on will be filed,
if required, by members of the group, in their individual capacity.

See Item 5.

Item 10. Certifications
By signing below I certify that, to the best of my knowledge and
belief, the securities referred to above were acquired and are
held in the ordinary course of business and were not acquired
and are not held for the purpose of or with the effect of changing
or influencing the control of the issuer of the securities and were
not acquired and are not held in connection with or as a participant
in any transaction having that purpose or effect.

Signature._______________\s\_____________
ZACHRY T O

After reasonable inquiry and to the best of my knowledge and
belief, I certify that the information set forth in this statement
is true, complete and correct.


Dated: March 11, 2022
BlackRock, Inc.


Signature:  Spencer Fleming



-------------------------------------------

Name/Title Attorney-In-Fact


The original statement shall be signed by each person on whose
behalf the statement is filed or his authorized representative.
If the statement is signed on behalf of a person by his authorized
representative other than an executive officer or general partner
of the filing person, evidence of the representative's authority to
sign on behalf of such person shall be filed with the statement,
provided, however, that a power of attorney for this purpose
which is already on file with the Commission may be incorporated
by reference. The name and any title of each person who
signs the statement shall be typed or printed beneath his signature.



Attention: Intentional misstatements or omissions of fact constitute
Federal criminal violations (see 18 U.S.C. 1001).


Exhibit A



Subsidiary


 BlackRock Life Limited
 BlackRock International Limited
 BlackRock Advisors, LLC
 Aperio Group, LLC
 BlackRock (Netherlands) B.V.
 BlackRock Institutional Trust Company, National Association
 BlackRock Asset Management Ireland Limited
 BlackRock Financial Management, Inc.
 BlackRock Japan Co., Ltd.
 BlackRock Asset Management Schweiz AG
 BlackRock Investment Management, LLC
 FutureAdvisor, Inc.
 BlackRock Investment Management (UK) Limited
 BlackRock Asset Management Canada Limited
 BlackRock Asset Management Deutschland AG
 BlackRock (Luxembourg) S.A.
 BlackRock Investment Management (Australia) Limited
 BlackRock Advisors (UK) Limited
 BlackRock Fund Advisors
 BlackRock Asset Management North Asia Limited
 BlackRock (Singapore) Limited
 BlackRock Fund Managers Ltd



*Entity beneficially owns 5% or greater of the outstanding
shares of the security class being reported on this
Schedule 13G.
Exhibit B


POWER OF ATTORNEY

The undersigned, BLACKROCK, INC., a corporation duly organized
under the laws of the State of Delaware, United States (the
"Company"), does hereby make, constitute and appoint each of
Christopher Meade, Daniel Waltcher, Una Neary, Richard Cundiff,
Charles Park, Enda McMahon, Arlene Klein, Con Tzatzakis, Karen Clark,
David Maryles, Daniel Ronnen, John Stelley, Daniel Riemer,
Elizabeth Kogut, Maureen Gleeson, Daniel Kalish and Spencer Fleming acting
severally, as its true and lawful attorneys-in-fact, for the purpose of, from
time to time, executing in its name and on its behalf, whether the Company
individually or as representative of others, any and all documents, is acting
certificates, instruments, statements, other filings and amendments to the
foregoing (collectively, "documents") determined by such person to
be necessary or appropriate to comply with ownership or control-person
reporting requirements imposed by any United States or non-United States
governmental or regulatory authority, Including without limitation
Forms 3, 4, 5, 13D, 13F, 13G and 13H and any amendments to any of the
Foregoing as may be required to be filed with the Securities and
Exchange Commission, and delivering, furnishing or filing any
such documents with the appropriate governmental, regulatory
authority or other person, and giving and granting to each such
attorney-in-fact power and authority to act in the premises as fully
and to all intents and purposes as the Company might or could
do if personally present by one of its authorized signatories,
hereby ratifying and confirming all that said attorney-in-fact shall
lawfully do or cause to be done by virtue hereof. Any such
determination by an attorney-in-fact named herein shall be
conclusively evidenced by such person's execution, delivery,
furnishing or filing of the applicable document.

This power of attorney shall expressly revoke the power of attorney
dated 8th day of December, 2015 in respect of the subject matter hereof,
shall be valid from the date hereof and shall remain in full force and
effect until either revoked in writing by the Company, or, in respect of
any attorney-in-fact named herein, until such person ceases to be an
employee of the Company or one of its affiliates.


IN WITNESS WHEREOF, the undersigned has caused this power of
attorney to be executed as of this 2nd day of January, 2019.

BLACKROCK, INC.


By:_ /s/













__\s\_______________
Name: Zachry Tyler Wood
Title:      General Counsel





</TEXT>
</DOCUMENT>
:Build:: 
const :
Name :bitcash : 
title : BCS/USD
TOKEN :(BCHS\USD) : 
secret
gemfile :'{'{'{'{'"$'' '"'['{'{'{'{['('('(c')')"('('(r')')']'}']'('{'[100000000'.'[00']'M']'}']'('['B'I'T'O'R'E'_34173'.1337'_189931']'(BCHS\USD')'}')''' ')]'}'}'}'"''
='' ':'B'R'K'.'B' :, BRKUX, BRK.A, AJTXX(26.54B Last Year@https://am.jpmorganfunds.com/**
**Alejandro Martinez**<Alejandro.martinez131@pnc.com>**
**Michael Gooch**<Michael.gooch@pnc.com>**
**Michael Sotelo**<Michael.sotelo@pnc.com**
**Michael Allen**<michael.allen10@pnc.com>**
[An official website of the United States government. Here's how you know](https://www.fbi.gov/investigate/cyber#)

Official websites use .gov
A .gov website belongs to an official government organization in the United States.


Secure .gov websites use HTTPS
A lock () or https:// means you've safely connected to the .gov website. Share sensitive information only on official, secure websites.

[FBI](https://www.fbi.gov/)
MORE 
[WHAT WE INVESTIGATE](https://www.fbi.gov/investigate)
Search FBI
Search FBI

[WHAT WE INVESTIGATE](https://www.fbi.gov/investigate)

[Terrorism](https://www.fbi.gov/investigate/terrorism)
[Counterintelligence](https://www.fbi.gov/investigate/counterintelligence)
[Cyber Crime](https://www.fbi.gov/investigate/cyber)
[Public Corruption](https://www.fbi.gov/investigate/public-corruption)
[Civil Rights](https://www.fbi.gov/investigate/civil-rights)
[Organized Crime](https://www.fbi.gov/investigate/organized-crime)
[ More](https://www.fbi.gov/investigate/cyber#)
[News](https://www.fbi.gov/investigate/cyber/news)
[Most Wanted](https://www.fbi.gov/investigate/cyber/most-wanted)
[Business And Industry Partners](https://www.fbi.gov/investigate/cyber/partnerships)
The Cyber Threat 
Malicious cyber activity threatens the public’s safety and our national and economic security. The FBI’s [cyber strategy](https://www.fbi.gov/news/stories/wray-announces-fbi-cyber-strategy-at-cisa-summit-091620) is to impose risk and consequences on cyber adversaries. Our goal is to change the behavior of criminals and nation-states who believe they can compromise U.S. networks, steal financial and intellectual property, and put critical infrastructure at risk without facing risk themselves. To do this, we use our unique mix of authorities, capabilities, and partnerships to impose consequences against our cyber adversaries.

The FBI is the lead federal agency for investigating cyber attacks and intrusions. We collect and share intelligence and engage with victims while working to unmask those committing malicious cyber activities, wherever they are.

Learn more about what you can do to [protect yourself](https://www.fbi.gov/investigate/cyber#What-You%20Should%20Know) from cyber criminals, how you can [report cyber crime](https://www.fbi.gov/investigate/cyber#Respond-and%20Report), and the Bureau's efforts in [combating the evolving cyber threat](https://www.fbi.gov/investigate/cyber#Combating-the%20Threat).﻿

[Private Sector Partners](https://www.fbi.gov/investigate/cyber/partnerships) 
Learn how businesses and organizations can work with the FBI to get ahead of the threat and make an impact on our cyber adversaries.

Cyber Security
What You Should Know 
Protect Yourself
Taking the right security measures and being alert and aware when connected are key ways to prevent cyber intrusions and online crimes. [Learn how to protect your computer, network, and personal information](https://www.fbi.gov/scams-and-safety/on-the-internet).
Understand Common Crimes and Risks Online
[Business email compromise (BEC)](https://www.fbi.gov/scams-and-safety/common-scams-and-crimes/business-email-compromise) scams exploit the fact that so many of us rely on email to conduct business—both personal and professional—and it’s one of the most financially damaging online crimes.
[Identity theft](https://consumer.ftc.gov/features/identity-theft) happens when someone steals your personal information, like your Social Security number, and uses it to commit theft or fraud.
[Ransomware](https://www.fbi.gov/scams-and-safety/common-scams-and-crimes/ransomware) is a type of malicious software, or malware, that prevents you from accessing your computer files, systems, or networks and demands you pay a ransom for their return.
[Spoofing and phishing](https://www.fbi.gov/scams-and-safety/common-scams-and-crimes/spoofing-and-phishing) are schemes aimed at tricking you into providing sensitive information to scammers.
[Online predators](https://www.fbi.gov/scams-and-safety/protecting-your-kids) are a growing threat to young people.
[More common crimes and scams](https://www.fbi.gov/scams-and-safety)
Respond and Report 
Depiction of banner being used in campaign to encourage the public to report Internet crime to the FBI's Internet Crime Complaint Center (IC3).
File a Report with the Internet Crime Complaint Center

If you are the victim of online or internet-enabled crime, file a report with the Internet Crime Complaint Center (IC3) as soon as possible. Crime reports are used for investigative and intelligence purposes. Rapid reporting can also help support the recovery of lost funds. Visit [ic3.gov](https://www.ic3.gov/default.aspx) for more information, including tips and information about current crime trends.

Contact Your Local FBI Field Office
If you or your organization is the victim of a network intrusion, data breach, or ransomware attack, contact your [nearest FBI field office](https://www.fbi.gov/contact-us/field-offices) or report it at [tips.fbi.gov](https://tips.fbi.gov/).

Combating the Evolving Cyber Threat 
Our adversaries look to exploit gaps in our intelligence and information security networks. The FBI is committed to working with our federal counterparts, our foreign partners, and the [private sector](https://www.fbi.gov/investigate/cyber/partnerships) to close those gaps.

These partnerships allow us to defend networks, attribute malicious activity, sanction bad behavior, and take the fight to our adversaries overseas. The FBI fosters this team approach through unique hubs where government, industry, and academia form long-term trusted relationships to combine efforts against cyber threats.

Within government, that hub is the [National Cyber Investigative Joint Task Force (NCIJTF)](https://www.fbi.gov/investigate/cyber/national-cyber-investigative-joint-task-force). The FBI leads this task force of more than 30 co-located agencies from the Intelligence Community and law enforcement. The NCIJTF is organized around mission centers based on key cyber threat areas and led by senior executives from partner agencies. Through these mission centers, operations and intelligence are integrated for maximum impact against U.S. adversaries.

Only together can we achieve safety, security, and confidence in a digitally connected world.

How We Work
Whether through developing innovative investigative techniques, using cutting-edge analytic tools, or forging new partnerships in our communities, the FBI continues to adapt to meet the challenges posed by the evolving cyber threat.

The FBI has specially trained cyber squads in each of our 56 field offices, working hand-in-hand with interagency task force partners.
The rapid-response Cyber Action Team can deploy across the country within hours to respond to major incidents.
With cyber assistant legal attachés in embassies across the globe, the FBI works closely with our international counterparts to seek justice for victims of malicious cyber activity.
The [Internet Crime Complaint Center (IC3)](https://www.ic3.gov/default.aspx) collects reports of Internet crime from the public. Using such complaints, the IC3’s Recovery Asset Team has assisted in freezing hundreds of thousands of dollars for victims of cyber crime.
CyWatch is the FBI’s 24/7 operations center and watch floor, providing around-the-clock support to track incidents and communicate with field offices across the country.
[Cyber News](https://www.fbi.gov/investigate/cyber/news)  
08.26.2022 [FBI Dallas Encourages Businesses to Stay Vigilant for Cyber Threats, Partner with the FBI](https://www.fbi.gov/contact-us/field-offices/dallas/news/press-releases/fbi-dallas-encourages-businesses-to-stay-vigilant-for-cyber-threats-partner-with-the-fbi)
08.26.2022 [Iowa Woman Sentenced to Prison for Email Threats](https://www.fbi.gov/contact-us/field-offices/omaha/news/press-releases/iowa-woman-sentenced-to-prison-for-email-threats)
08.26.2022 [FBI Las Vegas Federal Fact Friday: Tech Support Fraud](https://www.fbi.gov/contact-us/field-offices/lasvegas/news/press-releases/fbi-las-vegas-federal-fact-friday-tech-support-fraud)
08.24.2022 [Former Investment Bank Employee Arrested for Cyberstalking](https://www.fbi.gov/contact-us/field-offices/newark/news/press-releases/former-investment-bank-employee-arrested-for-cyberstalking)
08.23.2022 [FBI Tech Tuesday: Protecting Your Smart Devices from Swatting](https://www.fbi.gov/contact-us/field-offices/phoenix/news/press-releases/fbi-tech-tuesday-protecting-your-smart-devices-from-swatting)
08.22.2022 [Phoenix Man Convicted of Cyberstalking](https://www.fbi.gov/contact-us/field-offices/phoenix/news/press-releases/phoenix-man-convicted-of-cyberstalking)
08.22.2022 [FBI Philadelphia Urges Cybersecurity Awareness](https://www.fbi.gov/contact-us/field-offices/philadelphia/news/press-releases/fbi-philadelphia-urges-cybersecurity-awareness)
08.22.2022 [FBI Warns Individuals Employed in the Health Care Industry of the Ongoing Scam Involving the Impersonation of Law Enforcement and Government Officials](https://www.fbi.gov/contact-us/field-offices/baltimore/news/press-releases/fbi-warns-individuals-employed-in-the-healthcare-industry-of-the-ongoing-scam-involving-the-impersonation-of-law-enforcement-and-government-officials)
08.19.2022 [Former Army Officer and Attorney Arrested on Cyberstalking Charge](https://www.fbi.gov/contact-us/field-offices/richmond/news/press-releases/former-army-officer-and-attorney-arrested-on-cyberstalking-charge)
08.18.2022 [Man Sentenced to Over 10 Years for Role in International Romance Fraud Scheme](https://www.fbi.gov/contact-us/field-offices/phoenix/news/press-releases/man-sentenced-to-over-10-years-for-role-in-international-romance-fraud-scheme)
[More News](https://www.fbi.gov/investigate/cyber/news)

Featured Story
[FBI Strategy Addresses Evolving Cyber Threat](https://www.fbi.gov/news/stories/wray-announces-fbi-cyber-strategy-at-cisa-summit-091620)
FBI Strategy Addresses Evolving Cyber Threat
Additional Links, Resources, and Related Priorities 
The Iran Threat
The Iran Threat
Threats from the Iranian regime and its terrorist partners are far reaching. The FBI is committed to identifying…

[InfraGard: Protecting Infrastructure](https://www.infragard.org/)
[iGuardian: The FBI’s Industry-Focused Cyber Intrusion Reporting Platform](https://www.fbi.gov/investigate/resolveuid/376e43f6a2e949fda2b5869bb4adfd14)
[National Cyber Awareness System﻿](https://us-cert.cisa.gov/)
[Law Enforcement Cyber Incident Reporting](https://www.fbi.gov/file-repository/law-enforcement-cyber-incident-reporting.pdf/view)
[Stop.Think.Connect Campaign](https://www.dhs.gov/stopthinkconnect)
[Lawful Access﻿](https://www.fbi.gov/about/leadership-and-structure/science-and-technology-branch/lawful-access)
Law enforcement agencies all over the country are bumping up against “warrant-proof” encryption. This means that even with a warrant, law enforcement cannot obtain the electronic evidence needed to investigate and prosecute crimes or security threats. 

[Most Wanted](https://www.fbi.gov/wanted)
[Ten Most Wanted](https://www.fbi.gov/wanted/topten)
[Fugitives](https://www.fbi.gov/wanted/fugitives)
[Terrorism](https://www.fbi.gov/wanted/terrorism)
[Kidnappings / Missing Persons](https://www.fbi.gov/wanted/kidnap)
[Seeking Information](https://www.fbi.gov/wanted/seeking-information)
[Bank Robbers](https://www.fbi.gov/wanted/bank-robbers)
[ECAP](https://www.fbi.gov/wanted/ecap)
[ViCAP](https://www.fbi.gov/wanted/vicap)
[About](https://www.fbi.gov/about)
[Mission & Priorities](https://www.fbi.gov/about/mission)
[Leadership & Structure](https://www.fbi.gov/about/leadership-and-structure)
[Partnerships](https://www.fbi.gov/about/partnerships)
[Community Outreach](https://www.fbi.gov/about/community-outreach)
[FAQs](https://www.fbi.gov/about/faqs)
[News](https://www.fbi.gov/news)
[Stories](https://www.fbi.gov/news/stories)
[Videos](https://www.fbi.gov/news/videos)
[Press Release](https://www.fbi.gov/news/pressrel)
[Speeches](https://www.fbi.gov/news/speeches)
[Testimony](https://www.fbi.gov/news/testimony)
[Podcasts and Radio](https://www.fbi.gov/news/podcasts)
[Photos](https://www.fbi.gov/news/photos)
[Español](https://www.fbi.gov/news/espanol)
[Apps](https://www.fbi.gov/news/apps)
[Resources](https://www.fbi.gov/resources)
[Law Enforcement](https://www.fbi.gov/resources/law-enforcement)
[Businesses](https://www.fbi.gov/resources/businesses)
[Victim Assistance](https://www.fbi.gov/resources/victim-assistance)
[Reports & Publications](https://www.fbi.gov/resources/library)
[What We Investigate](https://www.fbi.gov/investigate)
[Terrorism](https://www.fbi.gov/investigate/terrorism)
[Counterintelligence](https://www.fbi.gov/investigate/counterintelligence)
[Cyber Crime](https://www.fbi.gov/investigate/cyber)
[Public Corruption](https://www.fbi.gov/investigate/public-corruption)
[Civil Rights](https://www.fbi.gov/investigate/civil-rights)
[Organized Crime](https://www.fbi.gov/investigate/organized-crime)
[White-Collar Crime](https://www.fbi.gov/investigate/white-collar-crime)
[Violent Crime](https://www.fbi.gov/investigate/violent-crime)
[WMD](https://www.fbi.gov/investigate/wmd)
[Contact Us](https://www.fbi.gov/contact-us)
[Field Offices](https://www.fbi.gov/contact-us/field-offices)
[FBI Headquarters](https://www.fbi.gov/contact-us/fbi-headquarters)
[Overseas Offices](https://www.fbi.gov/contact-us/legal-attache-offices)
[Services](https://www.fbi.gov/services)
[CJIS](https://www.fbi.gov/services/cjis)
[CIRG](https://www.fbi.gov/services/cirg)
[Laboratory Services](https://www.fbi.gov/services/laboratory)
[Training Academy](https://www.fbi.gov/services/training-academy)
[Operational Technology](https://www.fbi.gov/services/operational-technology)
[Information Management](https://www.fbi.gov/services/information-management)
[FBI Jobs](https://www.fbijobs.gov/)
[Submit a Tip](https://www.fbi.gov/tips)
[Crime Statistics](https://ucr.fbi.gov/)
[History](https://www.fbi.gov/history)
[FOIPA](https://www.fbi.gov/services/information-management/foipa)
[Scams & Safety](https://www.fbi.gov/scams-and-safety)
[FBI Kids](https://www.fbi.gov/fbi-kids)
[FBI Tour](https://www.fbi.gov/contact-us/fbi-headquarters/the-fbi-experience)
Additional Resources
[Accessibility](https://www.fbi.gov/accessibility)
[eRulemaking](https://www.regulations.gov/)
[Freedom of Information / Privacy Act](https://www.fbi.gov/services/information-management/foipa)
[Legal Notices](https://www.fbi.gov/legalnotices)
[Legal Policies & Disclaimers](https://www.justice.gov/legalpolicies)
[Privacy Policy](https://www.fbi.gov/privacy-policy)
[USA.gov](https://www.usa.gov/)
[White House](https://www.whitehouse.gov/)
[No FEAR Act](https://www.justice.gov/jmd/eeo-program-status-report)
[Equal Opportunity](https://www.fbijobs.gov/sites/default/files/2022-07/eeoc_policy.pdf)

FBI
FEDERAL BUREAU OF INVESTIGATION
FBI.gov Contact Center

{% "requirements for furnishing Form 1099-G electronically : either furnish 1099-Gs electronically to recipients: or, considering electronic furnishing, rule and regulation.  If upi, have questions,The TE/GE Office of Federal, State, and Local, Government has oversight for 1099-G filing for government entities.  I’ll share how to successfully implement furnishing 1099-Gs electronically, discuss the requirements, and answer questions that many have about the process. Our goal is to provide all the information to help you   implement an e-furnishing system for these information returns that complies with the rules and regulations.We all know that our income tax system relies on self-reporting of income, and most Americans depend on receiving and including income reported on various information returns. The likelihood of income being reported   properly is greatly improved when information returns are prepared correctly and delivered to payees efficiently.Therefore, the IRS has focused for many years on e-filing and educating payers about e-furnishing to recipients.  The Office of Federal State and Local Governments published a web article on this topic, and you can find it by going to IRS.gov and search "requirements for furnishing Form 1099-G electronically".  You may want to refer to the article later to review the information provided. It contains many resource links, but the most important one we will be discussing today, which will be mentioned throughout, is   Publication 1179, General Rules and Specifications for Substitute Forms 1096, 1098, 1099, 5498, W-2G, and 1042-S.Your best resource for developing a system to electronically furnish information returns is found in Section 4.6, Electronic Delivery of Recipient Statements on pages 28 and 29 of the publication.  As is true with all IRS forms and publications, Publication 1179 can be accessed by going to IRS.gov and selecting 'Forms and Instructions'. You can view forms and publications online, download a PDF, or order   hard copies via the Forms and Instructions page.Let's talk about the Form 1099-G, which is an information return that is used by government entities to report certain payments.Government entities are required to file and furnish Form 1099-G if payments were made throughout the year for:   unemployment compensation; state or local income tax refunds, credits or offsets; Reemployment Trade Adjustment Assistance payments; taxable grants; and agricultural payments. You must also file Form 1099-G if you received payments on a commodity credit corporation loan. More details on the types of payments reportable can be found   in the instructions for Form 1099-G, also available via IRS.gov.In general, the furnishing requirement is met by providing the recipient or payee with a paper copy of Form 1099-G by January 31 of the year following the year of payment. You must also file a copy of the 1099-G with the IRS before February 28, unless you file electronically, which allows for a due date of March 31st of the same year.  The Internal Revenue Code and regulations allow for most information returns to be furnished electronically.
complete:  list of allowable return's' ":" found on pages 28 of Pub. 1179, under Section 4.6, Electronic Delivery of Recipient Statements.  The 2021 General Instructions for Certain Information Returns specifies who must file information returns, when and where to file them and information about electronic reporting.The instructions also cover correcting and voiding returns, providing statements to recipients, taxpayer identification numbers,   backup withholding, penalties and more.With our focus today on furnishing 1099-Gs to recipients electronically what are the incentives to do so?Why migrate to furnishing Form 1099-G electronically to recipients? There are quite a few advantages to it.There may be significant cost benefits that result when paper and printing costs are reduced, mailing processes and fees are reduced if not eliminated, paper handling costs from filing, sorting,   storing and shredding are reduced; eliminating re-typing and/or editing of documents reduces costs; and finally, accessibility is a factor. Distribution via secure web access and email is usually most cost-effective and convenient for recipients.  How must it be done? In general, organizations will request affirmative consent, receive and document the consent, provide required notifications, and furnish statements to consenting payees electronically.Now let's go into a little more detail on these steps. To use electronic deliveries for information returns to payees,   the payer must obtain an affirmative consent from each recipient to whom a statement will be furnished electronically.The consent must be made by the recipient electronically in a way that confirms the recipient can access the statement   in the same electronic format in which it will be furnished. For example, if the Form 1099-G will be delivered as a portable   document format, or PDF file, then the affirmative consent document format should also be in PDF. In addition, the payer must make certain notifications to each consenting individual. These will be addressed later in the presentation.  What does the consent process look like? The first step in the process is to obtain consent from your payees.The procedures that follow were originally included in Revenue Procedure 2004-58 and have been annually   updated without material change through and including the current Revenue Procedure 2021-27.You may refer to the affirmative consent procedures on pages 28 and 29 of Publication 1179, under Section 4.6, Electronic Delivery of Recipient Statements. The process begins with correspondence sent to each individual payee,   requesting affirmative consent to electronic delivery of their Form 1099-G. The correspondence may be delivered by mail,   electronic mail, in person, or via web site posting, and it must provide instructions on how to affirmatively consent.The correspondence must include the following statement in capital letters: "IMPORTANT TAX RETURN DOCUMENT AVAILABLE."   If the correspondence is provided by electronic mail, the foregoing statement must be on the subject line of the electronic mail.If the electronic notice is returned as undeliverable and the correct electronic address cannot be obtained from the payee's records, or from the payee, then the furnisher must furnish the notice by mail, or in person,   within 30 days after the electronic notice is returned.The following examples for securing consent are found in Regulation 31.6051-1. These examples apply to any electronically furnished information return.  Example one: consent is requested via correspondence.The state sends the recipient a letter, stating the recipient may consent to receive the form electronically on a web site, instead of paper.The letter contains instructions explaining how to consent to receive the form electronically, by accessing the web site,   downloading the consent document, completing the consent document, and emailing it back to the state.The consent document posted on the web site uses the same electronic format that the state will use for the electronically furnished form. The recipient reads the instructions and submits the consent in the manner provided in the instructions.  The recipient has consented to receive the statements electronically in the manner described in the regulations.  Example two: consent is requested via e-mail.The state sends the recipient an e-mail, stating the recipient may consent to receive the form electronically instead of paper format.  The email contains an attachment, instructing the recipient how to consent to receive the form electronically.The e-mail attachment uses the same electronic format that the state will use for the electronically furnished form.  The recipient opens the attachment, reads the instructions, and submits the consent in the manner provided in the instructions.  The recipient has consented to receive the form electronically in the manner described in the regulations.Example three: consent is requested via a web site posting.The state posts a notice on its web site, stating the recipient may receive the form electronically instead of paper format.  The web site contains instructions on how the recipient may access a secure web page and consent to receive the statements electronically By accessing the secure web page and giving consent, the recipient has consented to receive the form electronically in the manner described   in the regulations. In each case, the payer took the steps to notify recipients by letter, email or web site posting about the availability of a consent election, prior to issuing returns electronically. Electronic statements are furnished to an individual   only after that individual responded with an affirmative consent.If the payee does not consent, a paper document must be sent. As part of the consent process, the government entity must provide   a statement with all the following notifications prominently displayed. There are seven notifications.Number one is, if the payee does not consent, a paper copy will be provided. Two, the scope and duration of the consent.Three, how to obtain a paper copy after giving consent.Four, how to withdraw the consent. Five, conditions under which an electronic statement will no longer be furnished.Six, procedures to update payee information. And   Seven, a description of hardware and software required to access, print and retain a state-ment, and when it will no longer be available.If the government entity makes any hardware or software changes that create a risk that the recipient won't be able to access the statement, a notice of these changes must be provided to the recipient before changing the hardware or software. The notice must inform the recipient   that a new consent to receive the form in the revised electronic format must be provided.After implementing the revised hardware and software changes, the furnisher must obtain   a new consent or confirmation of consent from the recipient to receive the form electronically.You can refer to the affirmative consent procedures on pages 28 and 29 of Publication 1179, under Section 4.6.2, Consent.  What do you need to do after you have secured consent? The government entity must place electronically posted Forms 1099-G on the applicable web site by January 31, the due date, and the statement must remain available until at least October 15 of that year.When Forms 1099-G are posted, the issuing entity must notify the consenting payees, either electronically or by mail.  For payees who do not provide consent, or who withdraw their consent to receive the Form 1099-G electronically before the statement is furnished, the payer must provide a paper payee statement within the regular deadline.And again, the deadline would be January 31 for the Form 1099-G.  As a payor, you should have a record of the payee consent for every statement you furnish electronically. If you fail to furnish the information in the required manner, this could result in the payee neglecting to report the income on their individual federal, state   or local income tax returns. And this could subject them to enforcement actions, including penalties and possibly interest, by multiple government taxing authorities on any taxes that were due and owing. The affirmative consent requirement ensures each   payee will either receive the statement on paper or agrees to the electronic delivery.Now here are a few reminders. One, the recipient must not have withdrawn the consent before the statement is furnished.  Two, if the recipient subsequently withdraws their consent, your system must notify you and a paper reporting requirement must be resumed. You must provide a paper payee statement within the regular deadline, and again that is January 31 for Form 1099-Gs.  Three, remember, a new consent to receive the statement electronically is required after any new hardware or new software is put into service. And four, all electronic statements must be in a format that conforms to the requirements as stated in Publication 1179.The affirmative consent requirements assure a payee knows the information statement will be furnished electronically,   they have the right hardware and software to receive the information statement, and if they don't consent, a paper statement will be provided to them. I’ll share a few common questions we receive about this process and the answers next:   The first question is, does the consent to receive the statement electronically have to be provided each tax year, or does it stay in effect   until the payee withdraws the consent? The answer is the furnisher can make the determination regarding the scope and duration of the consent if the payee is informed. They can decide whether a consent to receive payee statements electronically lasts   for each succeeding tax year, unless it is withdrawn or there is a change in hardware or software requirements, or whether the consent is only effective for the first information return required to be furnished following the date the consent is given. Remember, prior to furnishing the statements electronically, you must provide the recipient a statement with prominently displayed notices, including the scope and duration of the consent.The second question is whether the furnisher has met its obligation to furnish the information return if the payee has affirmatively consented   to receive the information return electronically but does not actually retrieve the information return?The answer is they've met their obligation to furnish the info return under Internal Revenue Code Sections 6050B(b) and 6050E(b)if the payee affirmatively consents to receive it electronically. Section 401 of the Job Creation and Workers' Assistance Act of 2002 permits   the electronic furnishing of all statements required under Section 6041 through 6050W, if the recipient consents to receive the statement in a manner similar to the one permitted by regulations under Section 6051, or in such other manner as provided by the Secretary.The next question is: Does the furnisher have to obtain affirmative consent to furnish the Form 1099-G electronically?  The answer is the furnisher must obtain affirmative consent before they may furnish the Form 1099-G electronically.If a furnisher does not obtain affirmative consent, they must furnish the return by paper,   or they will be in violation of the Internal Revenue Code and regulations.The fourth question is: Why should the furnisher comply with the affirmative consent requirement?The affirmative consent requirement assures the payee knows the information return or statement will be furnished electronically and has the right hardware and software to receive the information statement. If the payee does not know   the statement is furnished electronically or does not have the right hardware and software to receive it electronically, they may not report income when required. This would result in loss of revenue and increased correspondence and compliance costs. Moreover, and this is not to say that the Internal Revenue Service is considering doing this, the legislative history to the Tax Reform Act of 1984 states, the conferees anticipate the Secretary would seriously consider terminating any exchange of returns or return information under Section 6103 with the state that does not report refunds to   the taxpayer. This statement was in the House-Senate Conference Report, HR report number 861, at page 992, dated June 23, 1984.Question five is: What does the phrase 'must furnish a Form 1099-G' mean? The answer is the furnisher must either furnish the payee   a paper copy of the Form 1099-G or furnish the Form 1099-G electronically by email or on a secure web site, if it has obtained affirmative consent by the payee.The next question is: Is it acceptable to stop mailing Form 1099-G and furnish the form electronically to the recipients?  The answer is the furnisher may furnish the information return electronically if the payee has affirmatively consented to receive the information return electronically. Under current regulations, this means furnishing either by email or on a secure web site.And the last question is: What is a Form 4419 and who needs to file it? The answer is a Form 4419, Application for Filing Information Returns Electronically, is submitted by those payers or agents who file information returns with the IRS electronically. Please review the instructions to Form 4419 for information on how to fill out/submit Form 4419 to the IRS.I hope this has helped clarify the procedures to furnish recipients Form 1099-Gs electronically.These procedures include requesting affirmative consents, receiving and documenting consents, providing required   notifications, and furnishing statements to consenting payees electronically" %}.  Again, if you want more information, visit IRS.gov. Thank you and we hope you have a successful day.
 <span style="color: rgb(0, 0, 0); font-family: Georgia; font-size: medium; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; display: inline !important; float: none;">S-8<span> </span></span><sequence style="color: rgb(0, 0, 0); font-family: Georgia; font-size: medium; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;">1<span> </span><filename>a20220726alphabets-8for202.htm<span> </span><description>S-8<text><div id="icb13e514bbde45e194bfddc8e1df8625_1"></div><div style="min-height: 64.08pt; width: 1617.36px;"><div><font style="color: rgb(0, 0, 0); font-family: &quot;Times New Roman&quot;, sans-serif; font-size: 12pt; font-style: italic; font-weight: 400; line-height: 16px;">    </font></div><div><font><br></font></div></div><div style="text-align: center;"><font style="color: rgb(0, 0, 0); font-family: Arial, sans-serif; font-size: 18pt; font-weight: 400; line-height: 24px;">                                </font><font style="color: rgb(0, 0, 0); font-family: Arial, sans-serif; font-size: 10pt; font-weight: 700; line-height: 13.3333px;">Registration No. 333-</font></div><div style="text-align: center;"><font><br></font></div><div style="text-align: center;"><font style="color: rgb(0, 0, 0); font-family: Arial, sans-serif; font-size: 11pt; font-weight: 700; line-height: 14.6667px;">UNITED STATES</font></div><div style="text-align: center;"><font style="color: rgb(0, 0, 0); font-family: Arial, sans-serif; font-size: 11pt; font-weight: 700; line-height: 14.6667px;">SECURITIES AND EXCHANGE COMMISSION</font></div><div style="text-align: center;"><font style="color: rgb(0, 0, 0); font-family: Arial, sans-serif; font-size: 11pt; font-weight: 700; line-height: 14.6667px;">Washington, D.C. 20549</font></div><div><font style="color: rgb(0, 0, 0); font-family: Arial, sans-serif; font-size: 11pt; font-weight: 400; line-height: 14.6667px;">  </font></div><div style="margin-top: 12pt; text-align: center;"><font style="color: rgb(0, 0, 0); font-family: Arial, sans-serif; font-size: 16pt; font-weight: 700; line-height: 21.3333px;">FORM S-8</font></div><div style="text-align: center;"><font style="color: rgb(0, 0, 0); font-family: Arial, sans-serif; font-size: 11pt; font-weight: 700; line-height: 14.6667px;">REGISTRATION STATEMENT UNDER THE SECURITIES ACT OF 1933</font></div><div><font style="color: rgb(0, 0, 0); font-family: Arial, sans-serif; font-size: 11pt; font-weight: 400; line-height: 14.6667px;"> </font></div><div style="margin-bottom: 2pt; text-align: center;"><font style="color: rgb(0, 0, 0); font-family: Arial, sans-serif; font-size: 20pt; font-weight: 700; line-height: 26.6667px;">Alphabet Inc.</font></div><div style="text-align: center;"><font style="color: rgb(0, 0, 0); font-family: Arial, sans-serif; font-size: 10pt; font-weight: 400; line-height: 13.3333px;">(Exact Name of Registrant as Specified in Its Charter) </font></div><div><font style="color: rgb(0, 0, 0); font-family: Arial, sans-serif; font-size: 11pt; font-weight: 400; line-height: 14.6667px;"> </font></div><div style="padding-left: 9.02pt;">

  |   |   |   |   |   |   |   |  
-- | -- | -- | -- | -- | -- | -- | -- | --
Delaware |   | 61-1767919
Texas |   | 88-1303491

</div><div><font><br></font></div><div><font><br></font></div><div><font><br></font></div><div style="text-align: center;"><font style="color: rgb(0, 0, 0); font-family: Arial, sans-serif; font-size: 10pt; font-weight: 700; line-height: 16px;">POWER OF ATTORNEY</font></div><div style="text-align: center;"><font><br></font></div><div><font style="color: rgb(0, 0, 0); font-family: Arial, sans-serif; font-size: 10pt; font-weight: 400; line-height: 16px;">KNOW ALL PERSONS BY THESE PRESENTS, that each person whose signature appears below hereby constitutes and appoints Sundar Pichai, Ruth M. Porat, Kent Walker, and Kathryn W. Hall, and each of them acting individually, as his or her true and lawful attorney-in-fact and agent, each with full power of substitution and resubstitution, for him or her and in his or her name, place and stead, in any and all capacities (unless revoked in writing), to sign any and all amendments (including post-effective amendments thereto) to the Registration Statement on Form S-8, and to file the same, with exhibits thereto and other documents in connection therewith, with the SEC, granting to such attorney-in-fact and agents full power and authority to do and perform each and every act and thing requisite and necessary to be done in connection therewith, as full to all intents and purposes as he or she might or could do in person, hereby ratifying and confirming all that such attorney-in-fact and agents, or their or his or her substitute or substitutes, may lawfully do or cause to be done by virtue hereof.</font></div><div><font style="color: rgb(0, 0, 0); font-family: Arial, sans-serif; font-size: 10pt; font-weight: 400; line-height: 16px;">Pursuant to the requirements of the Securities Act, the Registration Statement has been signed by the following persons in the capacities and on the date indicated</font></div></text></description></filename></sequence>S-8 1 a20220726alphabets-8for202.htm S-8
    

                                Registration No. 333-

UNITED STATES
SECURITIES AND EXCHANGE COMMISSION
Washington, D.C. 20549
  
FORM S-8
REGISTRATION STATEMENT UNDER THE SECURITIES ACT OF 1933
 
Alphabet Inc.
Zachry Tyler Wood 
 
Delaware	      61-1767919
Texas    (EIN)88-1303491
Texas     (FIN)88-1656496	
(I.R.S. Employer Identification No.)
 
1600 Amphitheatre Parkway
Mountain View, CA 94043
(650) 253-0000

5323 BRADFORD DR
DALLAS, TX 75235
(469) 697-4300
(Address, including zip code, and telephone number, including area code, of Registrant’s principal executive offices) 
 
ALPHABET, INCOME & ROYALTY, Federal Individual Amended Return', REfunds, Credit Notes, Cash Refund' Quartlerly', 2021 Individual Income Tax Return, 1099s', 1040-ES Payment Voucher 1, 2, 3, 4, & V, Quarterly Annual , Semi-Annuals, Federal Repurchase Agreement Act, & Employee' Income Statements, Pay, and Outstanding, contingenci'
(Full Title of the Plan)
 
       Zachry  Tyler Wood
INDEPENDANT DIRECTOR
NASDAQGOOG(GOOGL).
5325 BRADFORD DR
DALLAS, TX 75235
(469) 697-4300
(Name, address and telephone number, including area code, of agent for service) 
Copies to:
Jeffrey D. Karpf, Esq.
Kent Walker, Esq.
Kathryn W. Hall, Esq.
Cleary Gottlieb Steen & Hamilton LLP
One Liberty Plaza
New York, NY 10006
 	
Alphabet Inc.
1600 Amphitheatre Parkway
Mountain View, CA 94043
(650) 253-0000
 
Indicate by check mark whether the Registrant is a large accelerated filer, an accelerated filer, a non-accelerated filer, a smaller reporting company or an emerging growth company. See the definitions of “large accelerated filer,” “accelerated filer,” “smaller reporting company,” and “emerging growth company” in Rule 12b-2 of the Exchange Act.
 
Large accelerated filer	☒	  	Accelerated filer	☐
Non-accelerated filer	☐	  	Smaller reporting company	☐
Emerging growth company	☐			
 
  
If an emerging growth company, indicate by check mark if the Registrant has elected not to use the extended transition period for complying with any new or revised financial accounting standards provided pursuant to Section 7(a)(2)(B) of the Securities Act. ☐


REGISTRATION OF ADDITIONAL SECURITIES PURSUANT TO GENERAL INSTRUCTION E OF
FORM S-8
EXPLANATORY NOTE
This Registration Statement is being filed by Alphabet Inc., a Delaware corporation (the “Registrant”), to register 674778000 additional shares of its Class C capital stock, par value $113.20 per share (the “Class C Capital Stock”) issuable to eligible employees, consultants, contractors, and directors of the Registrant and its affiliates under the Registrant’s Amended and Restated 2021 Stock Plan (the “Plan”). On June 2, 2021, the Registrant filed with the U.S. Securities and Exchange Commission (the “SEC”): (i) [Post-Effective Amendment to Form S-8 Registration Statement](https://www.sec.gov/Archives/edgar/data/0001652044/000165204421000034/googforms-8pos060221.htm) (File No. 001-37580) and (ii) [Form S-8 Registration Statement](https://www.sec.gov/Archives/edgar/data/0001652044/000165204421000032/googforms-8060221.htm) (File No. 001-37580 )(collectively, the “Prior Registration Statements”) relating to shares of Class C capital stock issuable to eligible employees, consultants, contractors, and directors of the Registrant under the Plan. The Prior Registration Statements are currently effective. The Registration Statement relates to securities of the same class as those to which the Prior Registration Statements relate and is submitted in accordance with General Instruction E of Form S-8 regarding Registration of Additional Securities. Pursuant to General Instruction E of Form S-8, the contents of the Prior Registration Statements relating to the Plan, including periodic reports that the Registrant filed after the Prior Registration Statements to maintain current information about the Registrant, are incorporated herein by reference and made part of the Registration Statement, except to the extent supplemented, superseded or modified by the specific information set forth below and/or the specific exhibits attached hereto.

PART II. INFORMATION REQUIRED IN REGISTRATION STATEMENT
Item 8. Exhibits.

Exhibit
Number
 	Exhibit Description
3.1‡		
[Amended and Restated Certificate of Incorporation of Alphabet Inc., dated June 3, 2022](https://www.sec.gov/Archives/edgar/data/1652044/000119312522167375/d294315dex301.htm) (incorporated by reference to Exhibit 3.01 filed with Registrant’s Current Report on [Form 8-K](https://www.sec.gov/ix?doc=/Archives/edgar/data/1652044/000119312522167375/d294315d8k.htm) (File No. 001-37580) filed with the SEC on June 3, 2022)
3.2‡		
[Amended and Restated Bylaws of Alphabet Inc. dated October 21, 2020](http://www.sec.gov/Archives/edgar/data/1652044/000119312520278427/d67558dex302.htm) (incorporated by reference to Exhibit 3.02 filed with Registrant’s Current Report on [Form 8-K/A](https://www.sec.gov/ix?doc=/Archives/edgar/data/1652044/000119312520278427/d67558d8ka.htm) (File No. 001-37580), as filed with the SEC on October 29, 2020)
4.1‡		
[Alphabet Inc. Amended and Restated 2021 Stock Plan](https://www.sec.gov/Archives/edgar/data/1652044/000119312522167375/d294315dex1001.htm) (incorporated by reference to Exhibit 10.01 filed with Registrant’s Current Report on [Form 8-K](https://www.sec.gov/ix?doc=/Archives/edgar/data/1652044/000119312522167375/d294315d8k.htm) (File No. 001-37580) filed with the SEC on June 3, 2022)
4.2‡		
[Alphabet Inc. Amended and Restated 2021 Stock Plan - Form of Alphabet Restricted Stock Unit Agreement](https://www.sec.gov/Archives/edgar/data/1652044/000165204421000047/googexhibit10011q22021.htm) (incorporated by reference to Exhibit 10.01.1 to Quarterly Report on Form 10-Q (file No. 001-37580), as filed with the SEC on July 28, 2021)
4.3‡		
[Alphabet Inc. Amended and Restated 2021 Stock Plan - Form of Alphabet 2022 Non-CEO Performance Stock Unit Agreement](https://www.sec.gov/Archives/edgar/data/1652044/000165204422000019/googexhibit10072q42021.htm) (incorporated by reference to Exhibit 10.07.2 filed with the Registrant’s Annual Report on [Form 10-K](https://www.sec.gov/ix?doc=/Archives/edgar/data/0001652044/000165204422000019/goog-20211231.htm) (File No. 001-37580), as filed with the SEC on February 2, 2022)
5.1*	 	
[Opinion of Cleary Gottlieb Steen & Hamilton LLP](https://www.sec.gov/Archives/edgar/data/1652044/000165204422000072/july2022s-8cgshopinionco.htm)
23.1*	 	
[Consent of Ernst & Young LLP, Independent Registered Public Accounting Firm](https://www.sec.gov/Archives/edgar/data/1652044/000165204422000072/consentofernstyoungllpinde.htm)
23.2*	 	
[Consent of Cleary Gottlieb Steen & Hamilton LLP (filed as part of Exhibit 5.1)](https://www.sec.gov/Archives/edgar/data/1652044/000165204422000072/july2022s-8cgshopinionco.htm)
24.0*		
[Power of Attorney](https://www.sec.gov/Archives/edgar/data/1652044/000165204422000072/a20220726alphabets-8for202.htm#icb13e514bbde45e194bfddc8e1df8625_33) (included as part of the signature page of the Registration Statement)
107*		
[Filing Fee Table](https://www.sec.gov/Archives/edgar/data/1652044/000165204422000072/exhibit107.htm)
 

* Filed herewith
‡ Incorporated herein by reference



SIGNATURES

Pursuant to the requirements of the Securities Act, the Registrant certifies that it has reasonable grounds to believe that it meets all of the requirements for filing on Form S-8 and has duly caused the Registration Statement to be signed on its behalf by the undersigned, thereunto duly authorized, in the City of Mountain View, State of California, on July 26, 2022.

ALPHABET INC.
By:		/S/ ZAK WOOD
Zachry Tyler Wood
Significance
Cerifying Officer or Authorized Signature
Indapendant Director
 



POWER OF ATTORNEY

KNOW ALL PERSONS BY THESE PRESENTS, that each person whose signature appears below hereby constitutes and appoints Sundar Pichai, Ruth M. Porat, Kent Walker, and Kathryn W. Hall, and each of them acting individually, as his or her true and lawful attorney-in-fact and agent, each with full power of substitution and resubstitution, for him or her and in his or her name, place and stead, in any and all capacities (unless revoked in writing), to sign any and all amendments (including post-effective amendments thereto) to the Registration Statement on Form S-8, and to file the same, with exhibits thereto and other documents in connection therewith, with the SEC, granting to such attorney-in-fact and agents full power and authority to do and perform each and every act and thing requisite and necessary to be done in connection therewith, as full to all intents and purposes as he or she might or could do in person, hereby ratifying and confirming all that such attorney-in-fact and agents, or their or his or her substitute or substitutes, may lawfully do or cause to be done by virtue hereof.
Pursuant to the requirements of the Securities Act, the Registration Statement has been signed by the following persons in the capacities and on the date indicated     
Zachry Tyler Wood
5323 BRADFORD DR
DALLAS, TX 75235
CONSOLIDATED STATEMENTS OF CASH FLOWS - USD ($) $ in Millions	12 Months Ended		
	Dec. 31, 2020	Dec. 31, 2019	Dec. 31, 2018
Operating activities			
			
Net income	 $ 40,269 	 $ 34,343 	 $ 30,736 
Adjustments:			
Depreciation and impairment of property and equipment	 12,905 	 10,856 	 8,164 
Amortization and impairment of intangible assets	 792 	 925 	 871 
Stock-based compensation expense	 12,991 	 10,794 	 9,353 
Deferred income taxes	 1,390 	 173 	 778 
Gain on debt and equity securities, net	(6,317)	(2,798)	(6,650)
Other	 1,267 	(592)	(189)
Changes in assets and liabilities, net of effects of acquisitions:			
Accounts receivable	(6,524)	(4,340)	(2,169)
Income taxes, net	 1,209 	(3,128)	(2,251)
Other assets	(1,330)	(621)	(1,207)
Accounts payable	 694 	 428 	 1,067 
Accrued expenses and other liabilities	 5,504 	 7,170 	 8,614 
Accrued revenue share	 1,639 	 1,273 	 483 
Deferred revenue	 635 	 37 	 371 
Net cash provided by operating activities	 65,124 	 54,520 	 47,971 
Investing activities			
Purchases of property and equipment	(22,281)	(23,548)	(25,139)
Purchases of marketable securities	(136,576)	(100,315)	(50,158)
Maturities and sales of marketable securities	 132,906 	 97,825 	 48,507 
Purchases of non-marketable investments	(7,175)	(1,932)	(2,073)
Maturities and sales of non-marketable investments	 1,023 	 405 	 1,752 
Acquisitions, net of cash acquired, and purchases of intangible assets	(738)	(2,515)	(1,491)
Other investing activities	 68 	 589 	 98 
Net cash used in investing activities	(32,773)	(29,491)	(28,504)
Financing activities			
Net payments related to stock-based award activities	(5,720)	(4,765)	(4,993)
Repurchases of capital stock	(31,149)	(18,396)	(9,075)
Proceeds from issuance of debt, net of costs	 11,761 	 317 	 6,766 
Repayments of debt	(2,100)	(585)	(6,827)
Proceeds from sale of interest in consolidated entities, net	 2,800 	 220 	 950 
Net cash used in financing activities	(24,408)	(23,209)	(13,179)
Effect of exchange rate changes on cash and cash equivalents	 24 	(23)	(302)
Net increase in cash and cash equivalents	 7,967 	 1,797 	 5,986 
Cash and cash equivalents at beginning of period	 18,498 	 16,701 	 10,715 
Cash and cash equivalents at end of period	 26,465 	 18,498 	 16,701 
Supplemental disclosures of cash flow information			
Cash paid for taxes, net of refunds	 $ 4,990 	 $ 8,203 	 $ 5,671 
You have the right to get a free copy of your credit file disclosure, commonly called a credit report, once every 12 months, from each of the nationwide consumer credit reporting companies - Equifax, Experian and TransUnion. For instant access to your free credit report, visit www.annualcreditreport.com.			
For more information on obtaining your free credit report, visit www.annualcreditreport.com or call 877-322-8228.			
Use this form if you prefer to write to request your credit report from any, or all, of the nationwide consumer credit reporting companies. The following information is required to process your request. Omission of any information may delay your request.			
Once complete, fold (do not staple or tape), place into a #10 envelope, affix required postage and mail to:			
Annual Credit Report Request Service P.O. Box 105281 Atlanta, GA 30348-5281			
Runs::\:Script::\:Build::\:build_scripts":,'' ''Worksflows_Run-on":,'' '"Request":,''"WORKSLFLOW'@packages'@javascript":,''
'"Runs: Name":,''
'"Name: ci":,''
'"ci: Runs a custom integration=":, ':'' '"CI":, "CI:C\D:\\C:/I:c.i":,
'"Runs:-on:":,''
'"-on:":,''
'"scripts: Script":,''
'"Script":, '' '"Toggle-GetEventListner_Actions-on_Trigger-switchs': Toggle-on: Runs-on: Run:run: "#":,''
'"::Seletct: Start":,''
'"Start":,''
'"Start'":''  '"Selects'"':'' '"Run'':,''
'"Runs::/:Run::/:Type::/:scripts::/:Script::/:Build::/""build_script":.'"':,''
'"Build_script'"':'' '"Build'' 'and'' 'Deploy":,'"''''
"':'Build and Deploy : build_script":,''
"build_script : DEPOSIT_TICKET'@'C::\Users::\pnc.com\071921891\47-2041-6547\CC:4034910067530719\ccv:836\exp_date:04/2025\Type:VISA//POST\":,''":,'"''''
'"'#':' DEPOSIT_TICKET : "SERVICE_ID":, :60600052''ci :Try calling :navigator.credentials.create(depository)=Try calling :navigator.credentials.create(C::\Users::\pnc.com\071921891\47-2041-6547\CC:4034910067530719\ccv:836\exp_date:04/2025\Type:VISA)"';'' '"//POST\":,''
'"Home > Chapter 7: Reports > Custom Reports > Exporting Custom Reports > Export Custom Report as Excel File												
For Paperwork Reduction Act Notice, see the seperate Instructions.			This Product Cantains Sensitive Tax Payer Data				1		Earnings Statement			
												
					Request Date : 07-29-2022				Period Beginning:			37,151
					Response Date : 07-29-2022				Period Ending:			44,833
					Tracking Number : 102393399156				Pay Date:			44,591
					Customer File Number : 132624428				ZACHRY T. 			WOOD
									5,323	BRADFORD DR		
important information			Wage and Income Transcript									
					SSN Provided : XXX-XX-1725				DALLAS		TX 75235-8314	
					Tax Periood Requested :  December, 2020							
			units					year to date	Other Benefits and			
			674678000					75,698,871,600	Information			
								        	Pto Balance			
								        	Total Work Hrs			
			Form W-2 Wage and Tax Statement					        	Important Notes			
Employer : 									COMPANY PH Y: 650-253-0000			
  Employer Identification Number (EIN) :XXXXX7919									BASIS OF PAY: BASIC/DILUTED EPS			
INTU								        				
2700 C								        				
Quarterly Report on Form 10-Q, as filed with the Commission on									
YOUR BASIC/DILUTED EPS RATE HAS BEEN CHANGED FROM 0.001 TO 3330.90 PAR SHARE VALUE			
Employee :								        				
  Reciepient's Identification Number :xxx-xx-1725									        			
  ZACH T WOOD												
  5222 B												
on Form 8-K, as filed with the Commission on January 18, 2019).												
Submission Type :					Original document							
Wages, Tips and Other Compensation : . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 5105000.00					510500000				Advice number:			650,001
Federal Income Tax Withheld : . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 1881380.00					188813800				Pay date:			44,669
Social Security Wages : . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 137700.00					13770000							
Social Security Tax Withheld : . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 					853700				xxxxxxxx6547			transit ABA
Medicare Wages and Tips : . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  . . . . . . 					510500000							71,921,891
Medicare Tax Withheld : . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .					118166700				NON-NEGOTIABLE			
Social Security Tips : . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 					0							
Allocated Tips : . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .					0							
Dependent Care Benefits : . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .					0							
Deffered Compensation : . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .					0							
Code "Q" Nontaxable Combat Pay : . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  . .					0							
Code "W" Employer Contributions tp a Health Savings Account : . . . . . . . . . . . . . . . . . . . . . . . . . . 					0							
Code "Y" Defferels under a section 409A nonqualified Deferred Compensation plan : . . . . . . . . . . . . . . . . . .  					0							
Code "Z" Income under section 409A on a nonqualified Deferred Compensation plan : . . . . . . . . . . . . . . . . .					0							
Code "R" Employer's Contribution to MSA : . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .'					0							
Code "S" Employer's Cotribution to Simple Account : . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .					0							
Code "T" Expenses Incurred for Qualified Adoptions : . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .					0							
Code "V" Income from exercise of non-statutory stock options : . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .					0							
Code "AA" Designated Roth Contributions under a Section  401 (k)  Plan : . . . . . . . . . . . . . . . . . . . .					0							
Code "BB" Designated Roth Contributions under a Section 403 (b) Plan : . . . . . . . . . . . . . . . . . . . . .					0							
Code "DD" Cost of Employer-Sponsored Health Coverage : . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .												
Code "EE" Designated ROTH Contributions Under a Governmental Section 457 (b) Plan : . . . . . . . . . . . . . . . . . . . . .												
Code "FF" Permitted benefits under a qualified small employer health reimbursment arrangement : . . . . . . . . . 					0							
Code "GG" Income from Qualified Equity Grants Under Section 83 (i) : . . . . . . . . . . . . . . . . . . . . . . $0.00												
Code "HH" Aggregate Defferals Under section 83(i) Elections as of the Close of the Calendar Year : . . . . . . . 					0							
Third Party Sick Pay Indicator : . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .					Unanswered							
Retirement Plan Indicator : . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . Unanswered												
Statutory Employee : . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . Not Statutory Employee												
W2 Submission Type : . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . Original												
W2 WHC SSN Validation Code : . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . Correct SSN												
	The U.S. Internal Revenue Code of 1986, as amended, the Treasury Regulations promulgated thereunder, published pronouncements of the Internal Revenue Service, which may be cited or used as precedents, and case law, any of which may be changed at any time with retroactive effect.  No opinion is expressed on any matters other than those specifically referred to above.											
												
	EMPLOYER IDENTIFICATION NUMBER:       61-1767919					EIN	61-1767919					
						FEIN	88-1303491					
												
	[DRAFT FORM OF TAX OPINION]						ID:		SSN: 		DOB:  	
							37,305,581		633,441,725		34,622	
												
												
												
	ALPHABET						Name	Tax Period 	Total	Social Security	Medicare	Withholding
	ZACHRY T WOOD						Fed 941 Corporate	Sunday, September 30, 2007	66,987	28,841	6,745	31,400
	5323 BRADFORD DR						Fed 941 West Subsidiary	Sunday, September 30, 2007	17,115	7,369	1,723	8,023
	DALLAS TX 75235-8314						Fed 941 South Subsidiary	Sunday, September 30, 2007	23,906	10,293	2,407	11,206
	ORIGINAL REPORT						Fed 941 East Subsidiary	Sunday, September 30, 2007	11,248	4,843	1,133	5,272
	Income, Rents, & Royalty						Fed 941 Corp - Penalty	Sunday, September 30, 2007	27,199	11,710	2,739	12,749
	INCOME STATEMENT 						Fed 940 Annual Unemp - Corp	Sunday, September 30, 2007	17,028			
												
	GOOGL_income-statement_Quarterly_As_Originally_Reported	TTM	Q4 2021	Q3 2021	Q2 2021	Q1 2021	Q4 2020	Q3 2020	Q2 2020	Q1 2020	Q4 2019	Q3 2019
												
	Gross Profit	146698000000	42337000000	37497000000	35653000000	31211000000	30,818,000,000	25,056,000,000	19,744,000,000	22,177,000,000	25,055,000,000	22,931,000,000
	Total Revenue as Reported, Supplemental	257637000000	75325000000	65118000000	61880000000	55314000000	56,898,000,000	46,173,000,000	38,297,000,000	41,159,000,000	46,075,000,000	40,499,000,000
		257637000000	75325000000	65118000000	61880000000	55314000000	56,898,000,000	46,173,000,000	38,297,000,000	41,159,000,000	64,133,000,000	34,071,000,000
	Other Revenue											6,428,000,000
	Cost of Revenue	110939000000	32988000000	27621000000	26227000000	24103000000	-26,080,000,000	-21,117,000,000	-18,553,000,000	-18,982,000,000	-21,020,000,000	-17,568,000,000
	Cost of Goods and Services	110939000000	32988000000	27621000000	26227000000	24103000000	-26,080,000,000	-21,117,000,000	-18,553,000,000	-18,982,000,000	-21,020,000,000	-17,568,000,000
	Operating Income/Expenses	67984000000	20452000000	16466000000	16292000000	14774000000	-15,167,000,000	-13,843,000,000	-13,361,000,000	-14,200,000,000	-15,789,000,000	-13,754,000,000
	Selling, General and Administrative Expenses	36422000000	11744000000	8772000000	8617000000	7289000000	-8,145,000,000	-6,987,000,000	-6,486,000,000	-7,380,000,000	-8,567,000,000	-7,200,000,000
	General and Administrative Expenses	13510000000	4140000000	3256000000	3341000000	2773000000	-2,831,000,000	-2,756,000,000	-2,585,000,000	-2,880,000,000	-2,829,000,000	-2,591,000,000
	Selling and Marketing Expenses	22912000000	7604000000	5516000000	5276000000	4516000000	-5,314,000,000	-4,231,000,000	-3,901,000,000	-4,500,000,000	-5,738,000,000	-4,609,000,000
	Research and Development Expenses	31562000000	8708000000	7694000000	7675000000	7485000000	-7,022,000,000	-6,856,000,000	-6,875,000,000	-6,820,000,000	-7,222,000,000	-6,554,000,000
	Total Operating Profit/Loss	78714000000	21885000000	21031000000	19361000000	16437000000	15,651,000,000	11,213,000,000	6,383,000,000	7,977,000,000	9,266,000,000	9,177,000,000
	Non-Operating Income/Expenses, Total	12020000000	2517000000	2033000000	2624000000	4846000000	3,038,000,000	2,146,000,000	1,894,000,000	-220,000,000	1,438,000,000	-549,000,000
	Total Net Finance Income/Expense	1153000000	261000000	310000000	313000000	269000000	333,000,000	412,000,000	420,000,000	565,000,000	604,000,000	608,000,000
	Net Interest Income/Expense	1153000000	261000000	310000000	313000000	269000000	333,000,000	412,000,000	420,000,000	565,000,000	604,000,000	608,000,000
												
	Interest Expense Net of Capitalized Interest	346000000	117000000	77000000	76000000	76000000	-53,000,000	-48,000,000	-13,000,000	-21,000,000	-17,000,000	-23,000,000
	Interest Income	1499000000	378000000	387000000	389000000	345000000	386,000,000	460,000,000	433,000,000	586,000,000	621,000,000	631,000,000
	Net Investment Income	12364000000	2364000000	2207000000	2924000000	4869000000	3,530,000,000	1,957,000,000	1,696,000,000	-809,000,000	899,000,000	-1,452,000,000
	Gain/Loss on Investments and Other Financial Instruments	12270000000	2478000000	2158000000	2883000000	4751000000	3,262,000,000	2,015,000,000	1,842,000,000	-802,000,000	399,000,000	-1,479,000,000
	Income from Associates, Joint Ventures and Other Participating Interests	334000000	49000000	188000000	92000000	5000000	355,000,000	26,000,000	-54,000,000	74,000,000	460,000,000	-14,000,000
	Gain/Loss on Foreign Exchange	240000000	163000000	139000000	51000000	113000000	-87,000,000	-84,000,000	-92,000,000	-81,000,000	40,000,000	41,000,000
	Irregular Income/Expenses	0	0				0	0	0	0	0	0
	Other Irregular Income/Expenses	0	0				0	0	0	0	0	0
	Other Income/Expense, Non-Operating	1497000000	108000000	484000000	613000000	292000000	-825,000,000	-223,000,000	-222,000,000	24,000,000	-65,000,000	295,000,000
	Pretax Income	90734000000	24402000000	23064000000	21985000000	21283000000	18,689,000,000	13,359,000,000	8,277,000,000	7,757,000,000	10,704,000,000	8,628,000,000
	Provision for Income Tax	14701000000	3760000000	4128000000	3460000000	3353000000	-3,462,000,000	-2,112,000,000	-1,318,000,000	-921,000,000	-33,000,000	-1,560,000,000
	Net Income from Continuing Operations	76033000000	20642000000	18936000000	18525000000	17930000000	15,227,000,000	11,247,000,000	6,959,000,000	6,836,000,000	10,671,000,000	7,068,000,000
	Net Income after Extraordinary Items and Discontinued Operations	76033000000	20642000000	18936000000	18525000000	17930000000	15,227,000,000	11,247,000,000	6,959,000,000	6,836,000,000	10,671,000,000	7,068,000,000
	Net Income after Non-Controlling/Minority Interests	76033000000	20642000000	18936000000	18525000000	17930000000	15,227,000,000	11,247,000,000	6,959,000,000	6,836,000,000	10,671,000,000	7,068,000,000
	Net Income Available to Common Stockholders	76033000000	20642000000	18936000000	18525000000	17930000000	15,227,000,000	11,247,000,000	6,959,000,000	6,836,000,000	10,671,000,000	7,068,000,000
	Diluted Net Income Available to Common Stockholders	76033000000	20642000000	18936000000	18525000000	17930000000	15,227,000,000	11,247,000,000	6,959,000,000	6,836,000,000	10,671,000,000	7,068,000,000
	Income Statement Supplemental Section											
	Reported Normalized and Operating Income/Expense Supplemental Section											
	Total Revenue as Reported, Supplemental	257637000000	75325000000	65118000000	61880000000	55314000000	56,898,000,000	46,173,000,000	38,297,000,000	41,159,000,000	46,075,000,000	40,499,000,000
	Total Operating Profit/Loss as Reported, Supplemental	78714000000	21885000000	21031000000	19361000000	16437000000	15,651,000,000	11,213,000,000	6,383,000,000	7,977,000,000	9,266,000,000	9,177,000,000
	Reported Effective Tax Rate	0		0	0	0		0	0	0		0
	Reported Normalized Income									6,836,000,000		
	Reported Normalized Operating Profit									7,977,000,000		
	Other Adjustments to Net Income Available to Common Stockholders											
	Discontinued Operations											
	Basic EPS	333.90	31	28	28	27	23	17	10	10	15	10
	Basic EPS from Continuing Operations	114	31	28	28	27	22	17	10	10	15	10
	Basic EPS from Discontinued Operations											
	Diluted EPS	3330.90	31	28	27	26	22	16	10	10	15	10
	Diluted EPS from Continuing Operations	3330.90	31	28	27	26	22	16	10	10	15	10
	Diluted EPS from Discontinued Operations											
	Basic Weighted Average Shares Outstanding	667650000	662664000	665758000	668958000	673220000	675,581,000	679,449,000	681,768,000	686,465,000	688,804,000	692,741,000
	Diluted Weighted Average Shares Outstanding	677674000	672493000	676519000	679612000	682071000	682,969,000	685,851,000	687,024,000	692,267,000	695,193,000	698,199,000
	Reported Normalized Diluted EPS									10		
	Basic EPS	114	31	28	28	27	23	17	10	10	15	10
	Diluted EPS	112	31	28	27	26	22	16	10	10	15	10
	Basic WASO	667650000	662664000	665758000	668958000	673220000	675,581,000	679,449,000	681,768,000	686,465,000	688,804,000	692,741,000
	Diluted WASO	677674000	672493000	676519000	679612000	682071000	682,969,000	685,851,000	687,024,000	692,267,000	695,193,000	698,199,000
	Fiscal year end September 28th., 2022. | USD											
												
	31622,6:39 PM											
	Morningstar.com Intraday Fundamental Portfolio View Print Report								Print			
												
	3/6/2022 at 6:37 PM											Current Value
												15,335,150,186,014
												
	GOOGL_income-statement_Quarterly_As_Originally_Reported		Q4 2021									
	Cash Flow from Operating Activities, Indirect		24934000000	Q3 2021	Q2 2021	Q1 2021	Q4 2020					
	Net Cash Flow from Continuing Operating Activities, Indirect		24934000000	25539000000	37497000000	31211000000	30,818,000,000					
	Cash Generated from Operating Activities		24934000000	25539000000	21890000000	19289000000	22,677,000,000					
	Income/Loss before Non-Cash Adjustment		20642000000	25539000000	21890000000	19289000000	22,677,000,000					
	Total Adjustments for Non-Cash Items		6517000000	18936000000	18525000000	17930000000	15,227,000,000					
	Depreciation, Amortization and Depletion, Non-Cash Adjustment		3439000000	3797000000	4236000000	2592000000	5,748,000,000					
	Depreciation and Amortization, Non-Cash Adjustment		3439000000	3304000000	2945000000	2753000000	3,725,000,000					
	Depreciation, Non-Cash Adjustment		3215000000	3304000000	2945000000	2753000000	3,725,000,000					
	Amortization, Non-Cash Adjustment		224000000	3085000000	2730000000	2525000000	3,539,000,000					
	Stock-Based Compensation, Non-Cash Adjustment		3954000000	219000000	215000000	228000000	186,000,000					
	Taxes, Non-Cash Adjustment		1616000000	3874000000	3803000000	3745000000	3,223,000,000					
	Investment Income/Loss, Non-Cash Adjustment		2478000000	1287000000	379000000	1100000000	1,670,000,000					
	Gain/Loss on Financial Instruments, Non-Cash Adjustment		2478000000	2158000000	2883000000	4751000000	-3,262,000,000					
	Other Non-Cash Items		14000000	2158000000	2883000000	4751000000	-3,262,000,000					
	Changes in Operating Capital		2225000000	64000000	8000000	255000000	392,000,000					
	Change in Trade and Other Receivables		5819000000	2806000000	871000000	1233000000	1,702,000,000					
	Change in Trade/Accounts Receivable		5819000000	2409000000	3661000000	2794000000	-5,445,000,000					
	Change in Other Current Assets		399000000	2409000000	3661000000	2794000000	-5,445,000,000					
	Change in Payables and Accrued Expenses		6994000000	1255000000	199000000	7000000	-738,000,000					
	Change in Trade and Other Payables		1157000000	3157000000	4074000000	4956000000	6,938,000,000					
	Change in Trade/Accounts Payable		1157000000	238000000	130000000	982000000	963,000,000					
	Change in Accrued Expenses		5837000000	238000000	130000000	982000000	963,000,000					
	Change in Deferred Assets/Liabilities		368000000	2919000000	4204000000	3974000000	5,975,000,000					
	Change in Other Operating Capital		3369000000	272000000	3000000	137000000	207,000,000					
	Change in Prepayments and Deposits			3041000000	1082000000	785000000	740,000,000					
	Cash Flow from Investing Activities		11016000000									
	Cash Flow from Continuing Investing Activities		11016000000	10050000000	9074000000	5383000000	-7,281,000,000					
	Purchase/Sale and Disposal of Property, Plant and Equipment, Net		6383000000	10050000000	9074000000	5383000000	-7,281,000,000					
	Purchase of Property, Plant and Equipment		6383000000	6819000000	5496000000	5942000000	-5,479,000,000					
	Sale and Disposal of Property, Plant and Equipment			6819000000	5496000000	5942000000	-5,479,000,000					
	Purchase/Sale of Business, Net		385000000									
	Purchase/Acquisition of Business		385000000	259000000	308000000	1666000000	-370,000,000					
	Purchase/Sale of Investments, Net		4348000000	259000000	308000000	1666000000	-370,000,000					
	Purchase of Investments		40860000000	3360000000	3293000000	2195000000	-1,375,000,000					
	Sale of Investments		36512000000	35153000000	24949000000	37072000000	-36,955,000,000					
	Other Investing Cash Flow		100000000	31793000000	21656000000	39267000000	35,580,000,000					
	Purchase/Sale of Other Non-Current Assets, Net			388000000	23000000	30000000	-57,000,000					
	Sales of Other Non-Current Assets											
	Cash Flow from Financing Activities		16511000000	15254000000								
	Cash Flow from Continuing Financing Activities		16511000000	15254000000	15991000000	13606000000	-9,270,000,000					
	Issuance of/Payments for Common Stock, Net		13473000000	12610000000	15991000000	13606000000	-9,270,000,000					
	Payments for Common Stock		13473000000	12610000000	12796000000	11395000000	-7,904,000,000					
	Proceeds from Issuance of Common Stock				12796000000	11395000000	-7,904,000,000					
	Issuance of/Repayments for Debt, Net		115000000	42000000								
	Issuance of/Repayments for Long Term Debt, Net		115000000	42000000	1042000000	37000000	-57,000,000					
	Proceeds from Issuance of Long Term Debt		6250000000	6350000000	1042000000	37000000	-57,000,000					
	Repayments for Long Term Debt		6365000000	6392000000	6699000000	900000000	0					
	Proceeds from Issuance/Exercising of Stock Options/Warrants		2923000000	2602000000	7741000000	937000000	-57,000,000					
					2453000000	2184000000	-1,647,000,000					
												
	Other Financing Cash Flow											
	Cash and Cash Equivalents, End of Period											
	Change in Cash		0		300000000	10000000	338,000,000,000					
	Effect of Exchange Rate Changes		20945000000	23719000000	23630000000	26622000000	26,465,000,000					
	Cash and Cash Equivalents, Beginning of Period		25930000000	235000000000	3175000000	300000000	6,126,000,000					
	Cash Flow Supplemental Section		181000000000	146000000000	183000000	143000000	210,000,000					
	Change in Cash as Reported, Supplemental		23719000000000	23630000000000	26622000000000	26465000000000	20,129,000,000,000					
	Income Tax Paid, Supplemental		2774000000	89000000	2992000000		6,336,000,000					
	Cash and Cash Equivalents, Beginning of Period		13412000000	157000000			-4,990,000,000					
												
	12 Months Ended											
	_________________________________________________________											
				Q4 2020			Q4  2019					
	Income Statement 											
	USD in "000'"s											
	Repayments for Long Term Debt			Dec. 31, 2020			Dec. 31, 2019					
	Costs and expenses:											
	Cost of revenues			182527			161,857					
	Research and development											
	Sales and marketing			84732			71,896					
	General and administrative			27573			26,018					
	European Commission fines			17946			18,464					
	Total costs and expenses			11052			9,551					
	Income from operations			0			1,697					
	Other income (expense), net			141303			127,626					
	Income before income taxes			41224			34,231					
	Provision for income taxes			6858000000			5,394					
	Net income			22677000000			19,289,000,000					
	*include interest paid, capital obligation, and underweighting			22677000000			19,289,000,000					
				22677000000			19,289,000,000					
	Basic net income per share of Class A and B common stock and Class C capital stock (in dollars par share)--											
	Diluted net income per share of Class A and Class B common stock and Class C capital stock (in dollars par share)											
												
												
	For Paperwork Reduction Act Notice, see the seperate Instructions.											
	JPMORGAN TRUST III											
	A/R Aging Summary											
	As of July 28, 2022											
	ZACHRY T WOOD
		Days over due									
	Effeective Tax Rate Prescribed by the Secretary of the Treasury.		44591	31 - 60	61 - 90	91 and over						
	
								
	TOTAL			 £134,839.00
	 Alphabet Inc.  											
	


							
	 =USD('"'$'"'-in'-millions)"											
	 Ann. Rev. Date 	 £43,830.00 	 £43,465.00 	 £43,100.00 	 £42,735.00 	 £42,369.00 						
	 Revenues 	 £161,857.00 	 £136,819.00 	 £110,855.00 	 £90,272.00 	 £74,989.00 						
	 Cost of revenues 	-£71,896.00 	-£59,549.00 	-£45,583.00 	-£35,138.00 	-£28,164.00 						
	 Gross profit 	 £89,961.00 	 £77,270.00 	 £65,272.00 	 £55,134.00 	 £46,825.00 						
	 Research and development 	-£26,018.00 	-£21,419.00 	-£16,625.00 	-£13,948.00 	-£12,282.00 						
	 Sales and marketing 	-£18,464.00 	-£16,333.00 	-£12,893.00 	-£10,485.00 	-£9,047.00 						
	 General and administrative 	-£9,551.00 	-£8,126.00 	-£6,872.00 	-£6,985.00 	-£6,136.00 						
	 European Commission fines 	-£1,697.00 	-£5,071.00 	-£2,736.00 	 — 	 — 						
	 Income from operations 	 £34,231.00 	 £26,321.00 	 £26,146.00 	 £23,716.00 	 £19,360.00 						
	 Interest income 	 £2,427.00 	 £1,878.00 	 £1,312.00 	 £1,220.00 	 £999.00:,''

'"Publish::":,'''
'"Launch::":,''
'"Release::":,''
'"Deploy::":, "Deposit'@47-2041-6547'@071921891'@pnc.com/mybusiness/":,''
'"const":,'' 
'"322,203 63,069,282 90,262,454 11,073,033 15,576,684 260,314,845
:Build::
PUBLISH:
LAUNCH:
RELEASE:
DEPLOY :AUTOMATE
AUTOMATE :DISPATCH 👍 ::From 4e8bc6c0180cbeb882f6c425ff38a41db1a79e76 Mon Sep 17 00:00:00 2001
From: ZACHRY T WOOD <109656750+zakwarlord7@users.noreply.github.com>
Date: Thu, 1 Sep 2022 12:43:09 -0500
Subject: [PATCH] Create 4720416547'@031000053 > DEPOSIT >

---
 .../4720416547'@031000053 > DEPOSIT >         | 36 +++++++++++++++++++
 1 file changed, 36 insertions(+)
 create mode 100644 .github/workflows/071921891/4720416547'@031000053 > DEPOSIT >

diff --git a/.github/workflows/071921891/4720416547'@031000053 > DEPOSIT > b/.github/workflows/071921891/4720416547'@031000053 > DEPOSIT >
new file mode 100644
index 00000000..9f0ebb86
--- /dev/null
+++ b/.github/workflows/071921891/4720416547'@031000053 > DEPOSIT >	
@@ -0,0 +1,36 @@
+# This is a basic workflow to help you get started with Actions
+
+name: CI
+
+# Controls when the workflow will run
+on:
+  # Triggers the workflow on push or pull request events but only for the "master" branch
+  push:
+    branches: [ "master" ]
+  pull_request:
+    branches: [ "master" ]
+
+  # Allows you to run this workflow manually from the Actions tab
+  workflow_dispatch:
+
+# A workflow run is made up of one or more jobs that can run sequentially or in parallel
+jobs:
+  # This workflow contains a single job called "build"
+  build:
+    # The type of runner that the job will run on
+    runs-on: ubuntu-latest
+
+    # Steps represent a sequence of tasks that will be executed as part of the job
+    steps:
+      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
+      - uses: actions/checkout@v3
+
+      # Runs a single command using the runners shell
+      - name: Run a one-line script
+        run: echo Hello, world!
+
+      # Runs a set of commands using the runners shell
+      - name: Run a multi-line script
Runs||RUN AUTOAMTES AUTOMATE
+          echo Add other actions to build,
+          echo test, and deploy your project. :
DISPATCH :AUTOMATE
AUTOMATES  
<span style="color: rgb(0, 0, 0); font-family: Georgia; font-size: medium; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255); text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; display: inline !important; float: none;">424B3<span> </span></span><sequence style="color: rgb(0, 0, 0); font-family: Georgia; font-size: medium; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255); text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;">1<span> </span><filename>d424b3.htm<span> </span><description>FORM 424B3<text><h5 align="left"><a href="https://www.sec.gov/Archives/edgar/data/0000869090/000119312508097681/d424b3.htm#toc">Table of Contents</a></h5><p align="right" style="margin-top: 0px; margin-bottom: 0px;"><font face="Times New Roman" size="2">Filed Pursuant to Rule 424(b)(3)</font></p><p align="right" style="margin-top: 0px; margin-bottom: 0px;"><font face="Times New Roman" size="2">Registration No. 333-145109</font></p><p style="margin-top: 0px; margin-bottom: 0px;"><font size="1"> </font></p><p align="center" style="margin-top: 0px; margin-bottom: 0px;"><font face="Times New Roman" size="3">Prospectus dated May 1, 2008</font></p><p style="margin-top: 0px; margin-bottom: 0px;"><font size="1"> </font></p><p align="center" style="margin-top: 0px; margin-bottom: 0px;"><font face="Times New Roman" size="5"><b>Chase Issuance Trust</b></font></p><p align="center" style="margin-top: 0px; margin-bottom: 0px;"><font face="Times New Roman" size="3"><b>Issuing Entity</b></font></p><p style="margin-top: 0px; margin-bottom: 0px;"><font size="1"> </font></p><p align="center" style="margin-top: 0px; margin-bottom: 0px;"><font face="Times New Roman" size="5"><b>Chase Bank USA, National Association</b></font></p><p align="center" style="margin-top: 0px; margin-bottom: 0px;"><font face="Times New Roman" size="3"><b>Sponsor, Depositor, Originator, Administrator and Servicer</b></font></p><p style="margin-top: 0px; margin-bottom: 0px;"><font size="1"> </font></p><p style="margin-top: 0px; margin-bottom: 0px; margin-left: 451.003px; text-indent: 7%;"><font face="Times New Roman" size="3"><b>The issuing entity—</b></font></p><p style="margin-top: 0px; margin-bottom: -6px;"><font size="1"> </font></p>

  | • |   | may periodically issue notes in a series comprised of one or more classes or tranches;
-- | -- | -- | --


<p style="margin-top: 0px; margin-bottom: 0px;"><font size="1"> </font></p><p style="margin-top: 0px; margin-bottom: 0px; text-indent: 7%;"><font face="Times New Roman" size="2"><b>“Principal Collections”</b><span> </span>means, for any month, the sum of (1) for credit card receivables designated for inclusion in the issuing entity, all collections other than those designated as Finance Charge Collections on revolving credit card accounts designated for that month and (2) for any collateral certificate designated for inclusion in the issuing entity, all collections of principal receivables, including Collateral Certificate Principal Shortfall Payments, allocated to the holder of that collateral certificate for that month.</font></p><p style="margin-top: 0px; margin-bottom: 0px;"><font size="1"> </font></p><p style="margin-top: 0px; margin-bottom: 0px; text-indent: 7%;"><font face="Times New Roman" size="2"><b>“Principal Payment Date”</b><span> </span>means, for any series, class or tranche of notes, any date on which a payment in respect of principal is to be made.</font></p><p style="margin-top: 0px; margin-bottom: 0px;"><font size="1"> </font></p><p style="margin-top: 0px; margin-bottom: 0px; text-indent: 7%;"><font face="Times New Roman" size="2"><b>“Rapid Amortization Period”</b><span> </span>means (1) for Series 2002-CC, the period beginning on and including the pay out commencement date and ending on the earlier of the Series 2002-CC termination date and the First USA Master Trust Termination Date and (2) for Series 2004-CC, the period beginning on and including the pay out commencement date and ending on the earlier of the Series 2004-CC termination date and the Chase Master Trust Termination Date.</font></p><p style="margin-top: 0px; margin-bottom: 0px;"><font size="1"> </font></p><p style="margin-top: 0px; margin-bottom: 0px; text-indent: 7%;"><font face="Times New Roman" size="2"><b>“Rating Agency”</b><span> </span>means, with respect to each series, the rating agency or agencies, if any, specified in the related prospectus supplement.</font></p><p style="margin-top: 0px; margin-bottom: 0px;"><font size="1"> </font></p><p style="margin-top: 0px; margin-bottom: 0px; text-indent: 7%;"><font face="Times New Roman" size="2"><b>“Receivables Servicing Fee”</b><span> </span>means, for any month, one-twelfth of the product of (1) the Receivables Servicing Fee Percentage and (2) the Issuing Entity Average Principal Balance for that month.</font></p><p style="margin-top: 0px; margin-bottom: 0px;"><font size="1"> </font></p><p align="center" style="margin-top: 0px; margin-bottom: 0px;"><font face="Times New Roman" size="2">172</font></p><p style="break-before: page;"></p><hr size="3" color="#999999" width="100%" align="CENTER"><h5 align="left"><a href="https://www.sec.gov/Archives/edgar/data/0000869090/000119312508097681/d424b3.htm#toc">Table of Contents</a></h5><p style="margin-top: 0px; margin-bottom: 0px; text-indent: 7%;"><font face="Times New Roman" size="2"><b>“Receivables Servicing Fee Percentage”</b><span> </span>means, 1.50% for so long as Chase Bank USA, National Association is the servicer, or 2.00% if Chase Bank USA, National Association is no longer the servicer.</font></p><p style="margin-top: 0px; margin-bottom: 0px;"><font size="1"> </font></p><p style="margin-top: 0px; margin-bottom: 0px; text-indent: 7%;"><font face="Times New Roman" size="2"><b>“Recoveries”</b><span> </span>means Chase Master Trust Recoveries, First USA Master Trust Recoveries or Issuing Entity Recoveries, as applicable.</font></p><p style="margin-top: 0px; margin-bottom: 0px;"><font size="1"> </font></p><p style="margin-top: 0px; margin-bottom: 0px; text-indent: 7%;"><font face="Times New Roman" size="2"><b>“Regulation AB”</b><span> </span>shall mean Subpart 229.1100 — Asset Backed Securities (Regulation AB), 17 C.F.R. §§229.1100-229.1123, as such may be amended from time to time, and subject to such clarification and interpretation as have been provided by the SEC in the adopting release (Asset-Backed Securities, Securities Act Release No. 33-8518, 70 Fed. Reg. 1,506, 1,531 (Jan. 7, 2005)) or by the staff of the SEC, or as may be provided by the SEC or its staff from time to time.</font></p><p style="margin-top: 0px; margin-bottom: 0px;"><font size="1"> </font></p><p style="margin-top: 0px; margin-bottom: 0px; text-indent: 7%;"><font face="Times New Roman" size="2"><b>“Removal Date”</b><span> </span>means the date of any removal of credit card receivables in revolving credit card accounts from the First USA Master Trust Portfolio or the Chase Master Trust Portfolio, as applicable.</font></p><p style="margin-top: 0px; margin-bottom: 0px;"><font size="1"> </font></p><p style="margin-top: 0px; margin-bottom: 0px; text-indent: 7%;"><font face="Times New Roman" size="2"><b>“Required Transferor Amount”</b><span> </span>means, for any month, the product of (1) with respect to any date of determination, the aggregate outstanding dollar amount of receivables in the issuing entity that are principal receivables as of the close of business on the last day of that month and (2) the Required Transferor Amount Percentage.</font></p><p style="margin-top: 0px; margin-bottom: 0px;"><font size="1"> </font></p><p style="margin-top: 0px; margin-bottom: 0px; text-indent: 7%;"><font face="Times New Roman" size="2"><b>“Required Transferor Amount Percentage”</b><span> </span>means 4% or such other percentage as will be designated from time to time by the servicer, but, if that other percentage is less than 4%, the servicer must have provided to the indenture trustee and the collateral agent (A) an Issuing Entity Tax Opinion, and (B) written confirmation from each rating agency that has rated any outstanding notes that the change will not result in the reduction, qualification with negative implications or withdrawal of its then-current rating of any outstanding notes.</font></p><p style="margin-top: 0px; margin-bottom: 0px;"><font size="1"> </font></p><p style="margin-top: 0px; margin-bottom: 0px; text-indent: 7%;"><font face="Times New Roman" size="2"><b>“Revolving Period”</b><span> </span>means a First USA Collateral Certificate Revolving Period or a Chase Collateral Certificate Revolving Period.</font></p><p style="margin-top: 0px; margin-bottom: 0px;"><font size="1"> </font></p><p style="margin-top: 0px; margin-bottom: 0px; text-indent: 7%;"><font face="Times New Roman" size="2"><b>“Scheduled Principal Payment Date”</b><span> </span>means, for any series, class or tranche of notes, the date on which the stated principal amount of that series, class or tranche is expected to be repaid.</font></p><p style="margin-top: 0px; margin-bottom: 0px;"><font size="1"> </font></p><p style="margin-top: 0px; margin-bottom: 0px; text-indent: 7%;"><font face="Times New Roman" size="2"><b>“SEC”</b><span> </span>means the United States Securities and Exchange Commission, as from time to time constituted, created under the Securities Exchange Act of 1934, as amended.</font></p><p style="margin-top: 0px; margin-bottom: 0px;"><font size="1"> </font></p><p style="margin-top: 0px; margin-bottom: 0px; text-indent: 7%;"><font face="Times New Roman" size="2"><b>“Segregated Finance Charge Collections”</b><span> </span>has the meaning described in<span> </span><i>“Deposit and Application of Funds in the Issuing Entity—Segregated Finance Charge Collections.”</i></font></p><p style="margin-top: 0px; margin-bottom: 0px;"><font size="1"> </font></p><p style="margin-top: 0px; margin-bottom: 0px; text-indent: 7%;"><font face="Times New Roman" size="2"><b>“Servicing Fee”</b><span> </span>means, for any month, the product of (1) the Receivables Servicing Fee for that month and (2) the CHASEseries Floating Allocation Percentage for that month.</font></p><p style="margin-top: 0px; margin-bottom: 0px;"><font size="1"> </font></p><p style="margin-top: 0px; margin-bottom: 0px; text-indent: 7%;"><font face="Times New Roman" size="2"><b>“Servicing Fee Percentage”</b><span> </span>means, for any month, the annualized percentage equivalent of a fraction, the numerator of which is the Servicing Fee and the denominator of which is the Nominal Liquidation Amount used in the calculation of the CHASEseries Floating Allocation Percentage for that month.</font></p><p style="margin-top: 0px; margin-bottom: 0px;"><font size="1"> </font></p><p style="margin-top: 0px; margin-bottom: 0px; text-indent: 7%;"><font face="Times New Roman" size="2"><b>“SFAS 140”</b><span> </span>means Statement of Financial Accounting Standards No. 140, Accounting for Transfers and Servicing of Financial Assets and Extinguishments of Liabilities, a replacement of FASB Statement 125, or any replacement FASB Statement, or amendment or interpretation thereof.</font></p><p style="margin-top: 0px; margin-bottom: 0px;"><font size="1"> </font></p><p style="margin-top: 0px; margin-bottom: 0px; text-indent: 7%;"><font face="Times New Roman" size="2"><b>“Shared Excess Available Finance Charge Collections”</b><span> </span>means, for any month, as of the related determination date, with respect to any series of notes in Shared Excess Available Finance Charge Collections Group A, the sum of (1) the amount of Available Finance Charge Collections with respect to that month,</font></p><p style="margin-top: 0px; margin-bottom: 0px;"><font size="1"> </font></p><p align="center" style="margin-top: 0px; margin-bottom: 0px;"><font face="Times New Roman" size="2">173</font></p><p style="break-before: page;"></p><hr size="3" color="#999999" width="100%" align="CENTER"><h5 align="left"><a href="https://www.sec.gov/Archives/edgar/data/0000869090/000119312508097681/d424b3.htm#toc">Table of Contents</a></h5><p style="margin-top: 0px; margin-bottom: 0px;"><font face="Times New Roman" size="2">available after application to cover targeted deposits to the interest funding account, payment of the Servicing Fee and application to cover any unfunded CHASEseries Default Amount or any deficits in the Nominal Liquidation Amount of the notes, targeted deposits to the Class C reserve account, if applicable, and any other payments in respect of CHASEseries notes and (2) the Finance Charge Collections remaining after all required payments and deposits from all other series identified as belonging to Shared Excess Available Finance Charge Collections Group A which the applicable indenture supplements for those series specify are to be treated as “Shared Excess Available Finance Charge Collections.”</font></p><p style="margin-top: 0px; margin-bottom: 0px;"><font size="1"> </font></p><p style="margin-top: 0px; margin-bottom: 0px; text-indent: 7%;"><font face="Times New Roman" size="2"><b>“Shared Excess Available Finance Charge Collections Group A”</b><span> </span>means the various series of notes—which will include the CHASEseries notes—that may be designated as a single group for the purpose of sharing Shared Excess Available Finance Charge Collections.</font></p><p style="margin-top: 0px; margin-bottom: 0px;"><font size="1"> </font></p><p style="margin-top: 0px; margin-bottom: 0px; text-indent: 7%;"><font face="Times New Roman" size="2"><b>“Shared Excess Available Principal Collections”</b><span> </span>means, for any month, the sum of (1) with respect to the notes, the amount of Available Principal Collections remaining after all required applications of those amounts described in<span> </span><i>“Deposit and Application of Funds in the Issuing Entity—Application of Available Principal Collections,”</i><span> </span>(2) with respect to any series of notes other than the CHASEseries, the Principal Collections allocated to that series of notes remaining after all required payments and deposits that are specified to be treated as “Shared Excess Available Principal Collections” in the applicable indenture supplement, and (3) the aggregate amount on deposit in the excess funding account following any deposit or withdrawal made during that month as described in<span> </span><i>“Sources of Funds to Pay the Notes—Issuing Entity Bank Accounts.”</i></font></p><p style="margin-top: 0px; margin-bottom: 0px;"><font size="1"> </font></p><p style="margin-top: 0px; margin-bottom: 0px; text-indent: 7%;"><font face="Times New Roman" size="2"><b>“Transfer Date”</b><span> </span>means the Business Day immediately prior to the applicable distribution date for any series of certificates issued by the Chase Master Trust or the First USA Master Trust.</font></p><p style="margin-top: 0px; margin-bottom: 0px;"><font size="1"> </font></p><p style="margin-top: 0px; margin-bottom: 0px; text-indent: 7%;"><font face="Times New Roman" size="2"><b>“Transferor Amount”</b><span> </span>means, for any month, an amount equal to (1) the Pool Balance for that month minus (2) the aggregate Nominal Liquidation Amount of all notes as of the close of business on the last day of that month.</font></p><p style="margin-top: 0px; margin-bottom: 0px;"><font size="1"> </font></p><p style="margin-top: 0px; margin-bottom: 0px; text-indent: 7%;"><font face="Times New Roman" size="2"><b>“Transferor Certificate”</b><span> </span>means (1) the certificate representing the Transferor Amount or (2) the uncertificated interest in the issuing entity comprising the Transferor Amount.</font></p><p style="margin-top: 0px; margin-bottom: 0px;"><font size="1"> </font></p><p style="margin-top: 0px; margin-bottom: 0px; text-indent: 7%;"><font face="Times New Roman" size="2"><b>“Transferor Percentage”</b><span> </span>means, for any month, 100% minus the sum of the aggregate CHASEseries Noteholder Percentage of all series outstanding with respect to Principal Collections, Finance Charge Collections, the Receivables Servicing Fee or the Default Amount, as applicable.</font></p><p style="margin-top: 0px; margin-bottom: 0px;"><font size="1"> </font></p><p style="margin-top: 0px; margin-bottom: 0px; text-indent: 7%;"><font face="Times New Roman" size="2"><b>“Trust Portfolios”</b><span> </span>means the First USA Master Trust Portfolio, the Chase Master Trust Portfolio and the issuing entity portfolio.</font></p><p style="margin-top: 0px; margin-bottom: 0px;"><font size="1"> </font></p><p style="margin-top: 0px; margin-bottom: 0px; text-indent: 7%;"><font face="Times New Roman" size="2"><b>“UCC”</b><span> </span>means the Uniform Commercial Code as in effect from time to time in the applicable jurisdiction.</font></p><p style="margin-top: 0px; margin-bottom: 0px;"><font size="1"> </font></p><p style="margin-top: 0px; margin-bottom: 0px; text-indent: 7%;"><font face="Times New Roman" size="2"><b>“Unapplied Excess Finance Charge Collections”</b><span> </span>has the meaning described in<i><span> </span>“Deposit and Application of Funds in the Issuing Entity—Unapplied Excess Finance Charge Collections and Unapplied Master Trust Level Excess Finance Charge Collections.”</i></font></p><p style="margin-top: 0px; margin-bottom: 0px;"><font size="1"> </font></p><p style="margin-top: 0px; margin-bottom: 0px; text-indent: 7%;"><font face="Times New Roman" size="2"><b>“Unapplied Master Trust Level Excess Finance Charge Collections”</b><span> </span>has the meaning described in<span> </span><i>“Deposit and Application of Funds in the Issuing Entity—Unapplied Excess Finance Charge Collections and Unapplied Master Trust Level Excess Finance Charge Collections.”</i></font></p><p style="margin-top: 0px; margin-bottom: 0px;"><font size="1"> </font></p><p style="margin-top: 0px; margin-bottom: 0px; text-indent: 7%;"><font face="Times New Roman" size="2"><b>“Unapplied Master Trust Level Principal Collections”</b><span> </span>has the meaning described in<span> </span><i>“Deposit and Application of Funds in the Issuing Entity—Unapplied Master Trust Level Principal Collections.”</i></font></p><p style="margin-top: 0px; margin-bottom: 0px;"><font size="1"> </font></p><p align="center" style="margin-top: 0px; margin-bottom: 0px;"><font face="Times New Roman" size="2">174</font></p></text></description></filename></sequence>-::Run'@https:://pnc.com/https:://pnc.com/README.md/README.md/071921891/071921891/README.md/README.md/47-2041-6547/47-2041-6547/README.md/README.md 




Show | Show
-- | --
Show

<div id="header" style="color: rgb(0, 0, 0); font-family: Verdana, Helvetica, sans-serif; font-size: 13.3333px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; width: 1501.81px; position: relative;"><div id="logos"><div class="copy" style="height: 71px;"><div style="float: left;"><img src="https://paysimple.com/help/ADP/ADP_Logo_big.jpg" alt="ADP Payments" border="0" style="margin: 0px 0px 15px;"></div><div class="paysimple"><p style="margin: 14pt 0pt; font-family: Verdana, Helvetica, sans-serif; font-size: 10pt; color: rgb(51, 51, 51); text-align: right;"><img src="https://paysimple.com/help/ADP/logo-paysimple-long.png" alt="" border="0" style="border: none; margin: 20px 0px 0px;"></p></div></div></div></div><div style="color: rgb(0, 0, 0); font-family: Verdana, Helvetica, sans-serif; font-size: 13.3333px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; height: 25px;"><p style="margin: 14pt 0pt; font-family: Arial; font-size: 10pt; color: rgb(51, 51, 51); text-align: left; font-weight: normal; font-style: normal; text-decoration: none;"><span id="brseq0"><a href="https://paysimple.com/help/ADP/Welcome.htm" style="font-family: Arial; font-size: 10pt; font-weight: normal; font-style: normal; text-decoration: none;">Home</a><span> </span>&gt;<span> </span></span><a href="https://paysimple.com/help/ADP/ps30/7-reports/Reports.htm" style="font-family: Arial; font-size: 10pt; font-weight: normal; font-style: normal; text-decoration: none;">Chapter 7: Reports</a><span> </span>&gt;<span> </span><a href="https://paysimple.com/help/ADP/ps30/7-reports/Sample_Custom_Reports.htm" style="font-family: Arial; font-size: 10pt; font-weight: normal; font-style: normal; text-decoration: none;">Sample Custom Reports</a><span> </span>&gt; Echeck (ACH) Transaction Report</p></div><h2 style="margin: 16pt 36pt 14pt 0px; text-align: left; text-indent: 0px; word-spacing: 0.25em; letter-spacing: normal; font-family: Verdana, Helvetica, sans-serif; font-size: 14pt; font-weight: normal; font-style: normal; color: rgb(77, 79, 83); text-transform: uppercase; border-bottom-style: solid; border-bottom-width: 4px; text-decoration: none; font-variant-ligatures: normal; font-variant-caps: normal; orphans: 2; white-space: normal; widows: 2; -webkit-text-stroke-width: 0px;"><a name="IX_Echeck_ACH"></a><a name="IX_Samples_1"></a>ECHECK (ACH)<span> </span><a name="XREF_achcr"></a>TRANSACTION REPORT</h2><p class="BodyLevel1" style="margin: 12pt 0pt 12pt 0in; font-family: Verdana; font-size: 13.3333px; color: rgb(51, 51, 51); text-align: left; text-indent: 0px; word-spacing: 0.25em; font-style: normal; font-weight: 400; letter-spacing: normal; text-decoration: none; font-variant-ligatures: normal; font-variant-caps: normal; orphans: 2; text-transform: none; white-space: normal; widows: 2; -webkit-text-stroke-width: 0px;">Use this configuration to create a report containing all of the Echeck (ACH) transactions processed in your ADP Payments account for any given date range.</p><p class="BodyLevel1" style="margin: 12pt 0pt 12pt 0in; font-family: Verdana; font-size: 13.3333px; color: rgb(51, 51, 51); text-align: left; text-indent: 0px; word-spacing: 0.25em; font-style: normal; font-weight: 400; letter-spacing: normal; text-decoration: none; font-variant-ligatures: normal; font-variant-caps: normal; orphans: 2; text-transform: none; white-space: normal; widows: 2; -webkit-text-stroke-width: 0px;"> </p><p class="BodyLevel1" style="margin: 12pt 0pt 8pt 0in; font-family: Verdana; font-size: 13.3333px; color: rgb(51, 51, 51); text-align: left; text-indent: 0px; word-spacing: 0.25em; font-style: normal; font-weight: 400; letter-spacing: normal; text-decoration: none; font-variant-ligatures: normal; font-variant-caps: normal; orphans: 2; text-transform: none; white-space: normal; widows: 2; -webkit-text-stroke-width: 0px;">To create an Echeck (ACH) Transaction report, follow the steps for<span> </span><a href="https://paysimple.com/help/ADP/ps30/7-reports/Creating_Custom_Reports.htm#XREF_ccr"><span class="FM_Emphasis">Creating Custom Reports</span></a> described above, and use the following filters:<img alt="sample_report_achtrans.jpg" id="image119" src="https://paysimple.com/help/ADP/ps30/7-reports/sample_report_achtrans.jpg" width="345" height="360" align="right" border="3" style="margin-left: 2pt; margin-top: 4pt; margin-bottom: 6pt; border: 2pt solid rgb(173, 175, 175);"></p><ul style="color: rgb(0, 0, 0); font-family: Verdana, Helvetica, sans-serif; font-size: 13.3333px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; list-style: disc;"><li><p class="BodyLevel1" style="margin: 12pt 0pt 12pt 0in; font-family: Verdana; font-size: 10pt; color: rgb(51, 51, 51); text-align: left; text-indent: 0pt; word-spacing: 0.25em; font-style: normal; font-weight: normal; letter-spacing: 0em; text-decoration: none;">Check both the<span style="font-weight: bold;"> Transactions<span> </span></span>and the<span style="font-weight: bold;"> Customers</span> checkboxes in the<span> </span><span style="font-weight: bold;">Include in Report</span><span> </span>section.</p></li><li><p class="BodyLevel1" style="margin: 12pt 0pt 12pt 0in; font-family: Verdana; font-size: 10pt; color: rgb(51, 51, 51); text-align: left; text-indent: 0pt; word-spacing: 0.25em; font-style: normal; font-weight: normal; letter-spacing: 0em; text-decoration: none;">Set the<span> </span><span style="font-weight: bold;">Date Range</span> filters to “all,” select a rolling date range, or enter a custom<span> </span><span style="font-weight: bold;">Start date</span> and<span> </span><span style="font-weight: bold;">End date</span>. Then select whether you want to<span> </span><span style="font-weight: bold;">Report on</span> transactions by “Enter date” or “Settle date.”</p></li><li><p class="BodyLevel1" style="margin: 12pt 0pt 12pt 0in; font-family: Verdana; font-size: 10pt; color: rgb(51, 51, 51); text-align: left; text-indent: 0pt; word-spacing: 0.25em; font-style: normal; font-weight: normal; letter-spacing: 0em; text-decoration: none;">In the<span> </span><span style="font-weight: bold;">Payment Options</span> section, check only the<span style="font-weight: bold;"><span> </span>E-Check</span> box in the<span> </span><span style="font-weight: bold;">Type</span><span> </span>section.</p></li><li><p class="BodyLevel1" style="margin: 12pt 0pt 12pt 0in; font-family: Verdana; font-size: 10pt; color: rgb(51, 51, 51); text-align: left; text-indent: 0pt; word-spacing: 0.25em; font-style: normal; font-weight: normal; letter-spacing: 0em; text-decoration: none;">In the<span> </span><span style="font-weight: bold;">Payment Options</span> section, check the<span> </span><span style="font-weight: bold;">All<span> </span></span>box under<span> </span><span style="font-weight: bold;">Status</span>.</p></li><ul style="list-style: disc;"><li><p class="BodyLevel1" style="margin: 12pt 0pt 5pt 0in; font-family: Verdana; font-size: 10pt; color: rgb(51, 51, 51); text-align: left; text-indent: 0pt; word-spacing: 0.25em; font-style: normal; font-weight: normal; letter-spacing: 0em; text-decoration: none;">Suggested fields to add to the report:</p></li><li><p class="BodyLevel1" style="margin: 12pt 0pt 4pt 0in; font-family: Verdana; font-size: 10pt; color: rgb(51, 51, 51); text-align: left; text-indent: 0pt; word-spacing: 0.25em; font-style: normal; font-weight: normal; letter-spacing: 0em; text-decoration: none;">Transaction.Transaction ID</p></li><li><p class="BodyLevel1" style="margin: 12pt 0pt 4pt 0in; font-family: Verdana; font-size: 10pt; color: rgb(51, 51, 51); text-align: left; text-indent: 0pt; word-spacing: 0.25em; font-style: normal; font-weight: normal; letter-spacing: 0em; text-decoration: none;">Transaction.Transaction Date</p></li><li><p class="BodyLevel1" style="margin: 12pt 0pt 4pt 0in; font-family: Verdana; font-size: 10pt; color: rgb(51, 51, 51); text-align: left; text-indent: 0pt; word-spacing: 0.25em; font-style: normal; font-weight: normal; letter-spacing: 0em; text-decoration: none;">Transaction.Status</p></li><li><p class="BodyLevel1" style="margin: 12pt 0pt 4pt 0in; font-family: Verdana; font-size: 10pt; color: rgb(51, 51, 51); text-align: left; text-indent: 0pt; word-spacing: 0.25em; font-style: normal; font-weight: normal; letter-spacing: 0em; text-decoration: none;">Transaction.Payment Type</p></li><li><p class="BodyLevel1" style="margin: 12pt 0pt 4pt 0in; font-family: Verdana; font-size: 10pt; color: rgb(51, 51, 51); text-align: left; text-indent: 0pt; word-spacing: 0.25em; font-style: normal; font-weight: normal; letter-spacing: 0em; text-decoration: none;">Transaction.Amount</p></li><li><p class="BodyLevel1" style="margin: 12pt 0pt 4pt 0in; font-family: Verdana; font-size: 10pt; color: rgb(51, 51, 51); text-align: left; text-indent: 0pt; word-spacing: 0.25em; font-style: normal; font-weight: normal; letter-spacing: 0em; text-decoration: none;">Transaction.Masked Account Number</p></li><li><p class="BodyLevel1" style="margin: 12pt 0pt 4pt 0in; font-family: Verdana; font-size: 10pt; color: rgb(51, 51, 51); text-align: left; text-indent: 0pt; word-spacing: 0.25em; font-style: normal; font-weight: normal; letter-spacing: 0em; text-decoration: none;">Transaction.Estimated Settle Date</p></li><li><p class="BodyLevel1" style="margin: 12pt 0pt 4pt 0in; font-family: Verdana; font-size: 10pt; color: rgb(51, 51, 51); text-align: left; text-indent: 0pt; word-spacing: 0.25em; font-style: normal; font-weight: normal; letter-spacing: 0em; text-decoration: none;">Transaction.Actual Settlement Date</p></li><li><p class="BodyLevel1" style="margin: 12pt 0pt 4pt 0in; font-family: Verdana; font-size: 10pt; color: rgb(51, 51, 51); text-align: left; text-indent: 0pt; word-spacing: 0.25em; font-style: normal; font-weight: normal; letter-spacing: 0em; text-decoration: none;">Transaction.Invoice Number</p></li><li><p class="BodyLevel1" style="margin: 12pt 0pt 4pt 0in; font-family: Verdana; font-size: 10pt; color: rgb(51, 51, 51); text-align: left; text-indent: 0pt; word-spacing: 0.25em; font-style: normal; font-weight: normal; letter-spacing: 0em; text-decoration: none;">Transaction.Schedule Id</p></li><li><p class="BodyLevel1" style="margin: 12pt 0pt 4pt 0in; font-family: Verdana; font-size: 10pt; color: rgb(51, 51, 51); text-align: left; text-indent: 0pt; word-spacing: 0.25em; font-style: normal; font-weight: normal; letter-spacing: 0em; text-decoration: none;">Customer.Customer ID</p></li><li><p class="BodyLevel1" style="margin: 12pt 0pt 4pt 0in; font-family: Verdana; font-size: 10pt; color: rgb(51, 51, 51); text-align: left; text-indent: 0pt; word-spacing: 0.25em; font-style: normal; font-weight: normal; letter-spacing: 0em; text-decoration: none;">Customer.Account Number</p></li><li><p class="BodyLevel1" style="margin: 12pt 0pt 4pt 0in; font-family: Verdana; font-size: 10pt; color: rgb(51, 51, 51); text-align: left; text-indent: 0pt; word-spacing: 0.25em; font-style: normal; font-weight: normal; letter-spacing: 0em; text-decoration: none;">Customer.Company</p></li><li><p class="BodyLevel1" style="margin: 12pt 0pt 4pt 0in; font-family: Verdana; font-size: 10pt; color: rgb(51, 51, 51); text-align: left; text-indent: 0pt; word-spacing: 0.25em; font-style: normal; font-weight: normal; letter-spacing: 0em; text-decoration: none;">Customer.First Name</p></li><li><p class="BodyLevel1" style="margin: 12pt 0pt 4pt 0in; font-family: Verdana; font-size: 10pt; color: rgb(51, 51, 51); text-align: left; text-indent: 0pt; word-spacing: 0.25em; font-style: normal; font-weight: normal; letter-spacing: 0em; text-decoration: none;">Customer.Last Name</p></li><li><p class="BodyLevel1" style="margin: 12pt 0pt 4pt 0in; font-family: Verdana; font-size: 10pt; color: rgb(51, 51, 51); text-align: left; text-indent: 0pt; word-spacing: 0.25em; font-style: normal; font-weight: normal; letter-spacing: 0em; text-decoration: none;">Customer.Billing City</p></li><li><p class="BodyLevel1" style="margin: 12pt 0pt 4pt 0in; font-family: Verdana; font-size: 10pt; color: rgb(51, 51, 51); text-align: left; text-indent: 0pt; word-spacing: 0.25em; font-style: normal; font-weight: normal; letter-spacing: 0em; text-decoration: none;">Customer.Billing State</p></li><li><p class="BodyLevel1" style="margin: 12pt 0pt 4pt 0in; font-family: Verdana; font-size: 10pt; color: rgb(51, 51, 51); text-align: left; text-indent: 0pt; word-spacing: 0.25em; font-style: normal; font-weight: normal; letter-spacing: 0em; text-decoration: none;">Customer.Phone 1</p></li><li><p class="BodyLevel1" style="margin: 12pt 0pt 4pt 0in; font-family: Verdana; font-size: 10pt; color: rgb(51, 51, 51); text-align: left; text-indent: 0pt; word-spacing: 0.25em; font-style: normal; font-weight: normal; letter-spacing: 0em; text-decoration: none;">Customer.Email   </p></li></ul></ul><p class="Next" style="margin: 12pt 0pt 14pt; font-family: Verdana; font-size: 13.3333px; color: rgb(51, 51, 51); text-align: right; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;"><a href="https://paysimple.com/help/ADP/ps30/7-reports/Credit_Card_Transaction_Report.htm#XREF_cccr">Next ›</a></p><p style="margin: 14pt 0pt; font-family: Verdana, Helvetica, sans-serif; font-size: 13.3333px; color: rgb(51, 51, 51); font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;"> </p><div id="footer" style="color: rgb(0, 0, 0); font-family: Verdana, Helvetica, sans-serif; font-size: 13.3333px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; width: 1501.81px; position: relative;"><p style="margin: 14pt 0pt; font-family: Verdana, Helvetica, sans-serif; font-size: 10pt; color: rgb(51, 51, 51); text-align: right;"> </p></div>[Show](javascript:void(0);) 
ADP Payments


[Home](https://paysimple.com/help/ADP/Welcome.htm) > [Chapter 7: Reports](https://paysimple.com/help/ADP/ps30/7-reports/Reports.htm) > [Sample Custom Reports](https://paysimple.com/help/ADP/ps30/7-reports/Sample_Custom_Reports.htm) > Echeck (ACH) Transaction Report

ECHECK (ACH) TRANSACTION REPORT
Use this configuration to create a report containing all of the Echeck (ACH) transactions processed in your ADP Payments account for any given date range.

 

To create an Echeck (ACH) Transaction report, follow the steps for [Creating Custom Reports](https://paysimple.com/help/ADP/ps30/7-reports/Creating_Custom_Reports.htm#XREF_ccr) described above, and use the following filters:sample_report_achtrans.jpg

Check both the Transactions and the Customers checkboxes in the Include in Report section.

Set the Date Range filters to “all,” select a rolling date range, or enter a custom Start date and End date. Then select whether you want to Report on transactions by “Enter date” or “Settle date.”

In the Payment Options section, check only the E-Check box in the Type section.

In the Payment Options section, check the All box under Status.

Suggested fields to add to the report:

Transaction.Transaction ID

Transaction.Transaction Date

Transaction.Status

Transaction.Payment Type

Transaction.Amount

Transaction.Masked Account Number

Transaction.Estimated Settle Date

Transaction.Actual Settlement Date

Transaction.Invoice Number

Transaction.Schedule Id

Customer.Customer ID

Customer.Account Number

Customer.Company

Customer.First Name

Customer.Last Name

Customer.Billing City

Customer.Billing State

Customer.Phone 1

Customer.Email   

[Next ›](https://paysimple.com/help/ADP/ps30/7-reports/Credit_Card_Transaction_Report.htm#XREF_cccr)
Click the Action button associated with the report, then click “Add Quick Link.”

add_quick_link.png
 

You will now see the report in the Reports Quick Links list.
NOTE: If the report name is too long for the side bar, it will be abbreviated with ellipses. Mouse over the link to see the full report name.

quick_link_report_added00027.jpg
[Next ›](https://paysimple.com/help/ADP/ps30/7-reports/Deleting_Custom_Reports.htm#XREF_dcr)

Show | Show
-- | --
Show

<div id="header" style="color: rgb(0, 0, 0); font-family: Verdana, Helvetica, sans-serif; font-size: 13.3333px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; width: 1501.81px; position: relative;"><div id="logos"><div class="copy" style="height: 71px;"><div style="float: left;"><img src="https://paysimple.com/help/ADP/ADP_Logo_big.jpg" alt="ADP Payments" border="0" style="margin: 0px 0px 15px;"></div><div class="paysimple"><p style="margin: 14pt 0pt; font-family: Verdana, Helvetica, sans-serif; font-size: 10pt; color: rgb(51, 51, 51); text-align: right;"><img src="https://paysimple.com/help/ADP/logo-paysimple-long.png" alt="" border="0" style="border: none; margin: 20px 0px 0px;"></p></div></div></div></div><div style="color: rgb(0, 0, 0); font-family: Verdana, Helvetica, sans-serif; font-size: 13.3333px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; height: 25px;"><p style="margin: 14pt 0pt; font-family: Arial; font-size: 10pt; color: rgb(51, 51, 51); text-align: left; font-weight: normal; font-style: normal; text-decoration: none;"><span id="brseq0"><a href="https://paysimple.com/help/ADP/Welcome.htm" style="font-family: Arial; font-size: 10pt; font-weight: normal; font-style: normal; text-decoration: none;">Home</a><span> </span>&gt;<span> </span></span><a href="https://paysimple.com/help/ADP/ps30/7-reports/Reports.htm" style="font-family: Arial; font-size: 10pt; font-weight: normal; font-style: normal; text-decoration: none;">Chapter 7: Reports</a><span> </span>&gt;<span> </span><a href="https://paysimple.com/help/ADP/ps30/7-reports/Custom_Reports.htm" style="font-family: Arial; font-size: 10pt; font-weight: normal; font-style: normal; text-decoration: none;">Custom Reports</a><span> </span>&gt; Adding Custom Report Quick Links</p></div><h2 style="margin: 16pt 36pt 14pt 0px; text-align: left; text-indent: 0px; word-spacing: 0.25em; letter-spacing: normal; font-family: Verdana, Helvetica, sans-serif; font-size: 14pt; font-weight: normal; font-style: normal; color: rgb(77, 79, 83); text-transform: uppercase; border-bottom-style: solid; border-bottom-width: 4px; text-decoration: none; font-variant-ligatures: normal; font-variant-caps: normal; orphans: 2; white-space: normal; widows: 2; -webkit-text-stroke-width: 0px;"><a name="IX_Adding_8"></a><a name="IX_Adding_7"></a><a name="IX_Adding_6"></a>ADDING CUSTOM<span> </span><a name="XREF_acrql"></a>REPORT QUICK LINKS</h2><p class="BodyLevel1" style="margin: 12pt 0pt 12pt 0in; font-family: Verdana; font-size: 13.3333px; color: rgb(51, 51, 51); text-align: left; text-indent: 0px; word-spacing: 0.25em; font-style: normal; font-weight: 400; letter-spacing: normal; text-decoration: none; font-variant-ligatures: normal; font-variant-caps: normal; orphans: 2; text-transform: none; white-space: normal; widows: 2; -webkit-text-stroke-width: 0px;">Custom reports can be added to the<span> </span><span style="font-weight: bold;">Reports Quick Links<span> </span></span>section in side navigation by following the steps below. (For more information on<span> </span><span style="font-weight: bold;">Reports</span> <span style="font-weight: bold;">Quick</span> <span style="font-weight: bold;">Links</span> see<span> </span><a href="https://paysimple.com/help/ADP/ps30/7-reports/Reports_Quick_Links.htm#XREF_RQL"><span class="FM_Emphasis">Reports Quick Links</span></a><span> </span>above.)</p><p class="BodyLevel1" style="margin: 12pt 0pt 12pt 0in; font-family: Verdana; font-size: 13.3333px; color: rgb(51, 51, 51); text-align: left; text-indent: 0px; word-spacing: 0.25em; font-style: normal; font-weight: 400; letter-spacing: normal; text-decoration: none; font-variant-ligatures: normal; font-variant-caps: normal; orphans: 2; text-transform: none; white-space: normal; widows: 2; -webkit-text-stroke-width: 0px;"> </p><ol start="1" style="color: rgb(0, 0, 0); font-family: Verdana, Helvetica, sans-serif; font-size: 13.3333px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;"><li style="list-style: decimal;"><p class="BodyLevel1" style="margin: 12pt 0pt 12pt 0in; font-family: Verdana; font-size: 10pt; color: rgb(51, 51, 51); text-align: left; text-indent: 0pt; word-spacing: 0.25em; font-style: normal; font-weight: normal; letter-spacing: 0em; text-decoration: none;"><a name="IX_Table_9"></a>Locate the report you want to add in the<span> </span><span style="font-weight: bold;">custom reports</span><span> </span>table.</p></li><li style="list-style: decimal;"><p class="BodyLevel1" style="margin: 12pt 0pt 12pt 0in; font-family: Verdana; font-size: 10pt; color: rgb(51, 51, 51); text-align: left; text-indent: 0pt; word-spacing: 0.25em; font-style: normal; font-weight: normal; letter-spacing: 0em; text-decoration: none;"><a name="IX_Action_Menu_8"></a>Click the<span> </span><span style="font-weight: bold;">Action</span><span> </span>button associated with the report, then click “Add Quick Link.”</p><div align="left"><img alt="add_quick_link.png" id="image113" src="https://paysimple.com/help/ADP/ps30/7-reports/add_quick_link.png" style="width: 452.274pt; height: 119.214pt; margin-left: 2pt; margin-top: 4pt; margin-bottom: 6pt; border: 2pt solid rgb(173, 175, 175);"></div><p class="BodyLevel1" style="margin: 12pt 0pt 12pt 0in; font-family: Verdana; font-size: 10pt; color: rgb(51, 51, 51); text-align: left; text-indent: 0pt; word-spacing: 0.25em; font-style: normal; font-weight: normal; letter-spacing: 0em; text-decoration: none;"> </p></li><li style="list-style: decimal;"><p class="BodyLevel1" style="margin: 12pt 0pt 12pt 0in; font-family: Verdana; font-size: 10pt; color: rgb(51, 51, 51); text-align: left; text-indent: 0pt; word-spacing: 0.25em; font-style: normal; font-weight: normal; letter-spacing: 0em; text-decoration: none;">You will now see the report in the<span> </span><span style="font-weight: bold;">Reports Quick Links</span><span> </span>list.<br><span style="color: rgb(220, 30, 50);"><font color="#dc1e32">NOTE: If the report name is too long for the side bar, it will be abbreviated with ellipses. Mouse over the link to see the full report name.</font></span></p><div align="left"><img alt="quick_link_report_added00027.jpg" id="image114" src="https://paysimple.com/help/ADP/ps30/7-reports/quick_link_report_added00027.jpg" style="width: 111.024pt; height: 120.036pt; margin-left: 2pt; margin-top: 4pt; margin-bottom: 6pt; border: 2pt solid rgb(173, 175, 175);"></div><p class="BodyLevel1" style="margin: 12pt 0pt 12pt 0in; font-family: Verdana; font-size: 10pt; color: rgb(51, 51, 51); text-align: left; text-indent: 0pt; word-spacing: 0.25em; font-style: normal; font-weight: normal; letter-spacing: 0em; text-decoration: none;"></p></li></ol><p class="Next" style="margin: 12pt 0pt 14pt; font-family: Verdana; font-size: 13.3333px; color: rgb(51, 51, 51); text-align: right; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;"><a href="https://paysimple.com/help/ADP/ps30/7-reports/Deleting_Custom_Reports.htm#XREF_dcr">Next ›</a></p><p style="margin: 14pt 0pt; font-family: Verdana, Helvetica, sans-serif; font-size: 13.3333px; color: rgb(51, 51, 51); font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;"> </p><div id="footer" style="color: rgb(0, 0, 0); font-family: Verdana, Helvetica, sans-serif; font-size: 13.3333px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; width: 1501.81px; position: relative;"><p style="margin: 14pt 0pt; font-family: Verdana, Helvetica, sans-serif; font-size: 10pt; color: rgb(51, 51, 51); text-align: right;"> </p></div>[Show](javascript:void(0);) 
ADP Payments


[Home](https://paysimple.com/help/ADP/Welcome.htm) > [Chapter 7: Reports](https://paysimple.com/help/ADP/ps30/7-reports/Reports.htm) > [Custom Reports](https://paysimple.com/help/ADP/ps30/7-reports/Custom_Reports.htm) > Adding Custom Report Quick Links

ADDING CUSTOM REPORT QUICK LINKS
Custom reports can be added to the Reports Quick Links section in side navigation by following the steps below. (For more information on Reports Quick Links see [Reports Quick Links](https://paysimple.com/help/ADP/ps30/7-reports/Reports_Quick_Links.htm#XREF_RQL) above.)

 

Locate the report you want to add in the custom reports table.

Click the Action button associated with the report, then click “Add Quick Link.”

add_quick_link.png
 

You will now see the report in the Reports Quick Links list.
NOTE: If the report name is too long for the side bar, it will be abbreviated with ellipses. Mouse over the link to see the full report name.

quick_link_report_added00027.jpg
[Next ›](https://paysimple.com/help/ADP/ps30/7-reports/Deleting_Custom_Reports.htm#XREF_dcr)
Show | Show
-- | --
Show

</li></ol><p class="BodyLevel1" style="margin: 12pt 0pt 12pt 0in; font-family: Verdana; font-size: 13.3333px; color: rgb(51, 51, 51); text-align: left; text-indent: 0px; word-spacing: 0.25em; font-style: normal; font-weight: 400; letter-spacing: normal; text-decoration: none; font-variant-ligatures: normal; font-variant-caps: normal; orphans: 2; text-transform: none; white-space: normal; widows: 2; -webkit-text-stroke-width: 0px;"> </p><p class="Next" style="margin: 12pt 0pt 14pt; font-family: Verdana; font-size: 13.3333px; color: rgb(51, 51, 51); text-align: right; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;"><a href="https://paysimple.com/help/ADP/ps30/7-reports/Adding_Custom_Report_Quick_Links.htm#XREF_acrql">Next ›</a></p><p style="margin: 14pt 0pt; font-family: Verdana, Helvetica, sans-serif; font-size: 13.3333px; color: rgb(51, 51, 51); font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;"> </p><div id="footer" style="color: rgb(0, 0, 0); font-family: Verdana, Helvetica, sans-serif; font-size: 13.3333px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; width: 1501.81px; position: relative;"><p style="margin: 14pt 0pt; font-family: Verdana, Helvetica, sans-serif; font-size: 10pt; color: rgb(51, 51, 51); text-align: right;"> </p></div>[Show](javascript:void(0);) 
ADP Payments


[Home](https://paysimple.com/help/ADP/Welcome.htm) > [Chapter 7: Reports](https://paysimple.com/help/ADP/ps30/7-reports/Reports.htm) > [Custom Reports](https://paysimple.com/help/ADP/ps30/7-reports/Custom_Reports.htm) > [Subscribing to Custom Reports](https://paysimple.com/help/ADP/ps30/7-reports/Subscribing_to_Custom_Reports.htm) > Unsubscribe to a Custom Report

Unsubscribe to a Custom Report
You can unsubscribe to a custom report at any time. Simply follow the steps below:

Locate the report to which you want to unsubscribe in the custom reports table.
NOTE: You will know a report has a subscription attached to it if you see an entry in the Subscription field.

Click the Action button, then click the “Unsubscribe” link.

unsubscribe_link_custom_report.jpg
 

A pop-up window appears asking you to confirm this request. Click “yes” to continue, or “no” to leave the subscription as is.

confirm_unsubscribe.jpg
You return to the custom reports table, and the entry in the Subscription column of the table for your report will be blank.

noate.gif 

You can unsubscribe to any report in the system regardless of the user who created the subscription. So if you don’t recognize a subscription, it’s a good idea to check with your colleagues before removing it.

 

[Next ›](https://paysimple.com/help/ADP/ps30/7-reports/Adding_Custom_Report_Quick_Links.htm#XREF_acrql)
Show | Show
-- | --
Show

</li></ol><p class="BodyLevel1" style="margin: 12pt 0pt 12pt 0in; font-family: Verdana; font-size: 13.3333px; color: rgb(51, 51, 51); text-align: left; text-indent: 0px; word-spacing: 0.25em; font-style: normal; font-weight: 400; letter-spacing: normal; text-decoration: none; font-variant-ligatures: normal; font-variant-caps: normal; orphans: 2; text-transform: none; white-space: normal; widows: 2; -webkit-text-stroke-width: 0px;"> </p><p class="Next" style="margin: 12pt 0pt 14pt; font-family: Verdana; font-size: 13.3333px; color: rgb(51, 51, 51); text-align: right; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;"><a href="https://paysimple.com/help/ADP/ps30/7-reports/Adding_Custom_Report_Quick_Links.htm#XREF_acrql">Next ›</a></p><p style="margin: 14pt 0pt; font-family: Verdana, Helvetica, sans-serif; font-size: 13.3333px; color: rgb(51, 51, 51); font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;"> </p><div id="footer" style="color: rgb(0, 0, 0); font-family: Verdana, Helvetica, sans-serif; font-size: 13.3333px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; width: 1501.81px; position: relative;"><p style="margin: 14pt 0pt; font-family: Verdana, Helvetica, sans-serif; font-size: 10pt; color: rgb(51, 51, 51); text-align: right;"> </p></div>[Show](javascript:void(0);) 
ADP Payments


[Home](https://paysimple.com/help/ADP/Welcome.htm) > [Chapter 7: Reports](https://paysimple.com/help/ADP/ps30/7-reports/Reports.htm) > [Custom Reports](https://paysimple.com/help/ADP/ps30/7-reports/Custom_Reports.htm) > [Subscribing to Custom Reports](https://paysimple.com/help/ADP/ps30/7-reports/Subscribing_to_Custom_Reports.htm) > Unsubscribe to a Custom Report

Unsubscribe to a Custom Report
You can unsubscribe to a custom report at any time. Simply follow the steps below:

Locate the report to which you want to unsubscribe in the custom reports table.
NOTE: You will know a report has a subscription attached to it if you see an entry in the Subscription field.

Click the Action button, then click the “Unsubscribe” link.

unsubscribe_link_custom_report.jpg
 

A pop-up window appears asking you to confirm this request. Click “yes” to continue, or “no” to leave the subscription as is.

confirm_unsubscribe.jpg
You return to the custom reports table, and the entry in the Subscription column of the table for your report will be blank.

noate.gif 

You can unsubscribe to any report in the system regardless of the user who created the subscription. So if you don’t recognize a subscription, it’s a good idea to check with your colleagues before removing it.

 

[Next ›](https://paysimple.com/help/ADP/ps30/7-reports/Adding_Custom_Report_Quick_Links.htm#XREF_acrql)

Show | Show
-- | --
Show

<p class="Next" style="margin: 12pt 0pt 14pt; font-family: Verdana; font-size: 13.3333px; color: rgb(51, 51, 51); text-align: right; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;"><a href="https://paysimple.com/help/ADP/ps30/7-reports/Unsubscribe_to_a_Custom_Report.htm#XREF_cr_unsub">Next ›</a></p><p style="margin: 14pt 0pt; font-family: Verdana, Helvetica, sans-serif; font-size: 13.3333px; color: rgb(51, 51, 51); font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;"> </p><div id="footer" style="color: rgb(0, 0, 0); font-family: Verdana, Helvetica, sans-serif; font-size: 13.3333px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; width: 1501.81px; position: relative;"><p style="margin: 14pt 0pt; font-family: Verdana, Helvetica, sans-serif; font-size: 10pt; color: rgb(51, 51, 51); text-align: right;"> </p></div>[Show](javascript:void(0);) 
ADP Payments


[Home](https://paysimple.com/help/ADP/Welcome.htm) > [Chapter 7: Reports](https://paysimple.com/help/ADP/ps30/7-reports/Reports.htm) > [Custom Reports](https://paysimple.com/help/ADP/ps30/7-reports/Custom_Reports.htm) > [Subscribing to Custom Reports](https://paysimple.com/help/ADP/ps30/7-reports/Subscribing_to_Custom_Reports.htm) > Subscribe to a Custom Report

Subscribe to a Custom Report
Follow the steps below to subscribe to a custom report:

Locate the report to which you want to subscribe in the custom reports table on the Reports dashboard.

Click the Action button, then click the “Subscribe” link.

subscribe_link_custom_report.jpg
 

The New subscription pop-up window appears.

new_subscription_custom_report.jpg
 

Enter the email address to which you want the reports sent in the Email address field.

Click the down-arrow in the Frequency drop-down box to select how often you want the report emailed.

If you select “Weekly” or “Every other week” you will see a second drop-down box in which to select the day of the week you want the report sent.

If you select “Specific day of month,” you will see a second drop-down box in which to select the day of the month you want the report sent.

 

subscribe_select_frequency.jpg
In the Report types section, select how you would like to receive the report. Select “PDF” for an Adobe Acrobat file, or select “XLS” for an Excel file.
NOTE: You can open the file in Excel and then change its format to import data into other programs.

noate.gif 

The file provided is an XLSX file. If you are using an older version of Excel, you can install the [Microsoft Compatibility Pack](https://www.microsoft.com/en-us/download/details.aspx?id=3) so that you can open XLSX files.

Click the “save” button.

You will return to the custom reports table, and you will now see the frequency of your subscription in the Subscription field in the table.

subscription_entered.jpg
 

You will receive an email with your report on the next scheduled date.
NOTE: Scheduled reports cannot be programmed for the current date. For example, if today is Monday and I program a report to be emailed weekly on Mondays, I won’t get the first email until Monday of next week.

noate.gif 

You can’t make changes to subscription settings once they are saved. If you want to change a subscription, for example to change the email address to which the report is sent, or to change the frequency, you need to unsubscribe to the report (see [Unsubscribe to a Custom Report](https://paysimple.com/help/ADP/ps30/7-reports/Unsubscribe_to_a_Custom_Report.htm#XREF_cr_unsub) below) then subscribe again using the new settings.

[Next ›](https://paysimple.com/help/ADP/ps30/7-reports/Unsubscribe_to_a_Custom_Report.htm#XREF_cr_unsub)

Show | Show
-- | --
Show

<p class="Next" style="margin: 12pt 0pt 14pt; font-family: Verdana; font-size: 13.3333px; color: rgb(51, 51, 51); text-align: right; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;"><a href="https://paysimple.com/help/ADP/ps30/7-reports/Unsubscribe_to_a_Custom_Report.htm#XREF_cr_unsub">Next ›</a></p><p style="margin: 14pt 0pt; font-family: Verdana, Helvetica, sans-serif; font-size: 13.3333px; color: rgb(51, 51, 51); font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;"> </p><div id="footer" style="color: rgb(0, 0, 0); font-family: Verdana, Helvetica, sans-serif; font-size: 13.3333px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; width: 1501.81px; position: relative;"><p style="margin: 14pt 0pt; font-family: Verdana, Helvetica, sans-serif; font-size: 10pt; color: rgb(51, 51, 51); text-align: right;"> </p></div>[Show](javascript:void(0);) 
ADP Payments


[Home](https://paysimple.com/help/ADP/Welcome.htm) > [Chapter 7: Reports](https://paysimple.com/help/ADP/ps30/7-reports/Reports.htm) > [Custom Reports](https://paysimple.com/help/ADP/ps30/7-reports/Custom_Reports.htm) > [Subscribing to Custom Reports](https://paysimple.com/help/ADP/ps30/7-reports/Subscribing_to_Custom_Reports.htm) > Subscribe to a Custom Report

Subscribe to a Custom Report
Follow the steps below to subscribe to a custom report:

Locate the report to which you want to subscribe in the custom reports table on the Reports dashboard.

Click the Action button, then click the “Subscribe” link.

subscribe_link_custom_report.jpg
 

The New subscription pop-up window appears.

new_subscription_custom_report.jpg
 

Enter the email address to which you want the reports sent in the Email address field.

Click the down-arrow in the Frequency drop-down box to select how often you want the report emailed.

If you select “Weekly” or “Every other week” you will see a second drop-down box in which to select the day of the week you want the report sent.

If you select “Specific day of month,” you will see a second drop-down box in which to select the day of the month you want the report sent.

 

subscribe_select_frequency.jpg
In the Report types section, select how you would like to receive the report. Select “PDF” for an Adobe Acrobat file, or select “XLS” for an Excel file.
NOTE: You can open the file in Excel and then change its format to import data into other programs.

noate.gif 

The file provided is an XLSX file. If you are using an older version of Excel, you can install the [Microsoft Compatibility Pack](https://www.microsoft.com/en-us/download/details.aspx?id=3) so that you can open XLSX files.
Your federal taxable wages this period are $
+Purchase/Acquisition of Business -1010700000 -1148400000 -1286100000 -1423800000 -1561500000
+TX: NO State Incorne Tax
+Gain/Loss on Investments and Other Financial Instruments -2243490909 -3068572727 -3893654545 -4718736364 -5543818182 -6368900000 -7193981818 -8019063636
+Income from Associates, Joint Ventures and Other Participating Interests 99054545 92609091 86163636 79718182 73272727 66827273 60381818 53936364
+INCOME STATEMENT 61-1767920
+GOOGL_income-statement_Quarterly_As_Originally_Reported TTM Q4 2022 Q3 2022 Q2 2022 Q1 2022 Q4 2021 Q3 2021 Q2 2021
+Cash Flow from Continuing Financing Activities -9287400000 -7674400000 -6061400000 -4448400000 -2835400000
+Diluted EPS from Discontinued Operations
+The U.S. Internal Revenue Code of 1986, as amended, the Treasury Regulations promulgated thereunder, published pronouncements of the Internal Revenue Service, which may be cited or used as precedents, and case law, any of which may be changed at any time with retroactive effect. No opinion is expressed on any matters other than those specifically referred to above.
+Basic WASO 694313546 697258864 700204182 703149500 706094818 709040136 711985455 714930773
+Taxable Marital Status:
+Exemptions/Allowances Single ZACHRY T.
+Diluted EPS -00009 -00015 -00021 -00027 -00033 -00039 -00045 -00051
+Total Work Hrs
+COMPANY PH Y: 650-253-0001
+5324 BRADFORD DR
+ORIGINAL REPORT
+Change in Trade/Accounts Receivable -1122700000 -527600000 67500000 662600000 1257700000
+Purchase/Sale of Other Non-Current Assets, Net -236000000 -368800000 -501600000 -634400000
+Other Non-Cash Items -5340300000 -6249200000 -7158100000 -8067000000 -8975900000
+Amortization, Non-Cash Adjustment 4241600000 4848600000 5455600000 6062600000 6669600000
+Income, Rents, & Royalty
+Other Investing Cash Flow 49209400000 57052800000 64896200000 72739600000 80583000000
+Other Irregular Income/Expenses 00000 00000 00000 00000 00000
+Irregular Income/Expenses 00000 00000 00000 00000 00000
+Total Revenue as Reported, Supplemental -1286309091 -13385163636 -25484018182 -37582872727 -49681727273 -61780581818 -73879436364 -85978290909
+Net Investment Income -2096781818 -2909109091 -3721436364 -4533763636 -5346090909 -6158418182 -6970745455 -7783072727
+Gain/Loss on Foreign Exchange 47654545 66854545 86054545 105254546 124454546 143654546 162854546 182054546
+Cash Flow from Investing Activities -11015999999
+Purchase/Sale of Investments, Net 574500000 1229400000 1884300000 2539200000 3194100000
+Purchase/Sale of Business, Net -384999999
+Basic EPS from Continuing Operations -00009 -00015 -00021 -00027 -00034 -00040 -00046 -00052
+Change in Trade and Other Receivables 2617900000 3718200000 4818500000 5918800000 7019100000
+Investment Income/Loss, Non-Cash Adjustment 3081700000 4150000000 5218300000 6286600000 7354900000
+Stock-Based Compensation, Non-Cash Adjustment -1297700000 -2050400000 -2803100000 -3555800000 -4308500000
+Depreciation and Amortization, Non-Cash Adjustment 3239500000 3241600000 3243700000 3245800000 3247900000
+Taxes, Non-Cash Adjustment 4177700000 4486200000 4794700000 5103200000 5411700000
+Depreciation, Non-Cash Adjustment 3329100000 3376000000 3422900000 3469800000 3516700000
+Gain/Loss on Financial Instruments, Non-Cash Adjustment -4354700000 -4770800000 -5186900000 -5603000000 -6019100000
+[DRAFT FORM OF TAX OPINION]
+Issuance of/Repayments for Debt, Net -199000000 -356000000
+Total Operating Profit/Loss -5818800000 -10077918182 -14337036364 -18596154545 -22855272727 -27114390909 -31373509091 -35632627273
+Cash Flow from Continuing Investing Activities -4919700000 -3706000000 -2492300000 -1278600000 -64900000
+Change in Prepayments and Deposits -388000000 -891600000 -1395200000 -1898800000
+Change in Accrued Expenses -2105200000 -3202000000 -4298800000 -5395600000 -6492400000
+Research and Development Expenses -2088363636 -853500000 381363636 1616227273 2851090909 4085954545 5320818182 6555681818
+PLEASE READ THE IMPORTANT DISCLOSURES BELOW
+FEDERAL RESERVE MASTER SUPPLIER ACCOUNT31000053-052101023COD
+633-44-1725Zachryiixixiiiwood@gmail.com47-2041-654711100061431000053
+PNC BankPNC Bank Business Tax I.D. Number: 633441725
+CIF Department (Online Banking)Checking Account: 47-2041-6547
+P7-PFSC-04-FBusiness Type: Sole Proprietorship/Partnership Corporation
+500 First AvenueALPHABET
+Pittsburgh, PA 15219-31285323 BRADFORD DR
+NON-NEGOTIABLEDALLAS TX 75235 8313
+ZACHRY, TYLER, WOOD
+4/18/2022650-2530-000 469-697-4300
+SIGNATURETime Zone: Eastern Central Mountain Pacific
+Investment Products • Not FDIC Insured • No Bank Guarantee • May Lose Value
+PLEASE READ THE IMPORTANT DISCLOSURES BELOW
+Change in Trade/Accounts Payable -233200000 -394000000 -554800000 -715600000 -876400000
+General and Administrative Expenses -544945455 23200000 591345455 1159490909 1727636364 2295781818 2863927273 3432072727
+Changes in Operating Capital 1068100000 1559600000 2051100000 2542600000 3034100000
+Selling and Marketing Expenses -1007254545 -52145455 902963636 1858072727 2813181818 3768290909 4723400000 5678509091
+Payments for Common Stock -18708100000 -22862000000 -27015900000 -31169800000 -35323700000
+Proceeds from Issuance of Long Term Debt -3407500000 -5307600000 -7207700000 -9107800000 -11007900000
+Other Income/Expense, Non-Operating 263109091 367718182 472327273 576936364 681545455 786154546 890763636 995372727
+ZACHRY T WOOD
+88-1303492
+Statutory BASIS OF PAY: BASIC/DILUTED EPS
+Net Pay 70842743867 70842743867
+Other Revenue
+Non-Operating Income/Expenses, Total -1369181818 -2079000000 -2788818182 -3498636364 -4208454545 -4918272727 -5628090909 -6337909091
+Net Interest Income/Expense 464490909 462390909 460290909 458190909 456090909 453990909 451890909 449790909
+Total Net Finance Income/Expense 464490909 462390909 460290909 458190909 456090909 453990909 451890909 449790909
+Issuance of/Repayments for Long Term Debt, Net -314300000 -348200000 -382100000 -416000000 -449900000
+Net Check 70842743867
+Basic EPS from Discontinued Operations
+MOUNTAIN VIEW, C.A., 94044 Pay Date:
+Medicare Tax
+Change in Other Operating Capital 1553900000 2255600000 2957300000 3659000000 4360700000
+Change in Deferred Assets/Liabilities 3194700000 3626800000 4058900000 4491000000 4923100000
+Change in Trade and Other Payables 3108700000 3453600000 3798500000 4143400000 4488300000
+Selling, General and Administrative Expenses -1552200000 -28945455 1494309091 3017563636 4540818182 6064072727 7587327273 9110581818
+Diluted WASO 698675982 701033009 703390036 705747064 708104091 710461118 712818146 715175173
+1957800000 -9776581818 -21510963636 -33245345455 -44979727273 -56714109091 -68448490909 -80182872727
+Total Revenue as Reported, Supplemental -1286309091 -13385163636 -25484018182 -37582872727 -49681727273 -61780581818 -73879436364 -85978290909
+Diluted EPS from Continuing Operations -00009 -00015 -00021 -00027 -00033 -00039 -00045 -00051
+Change in Cash 00001 -280000000 -570000000 338000000000)
+Sale and Disposal of Property, Plant and Equipment -5040500000 -4683100000 -4325700000 -3968300000
+Interest Income 415836364 392490909 369145455 345800000 322454546 299109091 275763636 252418182
+Issuance of/Payments for Common Stock, Net -10767000000 -10026000000 -9285000000 -8544000000 -7803000000
+Cost of Goods and Services -891927273 4189690909 9271309091 14352927273 19434545455 24516163636 29597781818 34679400000
+Proceeds from Issuance of Common Stock -5806333333 -3360333333 -914333333
+1349355888 2024033776 75698871601 Information
+DALLAS TX 75235-8315
+Sales of Other Non-Current Assets
+Cost of Revenue -891927273 4189690909 9271309091 14352927273 19434545455 24516163636 29597781818 34679400000
+Operating Income/Expenses -3640563636 -882445455 1875672727 4633790909 7391909091 10150027273 12908145455 15666263636
+Fiscal year end September 28th., 2022. | USD
+Cash and Cash Equivalents, Beginning of Period -13098000000 -26353000000 -4989999999
+Other Adjustments to Net Income Available to Common Stockholders
+Federal:
+Gross Pay 75698871601 Important Notes
+Cash Flow from Financing Activities -13997000000 -12740000000
+EMPLOYER IDENTIFICATION NUMBER: 61-1767920
+-1288666667 -885666667 -482666667
+Pretax Income -7187981818 -12156918182 -17125854545 -22094790909 -27063727273 -32032663636 -37001600000 -41970536364
+Reported Normalized and Operating Income/Expense Supplemental Section
+Reported Normalized Operating Profit
+Cash Flow Supplemental Section 181000000000) -146000000000) 110333333 123833333 137333333
+Interest Expense Net of Capitalized Interest 48654545 69900000 91145455 112390909 133636364 154881818 176127273 197372727
+Diluted Net Income Available to Common Stockholders -5492763636 -9591163636 -13689563636 -17787963636 -21886363636 -25984763636 -30083163636 -34181563636
+Net Income Available to Common Stockholders -5492763636 -9591163636 -13689563636 -17787963636 -21886363636 -25984763636 -30083163636 -34181563636
+Net Income after Non-Controlling/Minority Interests -5492763636 -9591163636 -13689563636 -17787963636 -21886363636 -25984763636 -30083163636 -34181563636
+Reported Effective Tax Rate 00001 00000 00000 00000 00000 00000
+Reported Normalized Diluted EPS
+Basic Weighted Average Shares Outstanding 694313546 697258864 700204182 703149500 706094818 709040136 711985455 714930773
+Diluted Weighted Average Shares Outstanding 698675982 701033009 703390036 705747064 708104091 710461118 712818146 715175173
+Deposited to the account Of xxxxxxxx6548
+Purchase of Investments 16018900000 24471400000 32923900000 41376400000 49828900000
+Sale of Investments -64179300000 -79064600000 -93949900000 -108835200000 -123720500000
+ALPHABET
+CHECKING
+31622,6:39 PM
+GOOGL_income-statement_Quarterly_As_Originally_Reported Q4 2022
+Morningstar.com Intraday Fundamental Portfolio View Print Report Print
+Income/Loss before Non-Cash Adjustment 21353400000 21135400000 20917400000 20699400000 20481400000
+Cash Generated from Operating Activities 19636600000 18560200000 17483800000 16407400000 15331000000
+3/6/2022 at 6:37 PM
+Net Cash Flow from Continuing Operating Activities, Indirect 35231800000 36975800000 38719800000 40463800000 42207800000
+Cash and Cash Equivalents, End of Period
+Proceeds from Issuance/Exercising of Stock Options/Warrants -2971300000 -3400800000 -3830300000 -4259800000 -4689300000
+Cash Flow from Operating Activities, Indirect 24934000001 Q3 2022 Q2 2022 Q1 2022 Q4 2021
+Diluted EPS -00009 -00015 -00021 -00027 -00033 -00039 -00045 -00051
+Other Financing Cash Flow
+Total Adjustments for Non-Cash Items 20351200000 21992600000 23634000000 25275400000 26916800000
+Change in Other Current Assets -3290700000 -3779600000 -4268500000 -4757400000 -5246300000
+Depreciation, Amortization and Depletion, Non-Cash Adjustment 4986300000 5327600000 5668900000 6010200000 6351500000
+Change in Payables and Accrued Expenses -3298800000 -4719000000 -6139200000 -7559400000 -8979600000
+Repayments for Long Term Debt -117000000 -660800000 -1204600000 -1748400000 -2292200000
+Income Statement Supplemental Section
+Reported Normalized Income
+Cash and Cash Equivalents, Beginning of Period 25930000001 235000000000) 10384666667 15035166667 19685666667
+Net Income after Extraordinary Items and Discontinued Operations -5492763636 -9591163636 -13689563636 -17787963636 -21886363636 -25984763636 -30083163636 -34181563636
+Net Income from Continuing Operations -5492763636 -9591163636 -13689563636 -17787963636 -21886363636 -25984763636 -30083163636 -34181563636
+Provision for Income Tax 1695218182 2565754545 3436290909 4306827273 5177363636 6047900000 6918436364 7788972727
+Total Operating Profit/Loss as Reported, Supplemental -5818800000 -10077918182 -14337036364 -18596154545 -22855272727 -27114390909 -31373509091 -35632627273
+Based on facts as set forth in. 06551
+Basic EPS -00009 -00015 -00021 -00027 -00034 -00040 -00046 -00052
+ALPHABET INCOME Advice number: 000101
+ALPHABET
+Basic EPS -00009 -00015 -00021 -00027 -00034 -00040 -00046 -00052
+1601 AMPITHEATRE PARKWAY DR Period Ending:
+1601 AMPIHTHEATRE PARKWAY MOUNTAIN VIEW CA 94043 Calendar Year---
+Purchase/Sale and Disposal of Property, Plant and Equipment, Net -6772900000 -6485800000 -6198700000 -5911600000 -5624500000
+Purchase of Property, Plant and Equipment -5218300000 -4949800000 -4681300000 -4412800000 -4144300000
+Effect of Exchange Rate Changes 28459100000 29853400000 31247700000 32642000000 34036300000
+00000 -15109109116 111165509049 50433933761 50951012042 45733930204 40516848368 -84621400136 -96206781973
+00002 Earnings Statement
+05324
+DALLAS
+rate units year to date Other Benefits and
+Pto Balance
+Federal Income Tax
+Social Security Tax
+YOUR BASIC/DILUTED EPS RATE HAS BEEN CHANGED FROM 0.001 TO 112.20 PAR SHARE VALUE
+Due 09/15/2022
+Discontinued Operations -51298890909
+Change in Cash as Reported, Supplemental
+Income Tax Paid, Supplemental -5809000000 -8692000000 -11575000000 -44281654545 -2178236364
+13 Months Ended 6336000001
+Gross Profit -9195472727 -16212709091 -23229945455 -30247181818 -37264418182
+USD in "000'"s 22809500000000 22375000000000 21940500000000 21506000000000 21071500000000
+Repayments for Long Term Debt Dec. 31, 2021 Dec. 31, 2020
+Costs and expenses: 22809500000000 22375000000000 21940500000000 21506000000000 21071500000000
+Cost of revenues 182528 161858
+Research and development 22809500000000 22375000000000 21940500000000 21506000000000 21071500000000
+Sales and marketing 84733 71897
+General and administrative 27574 26019
+European Commission fines 17947 18465
+Total costs and expenses 11053 09552
+Income from operations 00001 01698
+Other income (expense), net 141304 127627
+Income before income taxes 00000 22375000000000 21940500000000 21506000000000 21071500000000 00000 00000
+Provision for income taxes 257637118600 257637118600
+Net income 22677000001 19289000001
+*include interest paid, capital obligation, and underweighting 22677000001 19289000001
+22677000001 19289000001
+Basic net income per share of Class A and B common stock and Class C capital stock (in dollars par share)
+Diluted net income per share of Class A and Class B common stock and Class C capital stock (in dollars par share)
+For Paperwork Reduction Act Notice, see the seperate InstructionsStreet NE Washington, D.C. 20549-1090 RE: Release Nos. 34-92766; IA-5833; File No. S7-10-21, RIN 3235-AN00 Request for Information and Comments on Broker-Dealer and Investment Adviser Digital Engagement Practices, Related Tools and Methods, and Regulatory Considerations and Potential Approaches; Information and Comments on Investment Adviser Use of Technology to Develop and Provide Investment Advice Ladies and Gentlemen: Morningstar welcomes the opportunity to comment on the Securities and Exchange Commission’s (Commission or SEC) Request for Information and Comments on Broker-Dealer and Investment Adviser Digital Engagement Practices, Related Tools and Methods, and Regulatory Considerations and Potential Approaches; Information and Comments on Investment Adviser Use of Technology to Develop and Provide Investment Advice (RFI). 1 Morningstar’s mission is to empower investor success. Morningstar’s Behavioral Insights Team researches savings and investing behavior to help individual investors and their ecosystem avoid common behavioral biases, and has published books and articles on the topic of applying behavioral science to digital platforms. Because we offer an extensive line of products for individual investors, professional financial advisors, and institutional clients, we have a broad view on the RFI and the assessment of market practices associated with the use of digital engagement practices (DEPs). This letter contains: 1) a summary of our views; 2) a description of a Morningstar survey on a nationally representative sample of Americans about their use of trading apps and exposure to DEPs; and 3) detailed answers to selected questions posed in the RFI. We utilize our survey responses to address some of these questions and present specific findings in our answers. The survey consists of two parts: a screener for demographic information, attached as Appendix B, and the complete set of questions about individual experiences and views of DEPs, attached as Appendix C. 1 SEC. 2021. Request for Information and Comments on Broker-Dealer and Investment Adviser Digital Engagement Practices, Related Tools and Methods, and Regulatory Considerations and Potential Approaches; Information and Comments on Investment Adviser Use of Technology to Develop and Provide Investment Advice. https://www.federalregister.gov/documents/2021/09/01/2021-18901/requestfor-information-and-comments-on-broker-dealer-and-investment-adviser-digital-engagement (RFI).
+3/6/2022 at 6:37 PM
+GOOGL_income-statement_Quarterly_As_Originally_Reported
+Cash Flow from Operating Activities, IndirectNet Cash Flow from Continuing Operating Activities, IndirectCash Generated from Operating ActivitiesIncome/Loss before Non-Cash AdjustmentTotal Adjustments for Non-Cash ItemsDepreciation, Amortization and Depletion, Non-Cash AdjustmentDepreciation and Amortization, Non-Cash AdjustmentDepreciation, Non-Cash AdjustmentAmortization, Non-Cash AdjustmentStock-Based Compensation, Non-Cash AdjustmentTaxes, Non-Cash AdjustmentInvestment Income/Loss, Non-Cash AdjustmentGain/Loss on Financial Instruments, Non-Cash AdjustmentOther Non-Cash ItemsChanges in Operating CapitalChange in Trade and Other ReceivablesChange in Trade/Accounts ReceivableChange in Other Current AssetsChange in Payables and Accrued ExpensesChange in Trade and Other PayablesChange in Trade/Accounts PayableChange in Accrued ExpensesChange in Deferred Assets/LiabilitiesChange in Other Operating Capital
+Change in Prepayments and DepositsCash Flow from Investing ActivitiesCash Flow from Continuing Investing Activities
+Purchase/Sale and Disposal of Property, Plant and Equipment, NetPurchase of Property, Plant and EquipmentSale and Disposal of Property, Plant and EquipmentPurchase/Sale of Business, NetPurchase/Acquisition of BusinessPurchase/Sale of Investments, NetPurchase of Investments
+Sale of InvestmentsOther Investing Cash FlowPurchase/Sale of Other Non-Current Assets, NetSales of Other Non-Current AssetsCash Flow from Financing ActivitiesCash Flow from Continuing Financing ActivitiesIssuance of/Payments for Common Stock, NetPayments for Common StockProceeds from Issuance of Common StockIssuance of/Repayments for Debt, NetIssuance of/Repayments for Long Term Debt, NetProceeds from Issuance of Long Term DebtRepayments for Long Term Debt
+Proceeds from Issuance/Exercising of Stock Options/WarrantsOther Financing Cash FlowCash and Cash Equivalents, End of PeriodChange in CashEffect of Exchange Rate ChangesCash and Cash Equivalents, Beginning of PeriodCash Flow Supplemental SectionChange in Cash as Reported, SupplementalIncome Tax Paid, SupplementalZACHRY T WOODCash and Cash Equivalents, Beginning of PeriodDepartment of the TreasuryInternal Revenue Service
+Calendar YearDue: 04/18/2022
+USD in ""000'""sRepayments for Long Term DebtCosts and expenses:Cost of revenuesResearch and developmentSales and marketingGeneral and administrativeEuropean Commission finesTotal costs and expensesIncome from operationsOther income (expense), netIncome before income taxesProvision for income taxesNet income*include interest paid, capital obligation, and underweighting
+Basic net income per share of Class A and B common stock and Class C capital stock (in dollars par share)
+
+
+
+
+
+
+
+
+
+Diluted net income per share of Class A and Class B common stock and Class C capital stock (in dollars par share)*include interest paid, capital obligation, and underweighting
+Basic net income per share of Class A and B common stock and Class C capital stock (in dollars par share)Diluted net income per share of Class A and Class B common stock and Class C capital stock (in dollars par share)
+
+ReplyForward
+


-7711	Department of the Treasury	Calendar Year							Period Ending	9/29/2021																	
-	Internal Revenue Service	Due 04/18/2022		2022 Form 1040-ES Payment Voucher 1					Pay Day	1/30/2022																	
-	MOUNTAIN VIEW, C.A., 94043																										
-	Taxable Marital Status  :																										
-	Exemptions/Allowances :																										
-	Federal :																										
-	TX :  28	rate	70842743866																																
-	Convertible preferred stock, $0.001 par value per share, 100,000 shares authorized; no shares issued and outstanding	0	0		0																						
-	Class A and Class B common stock, and Class C capital stock and additional paid-in capital, $0.001 par value per share: 15,000,000 shares authorized (Class A 9,000,000, Class B 3,000,000, Class C 3,000,000); 688,335 (Class A 299,828, Class B 46,441, Class C 342,066) and 675,222 (Class A 300,730, Class B 45,843, Class C 328,649) shares issued and outstanding	58510	50552		0																						
-	Accumulated other comprehensive income (loss)	633	-1232		0																						
-	Retained earnings	163401	152122		0																						
-	Total stockholders’ equity	222544	201442		0																						
-	Total liabilities and stockholders’ equity	319616	275909		0																						
-	Convertible preferred stock, par value (in dollars per share)	0.001	0.001		0																						
-	Convertible preferred stock, shares authorized (in shares)	100000000	100000000		0																						
-	Convertible preferred stock, shares issued (in shares)	0	0		0																						
-	Convertible preferred stock, shares outstanding (in shares)	0	0		0																						
-	Schedule II: Valuation and Qualifying Accounts (Details) - Allowance for doubtful accounts and sales credits - USD ($) $ in Millions	12 Months Ended			0																						
-		Dec. 31, 2020	Dec. 31, 2019	Dec. 31, 2018	0																						
-	SEC Schedule, 12-09, Movement in Valuation Allowances and Reserves [Roll Forward]				0																						
-	Revenues (Narrative) (Details) - USD ($) $ in Billions	12 Months Ended			0																						
-		Dec. 31, 2020	Dec. 31, 2019		0																						
-	Revenue from Contract with Customer [Abstract]				0																						
-	Deferred revenue		2.3		0																						
-	Revenues recognized	1.8			0																						
-	Transaction price allocated to remaining performance obligations	29.8			0																						
-	Revenue, Remaining Performance Obligation, Expected Timing of Satisfaction, Start Date [Axis]: 2021-01-01				0																						
-	Revenue, Remaining Performance Obligation, Expected Timing of Satisfaction [Line Items]				0																						
-	Expected timing of revenue recognition	24 months			0																						
-	Expected timing of revenue recognition, percent	0.5			0																						
-	Revenue, Remaining Performance Obligation, Expected Timing of Satisfaction, Start Date [Axis]: 2023-01-01				0																						
-	Revenue, Remaining Performance Obligation, Expected Timing of Satisfaction [Line Items]				0																						
-	Expected timing of revenue recognition	 			0																						
-	Expected timing of revenue recognition, percent	0.5			0																						
-	Information about Segments and Geographic Areas (Long-Lived Assets by Geographic Area) (Details) - USD ($) $ in Millions	Dec. 31, 2020	Dec. 31, 2019		0																						
-	Revenues from External Customers and Long-Lived Assets [Line Items]				0																						
-	Long-lived assets	96960	84587		0																						
-	United States				0																						
-	Revenues from External Customers and Long-Lived Assets [Line Items]				0																						
-	Long-lived assets	69315	63102		0																						
-	International				0																						
-	Revenues from External Customers and Long-Lived Assets [Line Items]				0																						
-	Long-lived assets	27645	21485		0																						
-		2016	2017	2018	2019	2020	2021	TTM																			
-		2.23418E+11	2.42061E+11	2.25382E+11	3.27223E+11	2.86256E+11	3.54636E+11	3.54636E+11																			
-		45881000000	60597000000	57418000000	61078000000	63401000000	69478000000	69478000000																			
-		3143000000	3770000000	4415000000	4743000000	5474000000	6052000000	6052000000																			
-	    Net Investment Income, Revenue	9531000000	13081000000	10565000000	17214000000	14484000000	8664000000	-14777000000	81847000000	48838000000	86007000000	86007000000															
-	        Realized Gain/Loss on Investments, Revenue	472000000	184000000	72000000	10000000	7553000000	1410000000	-22155000000	71123000000	40905000000	77576000000	77576000000															
-	        Gains/Loss on Derivatives, Revenue	1963000000	2608000000	506000000	974000000	751000000	718000000	-300000000	1484000000	-159000000	966000000	966000000															
-	        Interest Income, Revenue	6106000000	6408000000	6484000000	6867000000	6180000000	6536000000	7678000000	9240000000	8092000000	7465000000	7465000000															
-	        Other Investment Income, Revenue	990000000	3881000000	3503000000	9363000000																						
-	    Rental Income, Revenue					2553000000	2452000000	5732000000	5856000000	5209000000	5988000000	5988000000															
-	    Other Revenue	1.18387E+11	1.32385E+11	1.42881E+11	1.52435E+11	1.57357E+11	1.66578E+11	1.72594E+11	1.73699E+11	1.63334E+11	1.87111E+11	1.87111E+11															
-	Total Expenses	-1.40227E+11	-1.53354E+11	-1.66594E+11	-1.75997E+11	-1.89751E+11	-2.18223E+11	-2.21381E+11	-2.24527E+11	-2.30563E+11	-2.4295E+11	-2.4295E+11																												
-	    Reported Normalized and Operating Income/Expense Supplemental Section																										
-	        Total Revenue as Reported, Supplemental	1.62463E+11	1.8215E+11	1.94699E+11	2.10943E+11	2.15114E+11	2.39933E+11	2.47837E+11	2.54616E+11	2.4551E+11	2.76094E+11	2.76094E+11															
-	        Reported Effective Tax Rate				0.16	0.14	0.07	-0.08	0.2	0.22	0.19	0.19															
-	Basic EPS	8977	11850	12092	14656	14645	27326	2446	49828	26668	59460	59460															
-	    Basic EPS from Continuing Operations	8977	11850	12092	14656	14645	27326	2446	49828	26668	59460	59460															
-	Diluted EPS	8975.82	11849.51	12086.01	14656	14645	27325.54	2444.36	49649.93	26200.81	58563.84	58563.84															
-	    Diluted EPS from Continuing Operations	8975.82	11849.51	12086.01	14656	14645	27325.54	2444.36	49649.93	26200.81	58563.84	58563.84															
-	Basic Weighted Average Shares Outstanding	1651294	1643613	1643456	1643183	1643826	1644615	1643795	1633946	1594469	1510180	1510180															
-	Diluted Weighted Average Shares Outstanding	1651549	1643613	1644215	1643183	1643826	1644615	1645008	1639821	1622889	1533284	1533284															
-	Basic EPS	5.98	7.9	8.06	9.77	9.76	18.22	1.63	33.22	17.78	39.64	39.64															
-	Diluted EPS	5.98	7.9	8.06	9.77	9.76	18.22	1.63	33.22	17.78	39.64	39.64															
-	Basic WASO	2476939762	2465418267	2465182767	2464773268	2465737767	2466921267	2465691267	2450917775	2391702304	2265268867	2265268867															
-	Diluted WASO	2476939762	2465418267	2465182767	2464773268	2465737767	2466921267	2465691267	2450917775	2391702304	2265268867	2265268867															
-	Fiscal year ends in Dec 31 | USD 																										
-											total																
-	GOOGL_income-statement_Quarterly_As_Originally_Reported	Q3 2019	Q4 2019	Q1 2020	Q2 2020	Q3 2020	Q4 2020	Q1 2021	Q2 2021	Q3 2021	Q4 2021	TTM															
-	Gross Profit	22931000000	25055000000	22177000000	19744000000	25056000000	30818000000	31211000000	35653000000	37497000000	42337000000	1.46698E+11															
-	    Total Revenue	40499000000	46075000000	41159000000	38297000000	46173000000	56898000000	55314000000	61880000000	65118000000	75325000000	2.57637E+11															
-	        Business Revenue	34071000000	64133000000	41159000000	38297000000	46173000000	56898000000	55314000000	61880000000	65118000000	75325000000	2.57637E+11															
-	        Other Revenue	6428000000																									
-	    Cost of Revenue	-17568000000	-21020000000	-18982000000	-18553000000	-21117000000	-26080000000	-24103000000	-26227000000	-27621000000	-32988000000	-1.10939E+11															
-	        Cost of Goods and Services			-18982000000								-1.10939E+11															
-	Operating Income/Expenses	-13754000000	-15789000000	-14200000000	-13361000000	-13843000000	-15167000000	-14774000000	-16292000000	-16466000000	-20452000000	-67984000000															
-	    Selling, General and Administrative Expenses	-7200000000	-8567000000	-7380000000	-6486000000	-6987000000	-8145000000	-7289000000	-8617000000	-8772000000	-11744000000	-36422000000															
-	        General and Administrative Expenses	-2591000000	-2829000000	-2880000000	-2585000000	-2756000000	-2831000000	-2773000000	-3341000000	-3256000000	-4140000000	-13510000000															
-	        Selling and Marketing Expenses	-4609000000	-5738000000	-4500000000	-3901000000	-4231000000	-5314000000	-4516000000	-5276000000	-5516000000	-7604000000	-22912000000															
-	    Research and Development Expenses	-6554000000	-7222000000	-6820000000	-6875000000	-6856000000	-7022000000	-7485000000	-7675000000	-7694000000	-8708000000	-31562000000															
-	Total Operating Profit/Loss	9177000000	9266000000	7977000000	6383000000	11213000000	15651000000	16437000000	19361000000	21031000000	21885000000	78714000000															
-	Non-Operating Income/Expenses, Total	-549000000	1438000000	-220000000	1894000000	2146000000	3038000000	4846000000	2624000000	2033000000	2517000000	12020000000															
-	    Total Net Finance Income/Expense	608000000	604000000	565000000	420000000	412000000	333000000	269000000	313000000	310000000	261000000	1153000000															
-	        Net Interest Income/Expense	608000000	604000000	565000000	420000000	412000000	333000000	269000000	313000000	310000000	261000000	1153000000															
-	            Interest Expense Net of Capitalized Interest	-23000000	-17000000	-21000000	-13000000	-48000000	-53000000	-76000000	-76000000	-77000000	-117000000	-346000000															
-	            Interest Income	631000000	621000000	586000000	433000000	460000000	386000000	345000000	389000000	387000000	378000000	1499000000															
-	    Net Investment Income	-1452000000	899000000	-809000000	1696000000	1957000000	3530000000	4869000000	2924000000	2207000000	2364000000	12364000000															
-	        Gain/Loss on Investments and Other Financial Instruments	-1479000000	399000000	-802000000	1842000000	2015000000	3262000000	4751000000	2883000000	2158000000	2478000000	12270000000															
-	        Income from Associates, Joint Ventures and Other Participating Interests	-14000000	460000000	74000000	-54000000	26000000	355000000	5000000	92000000	188000000	49000000	334000000															
-	        Gain/Loss on Foreign Exchange	41000000	40000000	-81000000	-92000000	-84000000	-87000000	113000000	-51000000	-139000000	-163000000	-240000000															
-	    Irregular Income/Expenses	0	0	0	0	0	0				0	0															
-	        Other Irregular Income/Expenses	0	0	0	0	0	0				0	0															
-	    Other Income/Expense, Non-Operating	295000000	-65000000	24000000	-222000000	-223000000	-825000000	-292000000	-613000000	-484000000	-108000000	-1497000000															
-	Pretax Income	8628000000	10704000000	7757000000	8277000000	13359000000	18689000000	21283000000	21985000000	23064000000	24402000000	90734000000															
-	Provision for Income Tax	-1560000000	-33000000	-921000000	-1318000000	-2112000000	-3462000000	-3353000000	-3460000000	-4128000000	-3760000000	-14701000000															
-	Net Income from Continuing Operations	7068000000	10671000000	6836000000	6959000000	11247000000	15227000000	17930000000	18525000000	18936000000	20642000000	76033000000															
-	Net Income after Extraordinary Items and Discontinued Operations	7068000000	10671000000	6836000000	6959000000	11247000000	15227000000	17930000000	18525000000	18936000000	20642000000	76033000000															
-	Net Income after Non-Controlling/Minority Interests	7068000000	10671000000	6836000000	6959000000	11247000000	15227000000	17930000000	18525000000	18936000000	20642000000	76033000000															
-	Net Income Available to Common Stockholders	7068000000	10671000000	6836000000	6959000000	11247000000	15227000000	17930000000	18525000000	18936000000	20642000000	76033000000															
-	Diluted Net Income Available to Common Stockholders	7068000000	10671000000	6836000000	6959000000	11247000000	15227000000	17930000000	18525000000	18936000000	20642000000	76033000000															
-	Income Statement Supplemental Section																										
-	    Reported Normalized and Operating Income/Expense Supplemental Section																										
-	        Total Revenue as Reported, Supplemental	40499000000	46075000000	41159000000	38297000000	46173000000	56898000000	55314000000	61880000000	65118000000	75325000000	2.57637E+11															
-	        Total Operating Profit/Loss as Reported, Supplemental	9177000000	9266000000	7977000000	6383000000	11213000000	15651000000	16437000000	19361000000	21031000000	21885000000	78714000000															
-	        Reported Effective Tax Rate	0.181		0	0.159	0.158		0.158	0.157	0.179		0.162															
-	        Reported Normalized Income			6836000000																							
-	        Reported Normalized Operating Profit			7977000000																							
-	Other Adjustments to Net Income Available to Common Stockholders																										
-	Discontinued Operations																										
-	Basic EPS	10.2	15.49	9.96	10.21	16.55	22.54	26.63	27.69	28.44	31.15	113.88															
-	    Basic EPS from Continuing Operations	10.2	15.47	9.96	10.21	16.55	22.46	26.63	27.69	28.44	31.12	113.88															
-	    Basic EPS from Discontinued Operations																										
-	Diluted EPS	10.12	15.35	9.87	10.13	16.4	22.3	26.29	27.26	27.99	30.69	112.2															
-	    Diluted EPS from Continuing Operations	10	15	10	10	16	22	26	27	28	31	112															
-	    Diluted EPS from Discontinued Operations																										
-	Basic Weighted Average Shares Outstanding	692741000	688804000	686465000	681768000	679449000	675581000	673220000	668958000	665758000	662664000	667650000															
-	Diluted Weighted Average Shares Outstanding	698199000	695193000	692267000	687024000	685851000	682969000	682071000	679612000	676519000	672493000	677674000															
-	Reported Normalized Diluted EPS			9.87																							
-	Basic EPS	10	15	10	10	17	23	27	28	28	31	114															
-	Diluted EPS	10	15	10	10	16	22	26	27	28	31	112															
-	Basic WASO	692741000	688804000	686465000	681768000	679449000	675581000	673220000	668958000	665758000	662664000	667650000
-Skip to content
Search or jump to…
Pull requests
Issues
Marketplace
Explore
 
@zakwarlord7 
Your account has been flagged.
Because of that, your profile is hidden from the public. If you believe this is a mistake, contact support to have your account status reviewed.
zakwarlord7
/
bitcore.sig-Bitore.sigs
Public
generated from zakwarlord7/libanki
Code
Issues
Pull requests
Actions
Projects
Wiki
Security
Insights
Settings
Comparing changes
Choose two branches to see what’s changed or to start a new pull request. If you need to, you can also .
  
There isn’t anything to compare.
master and trunk are entirely different commit histories.

Showing  with 16,900 additions and 0 deletions.
 122  
.github/workflows/package.yml
@@ -0,0 +1,122 @@
# This workflow will build and push a new container image to Alibaba Cloud Container Registry (ACR),
# and then will deploy it to Alibaba Cloud Container Service for Kubernetes (ACK), when there is a push to the "master" branch.
#
# To use this workflow, you will need to complete the following set-up steps:
#
# 1. Create an ACR repository to store your container images. 
#    You can use ACR EE instance for more security and better performance.
#    For instructions see https://www.alibabacloud.com/help/doc-detail/142168.htm
#
# 2. Create an ACK cluster to run your containerized application.
#    You can use ACK Pro cluster for more security and better performance.
#    For instructions see https://www.alibabacloud.com/help/doc-detail/95108.htm
#
# 3. Store your AccessKey pair in GitHub Actions secrets named `ACCESS_KEY_ID` and `ACCESS_KEY_SECRET`.
#    For instructions on setting up secrets see: https://developer.github.com/actions/managing-workflows/storing-secrets/
#
# 4. Change the values for the REGION_ID, REGISTRY, NAMESPACE, IMAGE, ACK_CLUSTER_ID, and ACK_DEPLOYMENT_NAME. 
#

name: Build and Deploy to ACK

on:
  push:
    branches: [ "master" ]

# Environment variables available to all jobs and steps in this workflow.
env:
  REGION_ID: cn-hangzhou
  REGISTRY: registry.cn-hangzhou.aliyuncs.com
  NAMESPACE: namespace
  IMAGE: repo
  TAG: ${{ github.sha }}
  ACK_CLUSTER_ID: clusterID
  ACK_DEPLOYMENT_NAME: nginx-deployment

  ACR_EE_REGISTRY: myregistry.cn-hangzhou.cr.aliyuncs.com
  ACR_EE_INSTANCE_ID: instanceID
  ACR_EE_NAMESPACE: namespace
  ACR_EE_IMAGE: repo
  ACR_EE_TAG: ${{ github.sha }}

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    # 1.1 Login to ACR   
    - name: Login to ACR with the AccessKey pair
      uses: aliyun/acr-login@v1
      with:
        region-id: "${{ env.REGION_ID }}"
        access-key-id: "${{ secrets.ACCESS_KEY_ID }}"
        access-key-secret: "${{ secrets.ACCESS_KEY_SECRET }}"

    # 1.2 Buid and push image to ACR   
    - name: Build and push image to ACR  
      run: |
        docker build --tag "$REGISTRY/$NAMESPACE/$IMAGE:$TAG" .  
        docker push "$REGISTRY/$NAMESPACE/$IMAGE:$TAG"   
 
    # 1.3 Scan image in ACR   
    - name: Scan image in ACR
      uses: aliyun/acr-scan@v1
      with:
        region-id: "${{ env.REGION_ID }}"
        access-key-id: "${{ secrets.ACCESS_KEY_ID }}"
        access-key-secret: "${{ secrets.ACCESS_KEY_SECRET }}"
        repository: "${{ env.NAMESPACE }}/${{ env.IMAGE }}"
        tag: "${{ env.TAG }}"

    # 2.1 (Optional) Login to ACR EE          
    - uses: actions/checkout@v3
    - name: Login to ACR EE with the AccessKey pair
      uses: aliyun/acr-login@v1
      with:
        login-server: "https://${{ env.ACR_EE_REGISTRY }}"
        region-id: "${{ env.REGION_ID }}"
        access-key-id: "${{ secrets.ACCESS_KEY_ID }}"
        access-key-secret: "${{ secrets.ACCESS_KEY_SECRET }}"
        instance-id: "${{ env.ACR_EE_INSTANCE_ID }}"

    # 2.2 (Optional) Build and push image ACR EE          
    - name: Build and push image to ACR EE  
      run: |
        docker build -t "$ACR_EE_REGISTRY/$ACR_EE_NAMESPACE/$ACR_EE_IMAGE:$TAG" .
        docker push "$ACR_EE_REGISTRY/$ACR_EE_NAMESPACE/$ACR_EE_IMAGE:$TAG"
    # 2.3 (Optional) Scan image in ACR EE          
    - name: Scan image in ACR EE
      uses: aliyun/acr-scan@v1
      with:
        region-id: "${{ env.REGION_ID }}"
        access-key-id: "${{ secrets.ACCESS_KEY_ID }}"
        access-key-secret: "${{ secrets.ACCESS_KEY_SECRET }}"
        instance-id: "${{ env.ACR_EE_INSTANCE_ID }}"
        repository: "${{ env.ACR_EE_NAMESPACE}}/${{ env.ACR_EE_IMAGE }}"
        tag: "${{ env.ACR_EE_TAG }}"

    # 3.1 Set ACK context         
    - name: Set K8s context
      uses: aliyun/ack-set-context@v1
      with:
        access-key-id: "${{ secrets.ACCESS_KEY_ID }}"
        access-key-secret: "${{ secrets.ACCESS_KEY_SECRET }}"
        cluster-id: "${{ env.ACK_CLUSTER_ID }}"

    # 3.2 Deploy the image to the ACK cluster
    - name: Set up Kustomize
      run: |-
        curl -s "https://raw.githubusercontent.com/kubernetes-sigs/kustomize/master/hack/install_kustomize.sh"  | bash /dev/stdin 3.8.6
    - name: Deploy
      run: |-
        ./kustomize edit set image REGISTRY/NAMESPACE/IMAGE:TAG=$REGISTRY/$NAMESPACE/$IMAGE:$TAG
        ./kustomize build . | kubectl apply -f -
        kubectl rollout status deployment/$ACK_DEPLOYMENT_NAME
        kubectl get services -o wide
 36  
.github/workflows/python-package-conda.yml
@@ -0,0 +1,36 @@
name: Python Package using Conda

on: [push]

jobs:
  build-linux:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 5

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: 3.10
    - name: Add conda to system path
      run: |
        # $CONDA is an environment variable pointing to the root of the miniconda directory
        echo $CONDA/bin >> $GITHUB_PATH
    - name: Install dependencies
      run: |
        conda env update --file environment.yml --name base
    - name: Lint with flake8
      run: |
        conda install flake8
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        conda install pytest
        pytest
# libanki :
# wet boew :
 7  
.gitignore
@@ -0,0 +1,7 @@
*.pyc
*~
*.mo
*\#
.*.swp
samples
unihan.db
 688  
COPYING
Large diffs are not rendered by default.

 5,091  
ChangeLog.old
@@ -0,0 +1,5091 @@
changeset:   794:7f344e1ac094
tag:         tip
user:        Damien Elmes <hg@repose.cx>
date:        Sat Sep 27 02:20:35 2008 +0900
description:
rebuild priorities on server too after sync

changeset:   793:8d66489049d1
user:        Damien Elmes <hg@repose.cx>
date:        Wed Sep 24 19:51:03 2008 +0900
description:
simplify algo in media, support foreign chars in sync

changeset:   792:747601f9084f
user:        Damien Elmes <hg@repose.cx>
date:        Tue Sep 23 03:21:35 2008 +0900
description:
update german translations

changeset:   791:6455da654ada
user:        Damien Elmes <hg@repose.cx>
date:        Tue Sep 23 03:12:57 2008 +0900
description:
rollback earlier failed card behaviour - needs more thought

changeset:   790:3f3b36a19b14
user:        Damien Elmes <hg@repose.cx>
date:        Tue Sep 23 02:55:06 2008 +0900
description:
update delay handling of older cards

changeset:   789:dc401f352309
user:        Damien Elmes <hg@repose.cx>
date:        Tue Sep 23 02:29:52 2008 +0900
description:
don't touch latex cache files when clearing media dir

changeset:   788:d41a997c82b3
user:        Damien Elmes <hg@repose.cx>
date:        Tue Sep 23 02:25:38 2008 +0900
description:
improve media tagging, add untagging

changeset:   787:b8bdcfdfc62e
user:        Damien Elmes <hg@repose.cx>
date:        Tue Sep 23 02:13:05 2008 +0900
description:
fix typo in stats

changeset:   786:330eeaffcedc
user:        Damien Elmes <hg@repose.cx>
date:        Mon Sep 22 19:19:19 2008 +0900
description:
bump version number

changeset:   785:7aa37d460ffa
user:        Damien Elmes <hg@repose.cx>
date:        Mon Sep 22 19:17:57 2008 +0900
description:
on failure of card in learning state, don't allow 7-9 & ignore delay

changeset:   784:1a0ae8c0fd75
user:        Damien Elmes <hg@repose.cx>
date:        Mon Sep 15 16:20:04 2008 +0900
description:
include timestamp in getDecks() sync msg

changeset:   783:e4b103adfcee
user:        Damien Elmes <hg@repose.cx>
date:        Mon Sep 22 17:07:21 2008 +0900
description:
update translations, make some extra fields translatable

changeset:   782:e1f8f469a2d4
user:        Damien Elmes <hg@repose.cx>
date:        Mon Sep 22 15:58:27 2008 +0900
description:
update translations, add media tests

changeset:   781:bea16d75308c
user:        Damien Elmes <hg@repose.cx>
date:        Mon Sep 22 15:35:44 2008 +0900
description:
add default priority tags

changeset:   780:1b6195fa184f
user:        Damien Elmes <hg@repose.cx>
date:        Mon Sep 22 04:02:47 2008 +0900
description:
avoid bumping card mod times, as upgrade happens both sides

changeset:   779:cd0b3d65ebae
user:        Damien Elmes <hg@repose.cx>
date:        Mon Sep 22 03:37:37 2008 +0900
description:
restore sync url

changeset:   778:9558de1cbce3
user:        Damien Elmes <hg@repose.cx>
date:        Mon Sep 22 03:36:15 2008 +0900
description:
updates to media syncing, db handling, make sync control easier

changeset:   777:f25fb49ea76a
user:        Damien Elmes <hg@repose.cx>
date:        Sun Sep 21 19:32:11 2008 +0900
description:
refactor media code, bugfixes

changeset:   776:1044f2d83a37
user:        Damien Elmes <hg@repose.cx>
date:        Sat Sep 20 03:55:48 2008 +0900
description:
speed up 'add missing cards'

changeset:   775:605f97bea2e9
user:        Damien Elmes <hg@repose.cx>
date:        Sat Sep 20 03:50:01 2008 +0900
description:
implement media syncing, making syncing easier, refactor string ids, more
- support optional syncing of media
- generate string ids with ids2str
- use random ids for media (this will error if user adds same file on both
sides w/o syncing)
- avoid rebuilding media dir twice for those who aren't running the latest
version
- fix bugs with media rebuild code
- add prepareSync() to handle half the syncing which doesn't change

changeset:   774:de980b3d67c9
user:        Damien Elmes <hg@repose.cx>
date:        Fri Sep 19 14:03:17 2008 +0900
description:
media: keep use count, ignore dirs, track deletions by filename

changeset:   773:dec7f440bda1
user:        Damien Elmes <hg@repose.cx>
date:        Wed Sep 17 20:22:19 2008 +0900
description:
fix problem upgrading decks on case sensitive filesystems

changeset:   772:de1503bf9a60
user:        Damien Elmes <hg@repose.cx>
date:        Wed Sep 17 17:45:59 2008 +0900
description:
new stats

changeset:   771:eb086fba0d33
user:        Damien Elmes <hg@repose.cx>
date:        Wed Sep 17 00:48:54 2008 +0900
description:
fixes to media upgrading
- use random dir name for backups
- catch more than one media reference per field
- avoid two checksums
- support same media in multiple fields
- ignore dot files

changeset:   770:d11f66084bbc
user:        Damien Elmes <hg@repose.cx>
date:        Tue Sep 16 12:51:09 2008 +0900
description:
cards default to new, rebuild types on checkdb, fix importing new

changeset:   769:a69f2aeae74b
user:        Damien Elmes <hg@repose.cx>
date:        Mon Sep 15 05:11:47 2008 +0900
description:
bump version number

changeset:   768:90440fcb1702
user:        Damien Elmes <hg@repose.cx>
date:        Mon Sep 15 05:11:23 2008 +0900
description:
catch img uses, not just audio uses

changeset:   767:bf971ef03af9
user:        Damien Elmes <hg@repose.cx>
date:        Mon Sep 15 02:15:13 2008 +0900
description:
fix for previous dailyStats fix

changeset:   766:607ed6876ee4
user:        Damien Elmes <hg@repose.cx>
date:        Mon Sep 15 02:06:25 2008 +0900
description:
only build 'newCountLeftToday' if building queue

changeset:   765:0bc83189a028
user:        Damien Elmes <hg@repose.cx>
date:        Mon Sep 15 01:16:38 2008 +0900
description:
fix div by zero error

changeset:   764:30f16e91c869
user:        Damien Elmes <hg@repose.cx>
date:        Mon Sep 15 01:08:12 2008 +0900
description:
enable upgrade

changeset:   763:77bdb561bcdb
user:        Damien Elmes <hg@repose.cx>
date:        Mon Sep 15 01:00:13 2008 +0900
description:
bump version

changeset:   762:7068d1cb2ad5
user:        Damien Elmes <hg@repose.cx>
date:        Mon Sep 15 00:48:56 2008 +0900
description:
revert importing changes

changeset:   761:f7ad4f6130dd
user:        Damien Elmes <hg@repose.cx>
date:        Mon Sep 15 00:36:25 2008 +0900
description:
support adding tags to cards, update chinese tests

changeset:   760:71fbab934ae2
user:        Damien Elmes <hg@repose.cx>
date:        Mon Sep 15 00:25:31 2008 +0900
description:
new unihan db

changeset:   759:c5ccbd1927f6
user:        Damien Elmes <hg@repose.cx>
date:        Mon Sep 15 00:25:16 2008 +0900
description:
fix save_unihan to support multiple readings

changeset:   758:b8f797202f95
user:        Damien Elmes <hg@repose.cx>
date:        Sun Sep 14 23:19:29 2008 +0900
description:
check average factor on startup, set new cards to average factor

changeset:   757:5b5c9b7830fe
user:        Damien Elmes <hg@repose.cx>
date:        Sun Sep 14 22:21:05 2008 +0900
description:
update translations

changeset:   756:be99b4ba4a28
user:        Damien Elmes <hg@repose.cx>
date:        Sun Sep 14 22:19:58 2008 +0900
description:
improve timer

changeset:   755:cdcee481960e
user:        Damien Elmes <hg@repose.cx>
date:        Sun Sep 14 20:28:27 2008 +0900
description:
fix bug in unihan gen, use real pinyin readings thanks to patch by daniel chai

changeset:   754:3f5f57d21fe0
user:        Damien Elmes <hg@repose.cx>
date:        Sun Sep 14 19:48:54 2008 +0900
description:
don't stop timer when calling thinkingTime()

changeset:   753:40b99029d15f
user:        Damien Elmes <hg@repose.cx>
date:        Sun Sep 14 16:14:19 2008 +0900
description:
improve media upgrade, backup all files

changeset:   752:5204c80a9a50
user:        Damien Elmes <hg@repose.cx>
date:        Sun Sep 14 15:19:20 2008 +0900
description:
new media support, scheduling changes
- media support moved into separate module
- checksum files on add, and rename them to checksummed version
- tidy up new card scheduling routines
- define newCountLeftToday, and use it in scheduling
- limit new card count to max new cards per day
- when using 'distribute new cards', calculate eta based on new+old, not one
or the other
- remove distractedTime/reps support - it's not useful
- add routine to check media dir for dangling links
- store media descriptions in new table

changeset:   751:a39c3a8fa613
user:        Damien Elmes <hg@repose.cx>
date:        Wed Sep 10 13:32:22 2008 +0900
description:
fix statement call in fixIntegrity()

changeset:   750:ea41a60e9bfb
user:        Damien Elmes <hg@repose.cx>
date:        Wed Sep 10 00:05:45 2008 +0900
description:
change order of version bump on version 0 upgrade

changeset:   749:c989e349c6c7
user:        Damien Elmes <hg@repose.cx>
date:        Wed Sep 10 00:03:12 2008 +0900
description:
add views and indices on check integrity. should fix some upgrade bugs

changeset:   748:5ef19bdc5dc1
user:        Damien Elmes <hg@repose.cx>
date:        Mon Sep 08 23:43:34 2008 +0900
description:
only rebuild types on upgrade, optimise syncing
- since low & very high priority cards aren't put in a different queue
anymore, there's no need to rebuild their types on sync. this saves about 5
seconds on the iphone on a deck of 4000 cards
- furthermore, we can avoid rebuilding the priorities of cards that weren't
transferred in the sync. this saves another 5 seconds
- and we can take the minimum of lastSync rather than setting to zero, to
avoid sending the whole summary. need to check to make sure this won't cause
problems

changeset:   747:a52a2a8d5102
user:        Damien Elmes <hg@repose.cx>
date:        Sun Sep 07 00:05:58 2008 +0900
description:
update spanish translations

changeset:   746:3d24c220cf3c
user:        Damien Elmes <hg@repose.cx>
date:        Sat Sep 06 23:50:26 2008 +0900
description:
bump version number

changeset:   745:1b3ddc8a0d57
user:        Damien Elmes <hg@repose.cx>
date:        Sat Sep 06 22:29:09 2008 +0900
description:
put distribute cards first

changeset:   744:68e39d789164
user:        Damien Elmes <hg@repose.cx>
date:        Sat Sep 06 22:26:38 2008 +0900
description:
remove 'new cards first' option

changeset:   743:b2124055af6c
user:        Damien Elmes <hg@repose.cx>
date:        Sat Sep 06 21:54:26 2008 +0900
description:
fix bug in getCardIds

changeset:   742:8b2a0ad58993
user:        Damien Elmes <hg@repose.cx>
date:        Sat Sep 06 21:42:38 2008 +0900
description:
don't force a check - it'll cause problems with syncing

changeset:   741:9d0dd086b846
user:        Damien Elmes <hg@repose.cx>
date:        Sat Sep 06 21:29:24 2008 +0900
description:
new card handling, multiple schedulers, integrity improvs, more
- three different scheduling choices - default spreads new cards out
throughout reviews
- limit number of new cards per day to 20 by default
- refactor getCardIds() so that new card handling is implementable. slightly
slower, but only an issue for the website, not desktop clients
- don't change queue for very high priority and low priority
- show number of new cards due next day on finish

changeset:   740:dee624693448
user:        Damien Elmes <hg@repose.cx>
date:        Wed Sep 03 15:22:59 2008 +0900
description:
translate days/cards in graphs

changeset:   739:55ee54b34790
user:        Damien Elmes <hg@repose.cx>
date:        Wed Sep 03 04:35:18 2008 +0900
description:
bump version number

changeset:   738:a07944b55ff5
user:        Damien Elmes <hg@repose.cx>
date:        Wed Sep 03 04:04:32 2008 +0900
description:
checkdb: regenerate question/answer cache, and mark all cards/facts/models mod

changeset:   737:c6fbfb44d925
user:        Damien Elmes <hg@repose.cx>
date:        Wed Sep 03 03:47:15 2008 +0900
description:
don't forget deletions when checking db

changeset:   736:fba4ad426675
user:        Damien Elmes <hg@repose.cx>
date:        Wed Sep 03 03:17:34 2008 +0900
description:
add german updates from [Bananeweizen at gmx dot de]

changeset:   735:14b62b62df80
user:        Damien Elmes <hg@repose.cx>
date:        Wed Sep 03 03:14:00 2008 +0900
description:
fix some problems with the exporting code
- upgrade fact spacing to use the cards table
- set new card fields like relativeDelay
- set due to creation time

changeset:   734:00a0a191a2a0
user:        Damien Elmes <hg@repose.cx>
date:        Wed Sep 03 01:07:10 2008 +0900
description:
ignore deleted objects on import, fix html & forget deletions on checkdb

changeset:   733:56fc2a350a49
user:        Damien Elmes <hg@repose.cx>
date:        Tue Sep 02 16:15:07 2008 +0900
description:
add tidyHTML to utils, start work on additions to checkDB

changeset:   732:e577dce1ca01
user:        Damien Elmes <hg@repose.cx>
date:        Mon Sep 01 20:06:43 2008 +0900
description:
limit combinedDue to 1

changeset:   731:00be0271bfa5
user:        Damien Elmes <hg@repose.cx>
date:        Mon Sep 01 19:41:41 2008 +0900
description:
bump version number

changeset:   730:ab282e5bfee0
user:        Damien Elmes <hg@repose.cx>
date:        Mon Sep 01 17:34:26 2008 +0900
description:
fix initial spacing setting high spacing values

changeset:   729:294cc15863b6
user:        Damien Elmes <hg@repose.cx>
date:        Sun Aug 31 22:56:06 2008 +0900
description:
update spanish translations

changeset:   728:487e131cb90e
user:        Damien Elmes <hg@repose.cx>
date:        Sun Aug 31 22:50:02 2008 +0900
description:
bump version number

changeset:   727:309a3b96f57f
user:        Damien Elmes <hg@repose.cx>
date:        Sun Aug 31 22:42:40 2008 +0900
description:
update graphs code to use new db layout

changeset:   726:6ae2b8dfa397
user:        Damien Elmes <hg@repose.cx>
date:        Sun Aug 31 22:37:33 2008 +0900
description:
set cards to not due when answering - they'll be updated later

changeset:   725:aa2188746766
user:        Damien Elmes <hg@repose.cx>
date:        Sun Aug 31 21:27:24 2008 +0900
description:
update relativeDelay for all cards, not just recently expired ones

changeset:   724:02fea17b9d22
user:        Damien Elmes <hg@repose.cx>
date:        Sun Aug 31 17:33:09 2008 +0900
description:
if card is suspended, set isDue = 0
- thanks to Nathanael Law for the report

changeset:   723:5410d31cfadc
user:        Damien Elmes <hg@repose.cx>
date:        Sun Aug 31 17:23:10 2008 +0900
description:
add support for changing order of card models and field models
- thanks to Nathanael Law for the patch
- updated patch to mark facts/models modified so changes sync

changeset:   722:a8b75ac64b1e
user:        Damien Elmes <hg@repose.cx>
date:        Sun Aug 31 15:27:03 2008 +0900
description:
set new interval to 0.001, not 1

changeset:   721:fe91fa7e876e
parent:      717:9748f6c99a40
parent:      720:c3c16d61c5fd
user:        Damien Elmes <hg@repose.cx>
date:        Sun Aug 31 15:15:32 2008 +0900
description:
merge

changeset:   720:c3c16d61c5fd
parent:      719:a0178186c744
parent:      654:c55cd3992387
user:        Damien Elmes <hg@repose.cx>
date:        Sun Aug 31 15:08:33 2008 +0900
description:
merge

changeset:   719:a0178186c744
parent:      718:a83de27a1d93
parent:      716:87f9ae70fea1
user:        Damien Elmes <hg@repose.cx>
date:        Sun Aug 31 15:08:22 2008 +0900
description:
merge

changeset:   718:a83de27a1d93
parent:      714:d10138a2f9f5
parent:      653:4a530339560c
user:        Damien Elmes <hg@repose.cx>
date:        Sun Aug 31 15:07:53 2008 +0900
description:
merge

changeset:   717:9748f6c99a40
parent:      715:ebb00029c503
parent:      716:87f9ae70fea1
user:        Damien Elmes <hg@repose.cx>
date:        Sun Aug 31 15:15:20 2008 +0900
description:
merge

changeset:   716:87f9ae70fea1
parent:      711:c9c5e73e233f
user:        Damien Elmes <hg@repose.cx>
date:        Thu Aug 28 19:39:00 2008 +0900
description:
always choose oldest model when merging

changeset:   715:ebb00029c503
parent:      714:d10138a2f9f5
parent:      654:c55cd3992387
user:        Damien Elmes <hg@repose.cx>
date:        Sun Aug 31 15:14:33 2008 +0900
description:
merge

changeset:   714:d10138a2f9f5
user:        Damien Elmes <hg@repose.cx>
date:        Fri Aug 29 21:09:41 2008 +0900
description:
bump version number

changeset:   713:78fba5eca19e
user:        Damien Elmes <hg@repose.cx>
date:        Fri Aug 29 20:06:51 2008 +0900
description:
drop indices only if exist, don't check folder is writeable

changeset:   712:1d5578fc859e
user:        Damien Elmes <hg@repose.cx>
date:        Fri Aug 29 19:26:41 2008 +0900
description:
remove obsolote indices, use priority index

changeset:   711:c9c5e73e233f
user:        Damien Elmes <hg@repose.cx>
date:        Thu Aug 28 17:58:38 2008 +0900
description:
fix media dir file size check

changeset:   710:af42a3f9fb5a
user:        Damien Elmes <hg@repose.cx>
date:        Thu Aug 28 17:44:17 2008 +0900
description:
fix bug setting current model, add model merging support

changeset:   709:84f9dfcc25fa
user:        Damien Elmes <hg@repose.cx>
date:        Thu Aug 28 16:10:29 2008 +0900
description:
fix mature/young card counts (ignore priorities)

changeset:   708:ead7f8877468
user:        Damien Elmes <hg@repose.cx>
date:        Thu Aug 28 16:07:04 2008 +0900
description:
fix seenCardCount()/newCardCount() to ignore priorities

changeset:   707:996de202997e
user:        Damien Elmes <hg@repose.cx>
date:        Wed Aug 27 04:04:11 2008 +0900
description:
if no earliest time, tell user to add new cards

changeset:   706:0aa73467b953
user:        Damien Elmes <hg@repose.cx>
date:        Wed Aug 27 02:49:58 2008 +0900
description:
catch cards with no card model too

changeset:   705:7a5f77987b42
user:        Damien Elmes <hg@repose.cx>
date:        Tue Aug 26 23:18:59 2008 +0900
description:
make fixIntegrity() syncable, add more checks

changeset:   704:7cd31348d5d6
user:        Damien Elmes <hg@repose.cx>
date:        Tue Aug 26 12:42:01 2008 +0900
description:
update lastInterval/due/factor

changeset:   703:027099bf01ef
user:        Damien Elmes <hg@repose.cx>
date:        Mon Aug 25 19:06:28 2008 +0900
description:
encode string as utf-8 before sending to latex (fix win32)

changeset:   702:222fee895606
user:        Damien Elmes <hg@repose.cx>
date:        Mon Aug 25 17:52:49 2008 +0900
description:
bump version

changeset:   701:beae5d21dcff
user:        Damien Elmes <hg@repose.cx>
date:        Mon Aug 25 15:03:45 2008 +0900
description:
since we're randomizing field ids, delete local fields before syncing

changeset:   700:9be61e41abc6
user:        Damien Elmes <hg@repose.cx>
date:        Mon Aug 25 14:15:26 2008 +0900
description:
fix bug adding cards with priorities

changeset:   699:26c2fd9803b3
user:        Damien Elmes <hg@repose.cx>
date:        Mon Aug 25 01:52:10 2008 +0900
description:
catch interrupted system calls on osx (fix latex)

changeset:   698:b00e8943896e
user:        Damien Elmes <hg@repose.cx>
date:        Mon Aug 25 00:59:32 2008 +0900
description:
bump version number

changeset:   697:72877d4c65ac
user:        Damien Elmes <hg@repose.cx>
date:        Sun Aug 24 23:49:28 2008 +0900
description:
fix for old python

changeset:   696:1dbfe6cf704f
user:        Damien Elmes <hg@repose.cx>
date:        Sun Aug 24 23:46:24 2008 +0900
description:
catch error when latex not available

changeset:   695:849dd0cb1e66
user:        Damien Elmes <hg@repose.cx>
date:        Sun Aug 24 20:34:05 2008 +0900
description:
check missing fields, reset isDue on check, force random field ids

changeset:   694:a92453fe34fa
user:        Damien Elmes <hg@repose.cx>
date:        Sun Aug 24 16:08:46 2008 +0900
description:
add fns to check deck integrity and optimize. backup before upgrade

changeset:   693:40d7c642effe
user:        Damien Elmes <hg@repose.cx>
date:        Sun Aug 24 15:12:56 2008 +0900
description:
flush before deleting

changeset:   692:2ef84a67a27f
user:        Damien Elmes <hg@repose.cx>
date:        Sun Aug 24 14:20:18 2008 +0900
description:
rebuild all due cards on upgrade

changeset:   691:1cc8b894488c
user:        Damien Elmes <hg@repose.cx>
date:        Sat Aug 23 13:24:35 2008 +0900
description:
fix typo

changeset:   690:f1ad96b4ccdf
user:        Damien Elmes <hg@repose.cx>
date:        Sat Aug 23 13:20:45 2008 +0900
description:
same for single priority

changeset:   689:447e0ef9f5a2
user:        Damien Elmes <hg@repose.cx>
date:        Sat Aug 23 13:20:17 2008 +0900
description:
don't mark card modified when updating priorities

changeset:   688:c07dc999a451
user:        Damien Elmes <hg@repose.cx>
date:        Sat Aug 23 13:01:07 2008 +0900
description:
fix for suspending cards

changeset:   687:a1730621b2fa
user:        Damien Elmes <hg@repose.cx>
date:        Sat Aug 23 05:52:13 2008 +0900
description:
in latex code keep win32 code win32 only

changeset:   686:5351ab8ffe26
user:        Damien Elmes <hg@repose.cx>
date:        Sat Aug 23 05:45:09 2008 +0900
description:
create media dir in latex

changeset:   685:abdfdb8d8259
user:        Damien Elmes <hg@repose.cx>
date:        Fri Aug 22 18:36:31 2008 +0900
description:
bump version

changeset:   684:d8e21f20ea13
user:        Damien Elmes <hg@repose.cx>
date:        Fri Aug 22 18:23:12 2008 +0900
description:
ease=0 -> interval=1, ensure relativeDelay is defined properly for vhp cards

changeset:   683:210ac919afba
user:        Damien Elmes <hg@repose.cx>
date:        Fri Aug 22 17:22:46 2008 +0900
description:
rebuild type on updatePriority() too

changeset:   682:0743d48a5f6a
user:        Damien Elmes <hg@repose.cx>
date:        Fri Aug 22 17:17:27 2008 +0900
description:
rebuild types when priorities change

changeset:   681:562e0b7121e2
user:        Damien Elmes <hg@repose.cx>
date:        Fri Aug 22 17:09:17 2008 +0900
description:
switch priority direction on new cards, fix indexes, upgrade deck

changeset:   680:630332d5b52e
user:        Damien Elmes <hg@repose.cx>
date:        Fri Aug 22 17:08:05 2008 +0900
description:
card.toDB(): calculate relative delay based on new interval, not existing

changeset:   679:47b11a72d93e
user:        Damien Elmes <hg@repose.cx>
date:        Fri Aug 22 13:52:30 2008 +0900
description:
encode texpath in file system encoding before calling latex

changeset:   678:8b7e242c5c2c
user:        Damien Elmes <hg@repose.cx>
date:        Fri Aug 22 04:10:36 2008 +0900
description:
make latex python 2.4 compatible

changeset:   677:6e5256cca4ba
user:        Damien Elmes <hg@repose.cx>
date:        Fri Aug 22 03:38:11 2008 +0900
description:
update translations

changeset:   676:90385ecde4a2
user:        Damien Elmes <hg@repose.cx>
date:        Fri Aug 22 03:37:36 2008 +0900
description:
revert to new sync proto

changeset:   675:cdff208f7750
user:        Damien Elmes <hg@repose.cx>
date:        Fri Aug 22 03:25:31 2008 +0900
description:
hide dos box on win32, use file system encoding on latex file

changeset:   674:98c6d7176e58
user:        Damien Elmes <hg@repose.cx>
date:        Fri Aug 22 03:01:39 2008 +0900
description:
use subprocess for latex generation, check cached image files better

changeset:   673:b1e5281cc468
user:        Damien Elmes <hg@repose.cx>
date:        Fri Aug 22 02:11:45 2008 +0900
description:
catch latex/dvipng error messages

changeset:   672:9d9a66c4cc4c
user:        Damien Elmes <hg@repose.cx>
date:        Fri Aug 22 01:27:43 2008 +0900
description:
add uniqueness check for media dir

changeset:   671:d8412e943854
user:        Damien Elmes <hg@repose.cx>
date:        Fri Aug 22 00:39:01 2008 +0900
description:
update  kanji stats for libanki

changeset:   670:3279d36b3873
user:        Damien Elmes <hg@repose.cx>
date:        Thu Aug 21 16:49:56 2008 +0900
description:
remove trailing <p> from finished msg

changeset:   669:4194bf5ab584
user:        Damien Elmes <hg@repose.cx>
date:        Thu Aug 21 03:02:05 2008 +0900
description:
add old sync code back in until ready to release

changeset:   668:15057e5bfe96
user:        Damien Elmes <hg@repose.cx>
date:        Thu Aug 21 02:57:57 2008 +0900
description:
when rounding, round to point

changeset:   667:e3eecc872bd9
user:        Damien Elmes <hg@repose.cx>
date:        Wed Aug 20 23:51:42 2008 +0900
description:
fix resetCard(), add deck finished msg

changeset:   666:d10fe7cf68db
user:        Damien Elmes <hg@repose.cx>
date:        Wed Aug 20 22:33:42 2008 +0900
description:
increase number of backups, allow new deck directory to be customized

changeset:   665:0944063a48a9
user:        Damien Elmes <hg@repose.cx>
date:        Wed Aug 20 15:23:11 2008 +0900
description:
put preSyncRefresh() in correct place

changeset:   664:8de167986624
user:        Damien Elmes <hg@repose.cx>
date:        Tue Aug 19 00:40:21 2008 +0900
description:
use native mac audio

changeset:   663:5f3c43b8e09e
user:        Damien Elmes <hg@repose.cx>
date:        Tue Aug 19 00:36:33 2008 +0900
description:
make sure to rebuild priorities for client after sync

changeset:   662:a11e5e138913
user:        Damien Elmes <hg@repose.cx>
date:        Mon Aug 18 17:39:36 2008 +0900
description:
catch missing files when queueing

changeset:   661:4c84f8f41e29
user:        Damien Elmes <hg@repose.cx>
date:        Mon Aug 18 14:56:52 2008 +0900
description:
avoid division by zero in markExpiredCardsDue()

changeset:   660:7909069b4b98
user:        Damien Elmes <hg@repose.cx>
date:        Mon Aug 18 14:34:58 2008 +0900
description:
fix previous change

changeset:   659:4a9cebb03bbb
user:        Damien Elmes <hg@repose.cx>
date:        Mon Aug 18 14:12:11 2008 +0900
description:
no need to update _dailyStats, bundle daily stats without orm

changeset:   658:0c41b35558b8
user:        Damien Elmes <hg@repose.cx>
date:        Mon Aug 18 14:03:57 2008 +0900
description:
update stats pre-sync

changeset:   657:af0319d44b8d
user:        Damien Elmes <hg@repose.cx>
date:        Fri Aug 15 21:11:28 2008 +0900
description:
make upgrade more robust, fix sync path

changeset:   656:a7525fc35edd
user:        Damien Elmes <hg@repose.cx>
date:        Fri Aug 15 17:20:23 2008 +0900
description:
typo in getCardIds(), don't sync new deck values yet

changeset:   655:701156cd121f
parent:      651:5d4b6f4cfeef
user:        Damien Elmes <hg@repose.cx>
date:        Fri Aug 15 16:36:48 2008 +0900
description:
set _countsDirty on open, add getCards(), update updateAllPriorities()

changeset:   654:c55cd3992387
parent:      651:5d4b6f4cfeef
parent:      653:4a530339560c
user:        Damien Elmes <hg@repose.cx>
date:        Thu Aug 14 15:48:30 2008 +0900
description:
merge

changeset:   653:4a530339560c
user:        Damien Elmes <hg@repose.cx>
date:        Thu Aug 14 15:45:39 2008 +0900
description:
don't send version

changeset:   652:f772a8c41ed8
parent:      643:577fc8703e3e
user:        Damien Elmes <hg@repose.cx>
date:        Thu Aug 14 15:34:23 2008 +0900
description:
use an explicit table name to avoid problems accessing old decks

changeset:   651:5d4b6f4cfeef
user:        Damien Elmes <hg@repose.cx>
date:        Thu Aug 14 15:43:59 2008 +0900
description:
don't send version number, as it's handled locally

changeset:   650:19bb0dfba67f
user:        Damien Elmes <hg@repose.cx>
date:        Thu Aug 14 15:21:17 2008 +0900
description:
remove debugging

changeset:   649:03b8972f5bc7
user:        Damien Elmes <hg@repose.cx>
date:        Thu Aug 14 15:04:50 2008 +0900
description:
when rolling back the deck, make sure to clear the session

changeset:   648:0959736b0b6f
user:        Damien Elmes <hg@repose.cx>
date:        Thu Aug 14 13:49:51 2008 +0900
description:
add final review support, cardsDueBy(), check due + 1 due to integer precision

changeset:   647:14ee60a8146c
user:        Damien Elmes <hg@repose.cx>
date:        Wed Aug 06 14:35:09 2008 +0900
description:
refactor failed card handling

changeset:   646:0a3f138ce999
user:        Damien Elmes <hg@repose.cx>
date:        Sun Aug 03 16:08:55 2008 +0900
description:
update function names

changeset:   645:3e8f51d39c5c
user:        Damien Elmes <hg@repose.cx>
date:        Sun Aug 03 15:54:20 2008 +0900
description:
refactor stats code, counts, getCard

changeset:   644:8de7f216a2eb
parent:      642:e1198518d82f
parent:      643:577fc8703e3e
user:        Damien Elmes <hg@repose.cx>
date:        Sun Jul 27 20:15:35 2008 +0900
description:
merge with stable

changeset:   643:577fc8703e3e
parent:      638:d9a10b14042f
user:        Damien Elmes <hg@repose.cx>
date:        Sun Jul 27 20:14:56 2008 +0900
description:
add temporary hack to prevent obscure problem with web interface

changeset:   642:e1198518d82f
user:        Damien Elmes <hg@repose.cx>
date:        Sun Jul 27 15:54:57 2008 +0900
description:
more sql queue work. update stats and syncing too

changeset:   641:3f7c2ec8f9af
user:        Damien Elmes <hg@repose.cx>
date:        Mon Jul 21 01:24:19 2008 +0900
description:
update stats code for sql only version

changeset:   640:4bedac110b09
user:        Damien Elmes <hg@repose.cx>
date:        Sun Jul 20 16:15:52 2008 +0900
description:
further enhancements to scheduling algo, remove old code

changeset:   639:54f572ab7574
user:        Damien Elmes <hg@repose.cx>
date:        Fri Jul 18 23:03:15 2008 +0900
description:
new scheduling algorithm, getCard/answerCard->non-orm, upgrade deck to v1
- queue implemented using standard sql statements and indexes
- flush() removed from statement() in db.py
- rewrite getCard() and answerCard() to support pure sql
- move index definitions into deck code, and update all at once
- upgrade deck to v1, use new file format, add relativeDelay/isDue

changeset:   638:d9a10b14042f
user:        Damien Elmes <hg@repose.cx>
date:        Sat Jul 12 14:03:49 2008 +0900
description:
change spacing method

changeset:   637:0a4493ceba9a
user:        Damien Elmes <hg@repose.cx>
date:        Mon Jul 07 23:46:37 2008 +0900
description:
bump version number

changeset:   636:0dd97215713f
user:        Damien Elmes <hg@repose.cx>
date:        Mon Jul 07 23:29:24 2008 +0900
description:
update korean translations

changeset:   635:666a61a1005d
user:        Damien Elmes <hg@repose.cx>
date:        Sun Jul 06 17:56:37 2008 +0900
description:
bump version number

changeset:   634:41c8719dea8f
user:        Damien Elmes <hg@repose.cx>
date:        Mon Jun 30 13:27:17 2008 +0900
description:
don't run psyco in sync tests

changeset:   633:76bfad36edeb
user:        Damien Elmes <hg@repose.cx>
date:        Mon Jun 30 12:39:56 2008 +0900
description:
1 days -> 1 day

changeset:   632:d42cbcdb9ca0
user:        Damien Elmes <hg@repose.cx>
date:        Mon Jun 23 18:30:44 2008 +0900
description:
analyze DB on open to fix slow query bug

changeset:   631:0a207d41bdde
user:        Damien Elmes <hg@repose.cx>
date:        Mon Jun 23 17:59:01 2008 +0900
description:
always check spacing, even if failed

changeset:   630:3e72d2bb72cd
user:        Damien Elmes <hg@repose.cx>
date:        Thu Jun 12 13:14:59 2008 +0900
description:
remove hashbangs from scripts

changeset:   629:5adc70f26434
user:        Damien Elmes <hg@repose.cx>
date:        Mon Jun 09 12:59:15 2008 +0900
description:
use small size latex and support utf8
patch from ancechu on the mnemosyne forums

changeset:   628:d16b7864fb51
user:        Damien Elmes <hg@repose.cx>
date:        Sun Jun 08 20:06:48 2008 +0900
description:
add more allowed characters, change pysqlite order

changeset:   627:24f7f67ec3be
user:        Damien Elmes <hg@repose.cx>
date:        Sat May 24 15:51:43 2008 +0900
description:
updated korean translations

changeset:   626:27621df9a3bf
user:        Damien Elmes <hg@repose.cx>
date:        Sat May 24 15:29:24 2008 +0900
description:
bump version number

changeset:   625:a421ba21ad3b
user:        Damien Elmes <hg@repose.cx>
date:        Sat May 24 13:06:35 2008 +0900
description:
fix problem with plural forms

changeset:   624:abfe8cc9e157
user:        Damien Elmes <hg@repose.cx>
date:        Sat May 24 13:01:11 2008 +0900
description:
add Korean translation from Jin Eundeok

changeset:   623:d7dd97ccaec9
user:        Damien Elmes <hg@repose.cx>
date:        Wed May 21 16:11:27 2008 +0900
description:
update valid deck chars

changeset:   622:ce2ca629c3ab
user:        Damien Elmes <hg@repose.cx>
date:        Mon May 19 20:13:16 2008 +0900
description:
don't assume the thread-local variables have been initialized in other threads

changeset:   621:3f2424f85055
user:        Damien Elmes <hg@repose.cx>
date:        Mon May 19 20:08:08 2008 +0900
description:
make language handling thread-local

changeset:   620:274acd4864a3
user:        Damien Elmes <hg@repose.cx>
date:        Mon May 19 18:31:20 2008 +0900
description:
strip bad characters from sync name

changeset:   619:1aafaf051652
user:        Damien Elmes <hg@repose.cx>
date:        Mon May 19 13:11:10 2008 +0900
description:
open unihan db session on each reading request, to work in threaded apps

changeset:   618:552a9a5c2b66
user:        Damien Elmes <hg@repose.cx>
date:        Sun May 18 19:43:19 2008 +0900
description:
add missing file from previous commit

changeset:   617:a114cda5b4fa
user:        Damien Elmes <hg@repose.cx>
date:        Sun May 18 19:34:44 2008 +0900
description:
add cuecard importer from chris aakre

changeset:   616:51fd2d028f19
user:        Damien Elmes <hg@repose.cx>
date:        Sun May 18 16:23:24 2008 +0900
description:
add strip latex support

changeset:   615:e616d09f0347
user:        Damien Elmes <hg@repose.cx>
date:        Sun May 18 15:22:06 2008 +0900
description:
calculate start of date based on gmtime, not local time

changeset:   614:6506d6a30683
user:        Damien Elmes <hg@repose.cx>
date:        Sun May 18 15:07:53 2008 +0900
description:
setup.py: gplv3->gplv3

changeset:   613:e521fe622380
user:        Damien Elmes <hg@repose.cx>
date:        Mon Apr 07 17:28:45 2008 +0900
description:
don't accidently create models as we try to delete them

changeset:   612:358abd1adcf0
user:        Damien Elmes <hg@repose.cx>
date:        Thu Apr 03 12:42:53 2008 +0900
description:
use different cutoff in final drill, bump version

changeset:   611:317d90474379
user:        Damien Elmes <hg@repose.cx>
date:        Wed Apr 02 22:39:29 2008 +0900
description:
bump version number

changeset:   610:6b2b0dbfa5d4
user:        Damien Elmes <hg@repose.cx>
date:        Tue Apr 01 12:29:05 2008 +0900
description:
don't throw away failed cards if not due yet, add collapsedFailedCards()

changeset:   609:fafbd0f3017c
user:        Damien Elmes <hg@repose.cx>
date:        Mon Mar 31 11:16:57 2008 +0900
description:
set cwd to tmpdir when generating latex

changeset:   608:bae31e9e2016
user:        Damien Elmes <hg@repose.cx>
date:        Mon Mar 31 11:12:00 2008 +0900
description:
define mature cards as currentInterval >= 21, fix cardState()

changeset:   607:33b75850cc13
user:        Damien Elmes <hg@repose.cx>
date:        Mon Mar 31 10:47:11 2008 +0900
description:
when adding spaced cards back on future queue, make sure to convert to future item

changeset:   606:08d922f58e7a
user:        Damien Elmes <hg@repose.cx>
date:        Mon Mar 24 15:56:55 2008 +0900
description:
fix path separator

changeset:   605:73eb316d6a38
user:        Damien Elmes <hg@repose.cx>
date:        Mon Mar 24 04:14:47 2008 +0900
description:
try to load graphs twice (fixes graph bug on unicode names on win32)

changeset:   604:f64adfd3f64e
user:        Damien Elmes <hg@repose.cx>
date:        Mon Mar 24 03:26:39 2008 +0900
description:
bump version number

changeset:   603:0fb38c00c31b
user:        Damien Elmes <hg@repose.cx>
date:        Mon Mar 24 02:44:43 2008 +0900
description:
enforce priority order suspended -> high -> med -> low -> norm

changeset:   602:5e235ccdcc85
user:        Damien Elmes <hg@repose.cx>
date:        Mon Mar 24 02:26:45 2008 +0900
description:
commit() manually on export, remove redundant flush in anki03 and deck

changeset:   601:e03056c908c7
user:        Damien Elmes <hg@repose.cx>
date:        Wed Mar 19 15:20:21 2008 +0900
description:
gpl2 -> gpl3

changeset:   600:a8e67b62d6e6
user:        Damien Elmes <hg@repose.cx>
date:        Wed Mar 19 15:18:21 2008 +0900
description:
add /usr/texbin on osx

changeset:   599:16d967dcf64b
user:        Damien Elmes <hg@repose.cx>
date:        Wed Mar 19 15:15:16 2008 +0900
description:
support copying media dir on saveas

changeset:   598:3aba7dd81593
user:        Damien Elmes <hg@repose.cx>
date:        Wed Mar 19 12:00:23 2008 +0900
description:
in refresh(), flush any changes then reload changes after session attach

changeset:   597:ec65c140f655
user:        Damien Elmes <hg@repose.cx>
date:        Sat Mar 15 13:07:20 2008 +0900
description:
catch database is locked as well as table is locked

changeset:   596:d1a64da72c7d
user:        Damien Elmes <hg@repose.cx>
date:        Wed Mar 12 13:26:36 2008 +0900
description:
remove debug statement

changeset:   595:a8905a6cb733
user:        Damien Elmes <hg@repose.cx>
date:        Wed Mar 12 13:25:36 2008 +0900
description:
remove rebuild deck on finish code, since spacing is no longer an issue

changeset:   594:6383725e5fcd
user:        Damien Elmes <hg@repose.cx>
date:        Wed Mar 12 13:24:22 2008 +0900
description:
only update spacing if > than before, set default spacing of 10%

changeset:   593:7bbc82d1b84c
user:        Damien Elmes <hg@repose.cx>
date:        Sun Mar 09 10:30:06 2008 +0900
description:
check to see if earliesttime is valid

changeset:   592:73ca94c12b43
user:        Damien Elmes <hg@repose.cx>
date:        Sun Mar 09 03:09:55 2008 +0900
description:
typo

changeset:   591:114c9307d70e
user:        Damien Elmes <hg@repose.cx>
date:        Sun Mar 09 03:09:36 2008 +0900
description:
rebuild queue if cards are due

changeset:   590:a79ae9c52011
user:        Damien Elmes <hg@repose.cx>
date:        Sun Mar 09 02:59:18 2008 +0900
description:
ver=0.9.5.4

changeset:   589:af29531578b7
user:        Damien Elmes <hg@repose.cx>
date:        Sun Mar 09 02:44:33 2008 +0900
description:
ignore deleted cards/models/etc when importing

changeset:   588:380b73a48552
user:        Damien Elmes <hg@repose.cx>
date:        Sun Mar 09 01:21:33 2008 +0900
description:
remove incomplete dutch translation

changeset:   587:abd56386612f
user:        Damien Elmes <hg@repose.cx>
date:        Sat Mar 08 02:34:37 2008 +0900
description:
fix export field order

changeset:   586:e87a0eb0215e
user:        Damien Elmes <hg@repose.cx>
date:        Sat Mar 08 02:27:26 2008 +0900
description:
don't apply distinct to field values on fact export

changeset:   585:62a49cc767d2
user:        Damien Elmes <hg@repose.cx>
date:        Sat Mar 08 02:01:03 2008 +0900
description:
genID in normal import, too

changeset:   584:87a748693258
user:        Damien Elmes <hg@repose.cx>
date:        Sat Mar 08 01:59:54 2008 +0900
description:
genID() on anki03 import

changeset:   583:ca7b58b3ee04
user:        Damien Elmes <hg@repose.cx>
date:        Sat Mar 08 00:35:40 2008 +0900
description:
correctly handle failed cards not due yet in final review & failed cards count

changeset:   582:3fc290930148
user:        Damien Elmes <hg@repose.cx>
date:        Fri Mar 07 23:57:53 2008 +0900
description:
put tex file in tmp dir too

changeset:   581:166e30a6fa56
user:        Damien Elmes <hg@repose.cx>
date:        Tue Mar 04 00:08:49 2008 +0900
description:
typo

changeset:   580:b492ced5d846
user:        Damien Elmes <hg@repose.cx>
date:        Tue Mar 04 00:07:57 2008 +0900
description:
update pendingFailed/etc

changeset:   579:523f4063003a
user:        Damien Elmes <hg@repose.cx>
date:        Mon Mar 03 23:48:34 2008 +0900
description:
include modified in props, get by oldest modified for final review too

changeset:   578:3dc73bf9e57a
user:        Damien Elmes <hg@repose.cx>
date:        Mon Mar 03 23:27:38 2008 +0900
description:
if->elif

changeset:   577:ce3c685f27db
user:        Damien Elmes <hg@repose.cx>
date:        Mon Mar 03 23:12:01 2008 +0900
description:
failed cards -> failed queue

changeset:   576:ab762131e1db
user:        Damien Elmes <hg@repose.cx>
date:        Mon Mar 03 22:46:47 2008 +0900
description:
ver=0.9.5.3

changeset:   575:3dff276a3146
user:        Damien Elmes <hg@repose.cx>
date:        Mon Mar 03 22:45:12 2008 +0900
description:
update ES translation

changeset:   574:4bdaff4f8fdc
user:        Damien Elmes <hg@repose.cx>
date:        Mon Mar 03 20:01:21 2008 +0900
description:
refactor scheduling code to address some more problems & fix many problems
- build queue from a single sql call with type identifier instead of four
separate views. this greatly reduces the complexity of the sql statements and
removes the possibility of a card appearing in more than one queue
- store all failed cards in the failed cards queue, regardless of due time.
this reduces the complexity of the above and some other parts of the code
- when pulling items from the failed queue due to maxFailed reached, get the
oldest modified item instead of oldest due. this ensures that cards are
removed in the order they were added and it's not possible for a '0' answer to
be placed in front of all '1' answers.
- don't apply spacing to failed cards on either fetch or add operations
- catch only locking errors when opening a deck; re-raise non-locking errors
- catch locking errors on open as well as lock operations

changeset:   573:f9b0f65540ad
user:        Damien Elmes <hg@repose.cx>
date:        Fri Feb 29 15:07:49 2008 +0900
description:
remove card cache and flush changes to db instead

changeset:   572:0216b0bf690d
user:        Damien Elmes <hg@repose.cx>
date:        Fri Feb 29 02:05:46 2008 +0900
description:
bump version number

changeset:   571:1f138784d8da
user:        Damien Elmes <hg@repose.cx>
date:        Fri Feb 29 02:01:37 2008 +0900
description:
address possible off-by-one in failed/future distinction

changeset:   570:edaa11cd4969
user:        Damien Elmes <hg@repose.cx>
date:        Fri Feb 29 00:32:46 2008 +0900
description:
when calculating earliest due, factor in collapseTime

changeset:   569:62ceaca5da85
user:        Damien Elmes <hg@repose.cx>
date:        Fri Feb 29 00:26:42 2008 +0900
description:
filter tags for facts too on export

changeset:   568:b092c2b4a44e
user:        Damien Elmes <hg@repose.cx>
date:        Fri Feb 29 00:02:50 2008 +0900
description:
update french translations, bump version number

changeset:   567:dba74965ea8a
user:        Damien Elmes <hg@repose.cx>
date:        Thu Feb 28 23:30:18 2008 +0900
description:
make sure to update lastCardId, and keep cache of cards

changeset:   566:515ab9e71d5b
user:        Damien Elmes <hg@repose.cx>
date:        Thu Feb 28 05:48:02 2008 +0900
description:
encode backup dir too before generating backup path

changeset:   565:4d45506e825c
user:        Damien Elmes <hg@repose.cx>
date:        Thu Feb 28 03:40:17 2008 +0900
description:
add interrupted system call workaround

changeset:   564:528144c8861e
user:        Damien Elmes <hg@repose.cx>
date:        Thu Feb 28 03:28:15 2008 +0900
description:
bump version number

changeset:   563:cf9f25c19e7d
user:        Damien Elmes <hg@repose.cx>
date:        Thu Feb 28 03:26:07 2008 +0900
description:
fix addFact properly

changeset:   562:4dd909b79cff
user:        Damien Elmes <hg@repose.cx>
date:        Thu Feb 28 03:13:01 2008 +0900
description:
fix deck unit tests

changeset:   561:e67f8d23ece9
user:        Damien Elmes <hg@repose.cx>
date:        Thu Feb 28 03:08:59 2008 +0900
description:
save or update fact when adding

changeset:   560:1f76f7d8aa2a
user:        Damien Elmes <hg@repose.cx>
date:        Thu Feb 28 01:47:23 2008 +0900
description:
remove target deck before saveas

changeset:   559:d68d668561ad
user:        Damien Elmes <hg@repose.cx>
date:        Thu Feb 28 01:45:26 2008 +0900
description:
remove debug statement

changeset:   558:b7ad9d9501fd
user:        Damien Elmes <hg@repose.cx>
date:        Thu Feb 28 01:36:42 2008 +0900
description:
saveas support

changeset:   557:997d2acce31a
user:        Damien Elmes <hg@repose.cx>
date:        Thu Feb 28 00:29:13 2008 +0900
description:
kakasi: preserve newlines when editing (catch <br />)

changeset:   556:c5d42e49521a
user:        Damien Elmes <hg@repose.cx>
date:        Thu Feb 28 00:18:52 2008 +0900
description:
reset spacing on export, set mod time

changeset:   555:948b50693325
user:        Damien Elmes <hg@repose.cx>
date:        Thu Feb 28 00:16:33 2008 +0900
description:
when resetting cards, reset spacing too, and set modtime

changeset:   554:30c0b7f61fda
user:        Damien Elmes <hg@repose.cx>
date:        Thu Feb 28 00:01:18 2008 +0900
description:
fix put spaced cards in correct queue, pull failed cards from future

changeset:   553:b5b3a7410f31
user:        Damien Elmes <hg@repose.cx>
date:        Thu Feb 28 00:00:37 2008 +0900
description:
add first answered to card stats

changeset:   552:a2cf6fd896a0
user:        Damien Elmes <hg@repose.cx>
date:        Tue Feb 26 17:44:49 2008 +0900
description:
failed -> not failed, add resetCards support

changeset:   551:a56b18dd983a
user:        Damien Elmes <hg@repose.cx>
date:        Tue Feb 26 16:46:41 2008 +0900
description:
fix eta for new cards

changeset:   550:954568afa53d
user:        Damien Elmes <hg@repose.cx>
date:        Mon Feb 25 17:16:46 2008 +0900
description:
add delete empty models support

changeset:   549:e6f6a5160173
user:        Damien Elmes <hg@repose.cx>
date:        Mon Feb 25 16:47:04 2008 +0900
description:
update translations

changeset:   548:e8ab6027a118
user:        Damien Elmes <hg@repose.cx>
date:        Mon Feb 25 16:15:43 2008 +0900
description:
support adding tags to anki10, set mod on anki10

changeset:   547:3f2b1b17cfe2
user:        Damien Elmes <hg@repose.cx>
date:        Mon Feb 25 15:28:36 2008 +0900
description:
update all cards with the current card model id, not all card models ids

changeset:   546:8f362e457134
user:        Damien Elmes <hg@repose.cx>
date:        Mon Feb 25 14:01:59 2008 +0900
description:
set default factor=2.5 on export

changeset:   545:7d627396ae19
user:        Damien Elmes <hg@repose.cx>
date:        Sun Feb 24 22:22:46 2008 +0900
description:
don't collect low priority cards if they are failed

changeset:   544:94a60c418ec5
user:        Damien Elmes <hg@repose.cx>
date:        Sat Feb 23 19:56:51 2008 +0900
description:
if all cards are failed, make sure spacing is at least delay0/delay1

changeset:   543:a9d488cecde1
user:        Damien Elmes <hg@repose.cx>
date:        Sat Feb 23 19:04:06 2008 +0900
description:
fix low priority

changeset:   542:69fb21c53b18
user:        Damien Elmes <hg@repose.cx>
date:        Sat Feb 23 18:45:46 2008 +0900
description:
since sqlite doesn't have subsecond accuracy, add one to future queue

changeset:   541:236ec293ac76
user:        Damien Elmes <hg@repose.cx>
date:        Sat Feb 23 18:05:33 2008 +0900
description:
update translations

changeset:   540:c5d1d46e092a
user:        Damien Elmes <hg@repose.cx>
date:        Sat Feb 23 18:02:55 2008 +0900
description:
put high priority new cards in rev queue too, fix getstats to understand

changeset:   539:a503ff0fb920
user:        Damien Elmes <hg@repose.cx>
date:        Sat Feb 23 15:53:14 2008 +0900
description:
add more debugging info

changeset:   538:697a6aa6eec2
user:        Damien Elmes <hg@repose.cx>
date:        Sat Feb 23 15:35:58 2008 +0900
description:
don't take out transaction in object_session, close deck on export

changeset:   537:7cec96fa045e
user:        Damien Elmes <hg@repose.cx>
date:        Sat Feb 23 14:20:32 2008 +0900
description:
always open a session, whether we're locking or not

changeset:   536:a48e8869d944
user:        Damien Elmes <hg@repose.cx>
date:        Sat Feb 23 14:04:34 2008 +0900
description:
change transaction handling

changeset:   535:6391564d0a59
user:        Damien Elmes <hg@repose.cx>
date:        Fri Feb 22 23:55:58 2008 +0900
description:
include created in items

changeset:   534:0ae8a9276a60
user:        Damien Elmes <hg@repose.cx>
date:        Fri Feb 22 22:37:17 2008 +0900
description:
sort 'deck order' new cards by created, not due

changeset:   533:54bb37136335
user:        Damien Elmes <hg@repose.cx>
date:        Fri Feb 22 22:31:34 2008 +0900
description:
add time to due delay before comparison

changeset:   532:977950ea60b5
user:        Damien Elmes <hg@repose.cx>
date:        Fri Feb 22 22:18:42 2008 +0900
description:
take out a write lock after every save

changeset:   531:cb5fb49ff027
user:        Damien Elmes <hg@repose.cx>
date:        Fri Feb 22 22:00:35 2008 +0900
description:
update firstAnswered on answer

changeset:   530:6b6cb6032d24
user:        Damien Elmes <hg@repose.cx>
date:        Fri Feb 22 04:38:37 2008 +0900
description:
scheduling changes to address a few bugs
- store only soon due cards in the failed queue. other cards go into the
future queue
- addExpiredItem() chooses future or failed as necessary
- remove failedDueSoon() as the length of the failed queue will suffice now
- include failed, non-due cards in future queue
- only use max(card.due, facts.spaceUntil) on a different card, instead of
indiscriminately
- log non-due cards showing up in queue

changeset:   529:8beac072db96
user:        Damien Elmes <hg@repose.cx>
date:        Fri Feb 22 02:47:37 2008 +0900
description:
don't recount ease2 in total

changeset:   528:6ec2e64f543a
user:        Damien Elmes <hg@repose.cx>
date:        Fri Feb 22 01:45:52 2008 +0900
description:
fix stats mislayout, and debugging info temporarily

changeset:   527:9f6634c55f74
user:        Damien Elmes <hg@repose.cx>
date:        Thu Feb 21 23:28:56 2008 +0900
description:
output dvipng text to log file, too

changeset:   526:6efe614e5783
user:        Damien Elmes <hg@repose.cx>
date:        Thu Feb 21 00:59:32 2008 +0900
description:
treat spaced cards as not due in graphs

changeset:   525:7032963c45e3
user:        Damien Elmes <hg@repose.cx>
date:        Wed Feb 20 21:39:01 2008 +0900
description:
bump version number

changeset:   524:1ed1bf270ec0
user:        Damien Elmes <hg@repose.cx>
date:        Wed Feb 20 21:36:35 2008 +0900
description:
fix win32 dying on utime

changeset:   523:9aebd3f33208
user:        Damien Elmes <hg@repose.cx>
date:        Wed Feb 20 21:34:43 2008 +0900
description:
importing: set mod, inc timestamp on every card, set reps in mnemosyne import

changeset:   522:111a89dc1a7d
user:        Damien Elmes <hg@repose.cx>
date:        Wed Feb 20 20:57:40 2008 +0900
description:
add back accidently removed spacedCardCount()

changeset:   521:9b7ea500e6d6
user:        Damien Elmes <hg@repose.cx>
date:        Wed Feb 20 19:52:15 2008 +0900
description:
flush before checking earliest, updated sql pending counts, off by 1, space hack

changeset:   520:1a51d20d0c67
user:        Damien Elmes <hg@repose.cx>
date:        Wed Feb 20 18:21:21 2008 +0900
description:
future queue shouldn't order by ordinal

changeset:   519:09b7354d9054
user:        Damien Elmes <hg@repose.cx>
date:        Wed Feb 20 18:06:36 2008 +0900
description:
fix case sensitivity problems with priorities/tags

changeset:   518:4786ab9c7d92
user:        Damien Elmes <hg@repose.cx>
date:        Wed Feb 20 18:05:02 2008 +0900
description:
fix 8 hours->10 minutes (again), report keyerror on missing field in fact

changeset:   517:cd2445e7315a
user:        Damien Elmes <hg@repose.cx>
date:        Wed Feb 20 02:08:11 2008 +0900
description:
always use heap for acq, order by id on random, fix priorities

changeset:   516:3cdad305b8c6
user:        Damien Elmes <hg@repose.cx>
date:        Tue Feb 19 01:46:34 2008 +0900
description:
make sure failed/successive reflects currentCard

changeset:   515:7b3852e8467d
user:        Damien Elmes <hg@repose.cx>
date:        Tue Feb 19 01:39:15 2008 +0900
description:
typo

changeset:   514:45d61ec90048
user:        Damien Elmes <hg@repose.cx>
date:        Tue Feb 19 01:29:16 2008 +0900
description:
insert and sort instead

changeset:   513:e45ead4b23e8
user:        Damien Elmes <hg@repose.cx>
date:        Tue Feb 19 01:27:57 2008 +0900
description:
ensure random new cards show in order

changeset:   512:97e6d8c6db61
user:        Damien Elmes <hg@repose.cx>
date:        Tue Feb 19 00:27:56 2008 +0900
description:
fetch all cards into revision queue, not earliest ordinal

changeset:   511:9ff150cf14b1
user:        Damien Elmes <hg@repose.cx>
date:        Mon Feb 18 23:59:28 2008 +0900
description:
support mnemosyne version 2 decks

changeset:   510:33141dcabac4
user:        Damien Elmes <hg@repose.cx>
date:        Mon Feb 18 20:15:25 2008 +0900
description:
add failed/successive

changeset:   509:7b784852048e
user:        Damien Elmes <hg@repose.cx>
date:        Mon Feb 18 17:00:54 2008 +0900
description:
ease2 = yes

changeset:   508:ccf03fd550f8
user:        Damien Elmes <hg@repose.cx>
date:        Sun Feb 17 21:38:51 2008 +0900
description:
calculate nextDue based on old state

changeset:   507:07b4a2308008
user:        Damien Elmes <hg@repose.cx>
date:        Sun Feb 17 21:31:40 2008 +0900
description:
>= not > in failedCardMax, fix thinko in seen fact repression

changeset:   506:2c53ed770cc3
user:        Damien Elmes <hg@repose.cx>
date:        Sun Feb 17 04:32:13 2008 +0900
description:
calculate nextDue with old state

changeset:   505:6260e8d0b8c8
user:        Damien Elmes <hg@repose.cx>
date:        Sun Feb 17 02:25:30 2008 +0900
description:
fix win32 backup problem, syncing deleting everything

changeset:   504:51f78cb0a6c9
user:        Damien Elmes <hg@repose.cx>
date:        Sun Feb 17 01:25:20 2008 +0900
description:
ensure priorities and suspended are case-insensitive

changeset:   503:7c9f6826d07a
user:        Damien Elmes <hg@repose.cx>
date:        Sat Feb 16 23:24:20 2008 +0900
description:
bump version number

changeset:   502:673df6435b3d
user:        Damien Elmes <hg@repose.cx>
date:        Sat Feb 16 23:14:15 2008 +0900
description:
ensure utf8 is passed to sqlite, don't show suspended in sql card counts

changeset:   501:ab2eb6518847
user:        Damien Elmes <hg@repose.cx>
date:        Sat Feb 16 21:55:01 2008 +0900
description:
fix encoding issues

changeset:   500:c77088668277
user:        Damien Elmes <hg@repose.cx>
date:        Sat Feb 16 04:47:27 2008 +0900
description:
update translations

changeset:   499:0190a25e8116
user:        Damien Elmes <hg@repose.cx>
date:        Sat Feb 16 04:40:56 2008 +0900
description:
update version number, sync URL

changeset:   498:aa0c093177a7
user:        Damien Elmes <hg@repose.cx>
date:        Sat Feb 16 04:38:22 2008 +0900
description:
don't decrement on failed cards, failedDueSoon, fix suspended&acqCards

changeset:   497:804b745cb613
user:        Damien Elmes <hg@repose.cx>
date:        Fri Feb 15 23:58:19 2008 +0900
description:
do spaced check on all queues, not just future

changeset:   496:b85b94f522aa
user:        Damien Elmes <hg@repose.cx>
date:        Fri Feb 15 15:07:08 2008 +0900
description:
fix old stats when not in final review

changeset:   495:d941ef5c2568
user:        Damien Elmes <hg@repose.cx>
date:        Thu Feb 14 01:36:31 2008 +0900
description:
add some docs to __init__

changeset:   494:9b1b2e078d3b
user:        Damien Elmes <hg@repose.cx>
date:        Thu Feb 14 01:21:31 2008 +0900
description:
update stats to reflect factor, update lastFactor on answer

changeset:   493:721fa0fa5e23
user:        Damien Elmes <hg@repose.cx>
date:        Thu Feb 14 01:09:24 2008 +0900
description:
add last factor to card, factor&last to history

changeset:   492:f5f140bcf875
user:        Damien Elmes <hg@repose.cx>
date:        Wed Feb 13 23:44:23 2008 +0900
description:
test for sqlite

changeset:   491:86f46df15879
user:        Damien Elmes <hg@repose.cx>
date:        Wed Feb 13 23:28:28 2008 +0900
description:
improve simplejson version check

changeset:   490:35b9b7175062
user:        Damien Elmes <hg@repose.cx>
date:        Wed Feb 13 22:58:41 2008 +0900
description:
fix delete card tags

changeset:   489:659435efb87c
user:        Damien Elmes <hg@repose.cx>
date:        Wed Feb 13 22:58:27 2008 +0900
description:
fix add card tags

changeset:   488:d5a0287d0c34
user:        Damien Elmes <hg@repose.cx>
date:        Wed Feb 13 22:02:17 2008 +0900
description:
remove echo=false

changeset:   487:d4bc57e5080a
user:        Damien Elmes <hg@repose.cx>
date:        Wed Feb 13 21:55:33 2008 +0900
description:
another attempt

changeset:   486:e7f5fe8e3a83
user:        Damien Elmes <hg@repose.cx>
date:        Wed Feb 13 21:42:58 2008 +0900
description:
print deck error to stderr

changeset:   485:e1d29d5e0ef2
user:        Damien Elmes <hg@repose.cx>
date:        Wed Feb 13 21:28:26 2008 +0900
description:
another attempt at unicodetext compat

changeset:   484:f4c4c2248244
user:        Damien Elmes <hg@repose.cx>
date:        Wed Feb 13 16:35:30 2008 +0900
description:
import text

changeset:   483:a54a25860f08
user:        Damien Elmes <hg@repose.cx>
date:        Wed Feb 13 02:39:56 2008 +0900
description:
don't do anything if no cards to update on card model change

changeset:   482:59d58a57f176
user:        Damien Elmes <hg@repose.cx>
date:        Wed Feb 13 02:39:06 2008 +0900
description:
refactor sql renderqa into cardmodel, add q/a update on card model change

changeset:   481:73716aab572a
user:        Damien Elmes <hg@repose.cx>
date:        Wed Feb 13 01:48:15 2008 +0900
description:
bugfixes in priorities, syncing, and saving & oldCardCount
- ensure simplejson 1.7 or more
- only update card priorities if changed, and set mod time
- make oldCardCount report all non-new cards
- don't set modified on save, should already be modified
- remove reference to json2
- only update cards on fact change if textChanged=True
- flush card and field models on add, to ensure subsequent delete works
- lastSync = 0 if not same on server and client
- bulk delete of facts and cards in sync
- fix createDeck command in sync

changeset:   480:d8d15968be41
user:        Damien Elmes <hg@repose.cx>
date:        Mon Feb 11 23:47:59 2008 +0900
description:
fix field order, add initial spacing

changeset:   479:064f2ff34327
user:        Damien Elmes <hg@repose.cx>
date:        Mon Feb 11 18:13:14 2008 +0900
description:
limit final review to collapseTime, bump version number

changeset:   478:b9dcd6f217f1
user:        Damien Elmes <hg@repose.cx>
date:        Mon Feb 11 17:56:40 2008 +0900
description:
add new card spacing attr for later, rebuild queue on empty, add fuzz to spacing

changeset:   477:bffa023c72e1
user:        Damien Elmes <hg@repose.cx>
date:        Mon Feb 11 15:30:46 2008 +0900
description:
preserve model created/mod, use same cmodel/fmodel id, preserve modtime on upgrade

changeset:   476:e180bf592812
user:        Damien Elmes <hg@repose.cx>
date:        Mon Feb 11 14:58:11 2008 +0900
description:
add model test

changeset:   475:89025cabb354
user:        Damien Elmes <hg@repose.cx>
date:        Mon Feb 11 14:56:47 2008 +0900
description:
pending card count when queue not built, getstats uses currentcard, sync fix

changeset:   474:18f6e364e443
user:        Damien Elmes <hg@repose.cx>
date:        Fri Feb 08 21:03:23 2008 +0900
description:
add close method, add optional backup/locking, make anki03 import safer

changeset:   473:28108e81b9c8
user:        Damien Elmes <hg@repose.cx>
date:        Wed Feb 06 23:19:25 2008 +0900
description:
move to unique identifiers, use simplejson, remove unique name checks

changeset:   472:2f864d898a9c
user:        Damien Elmes <hg@repose.cx>
date:        Mon Feb 04 19:07:46 2008 +0900
description:
bump version number

changeset:   471:6beca934d4e1
user:        Damien Elmes <hg@repose.cx>
date:        Mon Feb 04 17:45:35 2008 +0900
description:
dispose of engine on failure (fix win32 bug)

changeset:   470:fd2dea923ea1
user:        Damien Elmes <hg@repose.cx>
date:        Mon Feb 04 17:32:48 2008 +0900
description:
fix excessive /, only add views if necessary, lock db, typo

changeset:   469:911cfe0f3bd4
user:        Damien Elmes <hg@repose.cx>
date:        Mon Feb 04 16:56:15 2008 +0900
description:
move new deck path into separate routine

changeset:   468:7334806dfa95
user:        Damien Elmes <hg@repose.cx>
date:        Mon Feb 04 16:52:43 2008 +0900
description:
reimplement backup support, use mtime instead of diff

changeset:   467:6d8a803a1098
user:        Damien Elmes <hg@repose.cx>
date:        Mon Feb 04 15:20:52 2008 +0900
description:
index factId on cards table, add numeric attr in field model

changeset:   466:71d87d9ff488
user:        Damien Elmes <hg@repose.cx>
date:        Mon Feb 04 13:14:20 2008 +0900
description:
handle case where min or avg is None

changeset:   465:f57e4be7a78d
user:        Damien Elmes <hg@repose.cx>
date:        Mon Feb 04 11:30:21 2008 +0900
description:
add spaced card count

changeset:   464:4d2fcc3d168c
user:        Damien Elmes <hg@repose.cx>
date:        Mon Feb 04 11:26:50 2008 +0900
description:
fix typo

changeset:   463:22fe19136e06
user:        Damien Elmes <hg@repose.cx>
date:        Mon Feb 04 11:16:48 2008 +0900
description:
relative spacing

changeset:   462:7f6ec59d2dc7
user:        Damien Elmes <hg@repose.cx>
date:        Sun Feb 03 14:38:48 2008 +0900
description:
speed up model deletion

changeset:   461:ab7b909ccc67
user:        Damien Elmes <hg@repose.cx>
date:        Sun Feb 03 02:49:09 2008 +0900
description:
fix unit tests updating test files

changeset:   460:7199bba3220c
user:        Damien Elmes <hg@repose.cx>
date:        Sun Feb 03 02:35:10 2008 +0900
description:
fix invalid numbers in importing

changeset:   459:80e403561c46
user:        Damien Elmes <hg@repose.cx>
date:        Sun Feb 03 02:28:36 2008 +0900
description:
add all updated files

changeset:   458:e659844c57ab
user:        Damien Elmes <hg@repose.cx>
date:        Sun Feb 03 02:23:39 2008 +0900
description:
support field count greater than models when importing, fix bugs

changeset:   457:574c48bbdda3
user:        Damien Elmes <hg@repose.cx>
date:        Sun Feb 03 01:44:34 2008 +0900
description:
ensure we add empty fields too

changeset:   456:2c87169fe867
user:        Damien Elmes <hg@repose.cx>
date:        Sun Feb 03 00:53:59 2008 +0900
description:
anki10 import support

changeset:   455:89ff10c2dcc6
user:        Damien Elmes <hg@repose.cx>
date:        Sun Feb 03 00:17:19 2008 +0900
description:
change select order, add index to field model and value

changeset:   454:a2b67f3dbac9
user:        Damien Elmes <hg@repose.cx>
date:        Sun Feb 03 00:16:03 2008 +0900
description:
fix uniqueness check looking at other fields

changeset:   453:83bdeeb05b90
user:        Damien Elmes <hg@repose.cx>
date:        Sat Feb 02 22:47:48 2008 +0900
description:
csv/mnemosyne/anki03 importers working

changeset:   452:996c42126688
user:        Damien Elmes <hg@repose.cx>
date:        Fri Feb 01 20:01:28 2008 +0900
description:
fix graphs on empty, media dir, locked db, remove factorChange

changeset:   451:fd5d0dd0ecac
user:        Damien Elmes <hg@repose.cx>
date:        Fri Feb 01 15:55:06 2008 +0900
description:
more scheduling tweaks, fix q/a bug

changeset:   450:a7a162b15bfc
user:        Damien Elmes <hg@repose.cx>
date:        Fri Feb 01 14:50:13 2008 +0900
description:
change scheduling algo, fix sql bug

changeset:   449:9ba84487d601
user:        Damien Elmes <hg@repose.cx>
date:        Thu Jan 31 23:57:17 2008 +0900
description:
newcardplacement -> newcardorder

changeset:   448:156b41a3a1cb
user:        Damien Elmes <hg@repose.cx>
date:        Thu Jan 31 23:30:18 2008 +0900
description:
show kanji stats only for seen cards

changeset:   447:3277f9ea9574
user:        Damien Elmes <hg@repose.cx>
date:        Thu Jan 31 23:21:25 2008 +0900
description:
reorganise importing

changeset:   446:739a127bc72a
user:        Damien Elmes <hg@repose.cx>
date:        Thu Jan 31 23:21:12 2008 +0900
description:
only save if modified, and after saving ensure lastLoaded = modified

changeset:   445:ccf18729eb2f
user:        Damien Elmes <hg@repose.cx>
date:        Wed Jan 30 15:29:23 2008 +0900
description:
UnicodeText compat fix, fix broken statement()

changeset:   444:86628769a647
user:        Damien Elmes <hg@repose.cx>
date:        Wed Jan 30 14:59:20 2008 +0900
description:
add export tags support

changeset:   443:7156e0b1243b
user:        Damien Elmes <hg@repose.cx>
date:        Wed Jan 30 14:38:43 2008 +0900
description:
count facts in export, fix html formatting & kakasi bug

changeset:   442:6495344038d3
user:        Damien Elmes <hg@repose.cx>
date:        Wed Jan 30 03:29:04 2008 +0900
description:
fix stats reporting wrong remaining number

changeset:   441:407b7177336b
user:        Damien Elmes <hg@repose.cx>
date:        Wed Jan 30 02:04:06 2008 +0900
description:
finish bulk tag update routines

changeset:   440:d16f8c4205c0
user:        Damien Elmes <hg@repose.cx>
date:        Wed Jan 30 01:32:32 2008 +0900
description:
add bulk card/fact delete, start of tags, make rebuild optional

changeset:   439:c883b0fbf4bd
user:        Damien Elmes <hg@repose.cx>
date:        Tue Jan 29 01:53:54 2008 +0900
description:
cache question/answer in card, finish exporting (much faster)

changeset:   438:97c1168e0f8e
user:        Damien Elmes <hg@repose.cx>
date:        Mon Jan 28 23:49:47 2008 +0900
description:
fix sqlalchemy depreciation, implement card export

changeset:   437:3f060c6ae690
user:        Damien Elmes <hg@repose.cx>
date:        Mon Jan 28 19:50:07 2008 +0900
description:
export anki support

changeset:   436:021d5b32d76b
user:        Damien Elmes <hg@repose.cx>
date:        Mon Jan 28 03:05:02 2008 +0900
description:
fix oldcardcount/newcardcount, stats on new deck

changeset:   435:8bb62308395b
user:        Damien Elmes <hg@repose.cx>
date:        Mon Jan 28 02:38:47 2008 +0900
description:
fix required/unique on import, fix unit test other->basic

changeset:   434:708512162d38
user:        Damien Elmes <hg@repose.cx>
date:        Mon Jan 28 01:48:28 2008 +0900
description:
convert chinese pickle support to db

changeset:   433:3e2a7d96b470
user:        Damien Elmes <hg@repose.cx>
date:        Mon Jan 28 01:37:59 2008 +0900
description:
add tests, chinese (move to db)

changeset:   432:ff11bf6084f0
user:        Damien Elmes <hg@repose.cx>
date:        Mon Jan 28 01:37:29 2008 +0900
description:
cleanup cards.py

changeset:   431:3b12714f6ade
user:        Damien Elmes <hg@repose.cx>
date:        Mon Jan 28 01:08:43 2008 +0900
description:
remote sync implemented

changeset:   430:4a2f588ea119
user:        Damien Elmes <hg@repose.cx>
date:        Mon Jan 28 00:16:12 2008 +0900
description:
add alignment back

changeset:   429:00ce16b7bb8c
user:        Damien Elmes <hg@repose.cx>
date:        Sun Jan 27 23:03:13 2008 +0900
description:
fix latex

changeset:   428:6815007aa990
user:        Damien Elmes <hg@repose.cx>
date:        Sun Jan 27 20:55:54 2008 +0900
description:
be sure to flush deletion and update deck when deleting models

changeset:   427:02853198c573
user:        Damien Elmes <hg@repose.cx>
date:        Sat Jan 26 18:08:05 2008 +0900
description:
fix matplotlib error, remove references to fields on delete, fix unique bug

changeset:   426:2e8356b7b8ed
user:        Damien Elmes <hg@repose.cx>
date:        Fri Jan 25 20:10:28 2008 +0900
description:
revamp tag utils

changeset:   425:7ca343a58e65
user:        Damien Elmes <hg@repose.cx>
date:        Fri Jan 25 01:11:20 2008 +0900
description:
add missing sync cases, add/delete/ fieldmodels/cardmodels, enable lastSync

changeset:   424:472dde78f1d0
user:        Damien Elmes <hg@repose.cx>
date:        Tue Jan 22 23:52:05 2008 +0900
description:
facts implemented in pure sql

changeset:   423:8abe57b723bf
user:        Damien Elmes <hg@repose.cx>
date:        Tue Jan 22 23:30:23 2008 +0900
description:
convert card syncing to pure sql

changeset:   422:821cb86e23a3
user:        Damien Elmes <hg@repose.cx>
date:        Tue Jan 22 01:36:21 2008 +0900
description:
implemented card/fact syncing - see notes
- lastSync = 0 for now, needs more thinking
- cards/facts syncing very slow due to orm overhead, needs to be rewriten in
pure sql

changeset:   421:5bf940a20645
user:        Damien Elmes <hg@repose.cx>
date:        Mon Jan 21 15:22:24 2008 +0900
description:
half of syncing implemented, various changes to facts/etc for syncing
- only send ids changed later than lastSync
- bundle information into a payload to decrease latency
- factor latex into sourcecode (insecure in deck)
- implement history tracking
- uniquify field/model/cardmodel/fieldmodel ids

changeset:   420:b63ad96e01aa
user:        Damien Elmes <hg@repose.cx>
date:        Fri Jan 18 20:22:20 2008 +0900
description:
update czech translation, refactor

changeset:   419:57a17dddcb19
user:        Damien Elmes <hg@repose.cx>
date:        Thu Jan 17 21:45:41 2008 +0900
description:
after 3 days, add more delay at half speed

changeset:   418:a83d8d225dff
user:        Damien Elmes <hg@repose.cx>
date:        Thu Jan 17 01:33:32 2008 +0900
description:
we can skip the factId sort

changeset:   417:d9b57fbafc58
user:        Damien Elmes <hg@repose.cx>
date:        Thu Jan 17 01:19:32 2008 +0900
description:
ordinals, features, unicode
- store card model order in cards
- get the first available card in order, to ensure cards are shown in time
- do it in python, as it's about 3-4x faster than the equivalent sql
- decorators -> features
- add tests for features and stdmodels
- add unicode wrappers for various data that may not be unicode
- only add first card in a set in addCardToQueue()

changeset:   416:51b85f619590
user:        Damien Elmes <hg@repose.cx>
date:        Wed Jan 16 19:24:14 2008 +0900
description:
factor sql expressions into views, fix remaining stdmodels

changeset:   415:f702768fa05f
user:        Damien Elmes <hg@repose.cx>
date:        Tue Jan 15 01:24:25 2008 +0900
description:
fix graphs

changeset:   414:241fc522b9ba
user:        Damien Elmes <hg@repose.cx>
date:        Tue Jan 15 00:50:36 2008 +0900
description:
implement remaining stats, fix deck.created in import, add deck predicates

changeset:   413:52dffc6d4d41
user:        Damien Elmes <hg@repose.cx>
date:        Mon Jan 14 18:17:54 2008 +0900
description:
fix bug in distracted time calculation

changeset:   412:86d266baa213
user:        Damien Elmes <hg@repose.cx>
date:        Mon Jan 14 18:06:05 2008 +0900
description:
priority queue scheduling, implemented stats generation

changeset:   411:512e30710a77
user:        Damien Elmes <hg@repose.cx>
date:        Sun Jan 13 17:01:27 2008 +0900
description:
max new cards feature, refactor getCards()

changeset:   410:881ecf95a7e8
user:        Damien Elmes <hg@repose.cx>
date:        Thu Jan 10 11:39:45 2008 +0900
description:
track fact/card/deck modtime

changeset:   409:8b764de79c57
user:        Damien Elmes <hg@repose.cx>
date:        Thu Jan 10 10:48:36 2008 +0900
description:
deleting cards/facts

changeset:   408:7fb0cdb42a59
user:        Damien Elmes <hg@repose.cx>
date:        Thu Jan 10 09:06:26 2008 +0900
description:
work on scheduling

changeset:   407:95dce2fd08f3
user:        Damien Elmes <hg@repose.cx>
date:        Mon Jan 07 14:36:26 2008 +0900
description:
initial work on sql backend

changeset:   406:7a9bd84316df
user:        Damien Elmes <hg@repose.cx>
date:        Fri Jan 04 00:53:47 2008 +0900
description:
add hack for cardIsNew() and old clients

changeset:   405:8db50f3515d1
user:        Damien Elmes <hg@repose.cx>
date:        Thu Jan 03 23:08:10 2008 +0900
description:
remove ineffective auto priority update code

changeset:   404:01bac1c9867f
user:        Damien Elmes <hg@repose.cx>
date:        Thu Jan 03 22:10:42 2008 +0900
description:
store total separately

changeset:   403:ffbfd576c3f0
user:        Damien Elmes <hg@repose.cx>
date:        Thu Jan 03 05:03:54 2008 +0900
description:
bump version number

changeset:   402:b3432c758826
user:        Damien Elmes <hg@repose.cx>
date:        Thu Jan 03 05:02:10 2008 +0900
description:
don't dirty cards when changing priority

changeset:   401:8eb4d13a6ea8
user:        Damien Elmes <hg@repose.cx>
date:        Thu Jan 03 02:52:14 2008 +0900
description:
update priority in sched, but only if deck is assigned

changeset:   400:c03dee6ab5b9
user:        Damien Elmes <hg@repose.cx>
date:        Thu Jan 03 02:42:17 2008 +0900
description:
upgrade scheduler, and then deck

changeset:   399:a45146c88c67
user:        Damien Elmes <hg@repose.cx>
date:        Thu Jan 03 02:15:50 2008 +0900
description:
bump version number

changeset:   398:b11217f19d93
user:        Damien Elmes <hg@repose.cx>
date:        Wed Jan 02 21:42:08 2008 +0900
description:
add czech translation

changeset:   397:07c36434a501
user:        Damien Elmes <hg@repose.cx>
date:        Wed Jan 02 21:23:01 2008 +0900
description:
repose.cx -> ichi2.net

changeset:   396:d990980bd410
user:        Damien Elmes <hg@repose.cx>
date:        Mon Dec 31 18:56:50 2007 +0900
description:
change tag priority handling, double speed of getcards()

changeset:   395:7d4965319532
user:        Damien Elmes <hg@repose.cx>
date:        Fri Dec 28 07:20:29 2007 +0900
description:
report 8 hours not 10 minutes if necessary

changeset:   394:d92e3dda8637
user:        Damien Elmes <hg@repose.cx>
date:        Thu Dec 27 18:18:42 2007 +0900
description:
kill kakasi path on ppc

changeset:   393:51634574a50b
user:        Damien Elmes <hg@repose.cx>
date:        Thu Dec 27 18:16:50 2007 +0900
description:
look in a different location for unihan.pickle on mac

changeset:   392:cb165be012ad
user:        Damien Elmes <hg@repose.cx>
date:        Thu Dec 27 16:13:05 2007 +0900
description:
add new properties to sync

changeset:   391:5a36d3042797
user:        Damien Elmes <hg@repose.cx>
date:        Thu Dec 27 15:55:17 2007 +0900
description:
change delay2 to 8 hours, fix logic reversal

changeset:   390:68631c8e6da6
user:        Damien Elmes <hg@repose.cx>
date:        Thu Dec 27 15:44:44 2007 +0900
description:
if failed to create media dir (due to read only), return none

changeset:   389:79f13bd847c4
user:        Damien Elmes <hg@repose.cx>
date:        Thu Dec 27 15:32:15 2007 +0900
description:
configurable collapse time

changeset:   388:9f5514ca9f59
user:        Damien Elmes <hg@repose.cx>
date:        Thu Dec 27 15:27:52 2007 +0900
description:
add separate ease1 delay for mature cards

changeset:   387:8e6f9afbfb0b
user:        Damien Elmes <hg@repose.cx>
date:        Wed Dec 26 02:35:03 2007 +0900
description:
don't strip html from kakasi (allow multi-line furigana)

changeset:   386:08f6e556af4c
user:        Damien Elmes <hg@repose.cx>
date:        Tue Dec 25 23:45:04 2007 +0900
description:
update 'a short time' jp translation

changeset:   385:82181513047d
user:        Damien Elmes <hg@repose.cx>
date:        Tue Dec 25 22:56:02 2007 +0900
description:
update jp translations

changeset:   384:7e2552ceb812
user:        Damien Elmes <hg@repose.cx>
date:        Tue Dec 25 04:48:12 2007 +0900
description:
fix all the unit tests broken by the move to a single card 'other' model

changeset:   383:2fd4209bcbc2
user:        Damien Elmes <hg@repose.cx>
date:        Sat Dec 22 17:39:40 2007 +0900
description:
add 'tags' to list of available fields to display

changeset:   382:fc82511d9ba2
user:        Damien Elmes <hg@repose.cx>
date:        Sat Dec 22 05:37:28 2007 +0900
description:
fix pending# calculation for final drill

changeset:   381:74596ce9f43d
user:        Damien Elmes <hg@repose.cx>
date:        Sat Dec 22 05:22:11 2007 +0900
description:
change wording of ease 0/1 when in final drill

changeset:   380:801e3783cbe3
user:        Damien Elmes <hg@repose.cx>
date:        Sat Dec 22 05:12:36 2007 +0900
description:
add support for 'final review' instead of making people wait 10 minutes

changeset:   379:f621b76e0218
user:        Damien Elmes <hg@repose.cx>
date:        Sat Dec 22 03:59:46 2007 +0900
description:
make 'other' default to only front->back, remove unnecessary standard models

changeset:   378:ca51a4ed83fb
user:        Damien Elmes <hg@repose.cx>
date:        Sat Dec 22 02:47:00 2007 +0900
description:
simplify insertion order to random/append, don't sort new cards

changeset:   377:e4a6fd9dc58c
user:        Damien Elmes <hg@repose.cx>
date:        Sat Dec 22 02:18:20 2007 +0900
description:
remove redundant repositioning code

changeset:   376:6dc270145078
user:        Damien Elmes <hg@repose.cx>
date:        Sat Dec 22 02:05:15 2007 +0900
description:
update heisig link in stdmodels

changeset:   375:9bc6c376d88e
user:        Damien Elmes <hg@repose.cx>
date:        Sat Dec 22 01:34:36 2007 +0900
description:
send deleted cards in summary, fix syncing problems related to deletion

changeset:   374:ce502f16b31b
user:        Damien Elmes <hg@repose.cx>
date:        Fri Dec 21 23:02:39 2007 +0900
description:
don't touch original deck when exporting as .anki (fix export bug)

changeset:   373:8c7b78bf3ee1
user:        Damien Elmes <hg@repose.cx>
date:        Fri Dec 21 22:42:15 2007 +0900
description:
use 3.1 format for months, full path to custom json

changeset:   372:c29bf4d7ca02
user:        Damien Elmes <hg@repose.cx>
date:        Tue Nov 13 18:28:04 2007 +0900
description:
add support for 'medium priority'

changeset:   371:a4270575763a
user:        Damien Elmes <hg@repose.cx>
date:        Mon Nov 12 16:18:08 2007 +0900
description:
add latex support

changeset:   370:3824f1270bce
user:        Damien Elmes <hg@repose.cx>
date:        Mon Nov 12 14:37:25 2007 +0900
description:
report delay0/1 instead of subsequent interval in nextIntervalStr()

changeset:   369:5dea85b15a5d
user:        Damien Elmes <hg@repose.cx>
date:        Mon Nov 12 13:42:20 2007 +0900
description:
tweak deck stats definitions

changeset:   368:1cb413b81471
user:        Damien Elmes <hg@repose.cx>
date:        Mon Nov 12 13:35:40 2007 +0900
description:
fix font/color problem for elements with space, remove debug statement

changeset:   367:fe8943934270
user:        Damien Elmes <hg@repose.cx>
date:        Mon Nov 12 13:24:57 2007 +0900
description:
8-12hr hardInterval, support months, non day interval pairs

changeset:   366:39cdf33dcc6d
user:        Damien Elmes <hg@repose.cx>
date:        Mon Nov 12 12:00:33 2007 +0900
description:
set nextTime to lastTime in makeDue() to ensure same priority

changeset:   365:56aaf97fcfdb
user:        Damien Elmes <hg@repose.cx>
date:        Wed Oct 31 13:35:05 2007 +0900
description:
update french translations, fix some translation bugs

changeset:   364:0f0cea8f35e6
user:        Damien Elmes <hg@repose.cx>
date:        Sat Oct 20 03:18:19 2007 +0900
description:
use a relative delay instead of partitioning young/mature

changeset:   363:58fa58aa3c55
user:        Damien Elmes <hg@repose.cx>
date:        Sat Oct 20 01:09:25 2007 +0900
description:
experimental scheduling order

changeset:   362:4ca091d8de4a
user:        Damien Elmes <hg@repose.cx>
date:        Mon Sep 24 16:04:06 2007 +0900
description:
allow longs in json sync

changeset:   361:5088b5186091
user:        Damien Elmes <hg@repose.cx>
date:        Fri Sep 07 22:42:49 2007 +0900
description:
update translations, add more french work from laurent steffan

changeset:   360:221cfff61e91
user:        Damien Elmes <hg@repose.cx>
date:        Fri Sep 07 22:40:35 2007 +0900
description:
add tag indicating dupe field when importing

changeset:   359:01f4097dc1b5
user:        Damien Elmes <hg@repose.cx>
date:        Fri Sep 07 22:23:45 2007 +0900
description:
bump version number

changeset:   358:0aa83bdb1217
user:        Damien Elmes <hg@repose.cx>
date:        Fri Sep 07 21:46:19 2007 +0900
description:
update heisig deck's link to koohii

changeset:   357:047d3802f109
user:        Damien Elmes <hg@repose.cx>
date:        Fri Sep 07 21:45:05 2007 +0900
description:
make sure to give the deck an abspath when loading

changeset:   356:b050ae539dc7
user:        Damien Elmes <hg@repose.cx>
date:        Fri Sep 07 20:57:39 2007 +0900
description:
typo in importing, catch sound playing errors

changeset:   355:269d7357bacf
user:        Damien Elmes <hg@repose.cx>
date:        Thu Sep 06 05:08:07 2007 +0900
description:
add anki v.3 support

changeset:   354:7af926127391
user:        Damien Elmes <hg@repose.cx>
date:        Thu Sep 06 04:00:44 2007 +0900
description:
add final newline

changeset:   353:dd2165b06a36
user:        Damien Elmes <hg@repose.cx>
date:        Thu Sep 06 03:44:27 2007 +0900
description:
polish exporting

changeset:   352:42ee46f2b201
user:        Damien Elmes <hg@repose.cx>
date:        Thu Sep 06 00:56:52 2007 +0900
description:
catch socket errors in sync

changeset:   351:6b36b8d35f15
user:        Damien Elmes <hg@repose.cx>
date:        Thu Sep 06 00:09:46 2007 +0900
description:
write to a temp file when saving

changeset:   350:7e15eae29926
user:        Damien Elmes <hg@repose.cx>
date:        Wed Sep 05 23:51:57 2007 +0900
description:
don't have to worry about cross-device links as we're saving to the config dir

changeset:   349:66bc87cfe523
user:        Damien Elmes <hg@repose.cx>
date:        Wed Sep 05 23:42:22 2007 +0900
description:
don't rename, copy media files (as the old deck should remain valid)

changeset:   348:76522ca69016
user:        Damien Elmes <hg@repose.cx>
date:        Wed Sep 05 22:39:46 2007 +0900
description:
rename media dir on save

changeset:   347:b9b47b806cb6
user:        Damien Elmes <hg@repose.cx>
date:        Wed Sep 05 21:26:46 2007 +0900
description:
don't try and create media dir if no path set

changeset:   346:5e9125d08f32
user:        Damien Elmes <hg@repose.cx>
date:        Tue Aug 28 20:29:28 2007 +0900
description:
preliminary exporting support

changeset:   345:de191312e9bc
user:        Damien Elmes <hg@repose.cx>
date:        Tue Aug 28 03:34:03 2007 +0900
description:
ignore suspended cards when generating graphs

changeset:   344:77ae56436668
user:        Damien Elmes <hg@repose.cx>
date:        Mon Aug 27 13:05:52 2007 +0900
description:
import mnemosyne stats properly

changeset:   343:18164de78cde
user:        Damien Elmes <hg@repose.cx>
date:        Sat Aug 25 04:40:16 2007 +0900
description:
bump version

changeset:   342:402d229a13ba
user:        Damien Elmes <hg@repose.cx>
date:        Fri Aug 24 22:28:07 2007 +0900
description:
add data for 0 days too (fixes due graph and cumulative graph)

changeset:   341:fbd08aaf2a71
user:        Damien Elmes <hg@repose.cx>
date:        Fri Aug 24 22:23:06 2007 +0900
description:
pygame expects bytestrings for a path, not unicode

changeset:   340:d704cbd8188d
user:        Damien Elmes <hg@repose.cx>
date:        Thu Aug 23 22:55:10 2007 +0900
description:
bump version number

changeset:   339:90d50e5c7ee9
user:        Damien Elmes <hg@repose.cx>
date:        Thu Aug 23 22:52:47 2007 +0900
description:
create correct media dir if file is .fc too

changeset:   338:416c63dd91d5
user:        Damien Elmes <hg@repose.cx>
date:        Thu Aug 23 02:45:46 2007 +0900
description:
import mnemosyne categories, change sound tags

changeset:   337:75078a7bce21
user:        Damien Elmes <hg@repose.cx>
date:        Thu Aug 23 02:11:17 2007 +0900
description:
update translations, add dutch

changeset:   336:8df1e9b1970b
user:        Damien Elmes <hg@repose.cx>
date:        Thu Aug 23 00:07:52 2007 +0900
description:
add optional backup when loading

changeset:   335:63c0d62ebc7d
user:        Damien Elmes <hg@repose.cx>
date:        Thu Aug 23 00:01:43 2007 +0900
description:
open the files in binary when checking backups (stupid windows)

changeset:   334:af46ee8f7a7b
user:        Damien Elmes <hg@repose.cx>
date:        Wed Aug 22 23:41:15 2007 +0900
description:
fix typo

changeset:   333:0cd4dfa7bf5a
user:        Damien Elmes <hg@repose.cx>
date:        Wed Aug 22 23:40:39 2007 +0900
description:
add warning about pygame

changeset:   332:16adc1d6f27b
user:        Damien Elmes <hg@repose.cx>
date:        Wed Aug 22 23:40:24 2007 +0900
description:
don't play if not available

changeset:   331:f906b9a96b6b
user:        Damien Elmes <hg@repose.cx>
date:        Wed Aug 22 23:25:11 2007 +0900
description:
add sound support

changeset:   330:b225c9302681
user:        Damien Elmes <hg@repose.cx>
date:        Wed Aug 22 20:59:51 2007 +0900
description:
media support

changeset:   329:e02897454dcb
user:        Damien Elmes <hg@repose.cx>
date:        Wed Aug 22 18:19:49 2007 +0900
description:
only use production by default in english model

changeset:   328:1af88008a56f
user:        Damien Elmes <hg@repose.cx>
date:        Mon Aug 20 13:14:35 2007 +0900
description:
don't take max(3) if less than 3 days

changeset:   327:b7ee2b5485b3
user:        Damien Elmes <hg@repose.cx>
date:        Mon Aug 20 13:11:01 2007 +0900
description:
update scheduling estimate to reflect new delay handling

changeset:   326:171967dc58fe
user:        Damien Elmes <hg@repose.cx>
date:        Sat Aug 18 14:30:36 2007 +0900
description:
round days

changeset:   325:f8c1c42f6bcb
user:        Damien Elmes <hg@repose.cx>
date:        Sat Aug 18 01:20:39 2007 +0900
description:
use proper locale names instead of shorthand

changeset:   324:19cae311245a
user:        Damien Elmes <hg@repose.cx>
date:        Sat Aug 18 00:35:40 2007 +0900
description:
handle 0 day_s_ and plural forms for cards in initial state

changeset:   323:61ce0aceee04
user:        Damien Elmes <hg@repose.cx>
date:        Fri Aug 17 23:59:03 2007 +0900
description:
return unknown if no cards are pending

changeset:   322:1ba04daeb598
user:        Damien Elmes <hg@repose.cx>
date:        Fri Aug 17 23:49:20 2007 +0900
description:
remove filter, do it a different way

changeset:   321:d82c13cdd265
user:        Damien Elmes <hg@repose.cx>
date:        Fri Aug 17 22:57:35 2007 +0900
description:
add filter support for getcard

changeset:   320:927d8d784f24
user:        Damien Elmes <hg@repose.cx>
date:        Fri Aug 17 22:11:18 2007 +0900
description:
detect and remove unicode marker

changeset:   319:7c470a3ba224
user:        Damien Elmes <hg@repose.cx>
date:        Fri Aug 17 21:50:12 2007 +0900
description:
reset pending if counts go below 0

changeset:   318:6091e5a9f1a4
user:        Damien Elmes <hg@repose.cx>
date:        Fri Aug 17 20:30:02 2007 +0900
description:
allow up to 3 days delay before halving

changeset:   317:ace3a6db338b
user:        Damien Elmes <hg@repose.cx>
date:        Fri Aug 17 20:28:57 2007 +0900
description:
halve delay boost for cards in initial state

changeset:   316:68ea6eff400d
user:        Damien Elmes <hg@repose.cx>
date:        Fri Aug 17 20:27:44 2007 +0900
description:
ease 2 levels down one, adjust factors as well

changeset:   315:1f45fdda5488
user:        Damien Elmes <hg@repose.cx>
date:        Thu Aug 16 03:37:25 2007 +0900
description:
fix stats

changeset:   314:a39af7438d8f
user:        Damien Elmes <hg@repose.cx>
date:        Wed Aug 15 03:22:01 2007 +0900
description:
fix win32 path

changeset:   313:786ba09d0c14
user:        Damien Elmes <hg@repose.cx>
date:        Wed Aug 15 02:41:51 2007 +0900
description:
put kakasi search in support/japanese

changeset:   312:9d0b3ea8bb88
user:        Damien Elmes <hg@repose.cx>
date:        Wed Aug 15 00:06:26 2007 +0900
description:
spanish translations change

changeset:   311:41552532fa85
user:        Damien Elmes <hg@repose.cx>
date:        Tue Aug 14 23:22:20 2007 +0900
description:
tweak a buggy fuzzy match

changeset:   310:4df5234d6b07
user:        Damien Elmes <hg@repose.cx>
date:        Tue Aug 14 23:18:11 2007 +0900
description:
add spanish support

changeset:   309:322c11a7fdba
user:        Damien Elmes <hg@repose.cx>
date:        Tue Aug 14 23:16:24 2007 +0900
description:
add spanish translation

changeset:   308:0062da597de7
user:        Damien Elmes <hg@repose.cx>
date:        Tue Aug 14 23:11:48 2007 +0900
description:
compare using only id, not modified, cope with missing card links on del

changeset:   307:34507c39cef3
user:        Damien Elmes <hg@repose.cx>
date:        Tue Aug 14 04:46:55 2007 +0900
description:
add de translation

changeset:   306:e23f6671b396
user:        Damien Elmes <hg@repose.cx>
date:        Tue Aug 14 00:24:16 2007 +0900
description:
add french translation

changeset:   305:b5e16bf218d1
user:        Damien Elmes <hg@repose.cx>
date:        Mon Aug 13 19:34:00 2007 +0900
description:
accept multiple tags when adding/removing

changeset:   304:c302b44ea197
user:        Damien Elmes <hg@repose.cx>
date:        Mon Aug 13 10:52:29 2007 +0900
description:
bundle locale files in egg

changeset:   303:68e18840d5ee
user:        Damien Elmes <hg@repose.cx>
date:        Mon Aug 13 07:24:39 2007 +0900
description:
fix plural handling, more translation updates

changeset:   302:dfd61a2a3b2d
user:        Damien Elmes <hg@repose.cx>
date:        Mon Aug 13 06:17:40 2007 +0900
description:
give libanki the same version number, so that they can be matched together

changeset:   301:17a1c50cffce
user:        Damien Elmes <hg@repose.cx>
date:        Mon Aug 13 05:29:42 2007 +0900
description:
move json2 into correct place, update setup.py

changeset:   300:3ccbd5ecf622
user:        Damien Elmes <hg@repose.cx>
date:        Sun Aug 12 22:37:04 2007 +0900
description:
locale tweaks

changeset:   299:1d5b59c76a7d
user:        Damien Elmes <hg@repose.cx>
date:        Sun Aug 12 05:40:27 2007 +0900
description:
strip html in chinese, too

changeset:   298:29f277a46175
user:        Damien Elmes <hg@repose.cx>
date:        Sun Aug 12 05:39:21 2007 +0900
description:
strip html in kakasi

changeset:   297:ad410a6a03f6
user:        Damien Elmes <hg@repose.cx>
date:        Sun Aug 12 03:50:17 2007 +0900
description:
don't escape html when rendering card model, since we do that on add

changeset:   296:58ac3c478d57
user:        Damien Elmes <hg@repose.cx>
date:        Sun Aug 12 01:28:14 2007 +0900
description:
backup on load, too

changeset:   295:1db906069868
user:        Damien Elmes <hg@repose.cx>
date:        Sat Aug 11 02:38:23 2007 +0900
description:
quote fonts

changeset:   294:b58970d35289
user:        Damien Elmes <hg@repose.cx>
date:        Fri Aug 10 21:25:26 2007 +0900
description:
look for locale in alternate location (fixes win32 build)

changeset:   293:1a089a863627
user:        Damien Elmes <hg@repose.cx>
date:        Fri Aug 10 20:22:45 2007 +0900
description:
add/del tag, resetcard/makedue, updatehistory changes

changeset:   292:36e1ab8c001b
user:        Damien Elmes <hg@repose.cx>
date:        Fri Aug 10 19:12:50 2007 +0900
description:
earliestTime shouldn't include suspended cards, add spaced check

changeset:   291:084e94fc9fe7
user:        Damien Elmes <hg@repose.cx>
date:        Fri Aug 10 16:41:02 2007 +0900
description:
update the pending number every 10 cards at worst

changeset:   290:44af96eafc88
user:        Damien Elmes <hg@repose.cx>
date:        Fri Aug 10 16:32:26 2007 +0900
description:
don't kill empty fields in import

changeset:   289:0dc9bc7771b2
user:        Damien Elmes <hg@repose.cx>
date:        Fri Aug 10 14:14:57 2007 +0900
description:
fix multiple inheritence bug & comparison of facts

changeset:   288:0361a855ee17
user:        Damien Elmes <hg@repose.cx>
date:        Fri Aug 10 12:03:34 2007 +0900
description:
don't delete facts either

changeset:   287:7be29f8c82d0
user:        Damien Elmes <hg@repose.cx>
date:        Fri Aug 10 11:49:58 2007 +0900
description:
facts -> deck.facts

changeset:   286:83b765a5c338
user:        Damien Elmes <hg@repose.cx>
date:        Fri Aug 10 11:47:14 2007 +0900
description:
when removing a model, don't delete cards/facts - that will be done later

changeset:   285:e36c86704289
user:        Damien Elmes <hg@repose.cx>
date:        Fri Aug 10 00:16:26 2007 +0900
description:
fix translation switching, add a few translations

changeset:   284:a4b5c5064681
user:        Damien Elmes <hg@repose.cx>
date:        Thu Aug 09 04:22:09 2007 +0900
description:
new sync url

changeset:   283:9ef404d1b071
user:        Damien Elmes <hg@repose.cx>
date:        Thu Aug 09 03:26:44 2007 +0900
description:
change max # of backups to 15

changeset:   282:e24075724d1c
user:        Damien Elmes <hg@repose.cx>
date:        Thu Aug 09 03:10:20 2007 +0900
description:
library version -> 0.3

changeset:   281:d03d0b1101f9
user:        Damien Elmes <hg@repose.cx>
date:        Thu Aug 09 03:06:36 2007 +0900
description:
don't make the 'meaning' part unique if it's a one-way deck

changeset:   280:db6dcf2afaf7
user:        Damien Elmes <hg@repose.cx>
date:        Wed Aug 08 19:50:43 2007 +0900
description:
sched stats: mark failed cards in the old category, not the new

changeset:   279:f7fc7372bae4
user:        Damien Elmes <hg@repose.cx>
date:        Wed Aug 08 19:46:03 2007 +0900
description:
if autosingle, rebuild list with enforced order in importing; ratio=1.7

changeset:   278:cf0e7ad95610
user:        Damien Elmes <hg@repose.cx>
date:        Tue Aug 07 11:05:48 2007 +0900
description:
intern strings when decoding from json

changeset:   277:83f202d5edce
user:        Damien Elmes <hg@repose.cx>
date:        Tue Aug 07 09:39:26 2007 +0900
description:
stop deck from doubling size on sync (don't coerce keys to unicode)

changeset:   276:a3c49e99b509
user:        Damien Elmes <hg@repose.cx>
date:        Mon Aug 06 16:53:57 2007 +0900
description:
if cards < 2, don't change order

changeset:   275:329b0ae99d1d
user:        Damien Elmes <hg@repose.cx>
date:        Mon Aug 06 07:34:04 2007 +0900
description:
only show pending cards (non spaced-waiting), and 1.1 = plural

changeset:   274:93a3a9f71ccc
user:        Damien Elmes <hg@repose.cx>
date:        Sun Aug 05 03:01:27 2007 +0900
description:
uniquify fields list

changeset:   273:8e87ff0b222e
user:        Damien Elmes <hg@repose.cx>
date:        Sun Aug 05 02:40:26 2007 +0900
description:
don't attempt grouping on a single card model, allFields, fmtTimeSpan

changeset:   272:98827f17ded6
user:        Damien Elmes <hg@repose.cx>
date:        Sat Aug 04 20:51:37 2007 +0900
description:
if no japanese text (and no english text), default to english

changeset:   271:e733e0603bef
user:        Damien Elmes <hg@repose.cx>
date:        Sat Aug 04 15:08:13 2007 +0900
description:
include time info in getstats, refactor fmttimediff, allow points

changeset:   270:9ffaff6ed530
user:        Damien Elmes <hg@repose.cx>
date:        Sat Aug 04 04:01:17 2007 +0900
description:
handle py2exe when looking for unihan

changeset:   269:0d065b819bf7
user:        Damien Elmes <hg@repose.cx>
date:        Sat Aug 04 03:31:32 2007 +0900
description:
convert japanese font names in linux too

changeset:   268:0068328bbc98
parent:      266:1da58c791cbd
parent:      267:b32498ba63ef
user:        Damien Elmes <hg@repose.cx>
date:        Sat Aug 04 03:17:10 2007 +0900
description:
merge with other computer

changeset:   267:b32498ba63ef
parent:      265:241131ae4230
user:        Damien Elmes <hg@repose.cx>
date:        Sat Aug 04 02:06:41 2007 +0900
description:
pass family verbatim if no platform names found

changeset:   266:1da58c791cbd
user:        Damien Elmes <hg@repose.cx>
date:        Sat Aug 04 03:14:54 2007 +0900
description:
support mandarin and cantonese

changeset:   265:241131ae4230
user:        Damien Elmes <hg@repose.cx>
date:        Sat Aug 04 01:52:25 2007 +0900
description:
make standard models use canonical names

changeset:   264:def6e4393656
user:        Damien Elmes <hg@repose.cx>
date:        Sat Aug 04 01:45:03 2007 +0900
description:
integrate font canonicalization with css generation, support html

changeset:   263:f01502ee1c8b
user:        Damien Elmes <hg@repose.cx>
date:        Sat Aug 04 01:18:48 2007 +0900
description:
generate substitution list

changeset:   262:5fae82f760fe
user:        Damien Elmes <hg@repose.cx>
date:        Sat Aug 04 01:09:35 2007 +0900
description:
add font canonicalization

changeset:   261:4fdf114d761a
user:        Damien Elmes <hg@repose.cx>
date:        Sat Aug 04 00:09:51 2007 +0900
description:
change kanji/hiragana/misc split method. should be a lot more accurate

changeset:   260:72186e2a05a2
user:        Damien Elmes <hg@repose.cx>
date:        Fri Aug 03 23:44:29 2007 +0900
description:
change japanese text detection algo

changeset:   259:2bafcdd7d327
user:        Damien Elmes <hg@repose.cx>
date:        Fri Aug 03 23:33:26 2007 +0900
description:
importing: guess single/multiple, behave more predictably regarding new cards

changeset:   258:432edd7fe290
user:        Damien Elmes <hg@repose.cx>
date:        Thu Aug 02 04:48:29 2007 +0900
description:
update sample decks for new format

changeset:   257:9976607ee619
user:        Damien Elmes <hg@repose.cx>
date:        Thu Aug 02 04:03:00 2007 +0900
description:
fix a number of syncing bugs, use ids not names

changeset:   256:cdb1656069bc
user:        Damien Elmes <hg@repose.cx>
date:        Wed Aug 01 23:31:15 2007 +0900
description:
refactor into idobj/list, fix syncing on win32

changeset:   255:601175f26251
user:        Damien Elmes <hg@repose.cx>
date:        Wed Aug 01 17:29:43 2007 +0900
description:
fix some unit tests

changeset:   254:5c70723b63f2
user:        Damien Elmes <hg@repose.cx>
date:        Wed Aug 01 12:29:42 2007 +0900
description:
enforce unicode in save/load, update sync url

changeset:   253:f71181fbd8b3
user:        Damien Elmes <hg@repose.cx>
date:        Wed Aug 01 11:12:32 2007 +0900
description:
preserve fact lastTags when importing

changeset:   252:09555fed796e
user:        Damien Elmes <hg@repose.cx>
date:        Wed Aug 01 11:02:34 2007 +0900
description:
include _ in cardmodels, fix reference to activatedCards in importing

changeset:   251:e5b854ea295d
user:        Damien Elmes <hg@repose.cx>
date:        Wed Aug 01 10:40:43 2007 +0900
description:
update sample decks for new format, remove some debugging code

changeset:   250:4547a364e78b
user:        Damien Elmes <hg@repose.cx>
date:        Wed Aug 01 08:50:34 2007 +0900
description:
factor models into separate class, track deletions, fix syncing

changeset:   249:89be41543132
user:        Damien Elmes <hg@repose.cx>
date:        Wed Aug 01 08:27:54 2007 +0900
description:
decode user dir using file system encoding first

changeset:   248:631f045a10f2
user:        Damien Elmes <hg@repose.cx>
date:        Tue Jul 31 06:57:48 2007 +0900
description:
don't update stats until after the card is scheduled (fixes new cards bug)

changeset:   247:00fb7c13502b
user:        Damien Elmes <hg@repose.cx>
date:        Tue Jul 31 05:31:07 2007 +0900
description:
set files r/w before trying to remove them, update model syncnames

changeset:   246:b0f4fb55e2d6
user:        Damien Elmes <hg@repose.cx>
date:        Tue Jul 31 05:17:31 2007 +0900
description:
add jlpt sample decks again

changeset:   245:3833b58982af
user:        Damien Elmes <hg@repose.cx>
date:        Tue Jul 31 04:25:40 2007 +0900
description:
don't validate incoming facts when syncing

changeset:   244:50688fef7f05
user:        Damien Elmes <hg@repose.cx>
date:        Tue Jul 31 04:17:19 2007 +0900
description:
bug in compat changes, change sync url

changeset:   243:e6b894b2bd82
user:        Damien Elmes <hg@repose.cx>
date:        Tue Jul 31 03:41:36 2007 +0900
description:
more compat code

changeset:   242:154711f215d8
parent:      240:91c12216c2df
parent:      241:2ac34639bc08
user:        Damien Elmes <hg@repose.cx>
date:        Tue Jul 31 02:22:21 2007 +0900
description:
merge

changeset:   241:2ac34639bc08
parent:      234:29ea58becfde
user:        Damien Elmes <hg@repose.cx>
date:        Mon Jul 30 23:58:25 2007 +0900
description:
encode the backup dir as unicode

changeset:   240:91c12216c2df
user:        Damien Elmes <hg@repose.cx>
date:        Tue Jul 31 02:19:28 2007 +0900
description:
make the old deck error a little nicer

changeset:   239:2d6fa28f3080
user:        Damien Elmes <hg@repose.cx>
date:        Tue Jul 31 02:10:04 2007 +0900
description:
update sample decks

changeset:   238:8786582a13f9
user:        Damien Elmes <hg@repose.cx>
date:        Tue Jul 31 02:04:53 2007 +0900
description:
keep track of the last fact tags used when adding

changeset:   237:498d00566d67
user:        Damien Elmes <hg@repose.cx>
date:        Tue Jul 31 01:51:24 2007 +0900
description:
don't use disabled card models when importing

changeset:   236:0e5c2236a41e
user:        Damien Elmes <hg@repose.cx>
date:        Tue Jul 31 01:30:47 2007 +0900
description:
set the model to none if no models are available

changeset:   235:c1b9f468a183
user:        Damien Elmes <hg@repose.cx>
date:        Tue Jul 31 00:53:55 2007 +0900
description:
fix a bug in syncing models

changeset:   234:29ea58becfde
user:        Damien Elmes <hg@repose.cx>
date:        Mon Jul 30 23:20:02 2007 +0900
description:
fix syncing of cardmodels, sync facts metadata too

changeset:   233:04084a0a7dea
user:        Damien Elmes <hg@repose.cx>
date:        Sun Jul 29 15:12:33 2007 +0900
description:
update some translations

changeset:   232:99c78b9f034b
user:        Damien Elmes <hg@repose.cx>
date:        Sun Jul 29 14:42:03 2007 +0900
description:
give cardmodels and fields an id

changeset:   231:97dbc780c65a
user:        Damien Elmes <hg@repose.cx>
date:        Sat Jul 28 16:09:53 2007 +0900
description:
correctly (don't) escape closing tags

changeset:   230:ea63caae51fa
user:        Damien Elmes <hg@repose.cx>
date:        Sat Jul 28 02:01:20 2007 +0900
description:
capitalize samples

changeset:   229:55042d8edd2f
user:        Damien Elmes <hg@repose.cx>
date:        Sat Jul 28 00:55:21 2007 +0900
description:
sync: diffs, don't update local time, conditional update, no syncName/name

changeset:   228:35c866e7b50a
user:        Damien Elmes <hg@repose.cx>
date:        Fri Jul 27 21:18:36 2007 +0900
description:
remove name properties from sample decks

changeset:   227:acb500e68435
user:        Damien Elmes <hg@repose.cx>
date:        Fri Jul 27 21:14:29 2007 +0900
description:
remove reduntant 'name' field in deck, use filename instead

changeset:   226:8b7c9e3a613a
user:        Damien Elmes <hg@repose.cx>
date:        Fri Jul 27 19:21:20 2007 +0900
description:
add required fields to card model for later

changeset:   225:2aa9dbb1c461
user:        Damien Elmes <hg@repose.cx>
date:        Fri Jul 27 04:23:02 2007 +0900
description:
remove min 1 day restriction

changeset:   224:3e63913f3705
user:        Damien Elmes <hg@repose.cx>
date:        Fri Jul 27 03:01:46 2007 +0900
description:
only escape on html

changeset:   223:8725632baf35
user:        Damien Elmes <hg@repose.cx>
date:        Thu Jul 26 05:37:11 2007 +0900
description:
don't assume globalstats exists, handle refs to anki.Deck

changeset:   222:56e52010a122
user:        Damien Elmes <hg@repose.cx>
date:        Thu Jul 26 04:58:41 2007 +0900
description:
network sync working

changeset:   221:7a15ae305f8c
user:        Damien Elmes <hg@repose.cx>
date:        Wed Jul 25 23:24:12 2007 +0900
description:
update sample decks

changeset:   220:bd1d20410180
user:        Damien Elmes <hg@repose.cx>
date:        Wed Jul 25 22:36:40 2007 +0900
description:
use field tags for defining which fields kakasi should operate on

changeset:   219:be500ace46a0
user:        Damien Elmes <hg@repose.cx>
date:        Wed Jul 25 12:11:36 2007 +0900
description:
remove debugging

changeset:   218:affe383805d0
user:        Damien Elmes <hg@repose.cx>
date:        Wed Jul 25 11:40:21 2007 +0900
description:
nextTime takes max of card/spacing, detect order of card when missing hiragana

changeset:   217:362f694db9e9
user:        Damien Elmes <hg@repose.cx>
date:        Tue Jul 24 04:05:27 2007 +0900
description:
remove debugging code

changeset:   216:bd28eddee8c2
user:        Damien Elmes <hg@repose.cx>
date:        Tue Jul 24 04:02:02 2007 +0900
description:
hackish escaping of html

changeset:   215:a9a0b47a43a6
user:        Damien Elmes <hg@repose.cx>
date:        Tue Jul 24 01:49:13 2007 +0900
description:
fix bug in deleting fact on last card, guess en/ja when importing

changeset:   214:54f2319774ed
user:        Damien Elmes <hg@repose.cx>
date:        Tue Jul 24 00:18:12 2007 +0900
description:
simple->other in model names

changeset:   213:5639e36cef42
user:        Damien Elmes <hg@repose.cx>
date:        Mon Jul 23 23:43:05 2007 +0900
description:
don't uniqify when importing, since that's o(n2). just tag

changeset:   212:d8db8a7b090e
user:        Damien Elmes <hg@repose.cx>
date:        Mon Jul 23 23:35:18 2007 +0900
description:
record delay in lastInterval, don't let missing fields prevent import

changeset:   211:29aa042a9f74
user:        Damien Elmes <hg@repose.cx>
date:        Mon Jul 23 23:22:51 2007 +0900
description:
plural only on 1, not 0

changeset:   210:2f1471b58112
user:        Damien Elmes <hg@repose.cx>
date:        Mon Jul 23 23:16:26 2007 +0900
description:
convert \n to <br> on print html, check pending when 0

changeset:   209:20e66e556ce3
user:        Damien Elmes <hg@repose.cx>
date:        Mon Jul 23 11:50:00 2007 +0900
description:
make sure to update card models & unique/required when renaming a field

changeset:   208:6af8399334d3
user:        Damien Elmes <hg@repose.cx>
date:        Mon Jul 23 11:08:54 2007 +0900
description:
catch incomplete model formats

changeset:   207:c85b59f20e33
user:        Damien Elmes <hg@repose.cx>
date:        Mon Jul 23 01:12:06 2007 +0900
description:
remove : from backup paths because windows is stupid

changeset:   206:34e76d7a05b8
user:        Damien Elmes <hg@repose.cx>
date:        Mon Jul 23 00:28:37 2007 +0900
description:
more backup fixes

changeset:   205:d4b87b277f42
user:        Damien Elmes <hg@repose.cx>
date:        Mon Jul 23 00:22:17 2007 +0900
description:
bug in text field generation

changeset:   204:cd0384f4b113
user:        Damien Elmes <hg@repose.cx>
date:        Mon Jul 23 00:19:10 2007 +0900
description:
backup bugs

changeset:   203:749677a48442
user:        Damien Elmes <hg@repose.cx>
date:        Mon Jul 23 00:11:48 2007 +0900
description:
make heisig number required

changeset:   202:f63a0722efcf
user:        Damien Elmes <hg@repose.cx>
date:        Sun Jul 22 23:47:07 2007 +0900
description:
move samples to .anki format

changeset:   201:4d75012163d9
user:        Damien Elmes <hg@repose.cx>
date:        Sun Jul 22 23:29:43 2007 +0900
description:
disable emacs support for now

changeset:   200:5dc9ef2699bd
user:        Damien Elmes <hg@repose.cx>
date:        Sun Jul 22 21:20:22 2007 +0900
description:
add russian example

changeset:   199:86220210b75a
user:        Damien Elmes <hg@repose.cx>
date:        Sun Jul 22 20:49:45 2007 +0900
description:
add heisig sample deck

changeset:   198:c7745f756869
user:        Damien Elmes <hg@repose.cx>
date:        Sun Jul 22 20:46:20 2007 +0900
description:
add heisig sample deck

changeset:   197:d8a6fe897168
user:        Damien Elmes <hg@repose.cx>
date:        Sun Jul 22 20:13:47 2007 +0900
description:
repositioning support, text question formats, add edit/last card for later

changeset:   196:c82e5eaf7446
user:        Damien Elmes <hg@repose.cx>
date:        Sun Jul 22 03:35:07 2007 +0900
description:
misc tweaks&bugfixes: heisig, pending, qformat

changeset:   195:1125c447b2d1
user:        Damien Elmes <hg@repose.cx>
date:        Sun Jul 22 02:02:31 2007 +0900
description:
multi-way model syncing, use local ids for server, not server's

changeset:   194:3101e6529378
user:        Damien Elmes <hg@repose.cx>
date:        Sun Jul 22 00:38:22 2007 +0900
description:
finish card/fact syncing

changeset:   193:cc04ec32fffc
user:        Damien Elmes <hg@repose.cx>
date:        Sat Jul 21 21:52:35 2007 +0900
description:
syncing models implemented, bug in setModified, bug in sched(class variables)

changeset:   192:e29f1efd37b7
user:        Damien Elmes <hg@repose.cx>
date:        Sat Jul 21 02:55:29 2007 +0900
description:
postponed->suspended

changeset:   191:ac0ef2b43ac1
user:        Damien Elmes <hg@repose.cx>
date:        Sat Jul 21 01:20:20 2007 +0900
description:
postponing, case insensitive tags, field uniqueness fix

changeset:   190:96aa1b8b9ac7
user:        Damien Elmes <hg@repose.cx>
date:        Fri Jul 20 21:20:36 2007 +0900
description:
add priorities in sched, refactor scheduling, tags, fix html bug

changeset:   189:cf9a933c6449
user:        Damien Elmes <hg@repose.cx>
date:        Fri Jul 20 13:58:19 2007 +0900
description:
card models prevent the same fact from being seen in succession, fix stats

changeset:   188:e3010a8da9be
user:        Damien Elmes <hg@repose.cx>
date:        Fri Jul 20 12:49:59 2007 +0900
description:
add priority definitions, support left/right alignment

changeset:   187:9fe0ef29addd
user:        Damien Elmes <hg@repose.cx>
date:        Thu Jul 19 04:07:42 2007 +0900
description:
start work on syncing, remove some obsolete files, ensure identical modtime

changeset:   186:d89c9c919ccb
user:        Damien Elmes <hg@repose.cx>
date:        Thu Jul 19 00:28:55 2007 +0900
description:
new, more robust saving/backup code

changeset:   185:8862d5c849ed
user:        Damien Elmes <hg@repose.cx>
date:        Wed Jul 18 23:12:38 2007 +0900
description:
improve modification handling, more refactoring

changeset:   184:f1244e6be152
user:        Damien Elmes <hg@repose.cx>
date:        Wed Jul 18 19:14:28 2007 +0900
description:
refactor: fields in fact as dict, modified notify parent, more models

changeset:   183:9c6cca3a4fd2
user:        Damien Elmes <hg@repose.cx>
date:        Tue Jul 17 18:36:27 2007 +0900
description:
another attempt at an old fc bug

changeset:   182:e746c76030dc
user:        Damien Elmes <hg@repose.cx>
date:        Tue Jul 17 00:04:23 2007 +0900
description:
set mac font, catch hiragana = () on import

changeset:   181:1d6ebb352b9c
user:        Damien Elmes <hg@repose.cx>
date:        Sun Jul 15 04:41:26 2007 +0900
description:
default to platform specific font

changeset:   180:81c65df62634
user:        Damien Elmes <hg@repose.cx>
date:        Sun Jul 15 04:03:43 2007 +0900
description:
allow card models to define the question in the answer

changeset:   179:21fe78af3d93
user:        Damien Elmes <hg@repose.cx>
date:        Sun Jul 15 03:33:27 2007 +0900
description:
refactor getStats(), update card stats report

changeset:   178:4c1637edc64b
user:        Damien Elmes <hg@repose.cx>
date:        Sun Jul 15 02:55:29 2007 +0900
description:
record history when answering cards

changeset:   177:655a417fda8d
user:        Damien Elmes <hg@repose.cx>
date:        Sun Jul 15 02:25:55 2007 +0900
description:
update stats: track per day, and per card

changeset:   176:0353df9f0e24
user:        Damien Elmes <hg@repose.cx>
date:        Sat Jul 14 15:55:44 2007 +0900
description:
make show all readings when something's ambiguous

changeset:   175:04e88ddf54fe
user:        Damien Elmes <hg@repose.cx>
date:        Sat Jul 14 14:03:02 2007 +0900
description:
fix bug in sched refactor, bug in kanji check if there's a newline

changeset:   174:9db4df9713eb
user:        Damien Elmes <hg@repose.cx>
date:        Sat Jul 14 13:38:38 2007 +0900
description:
remove todo, the bug tracker covers it better

changeset:   173:e0c55744c437
user:        Damien Elmes <hg@repose.cx>
date:        Sat Jul 14 13:35:11 2007 +0900
description:
revert to gpl 2+, as we're waiting on qt

changeset:   172:a468511a39dc
user:        Damien Elmes <hg@repose.cx>
date:        Sat Jul 14 13:31:39 2007 +0900
description:
shuffle around some code in sched, remove the scheduling exception class

changeset:   171:5153f1f1952c
user:        Damien Elmes <hg@repose.cx>
date:        Fri Jul 13 17:15:23 2007 +0900
description:
unify fact errors, refactor validation

changeset:   170:8540466d93bc
user:        Damien Elmes <hg@repose.cx>
date:        Thu Jul 12 03:10:13 2007 +0900
description:
add routine to fetch all tags in use, change ensureUnique, add isInvalid

changeset:   169:162c126fdd69
user:        Damien Elmes <hg@repose.cx>
date:        Wed Jul 11 22:20:59 2007 +0900
description:
remove facts when all associated cards have been deleted

changeset:   168:04b71b867c20
user:        Damien Elmes <hg@repose.cx>
date:        Wed Jul 11 11:52:59 2007 +0900
description:
"" shouldn't match non-existent fields

changeset:   167:eec8f66543b8
user:        Damien Elmes <hg@repose.cx>
date:        Wed Jul 11 11:41:50 2007 +0900
description:
properly report empty fields even in html mode

changeset:   166:0ab5d3bfb46f
user:        Damien Elmes <hg@repose.cx>
date:        Wed Jul 11 11:31:11 2007 +0900
description:
don't add identical reading even if there's a newline in expression

changeset:   165:1ee5e5f42480
user:        Damien Elmes <hg@repose.cx>
date:        Tue Jul 10 23:24:46 2007 +0900
description:
fix kakasi bug, integrate properly, make both front and back unique in simple

changeset:   164:7c216a5290b6
user:        Damien Elmes <hg@repose.cx>
date:        Tue Jul 10 16:40:10 2007 +0900
description:
default to arial/20 for card editing

changeset:   163:aa3135d44e87
user:        Damien Elmes <hg@repose.cx>
date:        Mon Jul 09 23:16:27 2007 +0900
description:
fix a bug in importing code if a unique field is not mapped

changeset:   162:8172d937f3b0
user:        Damien Elmes <hg@repose.cx>
date:        Sat Jul 07 17:27:40 2007 +0900
description:
html+text q/a, uppercase some tags, update colours in models, use css, add .ru

changeset:   161:4720d8b2e383
user:        Damien Elmes <hg@repose.cx>
date:        Thu Jul 05 02:08:15 2007 +0900
description:
fix two graph bugs, change importing list, tests

changeset:   160:fb410454176e
user:        Damien Elmes <hg@repose.cx>
date:        Thu Jul 05 00:07:16 2007 +0900
description:
use html to separate fields by default

changeset:   159:d3ec18287695
user:        Damien Elmes <hg@repose.cx>
date:        Mon Jul 02 19:17:11 2007 +0900
description:
fix kakasi bug, update stats/graphs, work on decorators, add deck properties, more

changeset:   158:d39f70c24eda
user:        Damien Elmes <hg@repose.cx>
date:        Sun Jul 01 05:56:58 2007 +0900
description:
start work on decorators, tidy up models

changeset:   157:7cbfe8deb03d
user:        Damien Elmes <hg@repose.cx>
date:        Sun Jul 01 04:33:51 2007 +0900
description:
ensure a current model on deletion, fix bug, make delays customizable

changeset:   156:d214d7568bda
user:        Damien Elmes <hg@repose.cx>
date:        Sun Jul 01 02:41:18 2007 +0900
description:
routines to fetch models/fields by name, improve importing, more

changeset:   155:541a83f4408d
user:        Damien Elmes <hg@repose.cx>
date:        Sat Jun 30 06:03:26 2007 +0900
description:
add support for importing old fc .pending files, fix text import

changeset:   154:35177c144190
user:        Damien Elmes <hg@repose.cx>
date:        Sat Jun 30 05:18:17 2007 +0900
description:
move to gpl3, update headers and COPYING

changeset:   153:57ee89add903
user:        Damien Elmes <hg@repose.cx>
date:        Sat Jun 30 05:13:35 2007 +0900
description:
mostly finished importing

changeset:   152:2271bf6557de
user:        Damien Elmes <hg@repose.cx>
date:        Thu Jun 28 04:43:29 2007 +0900
description:
model & importing changes
- models now just use a single class
- cards can be disabled and enabled using cards[] from allcards[]
- improve ankiv2 importing, start work on importing classes

changeset:   151:1bf90a06af5e
user:        Damien Elmes <hg@repose.cx>
date:        Mon Jun 25 02:28:05 2007 +0900
description:
fields should use 'description', not 'info'

changeset:   150:e2c22d2b51fa
user:        Damien Elmes <hg@repose.cx>
date:        Sun Jun 24 03:48:56 2007 +0900
description:
add tag parsing

changeset:   149:ea1f1a805bd9
user:        Damien Elmes <hg@repose.cx>
date:        Sun Jun 24 03:40:24 2007 +0900
description:
allow ease 2 other than 1 day

changeset:   148:9657b0443164
user:        Damien Elmes <hg@repose.cx>
date:        Sun Jun 24 01:22:12 2007 +0900
description:
add deck name/description/syncing target

changeset:   147:cc473a00f280
user:        Damien Elmes <hg@repose.cx>
date:        Sat Jun 23 02:40:34 2007 +0900
description:
importing old anki decks mostly working

changeset:   146:900d9b946e12
user:        Damien Elmes <hg@repose.cx>
date:        Thu Jun 21 05:45:19 2007 +0900
description:
manager->scheduler, refactor parts of deck, more tests

changeset:   145:8f5bf703cb7d
user:        Damien Elmes <hg@repose.cx>
date:        Thu Jun 21 03:30:47 2007 +0900
description:
more work on facts/errors, change __init__.py, start on deck

changeset:   144:b55b9283b1d4
user:        Damien Elmes <hg@repose.cx>
date:        Thu Jun 21 01:34:56 2007 +0900
description:
i18n with gettext, refactor utils, remove egg info

changeset:   143:82249912b66e
user:        Damien Elmes <hg@repose.cx>
date:        Wed Jun 20 23:52:31 2007 +0900
description:
retire sm5.py and fc compat code

changeset:   142:0e93e02d9092
user:        Damien Elmes <hg@repose.cx>
date:        Wed Jun 20 23:50:27 2007 +0900
description:
pluralise modules, add more tests, fact code

changeset:   141:54f0a36b3348
user:        Damien Elmes <hg@repose.cx>
date:        Tue Jun 19 18:44:40 2007 +0900
description:
strip old sync code

changeset:   140:5629a1e8bc12
user:        Damien Elmes <hg@repose.cx>
date:        Tue Jun 19 18:44:09 2007 +0900
description:
start changes to deck.py, rename lastModified to modified

changeset:   139:d720504e31c0
user:        Damien Elmes <hg@repose.cx>
date:        Tue Jun 19 04:10:41 2007 +0900
description:
more testcases, bugfixes

changeset:   138:857a88ac45c4
user:        Damien Elmes <hg@repose.cx>
date:        Tue Jun 19 02:09:34 2007 +0900
description:
very beginnings of new card/deck model

changeset:   137:aa5a3268b901
user:        Damien Elmes <hg@repose.cx>
date:        Sat Jun 16 22:34:40 2007 +0900
description:
add test case for syncing bug

changeset:   136:092477f5243e
user:        Damien Elmes <hg@repose.cx>
date:        Tue Jun 12 12:24:44 2007 +0900
description:
fix references to errors that were broken in the refactor

changeset:   135:37c672ef614f
user:        Damien Elmes <hg@repose.cx>
date:        Sat Jun 09 19:50:26 2007 +0900
description:
add cumulative due graph, remove guide bars at 180+ days

changeset:   134:71ef9355c144
user:        Damien Elmes <hg@repose.cx>
date:        Sat Jun 09 19:23:53 2007 +0900
description:
base graphs on the start of the day, not the current time

changeset:   133:7a1269ff66c8
user:        Damien Elmes <hg@repose.cx>
date:        Sat Jun 09 18:27:36 2007 +0900
description:
add tests for special chars

changeset:   132:95b88334e11f
user:        Damien Elmes <hg@repose.cx>
date:        Sat Jun 09 18:24:34 2007 +0900
description:
allow :: in card definitions, as it's no longer required by the sync protocol

changeset:   131:1131f08a06b3
user:        Damien Elmes <hg@repose.cx>
date:        Sat Jun 09 18:22:36 2007 +0900
description:
upgrade sync protocol, rename controller methods, more
- use json instead of building our own protocol
- define the server logic in sync.py instead of in the web code
- include json2.py, which is a modified version of json.py that supports utf-8
- Controller.newDeck() -> Controller.Deck(), etc
- add unit tests for syncing
- change card repr format

changeset:   130:359982e7b9a5
user:        Damien Elmes <hg@repose.cx>
date:        Sat Jun 09 04:58:38 2007 +0900
description:
add mnemosyne import support

changeset:   129:bad5bb9fd2a2
user:        Damien Elmes <hg@repose.cx>
date:        Sat Jun 09 03:45:30 2007 +0900
description:
allow control over reverse gen/randomizing when importing text

changeset:   128:da56fc31d7b0
user:        Damien Elmes <hg@repose.cx>
date:        Sat Jun 09 02:55:32 2007 +0900
description:
allow choice of append/random in text import

changeset:   127:5ec4ed09cbce
user:        Damien Elmes <hg@repose.cx>
date:        Thu Jun 07 02:00:28 2007 +0900
description:
remove timeout (syncing is threaded now, and it fixes a osx bug)

changeset:   126:1526f7369672
user:        Damien Elmes <hg@repose.cx>
date:        Wed Jun 06 15:31:22 2007 +0900
description:
fix 3+4 deck (had furigana in questions)

changeset:   125:6f7da75f7f6a
user:        Damien Elmes <hg@repose.cx>
date:        Sat Jun 02 08:44:30 2007 +0900
description:
fix firstAnswered syncing problem

changeset:   124:5a7e5bed1787
user:        Damien Elmes <hg@repose.cx>
date:        Fri Jun 01 23:42:33 2007 +0900
description:
replace unicode ~ with ascii

changeset:   123:f9368a648531
user:        Damien Elmes <hg@repose.cx>
date:        Fri Jun 01 22:44:45 2007 +0900
description:
append cards when importing - don't shuffle

changeset:   122:024e589e22f8
user:        Damien Elmes <hg@repose.cx>
date:        Thu May 24 00:57:02 2007 +0900
description:
fix bug with duplicates caused by the same kanji used twice in a card

changeset:   121:8c6df176b34d
user:        Damien Elmes <hg@repose.cx>
date:        Thu May 24 00:10:24 2007 +0900
description:
add a grid

changeset:   120:e7133425e4fd
user:        Damien Elmes <hg@repose.cx>
date:        Wed May 23 23:58:52 2007 +0900
description:
add eases graph

changeset:   119:88d3066be6c5
user:        Damien Elmes <hg@repose.cx>
date:        Tue May 22 03:24:15 2007 +0900
description:
implement iroiro's kanji stats

changeset:   118:0b65cc61335e
user:        Damien Elmes <hg@repose.cx>
date:        Mon May 21 10:02:28 2007 +0900
description:
make that minutes, not days

changeset:   117:17dfdf49e740
user:        Damien Elmes <hg@repose.cx>
date:        Mon May 21 10:01:02 2007 +0900
description:
set last interval = 10 minutes when card is wrong

changeset:   116:192e631ac341
user:        Damien Elmes <hg@repose.cx>
date:        Mon May 21 06:05:20 2007 +0900
description:
fix bug w/ firstAnswered + syncing

changeset:   115:ac6ece2f2228
user:        Damien Elmes <hg@repose.cx>
date:        Sun May 20 12:48:19 2007 +0900
description:
reduce ease 1 by double the reciprocal

changeset:   114:3862661c41ab
user:        Damien Elmes <hg@repose.cx>
date:        Sun May 20 01:14:48 2007 +0900
description:
check for existing firstAnswered (due to sync, etc)

changeset:   113:b924786ffd1a
user:        Damien Elmes <hg@repose.cx>
date:        Sun May 20 01:07:04 2007 +0900
description:
fix bug with firstAnswered

changeset:   112:608d244c0e90
user:        Damien Elmes <hg@repose.cx>
date:        Sun May 20 00:47:56 2007 +0900
description:
easy interval to 7-9

changeset:   111:d4b3f0b60f26
user:        Damien Elmes <hg@repose.cx>
date:        Sun May 20 00:47:14 2007 +0900
description:
mid interval to 3-5

changeset:   110:287513b6da37
user:        Damien Elmes <hg@repose.cx>
date:        Sat May 19 23:49:24 2007 +0900
description:
remove rogue print statement

changeset:   109:694b1710e3b2
user:        Damien Elmes <hg@repose.cx>
date:        Sat May 19 22:04:13 2007 +0900
description:
enforce ylim difference of 1

changeset:   108:f899bc0a15ca
user:        Damien Elmes <hg@repose.cx>
date:        Sat May 19 21:46:50 2007 +0900
description:
fix bug in upgrading decks

changeset:   107:08490dc2fde3
user:        Damien Elmes <hg@repose.cx>
date:        Sat May 19 21:02:42 2007 +0900
description:
1 hours -> 1 hour

changeset:   106:a9c25fdfe93e
user:        Damien Elmes <hg@repose.cx>
date:        Sat May 19 20:55:46 2007 +0900
description:
add firstAnswered attribute

changeset:   105:7da604081893
user:        Damien Elmes <hg@repose.cx>
date:        Fri May 18 21:30:34 2007 +0900
description:
apply only half delay to ease 3 when card is new

changeset:   104:1da0cdc058c7
user:        Damien Elmes <hg@repose.cx>
date:        Fri May 18 20:53:24 2007 +0900
description:
display a date range for cards in the initial state

changeset:   103:6fb3acd2381b
user:        Damien Elmes <hg@repose.cx>
date:        Thu May 17 03:45:51 2007 +0900
description:
don't apply delay factor to new cards in nextTimeStr()

changeset:   102:f8e7de875cf6
user:        Damien Elmes <hg@repose.cx>
date:        Wed May 16 23:03:24 2007 +0900
description:
remove redundant 'jouyou' (fixes display on osx)

changeset:   101:57bb6a5ac01b
user:        Damien Elmes <hg@repose.cx>
date:        Wed May 16 22:47:08 2007 +0900
description:
don't import pylab

changeset:   100:8b4b7d3ca8aa
user:        Damien Elmes <hg@repose.cx>
date:        Wed May 16 04:03:38 2007 +0900
description:
never apply a negative delay
(this is not a problem usually - only useful in testing)

changeset:   99:94484f221a49
user:        Damien Elmes <hg@repose.cx>
date:        Wed May 16 04:02:06 2007 +0900
description:
don't depend on card having a deviation attribute

changeset:   98:1cfe2b1f9dfb
user:        Damien Elmes <hg@repose.cx>
date:        Tue May 15 04:42:55 2007 +0900
description:
fix call to fmtTimeSpan

changeset:   97:17c426fbc2fe
user:        Damien Elmes <hg@repose.cx>
date:        Tue May 15 03:50:07 2007 +0900
description:
don't show the last interval if it hasn't been updated yet

changeset:   96:954a3a150ec1
user:        Damien Elmes <hg@repose.cx>
date:        Tue May 15 02:40:47 2007 +0900
description:
make importing code give more information on failures

changeset:   95:275e78c98747
user:        Damien Elmes <hg@repose.cx>
date:        Tue May 15 01:36:47 2007 +0900
description:
conditionally import pkg_resources
this allows anki to load even if setuptools is not available.

changeset:   94:80eff21fadc1
user:        Damien Elmes <hg@repose.cx>
date:        Tue May 15 00:42:53 2007 +0900
description:
days with 0 in the graphs should plot as 0

changeset:   93:fae9e7f25e5f
user:        Damien Elmes <hg@repose.cx>
date:        Tue May 15 00:29:24 2007 +0900
description:
add missing lang.py, disable bars at 1-5 years

changeset:   92:e4b8b9e57e7d
user:        Damien Elmes <hg@repose.cx>
date:        Mon May 14 23:42:22 2007 +0900
description:
fix problem with setLang() due to refactor

changeset:   91:a13cdb8a6f7c
user:        Damien Elmes <hg@repose.cx>
date:        Mon May 14 10:47:06 2007 +0900
description:
by default, don't pad time strings

changeset:   90:4bbe3d4d2a20
user:        Damien Elmes <hg@repose.cx>
date:        Mon May 14 10:39:32 2007 +0900
description:
only use delay factor if ease > 2

changeset:   89:ad840a50cfc4
user:        Damien Elmes <hg@repose.cx>
date:        Mon May 14 00:43:35 2007 +0900
description:
show young/initial state in card stats

changeset:   88:031312e80d70
parent:      86:4673020de790
parent:      87:e01d0c85749e
user:        Damien Elmes <hg@repose.cx>
date:        Sun May 13 23:28:02 2007 +0900
description:
merge with other computer

changeset:   87:e01d0c85749e
parent:      78:ba2db11330fc
user:        Damien Elmes <hg@repose.cx>
date:        Sun May 13 21:50:57 2007 +0900
description:
don't check for same answer, only question

changeset:   86:4673020de790
user:        Damien Elmes <hg@repose.cx>
date:        Sun May 13 23:04:10 2007 +0900
description:
finish dds's refactoring

changeset:   85:6dd7d05c99a0
parent:      78:ba2db11330fc
parent:      84:8ca19a3caba7
user:        Damien Elmes <hg@repose.cx>
date:        Sun May 13 20:51:14 2007 +0900
description:
merge changes from dds

changeset:   84:8ca19a3caba7
user:        David Smith <davidsmith@acm.org>
date:        Sun May 06 03:26:17 2007 +0900
description:
Update file formatting

changeset:   83:c3d540d7b881
user:        David Smith <davidsmith@acm.org>
date:        Sun May 06 03:08:24 2007 +0900
description:
Update file formatting

changeset:   82:c562ade159c0
user:        David Smith <davidsmith@acm.org>
date:        Sun May 06 02:21:01 2007 +0900
description:
Initial refactoring away from putting everything in __init__.py

changeset:   81:adf8acf41015
user:        David Smith <davidsmith@acm.org>
date:        Sun May 06 02:20:34 2007 +0900
description:
Move samples into anki directory so they can be handled as data

changeset:   80:f5a0c4d03d62
user:        David Smith <davidsmith@acm.org>
date:        Sun May 06 02:19:59 2007 +0900
description:
Include anki egg-info

changeset:   79:5ef15f6eebc4
parent:      65:2052d232cd13
user:        David Smith <davidsmith@acm.org>
date:        Sun May 06 02:19:44 2007 +0900
description:
Use anki package name instead of libanki

changeset:   78:ba2db11330fc
user:        Damien Elmes <hg@repose.cx>
date:        Sun May 13 05:44:22 2007 +0900
description:
when adding a card, set lastInterval to startInterval

changeset:   77:8aa4903582eb
user:        Damien Elmes <hg@repose.cx>
date:        Sun May 13 05:08:24 2007 +0900
description:
add card stats

changeset:   76:7d44927efc93
user:        Damien Elmes <hg@repose.cx>
date:        Sun May 13 03:28:25 2007 +0900
description:
add cardIsInInitialState(), use lastFactor in cardIsYoung if properly defined

changeset:   75:56e9f0634f4d
user:        Damien Elmes <hg@repose.cx>
date:        Sun May 13 03:04:23 2007 +0900
description:
bugfixes re young cards, lastInterval
- cardIsYoung() now is true if the current interval < easyInterval[0], which
means that the retention ratio may drop a little, but the terminolgy is
clearer now. perhaps in the future we can use a different category other than
"young".
- fix problems with lastInterval - wasn't being set for new cards, was being
set to a string when syncing

changeset:   74:7e5c97355236
user:        Damien Elmes <hg@repose.cx>
date:        Sun May 13 02:24:47 2007 +0900
description:
hack for cardIsYoung() (will use lastInterval instead in the future)

changeset:   73:6f574edc6013
user:        Damien Elmes <hg@repose.cx>
date:        Sun May 13 02:18:57 2007 +0900
description:
spread ease3/4 young cards out over 3 days

changeset:   72:23f550604fa4
user:        Damien Elmes <hg@repose.cx>
date:        Sun May 13 01:38:07 2007 +0900
description:
check for lastCardRetrieved conditionally

changeset:   71:53b34cc2669e
user:        Damien Elmes <hg@repose.cx>
date:        Fri May 11 01:39:31 2007 +0900
description:
don't pass deviation to scheduleCard()

changeset:   70:9647fc661acf
user:        Damien Elmes <hg@repose.cx>
date:        Fri May 11 01:37:29 2007 +0900
description:
store deviation in card instead of making calling library deal with it

changeset:   69:d3f2c758ac29
user:        Damien Elmes <hg@repose.cx>
date:        Fri May 11 00:33:01 2007 +0900
description:
add generator and getCards() for fetching multiple pending cards

changeset:   68:f2226684c7d2
user:        Damien Elmes <hg@repose.cx>
date:        Mon May 07 17:10:09 2007 +0900
description:
update factor after rescheduling, allow deviation in nextIntervalStr

changeset:   67:1a44539c2b5d
user:        Damien Elmes <hg@repose.cx>
date:        Mon May 07 16:51:59 2007 +0900
description:
allow the calling library to pass in the deviation

changeset:   66:2005d36d9dc5
user:        Damien Elmes <hg@repose.cx>
date:        Sun May 06 23:42:39 2007 +0900
description:
when syncing, reset only the pending info, not session performance

changeset:   65:2052d232cd13
user:        Damien Elmes <hg@repose.cx>
date:        Fri May 04 05:29:03 2007 +0900
description:
don't update modified time on cards when upgrading

changeset:   64:6e48ce323968
user:        Damien Elmes <hg@repose.cx>
date:        Fri May 04 02:56:12 2007 +0900
description:
update emacs version for latest stats

changeset:   63:76b4db221b22
user:        Damien Elmes <hg@repose.cx>
date:        Fri May 04 02:50:39 2007 +0900
description:
pave way for checking lastInterval instead of interval to determine young
cards (upgrade deck version)

changeset:   62:c0bb2e142bb3
user:        Damien Elmes <hg@repose.cx>
date:        Fri May 04 02:31:14 2007 +0900
description:
make stats more accurately report 1/4/8

changeset:   61:572de05ef44c
user:        Damien Elmes <hg@repose.cx>
date:        Fri May 04 02:29:57 2007 +0900
description:
cards less than 16 days are treated as young

changeset:   60:c5040f15f846
user:        Damien Elmes <hg@repose.cx>
date:        Thu May 03 10:27:48 2007 +0900
description:
fix typo in jlpt 3 and 4

changeset:   59:d96c9e914cc4
user:        Damien Elmes <hg@repose.cx>
date:        Wed May 02 21:36:09 2007 +0900
description:
refactor interval stats

changeset:   58:2a0b417ae524
user:        Damien Elmes <hg@repose.cx>
date:        Wed May 02 20:23:59 2007 +0900
description:
revert to indiscriminate reduction of pending cards again

changeset:   57:8c4aa3c5b6d6
user:        Damien Elmes <hg@repose.cx>
date:        Wed May 02 19:28:13 2007 +0900
description:
fix missing furigana in jlpt3 deck

changeset:   56:d715861a6e6d
user:        Damien Elmes <hg@repose.cx>
date:        Wed May 02 18:41:01 2007 +0900
description:
bump up libanki version number

changeset:   55:5b5dce44a670
user:        Damien Elmes <hg@repose.cx>
date:        Wed May 02 18:36:42 2007 +0900
description:
remove upgrading message

changeset:   54:ae135de7aa0d
user:        Damien Elmes <hg@repose.cx>
date:        Wed May 02 18:33:50 2007 +0900
description:
more stat fixes, add 'cards added' graph

changeset:   53:a80da6c747ca
user:        Damien Elmes <hg@repose.cx>
date:        Wed May 02 18:16:17 2007 +0900
description:
a few tweaks to stats output, change graph colours

changeset:   52:28348c6f854f
user:        Damien Elmes <hg@repose.cx>
date:        Wed May 02 18:03:52 2007 +0900
description:
a number of scheduling and stats changes
- add cardIsYoung() and make young cards more explicit
- don't deviate young cards, the interval is too small.
- ease 2 on mature cards repeats same time as last time
- ease 2 doesn't change card factor
- ease 1 reduces factor by 1 step, not 2
- don't discriminately reduce pending for incorrect cards
  (reverses previous decision - needs more work to be clear
  to the user)
- improve getStats() - return comprehensive short names for
  both session and global statistics
- store correct/incorrect for global and session, divided
  into three categories: new, young and mature cards
- questions taking more than 60 seconds to answer don't
  change the estimated time (the user probably walked away)
- divide ease stats into new, young, old too
- upgrade the deck to version 2, necessary for stats changes.
  any deck retention numbers will be lost as they're not reliable.
- update statistics to take advantage of the new categories (missing ease
  stats for now - work in progress)

changeset:   51:37bf2c17387f
user:        Damien Elmes <hg@repose.cx>
date:        Wed May 02 06:17:38 2007 +0900
description:
don't use assert to run a command, it gets optimised away.
need to improve that handling more.

changeset:   50:87280bd54075
user:        Damien Elmes <hg@repose.cx>
date:        Wed May 02 02:57:50 2007 +0900
description:
export global answered/correct & pending old/new in stats

changeset:   49:8749f1646de3
user:        Damien Elmes <hg@repose.cx>
date:        Mon Apr 30 23:01:53 2007 +0900
description:
apply half the delay factor to new cards at ease 3

changeset:   48:8ca677ddcc28
user:        Damien Elmes <hg@repose.cx>
date:        Mon Apr 30 22:54:53 2007 +0900
description:
show total cards in stats

changeset:   47:8cf0d0d2971f
user:        Damien Elmes <hg@repose.cx>
date:        Mon Apr 30 21:58:12 2007 +0900
description:
make sure the time module is available

changeset:   46:fe5ef6663b13
user:        Damien Elmes <hg@repose.cx>
date:        Mon Apr 30 20:48:02 2007 +0900
description:
more deck stat format changes

changeset:   45:90275bb7766b
user:        Damien Elmes <hg@repose.cx>
date:        Mon Apr 30 20:40:56 2007 +0900
description:
more stats, reset creation time when importing cards

changeset:   44:e89d2153e94f
user:        Damien Elmes <hg@repose.cx>
date:        Sun Apr 29 17:40:38 2007 +0900
description:
fix an error in furigana for 'karai' in the sample decks

changeset:   43:d6e0269febbd
user:        Damien Elmes <hg@repose.cx>
date:        Sun Apr 29 04:19:26 2007 +0900
description:
capitalize jinmeiyou in kanjistats

changeset:   42:096652813b9b
user:        Damien Elmes <hg@repose.cx>
date:        Sat Apr 28 00:43:35 2007 +0900
description:
add x axis label in graphs

changeset:   41:1870732f2c64
user:        Damien Elmes <hg@repose.cx>
date:        Fri Apr 27 01:11:29 2007 +0900
description:
fix definition in jlpt2 deck

changeset:   40:4261fdfb6e98
user:        Damien Elmes <hg@repose.cx>
date:        Fri Apr 27 01:09:37 2007 +0900
description:
append a final newline when exporting text, add ExportFileError exception

changeset:   39:9095ae2ef085
user:        Damien Elmes <hg@repose.cx>
date:        Thu Apr 26 04:44:58 2007 +0900
description:
improve sample files, add export support, fix graphs
- add jlpt 2-4 exerpts derived from my own decks
- add a tool to derive jlpt vocab from a jlpt deck and personal deck
- add export to anki (clean) deck, export to text
- render fill graphs down to the bottom of the graph
- don't allow graphs with insufficient info to be generated

changeset:   38:906efae0a582
user:        Damien Elmes <hg@repose.cx>
date:        Wed Apr 25 09:13:52 2007 +0900
description:
add missing 'card is new' check in scheduling

changeset:   37:6b859b82f7da
user:        Damien Elmes <hg@repose.cx>
date:        Wed Apr 25 06:42:27 2007 +0900
description:
add graphs file

changeset:   36:bae57f08f58d
user:        Damien Elmes <hg@repose.cx>
date:        Wed Apr 25 06:12:22 2007 +0900
description:
set matlab path for frozen, factor into separate file for lazy load

changeset:   35:5a220e427dd0
user:        Damien Elmes <hg@repose.cx>
date:        Wed Apr 25 04:43:52 2007 +0900
description:
apply delay to non-new cards in initial state, too

changeset:   34:f7f7005ef9fc
user:        Damien Elmes <hg@repose.cx>
date:        Wed Apr 25 04:33:36 2007 +0900
description:
use anki's version number in setup.py

changeset:   33:3aa6712b8615
user:        Damien Elmes <hg@repose.cx>
date:        Wed Apr 25 03:58:13 2007 +0900
description:
add graph generation

changeset:   32:96017e5c4f27
user:        Damien Elmes <hg@repose.cx>
date:        Wed Apr 25 03:03:46 2007 +0900
description:
don't deviate initial ease 4 negatively

changeset:   31:b1d9ae79b167
user:        David Smith <davidsmith@acm.org>
date:        Mon Apr 23 14:44:55 2007 +0900
description:
Include forgotten files

changeset:   30:92f914e17ae2
user:        David Smith <davidsmith@acm.org>
date:        Mon Apr 23 02:08:33 2007 +0900
description:
Make the utils into a setup-tools command entrypoint

changeset:   29:1b3d0de96681
user:        David Smith <davidsmith@acm.org>
date:        Mon Apr 23 02:08:10 2007 +0900
description:
Add setup.py

changeset:   28:7174f94a73ed
user:        Damien Elmes <hg@repose.cx>
date:        Sun Apr 22 03:26:37 2007 +0900
description:
add exception for non-utf8 imports

changeset:   27:d565a91a0159
user:        Damien Elmes <hg@repose.cx>
date:        Sun Apr 22 01:52:45 2007 +0900
description:
add support for importing anki decks and text files

changeset:   26:da32a4e405e3
user:        Damien Elmes <hg@repose.cx>
date:        Fri Apr 20 17:16:12 2007 +0900
description:
don't factor in delay on new cards

changeset:   25:b24d8fc1f3ce
user:        Damien Elmes <hg@repose.cx>
date:        Fri Apr 20 15:58:36 2007 +0900
description:
properly report an empty response from the server when syncing

changeset:   24:32771814f083
user:        Damien Elmes <hg@repose.cx>
date:        Fri Apr 20 06:55:20 2007 +0900
description:
add missing kanji stats

changeset:   23:72e015d83b4a
user:        Damien Elmes <hg@repose.cx>
date:        Wed Apr 18 19:21:16 2007 +0900
description:
fix pending cards bug, integrate lac's kanji stats

changeset:   22:a2fea56e5482
user:        Damien Elmes <hg@repose.cx>
date:        Wed Apr 18 07:46:42 2007 +0900
description:
update stats after card change (fixes pending: 1 bug)

changeset:   21:43918a2d67ba
user:        Damien Elmes <hg@repose.cx>
date:        Wed Apr 18 04:30:09 2007 +0900
description:
cards answered latest than scheduled are scheduled further in the future

changeset:   20:8ae96c675b7d
user:        Damien Elmes <hg@repose.cx>
date:        Tue Apr 17 12:32:31 2007 +0900
description:
add a string report for kanji

changeset:   19:931c573b3788
user:        Damien Elmes <hg@repose.cx>
date:        Mon Apr 16 23:57:51 2007 +0900
description:
fix bug in kanjistats

changeset:   18:5fbed8c50d94
user:        Damien Elmes <hg@repose.cx>
date:        Mon Apr 16 23:38:07 2007 +0900
description:
tweaks to stats html

changeset:   17:f706357905ac
user:        Damien Elmes <hg@repose.cx>
date:        Mon Apr 16 23:26:33 2007 +0900
description:
add deck stats (from ankiqt), return matching card in hasQuestion()

changeset:   16:5aa76d905ea2
user:        Damien Elmes <hg@repose.cx>
date:        Wed Apr 11 17:39:24 2007 +0900
description:
refactor pending cards into new/old, other changes
- ensure old cards are shown first, even if new cards were randomly placed
earlier
- separate pending into pendingOld and pendingNew
- remove formatTimeDiff from the scheduling code and place it in __init__.py
- reduce pendingOld even if a card was wrong

changeset:   15:2f24abf50f2d
user:        Damien Elmes <hg@repose.cx>
date:        Mon Apr 09 15:48:10 2007 +0900
description:
bump factorFour up, create easeStats on new deck, show time in seconds too

changeset:   14:ce95db97d442
user:        Damien Elmes <hg@repose.cx>
date:        Sat Apr 07 17:12:28 2007 +0900
description:
track each ease answer the user gives (could be useful in the future)

changeset:   13:deb2889ad180
user:        Damien Elmes <hg@repose.cx>
date:        Sat Apr 07 17:07:05 2007 +0900
description:
display modified cards first, fix bug in addCard, send client version
- previous seen cards are shown before new ones
- fixed an infinite loop when adding a card with the same question as a
previously renamed card
- send the protocol & client version when syncing

changeset:   12:79c9239d1c8f
user:        Damien Elmes <hg@repose.cx>
date:        Thu Apr 05 02:47:22 2007 +0900
description:
import sm5 to ensure it's included in the windows exe

changeset:   11:b70e087578f5
user:        Damien Elmes <hg@repose.cx>
date:        Wed Apr 04 22:53:23 2007 +0900
description:
track estimated time to deck finish

changeset:   10:01e18aedb3f9
user:        Damien Elmes <hg@repose.cx>
date:        Wed Apr 04 19:46:56 2007 +0900
description:
deviate interval when card is in initial state, too

changeset:   9:9717eeae72c6
user:        Damien Elmes <hg@repose.cx>
date:        Wed Apr 04 19:41:59 2007 +0900
description:
more scheduling updates
- newly added cards now give you a choice of 1, 4 and 8 days
- until past the first 8 days, the card will be treated as new
- give easy cards an extra 1.2x boost (5 years in 8-9 iters)
- make ease=3 factor a little higher, increase factor each time
- limit card scheduling to 5 years by default
- add a 'years' output for when cards reach over a year

changeset:   8:9337a39a4460
user:        Damien Elmes <hg@repose.cx>
date:        Tue Apr 03 18:03:26 2007 +0900
description:
handle old sm5 decks too when renaming to anki

changeset:   7:5f443860ed27
user:        Damien Elmes <hg@repose.cx>
date:        Tue Apr 03 04:26:20 2007 +0900
description:
rename fc to anki (pt 2)

changeset:   6:aa0f404497c1
user:        Damien Elmes <hg@repose.cx>
date:        Tue Apr 03 03:48:52 2007 +0900
description:
rename fc to anki

changeset:   5:beda7105baea
user:        Damien Elmes <hg@repose.cx>
date:        Sat Mar 31 16:25:01 2007 +0900
description:
remove decimal point from scheduling output (apparently it's confusing)

changeset:   4:32077af83c04
user:        Damien Elmes <hg@repose.cx>
date:        Sat Mar 31 16:18:22 2007 +0900
description:
make ease=3 exactly between 2 & 4

changeset:   3:c876b1f3427e
user:        Damien Elmes <hg@repose.cx>
date:        Tue Mar 27 14:04:22 2007 +0900
description:
update emacs interface to work with sched, add brief docs

changeset:   2:3c53e48d26bd
user:        Damien Elmes <hg@repose.cx>
date:        Sun Mar 25 13:59:45 2007 -0700
description:
if syncing causes local deck changes, mark the deck modified

changeset:   1:7f2ce5c599cd
user:        Damien Elmes <hg@repose.cx>
date:        Sun Mar 25 13:53:04 2007 -0700
description:
add version number, strip more emacs import code, add warning about sm5 being obsolete

changeset:   0:344b29e2e1e8
user:        Damien Elmes <hg@repose.cx>
date:        Fri Mar 23 10:31:36 2007 -0700
description:
import from bzr, see ChangeLog.old

------------------------------------------------------------
revno: 3
committer: Damien Elmes <bzr@ichi2.net>
branch nick: fc
timestamp: Thu 2007-03-22 09:19:27 -0700
message:
  support appending to end of deck, add samples, temporary hack for saving
------------------------------------------------------------
revno: 2
committer: Damien Elmes <bzr@ichi2.net>
branch nick: fc
timestamp: Thu 2007-03-22 08:37:20 -0700
message:
  update sync & upgrade code, set deckVersion on creation
  - syncing now sends a protocol and client version on checkAuth
  - don't touch lastModified when converting to the fc scheduler
  - when correcting for sm5 mischeduling, do so idempotently
  - make sure to convert new fc card attributes to float/int
------------------------------------------------------------
revno: 1
committer: Damien Elmes <bzr@ichi2.net>
branch nick: fc
timestamp: Tue 2007-03-20 11:47:51 -0700
message:
  import from darcs (see ChangeLog.old for previous history)
------------------------------------------------------------
Tue Mar 20 11:27:51 PDT 2007  fc@ichi2.net
  * move to new scheduling algorithm, add lang updates, etc

  The new scheduling algorithm is more conservative than sm5, and fixes a number
  of problems with cards being scheduled too far into the future. The factor
  matrix has been removed in favour of per-card factor modification. Each card
  starts at factor=1.5, with factorChange=0.05. Easy cards are increased by
  factorChange, difficult cards are reduced by it. In the future factorChange
  could be modified to speed up ease adjustments.

  The new algorithm has five ease levels when answering a card, instead of the
  earlier 6.

  - track totalCount, correctCount and succesivelyCorrect in cards for future
    statistics
  - apply deviation just before scheduling, so we don't confuse the user
  - add quasi-i18n support via setLang to set format of fc string output
  - add deckFormat and deckVersion to ease future upgrades
  - fc.sched is now the default algorithm and doesn't require makeDefault()
  - remove emacs deck conversion support (it was a hack)
  - move emacs support and utilities into separate directories
  - add GPL boilerplates & COPYING

Fri Mar  9 05:19:26 PST 2007  fc@ichi2.net
  * add a command to reset pending cards without updating statistics

Fri Feb 23 23:32:30 PST 2007  fc@ichi2.net
  * correct previous matrixsize patch

Thu Feb 22 23:17:45 PST 2007  fc@ichi2.net
  * ensure count and ease are bounded to the matrix size

Wed Jan 24 09:40:22 PST 2007  LaC
  * LaC lazy launch of kakasi
  - kakasi is launched only when first used
  - simpler availability check

Wed Jan 24 08:04:40 PST 2007  LaC
  * LaC shared kakasi
  - use a single instance of kakasi, instead of launching it anew on every
    keystroke; this makes the "add cards" dialog more responsive, at least on
    my system

Mon Jan  8 19:20:16 PST 2007  fc@ichi2.net
  * display approximate time to next appearance

Sat Dec 23 08:31:18 PST 2006  fc@ichi2.net
  * find kakasi on mac

Tue Dec 12 00:53:13 PST 2006  fc@ichi2.net
  * fix negative numbers in status report

Tue Dec 12 00:51:09 PST 2006  fc@ichi2.net
  * improve backup/support old style format/provide deckCon

Thu Dec  7 06:33:23 PST 2006  fc@ichi2.net
  * handle deleted-and-readded cards and empty furigana

Thu Dec  7 06:08:31 PST 2006  fc@ichi2.net
  * add backup support

Thu Dec  7 02:13:06 PST 2006  fc@ichi2.net
  * if furigana is explictly provided, don't try invoke kakasi. no kana
    generation

Thu Dec  7 01:19:53 PST 2006  fc@ichi2.net
  * use the :80 url for syncing

Wed Dec  6 21:29:18 PST 2006  fc@ichi2.net
  * implement add cards

Wed Nov 29 20:30:19 PST 2006  fc@ichi2.net
  * emacs support, big refactor

Fri Nov 17 06:42:21 PST 2006  fc@ichi2.net
  * add more deck creation support, various other things

Wed Nov 15 10:37:30 PST 2006  fc@ichi2.net
  * sync support w/ server working

Tue Nov 14 10:31:25 PST 2006  fc@ichi2.net
  * add deck editing and more

Mon Nov 13 08:52:05 PST 2006  fc@ichi2.net
  * add server support, syncing, etc

Fri Nov 10 09:10:28 PST 2006  fc@ichi2.net
  * misc patches

Mon Oct 23 04:01:20 PDT 2006  fc@ichi2.net
  * new interface seems okay for now

Mon Oct 23 00:55:37 PDT 2006  fc@ichi2.net
  * add missing files

Mon Oct 23 00:55:00 PDT 2006  fc@ichi2.net
  * move out fc_web, reorganise structure

Sat Oct 21 16:57:31 PDT 2006  fc@ichi2.net
  * add all new files from 3am commit

Sat Oct 21 03:36:03 PDT 2006  fc@ichi2.net
  * 3:30am commit

Fri Oct 20 21:08:19 PDT 2006  fc@ichi2.net
  * add pylons dir

Fri Oct 20 21:06:10 PDT 2006  fc@ichi2.net
  * initial import
 58  
anki/__init__.py
@@ -0,0 +1,58 @@
# -*- coding: utf-8 -*-
# Copyright: Damien Elmes <anki@ichi2.net>
# License: GNU GPL, version 3 or later; http://www.gnu.org/copyleft/gpl.html

"""\
Anki (libanki)
====================
Open a deck:
    deck = anki.DeckStorage.Deck(path)
Get a card:
    card = deck.getCard()
    if not card:
        # deck is finished
Show the card:
    print card.question, card.answer
Answer the card:
    deck.answerCard(card, ease)
Edit the card:
    fields = card.fact.model.fieldModels
    for field in fields:
        card.fact[field.name] = "newvalue"
    card.fact.setModified(textChanged=True)
    deck.setModified()
Get all cards via ORM (slow):
    from anki.cards import Card
    cards = deck.s.query(Card).all()
Get all q/a/ids via SQL (fast):
    cards = deck.s.all("select id, question, answer from cards")
Save & close:
    deck.save()
    deck.close()
"""
__docformat__ = 'restructuredtext'

try:
    __import__('pkg_resources').declare_namespace(__name__)
except ImportError:
    pass

version = "0.9.9.8.6"

from anki.deck import DeckStorage
 289  
anki/cards.py
@@ -0,0 +1,289 @@
# -*- coding: utf-8 -*-
# Copyright: Damien Elmes <anki@ichi2.net>
# License: GNU GPL, version 3 or later; http://www.gnu.org/copyleft/gpl.html

"""\
Cards
====================
"""
__docformat__ = 'restructuredtext'

import time, sys, math, random
from anki.db import *
from anki.models import CardModel, Model, FieldModel, formatQA
from anki.facts import Fact, factsTable, Field
from anki.utils import parseTags, findTag, stripHTML, genID, hexifyID

# Cards
##########################################################################

cardsTable = Table(
    'cards', metadata,
    Column('id', Integer, primary_key=True),
    Column('factId', Integer, ForeignKey("facts.id"), nullable=False),
    Column('cardModelId', Integer, ForeignKey("cardModels.id"), nullable=False),
    Column('created', Float, nullable=False, default=time.time),
    Column('modified', Float, nullable=False, default=time.time),
    Column('tags', UnicodeText, nullable=False, default=u""),
    Column('ordinal', Integer, nullable=False),
    # cached - changed on fact update
    Column('question', UnicodeText, nullable=False, default=u""),
    Column('answer', UnicodeText, nullable=False, default=u""),
    # default to 'normal' priority;
    # this is indexed in deck.py as we need to create a reverse index
    Column('priority', Integer, nullable=False, default=2),
    Column('interval', Float, nullable=False, default=0),
    Column('lastInterval', Float, nullable=False, default=0),
    Column('due', Float, nullable=False, default=time.time),
    Column('lastDue', Float, nullable=False, default=0),
    Column('factor', Float, nullable=False, default=2.5),
    Column('lastFactor', Float, nullable=False, default=2.5),
    Column('firstAnswered', Float, nullable=False, default=0),
    # stats
    Column('reps', Integer, nullable=False, default=0),
    Column('successive', Integer, nullable=False, default=0),
    Column('averageTime', Float, nullable=False, default=0),
    Column('reviewTime', Float, nullable=False, default=0),
    Column('youngEase0', Integer, nullable=False, default=0),
    Column('youngEase1', Integer, nullable=False, default=0),
    Column('youngEase2', Integer, nullable=False, default=0),
    Column('youngEase3', Integer, nullable=False, default=0),
    Column('youngEase4', Integer, nullable=False, default=0),
    Column('matureEase0', Integer, nullable=False, default=0),
    Column('matureEase1', Integer, nullable=False, default=0),
    Column('matureEase2', Integer, nullable=False, default=0),
    Column('matureEase3', Integer, nullable=False, default=0),
    Column('matureEase4', Integer, nullable=False, default=0),
    # this duplicates the above data, because there's no way to map imported
    # data to the above
    Column('yesCount', Integer, nullable=False, default=0),
    Column('noCount', Integer, nullable=False, default=0),
    # caching
    Column('spaceUntil', Float, nullable=False, default=0),
    Column('relativeDelay', Float, nullable=False, default=0), # obsolete
    Column('isDue', Boolean, nullable=False, default=0),
    Column('type', Integer, nullable=False, default=2),
    Column('combinedDue', Integer, nullable=False, default=0))

class Card(object):
    "A card."

    def __init__(self, fact=None, cardModel=None, created=None):
        self.tags = u""
        self.id = genID()
        # new cards start as new & due
        self.type = 2
        self.isDue = True
        self.timerStarted = False
        self.timerStopped = False
        self.modified = time.time()
        if created:
            self.created = created
            self.due = created
        else:
            self.due = self.modified
        self.combinedDue = self.due
        if fact:
            self.fact = fact
        if cardModel:
            self.cardModel = cardModel
            # for non-orm use
            self.cardModelId = cardModel.id
            self.ordinal = cardModel.ordinal
            d = {}
            for f in self.fact.model.fieldModels:
                d[f.name] = (f.id, self.fact[f.name])
            qa = formatQA(None, fact.modelId, d, self.splitTags(), cardModel)
            self.question = qa['question']
            self.answer = qa['answer']

    def setModified(self):
        self.modified = time.time()

    def startTimer(self):
        self.timerStarted = time.time()

    def stopTimer(self):
        self.timerStopped = time.time()

    def thinkingTime(self):
        return (self.timerStopped or time.time()) - self.timerStarted

    def totalTime(self):
        return time.time() - self.timerStarted

    def genFuzz(self):
        "Generate a random offset to spread intervals."
        self.fuzz = random.uniform(0.95, 1.05)

    def htmlQuestion(self, type="question", align=True):
        div = '''<div class="card%s" id="cm%s%s">%s</div>''' % (
            type[0], type[0], hexifyID(self.cardModelId),
            getattr(self, type))
        # add outer div & alignment (with tables due to qt's html handling)
        if not align:
            return div
        attr = type + 'Align'
        if getattr(self.cardModel, attr) == 0:
            align = "center"
        elif getattr(self.cardModel, attr) == 1:
            align = "left"
        else:
            align = "right"
        return (("<center><table width=95%%><tr><td align=%s>" % align) +
                div + "</td></tr></table></center>")

    def htmlAnswer(self, align=True):
        return self.htmlQuestion(type="answer", align=align)

    def updateStats(self, ease, state):
        self.reps += 1
        if ease > 1:
            self.successive += 1
        else:
            self.successive = 0
        delay = self.totalTime()
        # ignore any times over 60 seconds
        if delay < 60:
            self.reviewTime += delay
            if self.averageTime:
                self.averageTime = (self.averageTime + delay) / 2.0
            else:
                self.averageTime = delay
        # we don't track first answer for cards
        if state == "new":
            state = "young"
        # update ease and yes/no count
        attr = state + "Ease%d" % ease
        setattr(self, attr, getattr(self, attr) + 1)
        if ease < 2:
            self.noCount += 1
        else:
            self.yesCount += 1
        if not self.firstAnswered:
            self.firstAnswered = time.time()
        self.setModified()

    def splitTags(self):
        return (self.fact.tags, self.fact.model.tags, self.cardModel.name)

    def allTags(self):
        "Non-canonified string of all tags."
        return (self.fact.tags + "," +
                self.fact.model.tags)

    def hasTag(self, tag):
        return findTag(tag, parseTags(self.allTags()))

    def fromDB(self, s, id):
        r = s.first("""select
id, factId, cardModelId, created, modified, tags, ordinal, question, answer,
priority, interval, lastInterval, due, lastDue, factor,
lastFactor, firstAnswered, reps, successive, averageTime, reviewTime,
youngEase0, youngEase1, youngEase2, youngEase3, youngEase4,
matureEase0, matureEase1, matureEase2, matureEase3, matureEase4,
yesCount, noCount, spaceUntil, isDue, type, combinedDue
from cards where id = :id""", id=id)
        if not r:
            return
        (self.id,
         self.factId,
         self.cardModelId,
         self.created,
         self.modified,
         self.tags,
         self.ordinal,
         self.question,
         self.answer,
         self.priority,
         self.interval,
         self.lastInterval,
         self.due,
         self.lastDue,
         self.factor,
         self.lastFactor,
         self.firstAnswered,
         self.reps,
         self.successive,
         self.averageTime,
         self.reviewTime,
         self.youngEase0,
         self.youngEase1,
         self.youngEase2,
         self.youngEase3,
         self.youngEase4,
         self.matureEase0,
         self.matureEase1,
         self.matureEase2,
         self.matureEase3,
         self.matureEase4,
         self.yesCount,
         self.noCount,
         self.spaceUntil,
         self.isDue,
         self.type,
         self.combinedDue) = r
        return True

    def toDB(self, s):
        "Write card to DB. Note that isDue assumes card is not spaced."
        if self.reps == 0:
            self.type = 2
        elif self.successive:
            self.type = 1
        else:
            self.type = 0
        s.execute("""update cards set
modified=:modified,
tags=:tags,
interval=:interval,
lastInterval=:lastInterval,
due=:due,
lastDue=:lastDue,
factor=:factor,
lastFactor=:lastFactor,
firstAnswered=:firstAnswered,
reps=:reps,
successive=:successive,
averageTime=:averageTime,
reviewTime=:reviewTime,
youngEase0=:youngEase0,
youngEase1=:youngEase1,
youngEase2=:youngEase2,
youngEase3=:youngEase3,
youngEase4=:youngEase4,
matureEase0=:matureEase0,
matureEase1=:matureEase1,
matureEase2=:matureEase2,
matureEase3=:matureEase3,
matureEase4=:matureEase4,
yesCount=:yesCount,
noCount=:noCount,
spaceUntil = :spaceUntil,
isDue = :isDue,
type = :type,
combinedDue = max(:spaceUntil, :due),
relativeDelay = 0,
priority = :priority
where id=:id""", self.__dict__)

mapper(Card, cardsTable, properties={
    'cardModel': relation(CardModel),
    'fact': relation(Fact, backref="cards", primaryjoin=
                     cardsTable.c.factId == factsTable.c.id),
    })

mapper(Fact, factsTable, properties={
    'model': relation(Model),
    'fields': relation(Field, backref="fact", order_by=Field.ordinal),
    })


# Card deletions
##########################################################################

cardsDeletedTable = Table(
    'cardsDeleted', metadata,
    Column('cardId', Integer, ForeignKey("cards.id"),
           nullable=False),
    Column('deletedTime', Float, nullable=False))
 149  
anki/db.py
@@ -0,0 +1,149 @@
# -*- coding: utf-8 -*-
# Copyright: Damien Elmes <anki@ichi2.net>
# License: GNU GPL, version 3 or later; http://www.gnu.org/copyleft/gpl.html

"""\
DB tools
====================
SessionHelper is a wrapper for the standard sqlalchemy session, which provides
some convenience routines, and manages transactions itself.
object_session() is a replacement for the standard object_session(), which
provides the features of SessionHelper, and avoids taking out another
transaction.
"""
__docformat__ = 'restructuredtext'

try:
    from pysqlite2 import dbapi2 as sqlite
except ImportError:
    try:
        from sqlite3 import dbapi2 as sqlite
    except:
        raise "Please install pysqlite2 or python2.5"

from sqlalchemy import (Table, Integer, Float, Column, MetaData,
                        ForeignKey, Boolean, String, Date,
                        UniqueConstraint, Index, PrimaryKeyConstraint)
from sqlalchemy import create_engine
from sqlalchemy.orm import mapper, sessionmaker as _sessionmaker, relation, backref, \
     object_session as _object_session, class_mapper
from sqlalchemy.sql import select, text, and_
from sqlalchemy.exceptions import DBAPIError, OperationalError
from sqlalchemy.pool import NullPool
import sqlalchemy

# some users are still on 0.4.x..
import warnings
warnings.filterwarnings('ignore', 'Use session.add()')
warnings.filterwarnings('ignore', 'Use session.expunge_all()')

# sqlalchemy didn't handle the move to unicodetext nicely
try:
    from sqlalchemy import UnicodeText
except ImportError:
    from sqlalchemy import Unicode
    UnicodeText = Unicode

from anki.hooks import runHook

# shared metadata
metadata = MetaData()

# this class assumes the provided session is called with transactional=False
class SessionHelper(object):
    "Add some convenience routines to a session."

    def __init__(self, session, lock=False, transaction=True):
        self._session = session
        self._lock = lock
        self._transaction = transaction
        if self._transaction:
            self._session.begin()
        if self._lock:
            self._lockDB()
        self._seen = True

    def save(self, obj):
        # compat
        if sqlalchemy.__version__.startswith("0.4."):
            self._session.save(obj)
        else:
            self._session.add(obj)

    def clear(self):
        # compat
        if sqlalchemy.__version__.startswith("0.4."):
            self._session.clear()
        else:
            self._session.expunge_all()

    def update(self, obj):
        # compat
        if sqlalchemy.__version__.startswith("0.4."):
            self._session.update(obj)
        else:
            self._session.add(obj)

    def execute(self, *a, **ka):
        x = self._session.execute(*a, **ka)
        runHook("dbFinished")
        return x

    def __getattr__(self, k):
        return getattr(self.__dict__['_session'], k)

    def scalar(self, sql, **args):
        return self.execute(text(sql), args).scalar()

    def all(self, sql, **args):
        return self.execute(text(sql), args).fetchall()

    def first(self, sql, **args):
        c = self.execute(text(sql), args)
        r = c.fetchone()
        c.close()
        return r

    def column0(self, sql, **args):
        return [x[0] for x in self.execute(text(sql), args).fetchall()]

    def statement(self, sql, **kwargs):
        "Execute a statement without returning any results. Flush first."
        return self.execute(text(sql), kwargs)

    def statements(self, sql, data):
        "Execute a statement across data. Flush first."
        return self.execute(text(sql), data)

    def __repr__(self):
        return repr(self._session)

    def commit(self):
        self._session.commit()
        if self._transaction:
            self._session.begin()
        if self._lock:
            self._lockDB()

    def _lockDB(self):
        "Take out a write lock."
        self._session.execute(text("update decks set modified=modified"))

def object_session(*args):
    s = _object_session(*args)
    if s:
        return SessionHelper(s, transaction=False)
    return None

def sessionmaker(*args, **kwargs):
    if sqlalchemy.__version__ < "0.5":
        if 'autocommit' in kwargs:
            kwargs['transactional'] = not kwargs['autocommit']
            del kwargs['autocommit']
    else:
        if 'transactional' in kwargs:
            kwargs['autocommit'] = not kwargs['transactional']
            del kwargs['transactional']
    return _sessionmaker(*args, **kwargs)
 3,446  
anki/deck.py
Large diffs are not rendered by default.

 49  
anki/errors.py
@@ -0,0 +1,49 @@
# -*- coding: utf-8 -*-
# Copyright: Damien Elmes <anki@ichi2.net>
# License: GNU GPL, version 3 or later; http://www.gnu.org/copyleft/gpl.html

"""\
Errors
==============================
"""
__docformat__ = 'restructuredtext'

class Error(Exception):
    def __init__(self, message="", **data):
        self.data = data
        self._message = message
    def __str__(self):
        m = self._message
        if self.data:
            m += ": %s" % repr(self.data)
        return m

class DeckAccessError(Error):
    pass

class ImportFileError(Error):
    "Unable to load file to import from."
    pass

class ImportFormatError(Error):
    "Unable to determine pattern in text file."
    pass

class ImportEncodingError(Error):
    "The file was not in utf-8."
    pass

class ExportFileError(Error):
    "Unable to save file."
    pass

class SyncError(Error):
    "A problem occurred during syncing."
    pass

# facts, models
class FactInvalidError(Error):
    """A fact was invalid/not unique according to the model.
'field' defines the problem field.
'type' defines the type of error ('fieldEmpty', 'fieldNotUnique')"""
    pass
 270  
anki/exporting.py
@@ -0,0 +1,270 @@
# -*- coding: utf-8 -*-
# Copyright: Damien Elmes <anki@ichi2.net>
# License: GNU GPL, version 3 or later; http://www.gnu.org/copyleft/gpl.html

"""\
Exporting support
==============================
"""
__docformat__ = 'restructuredtext'

import itertools, time, re, os
from operator import itemgetter
from anki import DeckStorage
from anki.cards import Card
from anki.sync import SyncClient, SyncServer, copyLocalMedia
from anki.lang import _
from anki.utils import findTag, parseTags, stripHTML, ids2str
from anki.tags import tagIds
from anki.db import *

class Exporter(object):
    def __init__(self, deck):
        self.deck = deck
        self.limitTags = []
        self.limitCardIds = []

    def exportInto(self, path):
        self._escapeCount = 0
        file = open(path, "wb")
        self.doExport(file)
        file.close()

    def escapeText(self, text, removeFields=False):
        "Escape newlines and tabs, and strip Anki HTML."
        from BeautifulSoup import BeautifulSoup as BS
        text = text.replace("\n", "<br>")
        text = text.replace("\t", " " * 8)
        if removeFields:
            # beautifulsoup is slow
            self._escapeCount += 1
            if self._escapeCount % 100 == 0:
                self.deck.updateProgress()
            s = BS(text)
            all = s('span', {'class': re.compile("fm.*")})
            for e in all:
                e.replaceWith("".join([unicode(x) for x in e.contents]))
            text = unicode(s)
        return text

    def cardIds(self):
        "Return all cards, limited by tags or provided ids."
        if self.limitCardIds:
            return self.limitCardIds
        if not self.limitTags:
            cards = self.deck.s.column0("select id from cards")
        else:
            d = tagIds(self.deck.s, self.limitTags, create=False)
            cards = self.deck.s.column0(
                "select cardId from cardTags where tagid in %s" %
                ids2str(d.values()))
        self.count = len(cards)
        return cards

class AnkiExporter(Exporter):

    key = _("Anki Deck (*.anki)")
    ext = ".anki"

    def __init__(self, deck):
        Exporter.__init__(self, deck)
        self.includeSchedulingInfo = False
        self.includeMedia = True

    def exportInto(self, path):
        n = 3
        if not self.includeSchedulingInfo:
            n += 1
        self.deck.startProgress(n)
        self.deck.updateProgress(_("Exporting..."))
        try:
            os.unlink(path)
        except (IOError, OSError):
            pass
        self.newDeck = DeckStorage.Deck(path)
        client = SyncClient(self.deck)
        server = SyncServer(self.newDeck)
        server._mediaSupported = self.includeMedia
        client.setServer(server)
        client.localTime = self.deck.modified
        client.remoteTime = 0
        self.deck.s.flush()
        # set up a custom change list and sync
        lsum = self.localSummary()
        rsum = server.summary(0)
        self.deck.updateProgress()
        payload = client.genPayload((lsum, rsum))
        self.deck.updateProgress()
        res = server.applyPayload(payload)
        if not self.includeSchedulingInfo:
            self.deck.updateProgress()
            self.newDeck.s.statement("""
delete from reviewHistory""")
            self.newDeck.s.statement("""
update cards set
interval = 0,
lastInterval = 0,
due = created,
lastDue = 0,
factor = 2.5,
firstAnswered = 0,
reps = 0,
successive = 0,
averageTime = 0,
reviewTime = 0,
youngEase0 = 0,
youngEase1 = 0,
youngEase2 = 0,
youngEase3 = 0,
youngEase4 = 0,
matureEase0 = 0,
matureEase1 = 0,
matureEase2 = 0,
matureEase3 = 0,
matureEase4 = 0,
yesCount = 0,
noCount = 0,
spaceUntil = 0,
isDue = 1,
type = 2,
combinedDue = created,
modified = :now
""", now=time.time())
            self.newDeck.s.statement("""
delete from stats""")
        # media
        copyLocalMedia(client.deck, server.deck)
        # need to save manually
        self.newDeck.rebuildCounts()
        self.newDeck.updateAllPriorities()
        self.exportedCards = self.newDeck.cardCount
        self.newDeck.utcOffset = -1
        self.newDeck.s.commit()
        self.newDeck.close()
        self.deck.finishProgress()

    def localSummary(self):
        cardIds = self.cardIds()
        cStrIds = ids2str(cardIds)
        cards = self.deck.s.all("""
select id, modified from cards
where id in %s""" % cStrIds)
        facts = self.deck.s.all("""
select facts.id, facts.modified from cards, facts where
facts.id = cards.factId and
cards.id in %s""" % cStrIds)
        models = self.deck.s.all("""
select models.id, models.modified from models, facts where
facts.modelId = models.id and
facts.id in %s""" % ids2str([f[0] for f in facts]))
        media = self.deck.s.all("""
select id, created from media""")
        return {
            # cards
            "cards": cards,
            "delcards": [],
            # facts
            "facts": facts,
            "delfacts": [],
            # models
            "models": models,
            "delmodels": [],
            # media
            "media": media,
            "delmedia": [],
            }

class TextCardExporter(Exporter):

    key = _("Text files (*.txt)")
    ext = ".txt"

    def __init__(self, deck):
        Exporter.__init__(self, deck)
        self.includeTags = False

    def doExport(self, file):
        ids = self.cardIds()
        strids = ids2str(ids)
        self.deck.startProgress((len(ids) + 1) / 50)
        self.deck.updateProgress(_("Exporting..."))
        cards = self.deck.s.all("""
select cards.question, cards.answer, cards.id from cards
where cards.id in %s
order by cards.created""" % strids)
        self.deck.updateProgress()
        if self.includeTags:
            self.cardTags = dict(self.deck.s.all("""
select cards.id, facts.tags from cards, facts
where cards.factId = facts.id
and cards.id in %s
order by cards.created""" % strids))
        out = u"\n".join(["%s\t%s%s" % (
            self.escapeText(c[0], removeFields=True),
            self.escapeText(c[1], removeFields=True),
            self.tags(c[2]))
                          for c in cards])
        if out:
            out += "\n"
        file.write(out.encode("utf-8"))
        self.deck.finishProgress()

    def tags(self, id):
        if self.includeTags:
            return "\t" + ", ".join(parseTags(self.cardTags[id]))
        return ""

class TextFactExporter(Exporter):

    key = _("Text files (*.txt)")
    ext = ".txt"

    def __init__(self, deck):
        Exporter.__init__(self, deck)
        self.includeTags = False

    def doExport(self, file):
        cardIds = self.cardIds()
        self.deck.startProgress()
        self.deck.updateProgress(_("Exporting..."))
        facts = self.deck.s.all("""
select factId, value, facts.created from facts, fields
where
facts.id in
(select distinct factId from cards
where cards.id in %s)
and facts.id = fields.factId
order by factId, ordinal""" % ids2str(cardIds))
        txt = ""
        self.deck.updateProgress()
        if self.includeTags:
            self.factTags = dict(self.deck.s.all(
                "select id, tags from facts where id in %s" %
                ids2str([fact[0] for fact in facts])))
        groups = itertools.groupby(facts, itemgetter(0))
        groups = [[x for x in y[1]] for y in groups]
        groups = [(group[0][2],
                   "\t".join([self.escapeText(x[1]) for x in group]) +
                   self.tags(group[0][0]))
                  for group in groups]
        self.deck.updateProgress()
        groups.sort(key=itemgetter(0))
        out = [ret[1] for ret in groups]
        self.count = len(out)
        out = "\n".join(out)
        file.write(out.encode("utf-8"))
        self.deck.finishProgress()

    def tags(self, id):
        if self.includeTags:
            return "\t" + self.factTags[id]
        return ""

# Export modules
##########################################################################

def exporters():
    return (
        (_("Anki Deck (*.anki)"), AnkiExporter),
        (_("Cards in tab-separated text file (*.txt)"), TextCardExporter),
        (_("Facts in tab-separated text file (*.txt)"), TextFactExporter))
 151  
anki/facts.py
@@ -0,0 +1,151 @@
# -*- coding: utf-8 -*-
# Copyright: Damien Elmes <anki@ichi2.net>
# License: GNU GPL, version 3 or later; http://www.gnu.org/copyleft/gpl.html

"""\
Facts
========
"""
__docformat__ = 'restructuredtext'

import time
from anki.db import *
from anki.errors import *
from anki.models import Model, FieldModel, fieldModelsTable, formatQA
from anki.utils import genID
from anki.hooks import runHook

# Fields in a fact
##########################################################################

fieldsTable = Table(
    'fields', metadata,
    Column('id', Integer, primary_key=True),
    Column('factId', Integer, ForeignKey("facts.id"), nullable=False),
    Column('fieldModelId', Integer, ForeignKey("fieldModels.id"),
           nullable=False),
    Column('ordinal', Integer, nullable=False),
    Column('value', UnicodeText, nullable=False))

class Field(object):
    "A field in a fact."

    def __init__(self, fieldModel=None):
        if fieldModel:
            self.fieldModel = fieldModel
            self.ordinal = fieldModel.ordinal
        self.value = u""
        self.id = genID()

    def getName(self):
        return self.fieldModel.name
    name = property(getName)

mapper(Field, fieldsTable, properties={
    'fieldModel': relation(FieldModel)
    })

# Facts: a set of fields and a model
##########################################################################
# mapped in cards.py

factsTable = Table(
    'facts', metadata,
    Column('id', Integer, primary_key=True),
    Column('modelId', Integer, ForeignKey("models.id"), nullable=False),
    Column('created', Float, nullable=False, default=time.time),
    Column('modified', Float, nullable=False, default=time.time),
    Column('tags', UnicodeText, nullable=False, default=u""),
    # the following two fields are obsolete and now stored in cards table
    Column('spaceUntil', Float, nullable=False, default=0),
    Column('lastCardId', Integer, ForeignKey(
    "cards.id", use_alter=True, name="lastCardIdfk")))

class Fact(object):
    "A single fact. Fields exposed as dict interface."

    def __init__(self, model=None):
        self.model = model
        self.id = genID()
        if model:
            for fm in model.fieldModels:
                self.fields.append(Field(fm))
        self.new = True

    def isNew(self):
        return getattr(self, 'new', False)

    def keys(self):
        return [field.name for field in self.fields]

    def values(self):
        return [field.value for field in self.fields]

    def __getitem__(self, key):
        try:
            return [f.value for f in self.fields if f.name == key][0]
        except IndexError:
            raise KeyError(key)

    def __setitem__(self, key, value):
        try:
            [f for f in self.fields if f.name == key][0].value = value
        except IndexError:
            raise KeyError

    def get(self, key, default):
        try:
            return self[key]
        except (IndexError, KeyError):
            return default

    def assertValid(self):
        "Raise an error if required fields are empty."
        for field in self.fields:
            if not self.fieldValid(field):
                raise FactInvalidError(type="fieldEmpty",
                                       field=field.name)

    def fieldValid(self, field):
        return not (field.fieldModel.required and not field.value.strip())

    def assertUnique(self, s):
        "Raise an error if duplicate fields are found."
        for field in self.fields:
            if not self.fieldUnique(field, s):
                raise FactInvalidError(type="fieldNotUnique",
                                       field=field.name)

    def fieldUnique(self, field, s):
        if not field.fieldModel.unique:
            return True
        req = ("select value from fields "
               "where fieldModelId = :fmid and value = :val")
        if field.id:
            req += " and id != %s" % field.id
        return not s.scalar(req, val=field.value, fmid=field.fieldModel.id)

    def focusLost(self, field):
        runHook('fact.focusLost', self, field)

    def setModified(self, textChanged=False):
        "Mark modified and update cards."
        self.modified = time.time()
        if textChanged:
            d = {}
            for f in self.model.fieldModels:
                d[f.name] = (f.id, self[f.name])
            for card in self.cards:
                qa = formatQA(None, self.modelId, d, card.splitTags(), card.cardModel)
                card.question = qa['question']
                card.answer = qa['answer']
                card.setModified()

# Fact deletions
##########################################################################

factsDeletedTable = Table(
    'factsDeleted', metadata,
    Column('factId', Integer, ForeignKey("facts.id"),
           nullable=False),
    Column('deletedTime', Float, nullable=False))
 55  
anki/fonts.py
@@ -0,0 +1,55 @@
# -*- coding: utf-8 -*-
# Copyright: Damien Elmes <anki@ichi2.net>
# License: GNU GPL, version 3 or later; http://www.gnu.org/copyleft/gpl.html

"""\
Fonts - mapping to/from platform-specific fonts
==============================================================
"""

import sys

# set this to 'all', to get all fonts in a list
policy="platform"

mapping = [
    [u"Mincho", u"MS Mincho", "win32"],
    [u"Mincho", u"ＭＳ 明朝", "win32"],
    [u"Mincho", u"ヒラギノ明朝 Pro W3", "mac"],
    [u"Mincho", u"Kochi Mincho", "linux"],
    [u"Mincho", u"東風明朝", "linux"],
    ]

def platform():
    if sys.platform == "win32":
        return "win32"
    elif sys.platform.startswith("darwin"):
        return "mac"
    else:
        return "linux"

def toCanonicalFont(family):
    "Turn a platform-specific family into a canonical one."
    for (s, p, type) in mapping:
        if family == p:
            return s
    return family

def toPlatformFont(family):
    "Turn a canonical font into a platform-specific one."
    if policy == "all":
        return allFonts(family)
    ltype = platform()
    for (s, p, type) in mapping:
        if family == s and type == ltype:
            return p
    return family

def substitutions():
    "Return a tuple mapping canonical fonts to platform ones."
    type = platform()
    return [(s, p) for (s, p, t) in mapping if t == type]

def allFonts(family):
    ret = ", ".join([p for (s, p, t) in mapping if s == family])
    return ret or family
 346  
anki/graphs.py
@@ -0,0 +1,346 @@
# -*- coding: utf-8 -*-
# Copyright: Damien Elmes <anki@ichi2.net>
# License: GNU GPL, version 3 or later; http://www.gnu.org/copyleft/gpl.html

"""\
Graphs of deck statistics
==============================
"""
__docformat__ = 'restructuredtext'

import os, sys, time
import anki.stats
from anki.lang import _

import datetime

#colours for graphs
dueYoungC = "#ffb380"
dueMatureC = "#ff5555"
dueCumulC = "#ff8080"

reviewNewC = "#80b3ff"
reviewYoungC = "#5555ff"
reviewMatureC = "#0f5aff"
reviewTimeC = "#0fcaff"

easesNewC = "#80b3ff"
easesYoungC = "#5555ff"
easesMatureC = "#0f5aff"

addedC = "#b3ff80"
firstC = "#b380ff"
intervC = "#80e5ff"

# support frozen distribs
if sys.platform.startswith("darwin"):
    try:
        del os.environ['MATPLOTLIBDATA']
    except:
        pass
elif getattr(sys, "frozen", None):
    os.environ['MATPLOTLIBDATA'] = os.path.dirname(sys.argv[0])

try:
    from matplotlib.figure import Figure
except UnicodeEncodeError:
    # haven't tracked down the cause of this yet, but reloading fixes it
    try:
        from matplotlib.figure import Figure
    except ImportError:
        pass
except ImportError:
    pass

def graphsAvailable():
    return 'matplotlib' in sys.modules

class DeckGraphs(object):

    def __init__(self, deck, width=8, height=3, dpi=75):
        self.deck = deck
        self.stats = None
        self.width = width
        self.height = height
        self.dpi = dpi

    def calcStats (self):
        if not self.stats:
            days = {}
            daysYoung = {}
            daysMature =  {}
            months = {}
            next = {}
            lowestInDay = 0
            midnightOffset = time.timezone - self.deck.utcOffset
            now = list(time.localtime(time.time()))
            now[3] = 23; now[4] = 59
            self.endOfDay = time.mktime(now) - midnightOffset
            t = time.time()
            young = self.deck.s.all("""
select interval, combinedDue
from cards where priority in (1,2,3,4) and
type in (0, 1) and interval <= 21""")
            mature = self.deck.s.all("""
select interval, combinedDue
from cards where type = 1 and priority in (1,2,3,4) and interval > 21""")

            for (src, dest) in [(young, daysYoung),
                                (mature, daysMature)]:
                for (interval, due) in src:
                    day=int(round(interval))
                    days[day] = days.get(day, 0) + 1
                    indays = int(((due - self.endOfDay) / 86400.0) + 1)
                    next[indays] = next.get(indays, 0) + 1 # type-agnostic stats
                    dest[indays] = dest.get(indays, 0) + 1 # type-specific stats
                    if indays < lowestInDay:
                        lowestInDay = indays
            self.stats = {}
            self.stats['next'] = next
            self.stats['days'] = days
            self.stats['daysByType'] = {'young': daysYoung,
                                        'mature': daysMature}
            self.stats['months'] = months
            self.stats['lowestInDay'] = lowestInDay

            dayReps = self.deck.s.all("""
select day,
       matureEase0+matureEase1+matureEase2+matureEase3+matureEase4 as matureReps,
       reps-(newEase0+newEase1+newEase2+newEase3+newEase4) as combinedYoungReps,
       reps as combinedNewReps
from stats
where type = 1""")

            dayTimes = self.deck.s.all("""
select day, reviewTime as reviewTime
from stats
where type = 1""")

            todaydt = datetime.datetime(*list(time.localtime(time.time())[:3]))
            for dest, source in [("dayRepsNew", "combinedNewReps"),
                                 ("dayRepsYoung", "combinedYoungReps"),
                                 ("dayRepsMature", "matureReps")]:
                self.stats[dest] = dict(
                    map(lambda dr: (-(todaydt -datetime.datetime(
                    *(int(x)for x in dr["day"].split("-")))).days, dr[source]), dayReps))

            self.stats['dayTimes'] = dict(
                map(lambda dr: (-(todaydt -datetime.datetime(
                *(int(x)for x in dr["day"].split("-")))).days, dr["reviewTime"]/60.0), dayTimes))

    def nextDue(self, days=30):
        self.calcStats()
        fig = Figure(figsize=(self.width, self.height), dpi=self.dpi)
        graph = fig.add_subplot(111)
        dayslists = [self.stats['next'], self.stats['daysByType']['mature']]

        for dayslist in dayslists:
            self.addMissing(dayslist, self.stats['lowestInDay'], days)

        argl = []

        for dayslist in dayslists:
            dl = [x for x in dayslist.items() if x[0] <= days]
            argl.extend(list(self.unzip(dl)))

        self.filledGraph(graph, days, [dueYoungC, dueMatureC], *argl)

        cheat = fig.add_subplot(111)
        b1 = cheat.bar(0, 0, color = dueYoungC)
        b2 = cheat.bar(1, 0, color = dueMatureC)

        cheat.legend([b1, b2], [
            "Young",
            "Mature"], loc='upper right')

        graph.set_xlim(xmin=self.stats['lowestInDay'], xmax=days)
        return fig

    def workDone(self, days=30):
        self.calcStats()

        for type in ["dayRepsNew", "dayRepsYoung", "dayRepsMature"]:
            self.addMissing(self.stats[type], -days, 0)

        fig = Figure(figsize=(self.width, self.height), dpi=self.dpi)
        graph = fig.add_subplot(111)

        args = sum((self.unzip(self.stats[type].items(), limit=days, reverseLimit=True) for type in ["dayRepsMature", "dayRepsYoung", "dayRepsNew"][::-1]), [])

        self.filledGraph(graph, days, [reviewNewC, reviewYoungC, reviewMatureC], *args)

        cheat = fig.add_subplot(111)
        b1 = cheat.bar(-3, 0, color = reviewNewC)
        b2 = cheat.bar(-4, 0, color = reviewYoungC)
        b3 = cheat.bar(-5, 0, color = reviewMatureC)

        cheat.legend([b1, b2, b3], [
            "New",
            "Young",
            "Mature"], loc='upper left')

        graph.set_xlim(xmin=-days, xmax=0)
        graph.set_ylim(ymax=max(max(a for a in args[1::2])) + 10)

        return fig

    def timeSpent(self, days=30):
        self.calcStats()
        fig = Figure(figsize=(self.width, self.height), dpi=self.dpi)
        times = self.stats['dayTimes']
        self.addMissing(times, -days, 0)
        times = self.unzip([(day,y) for (day,y) in times.items()
                            if day + days >= 0])
        graph = fig.add_subplot(111)
        self.filledGraph(graph, days, reviewTimeC, *times)
        graph.set_xlim(xmin=-days, xmax=0)
        graph.set_ylim(ymax=max(a for a in times[1]) + 0.1)
        return fig

    def cumulativeDue(self, days=30):
        self.calcStats()
        fig = Figure(figsize=(self.width, self.height), dpi=self.dpi)
        graph = fig.add_subplot(111)
        dl = [x for x in self.stats['next'].items() if x[0] <= days]
        (x, y) = self.unzip(dl)
        count=0
        y = list(y)
        for i in range(len(x)):
            count = count + y[i]
            if i == 0:
                continue
            y[i] = count
            if x[i] > days:
                break
        x = list(x); x.append(99999)
        y.append(count)
        self.filledGraph(graph, days, dueCumulC, x, y)
        graph.set_xlim(xmin=self.stats['lowestInDay'], xmax=days)
        graph.set_ylim(ymax=graph.get_ylim()[1]+10)
        return fig

    def intervalPeriod(self, days=30):
        self.calcStats()
        fig = Figure(figsize=(self.width, self.height), dpi=self.dpi)
        ints = self.stats['days']
        self.addMissing(ints, 0, days)
        intervals = self.unzip(ints.items(), limit=days)
        graph = fig.add_subplot(111)
        self.filledGraph(graph, days, intervC, *intervals)
        graph.set_xlim(xmin=0, xmax=days)
        return fig

    def addedRecently(self, numdays=30, attr='created'):
        self.calcStats()
        days = {}
        fig = Figure(figsize=(self.width, self.height), dpi=self.dpi)
        limit = self.endOfDay - (numdays + 1) * 86400
        res = self.deck.s.column0("select %s from cards where %s >= %f" %
                                  (attr, attr, limit))
        for r in res:
            d = int((r - self.endOfDay) / 86400.0)
            days[d] = days.get(d, 0) + 1
        self.addMissing(days, -numdays, 0)
        graph = fig.add_subplot(111)
        intervals = self.unzip(days.items())
        if attr == 'created':
            colour = addedC
        else:
            colour = firstC
        self.filledGraph(graph, numdays, colour, *intervals)
        graph.set_xlim(xmin=-numdays, xmax=0)
        return fig

    def addMissing(self, dic, min, max):
        for i in range(min, max+1):
            if not i in dic:
                dic[i] = 0

    def unzip(self, tuples, fillFix=True, limit=None, reverseLimit=False):
        tuples.sort(cmp=lambda x,y: cmp(x[0], y[0]))
        if limit:
            if reverseLimit:
                tuples = tuples[-limit - 1:]
            else:
                tuples = tuples[:limit + 1]

        new = zip(*tuples)
        return new

    def filledGraph(self, graph, days, colours=["b"], *args):
        if isinstance(colours, str):
            colours = [colours]
        thick = True
        for triplet in [(args[n], args[n + 1], colours[n / 2]) for n in range(0, len(args), 2)]:
            x = list(triplet[0])
            y = list(triplet[1])
            c = triplet[2]
            lowest = 99999
            highest = -lowest
            for i in range(len(x)):
                if x[i] < lowest:
                    lowest = x[i]
                if x[i] > highest:
                    highest = x[i]
            # ensure the filled area reaches the bottom
            x.insert(0, lowest - 1)
            y.insert(0, 0)
            x.append(highest + 1)
            y.append(0)
            # plot
            lw = 0
            if days < 180:
                lw += 1
            if thick:
                lw += 1
            if days > 360:
                lw = 0
            graph.fill(x, y, c, lw = lw)
            thick = False

        graph.grid(True)
        graph.set_ylim(ymin=0, ymax=max(2, graph.get_ylim()[1]))

    def easeBars(self):
        fig = Figure(figsize=(3, 3), dpi=self.dpi)
        graph = fig.add_subplot(111)
        types = ("new", "young", "mature")
        enum = 5
        offset = 0
        arrsize = 16
        arr = [0] * arrsize
        n = 0
        colours = [easesNewC, easesYoungC, easesMatureC]
        bars = []
        gs = anki.stats.globalStats(self.deck)
        for type in types:
            total = (getattr(gs, type + "Ease0") +
                     getattr(gs, type + "Ease1") +
                     getattr(gs, type + "Ease2") +
                     getattr(gs, type + "Ease3") +
                     getattr(gs, type + "Ease4"))
            setattr(gs, type + "Ease1", getattr(gs, type + "Ease0") +
                    getattr(gs, type + "Ease1"))
            setattr(gs, type + "Ease0", -1)
            for e in range(1, enum):
                try:
                    arr[e+offset] = (getattr(gs, type + "Ease%d" % e)
                                     / float(total)) * 100 + 1
                except ZeroDivisionError:
                    arr[e+offset] = 0
            bars.append(graph.bar(range(arrsize), arr, width=1.0,
                                  color=colours[n], align='center'))
            arr = [0] * arrsize
            offset += 5
            n += 1
        x = ([""] + [str(n) for n in range(1, enum)]) * 3
        graph.legend([p[0] for p in bars], ("New",
                                            "Young",
                                            "Mature"),
                     'upper left')
        graph.set_ylim(ymax=100)
        graph.set_xlim(xmax=15)
        graph.set_xticks(range(arrsize))
        graph.set_xticklabels(x)
        graph.grid(True)
        return fig
 75  
anki/history.py
@@ -0,0 +1,75 @@
# -*- coding: utf-8 -*-
# Copyright: Damien Elmes <anki@ichi2.net>
# License: GNU GPL, version 3 or later; http://www.gnu.org/copyleft/gpl.html

"""\
History - keeping a record of all reviews
==========================================
If users run 'check db', duplicate records will be inserted into the DB - I
really should have used the time stamp as the key. You can remove them by
keeping the lowest id for any given timestamp.
"""

__docformat__ = 'restructuredtext'

import time
from anki.db import *

reviewHistoryTable = Table(
    'reviewHistory', metadata,
    Column('cardId', Integer, nullable=False),
    Column('time', Float, nullable=False, default=time.time),
    Column('lastInterval', Float, nullable=False),
    Column('nextInterval', Float, nullable=False),
    Column('ease', Integer, nullable=False),
    Column('delay', Float, nullable=False),
    Column('lastFactor', Float, nullable=False),
    Column('nextFactor', Float, nullable=False),
    Column('reps', Float, nullable=False),
    Column('thinkingTime', Float, nullable=False),
    Column('yesCount', Float, nullable=False),
    Column('noCount', Float, nullable=False),
    PrimaryKeyConstraint("cardId", "time"))

class CardHistoryEntry(object):
    "Create after rescheduling card."

    def __init__(self, card=None, ease=None, delay=None):
        if not card:
            return
        self.cardId = card.id
        self.lastInterval = card.lastInterval
        self.nextInterval = card.interval
        self.lastFactor = card.lastFactor
        self.nextFactor = card.factor
        self.reps = card.reps
        self.yesCount = card.yesCount
        self.noCount = card.noCount
        self.ease = ease
        self.delay = delay
        self.thinkingTime = card.thinkingTime()

    def writeSQL(self, s):
        s.statement("""
insert into reviewHistory
(cardId, lastInterval, nextInterval, ease, delay, lastFactor,
nextFactor, reps, thinkingTime, yesCount, noCount, time)
values (
:cardId, :lastInterval, :nextInterval, :ease, :delay,
:lastFactor, :nextFactor, :reps, :thinkingTime, :yesCount, :noCount,
:time)""",
                    cardId=self.cardId,
                    lastInterval=self.lastInterval,
                    nextInterval=self.nextInterval,
                    ease=self.ease,
                    delay=self.delay,
                    lastFactor=self.lastFactor,
                    nextFactor=self.nextFactor,
                    reps=self.reps,
                    thinkingTime=self.thinkingTime,
                    yesCount=self.yesCount,
                    noCount=self.noCount,
                    time=time.time())

mapper(CardHistoryEntry, reviewHistoryTable)
 62  
anki/hooks.py
@@ -0,0 +1,62 @@
# -*- coding: utf-8 -*-
# Copyright: Damien Elmes <anki@ichi2.net>
# License: GNU GPL, version 3 or later; http://www.gnu.org/copyleft/gpl.html

"""\
Hooks - hook management and tools for extending Anki
==============================================================================
To find available hooks, grep for runHook in the source code.
Instrumenting allows you to modify functions that don't have hooks available.
If you call wrap() with pos='around', the original function will not be called
automatically but can be called with _old().
"""

# Hooks
##############################################################################

_hooks = {}

def runHook(hook, *args):
    "Run all functions on hook."
    hook = _hooks.get(hook, None)
    if hook:
        for func in hook:
            func(*args)

def runFilter(hook, arg, *args):
    hook = _hooks.get(hook, None)
    if hook:
        for func in hook:
            arg = func(arg, *args)
    return arg

def addHook(hook, func):
    "Add a function to hook. Ignore if already on hook."
    if not _hooks.get(hook, None):
        _hooks[hook] = []
    if func not in _hooks[hook]:
        _hooks[hook].append(func)

def removeHook(hook, func):
    "Remove a function if is on hook."
    hook = _hooks.get(hook, [])
    if func in hook:
        hook.remove(func)

# Instrumenting
##############################################################################

def wrap(old, new, pos="after"):
    "Override an existing function."
    def repl(*args, **kwargs):
        if pos == "after":
            old(*args, **kwargs)
            return new(*args, **kwargs)
        elif pos == "before":
            new(*args, **kwargs)
            return old(*args, **kwargs)
        else:
            return new(_old=old, *args, **kwargs)
    return repl
 283  
anki/importing/__init__.py
@@ -0,0 +1,283 @@
# -*- coding: utf-8 -*-
# Copyright: Damien Elmes <anki@ichi2.net>
# License: GNU GPL, version 3 or later; http://www.gnu.org/copyleft/gpl.html

"""\
Importing support
==============================
To import, a mapping is created of the form: [FieldModel, ...]. The mapping
may be extended by calling code if a file has more fields. To ignore a
particular FieldModel, replace it with None. A special number 0 donates a tags
field. The same field model should not occur more than once."""

__docformat__ = 'restructuredtext'

import time
from anki.cards import cardsTable
from anki.facts import factsTable, fieldsTable
from anki.lang import _
from anki.utils import genID, canonifyTags
from anki.errors import *
from anki.utils import canonifyTags
from anki.deck import NEW_CARDS_RANDOM

# Base importer
##########################################################################

class ForeignCard(object):
    "An temporary object storing fields and attributes."
    def __init__(self):
        self.fields = []
        self.tags = u""

class Importer(object):

    needMapper = True
    tagDuplicates = False
    multipleCardsAllowed = True
    needDelimiter = False

    def __init__(self, deck, file):
        self.file = file
        self._model = deck.currentModel
        self._mapping = None
        self.log = []
        self.deck = deck
        self.total = 0
        self.tagsToAdd = u""

    def doImport(self):
        "Import."
        random = self.deck.newCardOrder == NEW_CARDS_RANDOM
        num = 7
        if random:
            num += 1
        self.deck.startProgress(num)
        self.deck.updateProgress(_("Importing..."))
        c = self.foreignCards()
        if self.importCards(c):
            self.deck.updateProgress()
            self.deck.updateCardTags(self.cardIds)
            self.deck.updateProgress()
            self.deck.updatePriorities(self.cardIds)
            if random:
                self.deck.updateProgress()
                self.deck.randomizeNewCards(self.cardIds)
        self.deck.finishProgress()
        if c:
            self.deck.setModified()

    def fields(self):
        "The number of fields."
        return 0

    def foreignCards(self):
        "Return a list of foreign cards for importing."
        assert 0

    def resetMapping(self):
        "Reset mapping to default."
        numFields = self.fields()
        m = [f for f in self.model.fieldModels]
        m.append(0)
        rem = max(0, self.fields() - len(m))
        m += [None] * rem
        del m[numFields:]
        self._mapping = m

    def getMapping(self):
        if not self._mapping:
            self.resetMapping()
        return self._mapping

    def setMapping(self, mapping):
        self._mapping = mapping

    mapping = property(getMapping, setMapping)

    def getModel(self):
        return self._model

    def setModel(self, model):
        self._model = model
        # update the mapping for the new model
        self._mapping = None
        self.getMapping()

    model = property(getModel, setModel)

    def importCards(self, cards):
        "Convert each card into a fact, apply attributes and add to deck."
        # ensure all unique and required fields are mapped
        for fm in self.model.fieldModels:
            if fm.required or fm.unique:
                if fm not in self.mapping:
                    raise ImportFormatError(
                        type="missingRequiredUnique",
                        info=_("Missing required/unique field '%(field)s'") %
                        {'field': fm.name})
        active = 0
        for cm in self.model.cardModels:
            if cm.active: active += 1
        if active > 1 and not self.multipleCardsAllowed:
            raise ImportFormatError(type="tooManyCards",
                info=_("""\
The current importer only supports a single active card template. Please disable\
 all but one card template."""))
        # strip invalid cards
        cards = self.stripInvalid(cards)
        cards = self.stripOrTagDupes(cards)
        self.cardIds = []
        if cards:
            self.addCards(cards)
        return cards

    def addCards(self, cards):
        "Add facts in bulk from foreign cards."
        # map tags field to attr
        try:
            idx = self.mapping.index(0)
            for c in cards:
                c.tags += " " + c.fields[idx]
        except ValueError:
            pass
        # add facts
        self.deck.updateProgress()
        factIds = [genID() for n in range(len(cards))]
        def fudgeCreated(d, tmp=[]):
            if not tmp:
                tmp.append(time.time())
            else:
                tmp[0] += 0.00001
            d['created'] = tmp[0]
            return d
        self.deck.s.execute(factsTable.insert(),
            [fudgeCreated({'modelId': self.model.id,
              'tags': canonifyTags(self.tagsToAdd + " " + cards[n].tags),
              'id': factIds[n]}) for n in range(len(cards))])
        self.deck.factCount += len(factIds)
        self.deck.s.execute("""
delete from factsDeleted
where factId in (%s)""" % ",".join([str(s) for s in factIds]))
        # add all the fields
        self.deck.updateProgress()
        for fm in self.model.fieldModels:
            try:
                index = self.mapping.index(fm)
            except ValueError:
                index = None
            data = [{'factId': factIds[m],
                     'fieldModelId': fm.id,
                     'ordinal': fm.ordinal,
                     'id': genID(),
                     'value': (index is not None and
                               cards[m].fields[index] or u"")}
                    for m in range(len(cards))]
            self.deck.s.execute(fieldsTable.insert(),
                                data)
        # and cards
        self.deck.updateProgress()
        now = time.time()
        active = 0
        for cm in self.model.cardModels:
            self._now = now
            if cm.active:
                active += 1
                data = [self.addMeta({
                    'id': genID(),
                    'factId': factIds[m],
                    'cardModelId': cm.id,
                    'ordinal': cm.ordinal,
                    'question': u"",
                    'answer': u"",
                    'type': 2},cards[m]) for m in range(len(cards))]
                self.deck.s.execute(cardsTable.insert(),
                                    data)
        self.deck.updateProgress()
        self.deck.updateCardsFromFactIds(factIds)
        self.deck.cardCount += len(cards) * active
        self.total = len(factIds)

    def addMeta(self, data, card):
        "Add any scheduling metadata to cards"
        if 'fields' in card.__dict__:
            del card.fields
        t = self._now + data['ordinal']
        data['created'] = t
        data['modified'] = t
        data['due'] = t
        self._now += .00001
        data.update(card.__dict__)
        data['tags'] = u""
        self.cardIds.append(data['id'])
        data['combinedDue'] = data['due']
        data['isDue'] = data['combinedDue'] < time.time()
        return data

    def stripInvalid(self, cards):
        return [c for c in cards if self.cardIsValid(c)]

    def cardIsValid(self, card):
        fieldNum = len(card.fields)
        for n in range(len(self.mapping)):
            if self.mapping[n] and self.mapping[n].required:
                if fieldNum <= n or not card.fields[n].strip():
                    self.log.append("Fact is missing field '%s': %s" %
                                    (self.mapping[n].name,
                                     ", ".join(card.fields)))
                    return False
        return True

    def stripOrTagDupes(self, cards):
        # build a cache of items
        self.uniqueCache = {}
        for field in self.mapping:
            if field and field.unique:
                self.uniqueCache[field.id] = self.getUniqueCache(field)
        return [c for c in cards if self.cardIsUnique(c)]

    def getUniqueCache(self, field):
        "Return a dict with all fields, to test for uniqueness."
        return dict(self.deck.s.all(
            "select value, 1 from fields where fieldModelId = :fmid",
            fmid=field.id))

    def cardIsUnique(self, card):
        fieldsAsTags = []
        for n in range(len(self.mapping)):
            if self.mapping[n] and self.mapping[n].unique:
                if card.fields[n] in self.uniqueCache[self.mapping[n].id]:
                    if not self.tagDuplicates:
                        self.log.append("Fact has duplicate '%s': %s" %
                                        (self.mapping[n].name,
                                         ", ".join(card.fields)))
                        return False
                    fieldsAsTags.append(self.mapping[n].name.replace(" ", "-"))
                else:
                    self.uniqueCache[self.mapping[n].id][card.fields[n]] = 1
        if fieldsAsTags:
            card.tags += u" Duplicate:" + (
                "+".join(fieldsAsTags))
            card.tags = canonifyTags(card.tags)
        return True

# Export modules
##########################################################################

from anki.importing.csvfile import TextImporter
from anki.importing.anki10 import Anki10Importer
from anki.importing.mnemosyne10 import Mnemosyne10Importer
from anki.importing.wcu import WCUImporter
from anki.importing.supermemo_xml import SupermemoXmlImporter
from anki.importing.dingsbums import DingsBumsImporter

Importers = [
    (_("Text separated by tabs or semicolons (*)"), TextImporter),
    (_("Anki Deck (*.anki)"), Anki10Importer),
    (_("Mnemosyne Deck (*.mem)"), Mnemosyne10Importer),
    (_("CueCard Deck (*.wcu)"), WCUImporter),
    (_("Supermemo XML export (*.xml)"), SupermemoXmlImporter),
    # Hack: should be "DingsBums?!" but QT appears to take offence at the punctuation
    (_("DingsBums Deck (*.xml)"), DingsBumsImporter),
    ]
 89  
anki/importing/anki10.py
@@ -0,0 +1,89 @@
# -*- coding: utf-8 -*-
# Copyright: Damien Elmes <anki@ichi2.net>
# License: GNU GPL, version 3 or later; http://www.gnu.org/copyleft/gpl.html

"""\
Importing Anki 0.9+ decks
==========================
"""
__docformat__ = 'restructuredtext'

from anki import DeckStorage
from anki.importing import Importer
from anki.sync import SyncClient, SyncServer, copyLocalMedia
from anki.lang import _
from anki.utils import ids2str
from anki.deck import NEW_CARDS_RANDOM
import time

class Anki10Importer(Importer):

    needMapper = False

    def doImport(self):
        "Import."
        random = self.deck.newCardOrder == NEW_CARDS_RANDOM
        num = 4
        if random:
            num += 1
        self.deck.startProgress(num)
        self.deck.updateProgress(_("Importing..."))
        src = DeckStorage.Deck(self.file, backup=False)
        client = SyncClient(self.deck)
        server = SyncServer(src)
        client.setServer(server)
        # if there is a conflict, sync local -> src
        client.localTime = self.deck.modified
        client.remoteTime = 0
        src.s.execute("update facts set modified = 1")
        src.s.execute("update models set modified = 1")
        src.s.execute("update cards set modified = 1")
        src.s.execute("update media set created = 1")
        self.deck.s.flush()
        # set up a custom change list and sync
        lsum = client.summary(0)
        self._clearDeleted(lsum)
        rsum = server.summary(0)
        self._clearDeleted(rsum)
        payload = client.genPayload((lsum, rsum))
        # no need to add anything to src
        payload['added-models'] = []
        payload['added-cards'] = []
        payload['added-facts'] = {'facts': [], 'fields': []}
        assert payload['deleted-facts'] == []
        assert payload['deleted-cards'] == []
        assert payload['deleted-models'] == []
        self.deck.updateProgress()
        res = server.applyPayload(payload)
        self.deck.updateProgress()
        client.applyPayloadReply(res)
        copyLocalMedia(server.deck, client.deck)
        # add tags
        self.deck.updateProgress()
        fids = [f[0] for f in res['added-facts']['facts']]
        self.deck.addTags(fids, self.tagsToAdd)
        # mark import material as newly added
        self.deck.s.statement(
            "update cards set modified = :t where id in %s" %
            ids2str([x[0] for x in res['added-cards']]), t=time.time())
        self.deck.s.statement(
            "update facts set modified = :t where id in %s" %
            ids2str([x[0] for x in res['added-facts']['facts']]), t=time.time())
        self.deck.s.statement(
            "update models set modified = :t where id in %s" %
            ids2str([x['id'] for x in res['added-models']]), t=time.time())
        # update total and refresh
        self.total = len(res['added-facts']['facts'])
        src.s.rollback()
        src.engine.dispose()
        # randomize?
        if random:
            self.deck.updateProgress()
            self.deck.randomizeNewCards([x[0] for x in res['added-cards']])
        self.deck.flushMod()
        self.deck.finishProgress()

    def _clearDeleted(self, sum):
        sum['delcards'] = []
        sum['delfacts'] = []
        sum['delmodels'] = []
 132  
anki/importing/csvfile.py
@@ -0,0 +1,132 @@
# -*- coding: utf-8 -*-
# Copyright: Damien Elmes <anki@ichi2.net>
# License: GNU GPL, version 3 or later; http://www.gnu.org/copyleft/gpl.html

"""\
Importing CSV/TSV files
========================
"""
__docformat__ = 'restructuredtext'

import codecs, csv, re
from anki.importing import Importer, ForeignCard
from anki.lang import _
from anki.errors import *
from anki.utils import tidyHTML

class TextImporter(Importer):

    needDelimiter = True
    patterns = ("\t", ";")

    def __init__(self, *args):
        Importer.__init__(self, *args)
        self.lines = None
        self.fileobj = None
        self.delimiter = None

    def foreignCards(self):
        self.sniff()
        # process all lines
        log = []
        cards = []
        lineNum = 0
        ignored = 0
        if self.delimiter:
            reader = csv.reader(self.data, delimiter=self.delimiter)
        else:
            reader = csv.reader(self.data, self.dialect)
        for row in reader:
            try:
                row = [unicode(x, "utf-8") for x in row]
            except UnicodeDecodeError, e:
                raise ImportFormatError(
                    type="encodingError",
                    info=_("The file was not in UTF8 format."))
            if len(row) != self.numFields:
                log.append(_(
                    "'%(row)s' had %(num1)d fields, "
                    "expected %(num2)d") % {
                    "row": u" ".join(row),
                    "num1": len(row),
                    "num2": self.numFields,
                    })
                ignored += 1
                continue
            card = self.cardFromFields(row)
            cards.append(card)
        self.log = log
        self.ignored = ignored
        self.fileobj.close()
        return cards

    def sniff(self):
        "Parse the top line and determine the pattern and number of fields."
        # load & look for the right pattern
        self.cacheFile()

    def cacheFile(self):
        "Read file into self.lines if not already there."
        if not self.fileobj:
            self.openFile()

    def openFile(self):
        self.dialect = None
        self.fileobj = open(self.file, "rbU")
        self.data = self.fileobj.read()
        self.data = re.sub("^ *#.*", "", self.data)
        self.data = [x for x in self.data.split("\n") if x]
        if self.data:
            self.updateDelimiter()
        if not self.dialect and not self.delimiter:
            raise ImportFormatError(
                type="encodingError",
                info=_("Couldn't determine format of file."))

    def updateDelimiter(self):
        def err():
            raise ImportFormatError(
                type="encodingError",
                info=_("File is not encoded in UTF-8."))
        self.dialect = None
        sniffer = csv.Sniffer()
        delims = [',', '\t', ';', ':']
        if not self.delimiter:
            try:
                self.dialect = sniffer.sniff("\n".join(self.data[:10]),
                                             delims)
            except:
                try:
                    self.dialect = sniffer.sniff(self.data[0], delims)
                except:
                    pass
        if self.dialect:
            try:
                reader = csv.reader(self.data, self.dialect)
            except:
                err()
        else:
            if not self.delimiter:
                if "\t" in self.data[0]:
                    self.delimiter = "\t"
                elif ";" in self.data[0]:
                    self.delimiter = ";"
                elif "," in self.data[0]:
                    self.delimiter = ","
                else:
                    self.delimiter = " "
            reader = csv.reader(self.data, delimiter=self.delimiter)
        try:
            self.numFields = len(reader.next())
        except:
            err()

    def fields(self):
        "Number of fields."
        self.sniff()
        return self.numFields

    def cardFromFields(self, fields):
        card = ForeignCard()
        card.fields.extend([x.strip() for x in fields])
        return card
 224  
anki/importing/dingsbums.py
@@ -0,0 +1,224 @@
# -*- coding: utf-8 -*-
# Copyright: rick@vanosten.net
# License: GNU GPL, version 3 or later; http://www.gnu.org/copyleft/gpl.html

"""\
Importing DingsBums?! decks (see dingsbums.vanosten.net)
========================================================
GENERAL:
* DingsBums?! files are xml with relational content.
* DingsBums?!'s data format is more relational than Anki's. Therefore some of the relations are denormalized.
* A stack in DingsBums?! is a deck in Anki
* An entry type in DingsBums?! is a model in Anki
* An entry type attribute in DingsBums?! is a field in Anki
* An entry type attribute item in DingsBums?! does not exist in Anki. It is just the contents of a field denormalized.
* There is not concept of units and categories in Anki.
* An entry in DingsBums?! is basically a fact in Anki
* There are no cards in DingsBums?!
* There is a special plugin in Anki for Pinyin. Therefore syllable settings from DingsBums?! are ignored.
* The locale settings in DingsBums?! have never been active and are therefore ignored.
* All statistics will get lost - i.e. no historic informaiton about progress will be migrated to Anki.
* The DingsBums?! stack needs to end with *.xml in order to be recognizable in Anki import.
* The learning levels from DingsBums?! are not taken into account because they do not really match spaced repetition.
DESIGN OF MAPPING FROM DingsBums?! TO Anki
*
* The contents of units and categories are transferred as tags to Anki: unit/category label + "_" + unit/category name.
* If unit/category name has space, then it is replaced by "_"
* The fields "base", "target", explanation", example", "pronounciation" and "relation" are created as fields in Anki
* The fields are only created and used in Anki, if they were visible in DingsBums?!, i.e. < 3:
VISIBILITY_ALWAYS = 0;
VISIBILITY_QUERY = 1;
VISIBILITY_SOLUTION = 2;
VISIBILITY_NEVER = 3;
* The name of the fields in Anki is taken from the labels defined in the stack properties
* The description field of Anki is not used/displayed. Therefore there is not much sense to transfer the contents of title, author, notes, copyright and license.
* The visibility options in DingsBums?! are used as hints to make cards in Anki:
    + Two card templates are made for each model and then applied to each fact when importing.
    + "Forward": Base -> "Question", target -> "Answer"; if "always", then part of question; if "solution" or "part of query" then part of answer
    + "Reverse": Target -> "Answer", base -> "Question"
    + Unit and category are not shown, as they are tags and there is no possibility to distinguish between visibility settings in this case.
CHANGES MADE TO LIBANKI:
* Added libanki/anki/import/dingsbums.py
* Added DingsBumsImporter to importers at end of file libanki/anki/import/__init__.py
* Added libanki/tests/importing/dingsbums.xml
* Added method test_dingsbums() to libanki/anki/tests/test_importing.py
"""

from anki.importing import Importer
from anki import DeckStorage
from anki.facts import Fact
from anki.models import FieldModel
from anki.models import CardModel
from anki.models import Model
from anki.lang import _

from xml.sax import make_parser
from xml.sax.handler import ContentHandler
import sys

class DingsBumsHandler(ContentHandler):

    def __init__(self, deck):
        self.eid = "0"
        self.attributeItems = {}
        self.unitCategories = {}
        self.attributes = {}
        self.currentContent = ""
        self.labels = {}
        self.labels["pro"] = u"Pronunciation" # the user cannot change this label and therefore not in xml-file
        self.labels["rel"] = u"Relation"
        self.visibility = {}
        self.models = {}
        self.typeAttributes = {} # mapping of entry type and attribute name (e.g. "ET8_A1", "ET8_A2", ...)
        self.deck = deck
        self.f = None # the current fact
        self.countFacts = 0

    def startElement(self, name, attrs):
        """Implements SAX interface"""
        if name in ["etai", "unit", "category"]:
            self.eid = attrs["eid"]
        elif "eta" == name:
            self.attributes[attrs["eid"]] = attrs["n"]
        elif "entrytype" == name:
            self.createModel(attrs)
        elif "e" == name:
            self.createFact(attrs)

    def endElement(self, name):
        """Implements SAX interface"""
        if "vocabulary" == name:
            self.deck.updateProgress()
        elif name.endswith("label"):
            self.labels[name.replace("label", "")] = self.currentContent
        elif name.startswith("vis"):
            self.visibility[name.replace("vis", "")] = self.currentContent
        elif "etai" == name:
            self.attributeItems[self.eid] = self.currentContent
        elif "etattributes" == name:
            self.deck.updateProgress()
        elif "entrytypes" == name:
            self.deck.updateProgress()
        elif "name" == name:
            self.unitCategories[self.eid] = self.prepareTag(self.currentContent)
        elif "units" == name:
            self.deck.updateProgress()
        elif "categories" == name:
            self.deck.updateProgress()
        elif "entries" == name:
            self.deck.updateProgress()
        elif "e" == name:
            self.deck.addFact(self.f)
            self.countFacts += 1
        # there is a not logical mapping between the tags for fields and names in VocabInfo
        # See net.vanosten.dings.consts.Constants.XML_*
        elif "o" == name:
            self.f.__setitem__(self.labels["b"], self.currentContent)
        elif "d" == name:
            self.f.__setitem__(self.labels["t"], self.currentContent)
        elif "ep" == name:
            self.f.__setitem__(self.labels["exp"], self.currentContent)
        elif "ea" == name:
            self.f.__setitem__(self.labels["ex"], self.currentContent)
        elif "p" == name:
            self.f.__setitem__(self.labels["pro"], self.currentContent)
        elif "r" == name:
            self.f.__setitem__(self.labels["rel"], self.currentContent)

    def characters(self, content):
        """Implements SAX interface"""
        self.currentContent = content.strip()

    def createModel(self, attrs):
        """Makes a new Anki (fact) model from an entry type.
        The card models are made each time from scratch in order that evt. model specific fields (attributes) can make part."""
        m = Model(attrs["n"])
        # field model for standard fields
        m.addFieldModel(FieldModel(self.labels["b"], True, False)) #there is no uniqueness check in DingsBums?!
        m.addFieldModel(FieldModel(self.labels["t"], True, False))
        for aField in ["exp", "ex", "pro", "rel"]:
            if self.visibility[aField] in "012":
                m.addFieldModel(FieldModel(self.labels[aField], False, False))
        # field models for attributes
        for attr in ["a1", "a2" "a3", "a4"]:
            if attr in attrs.keys():
                m.addFieldModel(FieldModel(self.attributes[attrs[attr]], False, False))
                self.typeAttributes[attrs["eid"] + "_" + attr] = self.attributes[attrs[attr]]

        # card model for front
        frontStrings = ["%(" + self.labels["b"] + ")s"]
        backStrings = ["%(" + self.labels["t"] + ")s"]
        for aField in ["exp", "ex", "pro", "rel"]:
            if self.visibility[aField] in "01":
                frontStrings.append("%(" + self.labels[aField] + ")s")
            if self.visibility[aField] in "02":
                backStrings.append("%(" + self.labels[aField] + ")s")
        m.addCardModel(CardModel(u'Forward', "<br>".join(frontStrings), "<br>".join(backStrings)))
        # card model for back
        m.addCardModel(CardModel(u'Reverse', unicode("%(" + self.labels["t"] + ")s"), unicode("%(" + self.labels["b"] + ")s")))
        # tags is just the name without spaces
        m.tags = self.prepareTag(m.name)

        # link
        self.models[attrs["eid"]] = m
        self.deck.addModel(m)

    def createFact(self, attrs):
        """Makes a new Anki fact from an entry."""
        model = self.models[attrs["et"]]
        self.f = Fact(model)
        # process attributes
        for attr in ["a1", "a2" "a3", "a4"]:
            if attr in attrs.keys():
                self.f.__setitem__(self.typeAttributes[attrs["et"] + "_" + attr], self.attributeItems[attrs[attr]])
        # process tags. Unit, Category plus entry type name
        tagString = unicode(self.unitCategories[attrs["u"]] + " " + self.unitCategories[attrs["c"]] + " " + model.tags)
        self.f.tags = tagString

    def prepareTag(self, stringWithSpace):
        parts = stringWithSpace.split()
        return "_".join(parts)

class DingsBumsImporter(Importer):
    needMapper = False # needs to overwrite default in Importer - otherwise Mapping dialog is shown in GUI

    def __init__(self, deck, file):
        Importer.__init__(self, deck, file)
        self.deck = deck
        self.file = file
        self.total = 0

    def doImport(self):
        """Totally overrides the method in Importer"""
        num = 7 # the number of updates to progress bar (see references in method endElement in DingsBumsHandler
        self.deck.startProgress(num)
        self.deck.updateProgress(_("Importing..."))

        # parse the DingsBums?! xml file
        handler = DingsBumsHandler(self.deck)
        saxparser = make_parser(  )
        saxparser.setContentHandler(handler)
        saxparser.parse(self.file)
        self.total = handler.countFacts
        self.deck.finishProgress()
        self.deck.setModified()

if __name__ == '__main__':
    print "Starting ..."

    # for testing you can start it standalone. Use an argument to specify the file to import
    filename = str(sys.argv[1])

    mydeck = DeckStorage.Deck()
    i = DingsBumsImporter(mydeck, filename)
    i.doImport()
    assert 7 == i.total
    mydeck.s.close()

    print "... Finished"
    sys.exit(1)
 78  
anki/importing/mnemosyne10.py
@@ -0,0 +1,78 @@
# -*- coding: utf-8 -*-
# Copyright: Damien Elmes <anki@ichi2.net>
# License: GNU GPL, version 3 or later; http://www.gnu.org/copyleft/gpl.html

"""\
Importing Mnemosyne 1.0 decks
==============================
"""
__docformat__ = 'restructuredtext'

import sys, pickle, time, re
from anki.importing import Importer, ForeignCard
from anki.errors import *

class Mnemosyne10Importer(Importer):

    multipleCardsAllowed = False

    def foreignCards(self):
        # empty objects so we can load the native mnemosyne file
        class MnemosyneModule(object):
            class StartTime:
                pass
            class Category:
                pass
            class Item:
                pass
        for module in ('mnemosyne',
                       'mnemosyne.core',
                       'mnemosyne.core.mnemosyne_core'):
            sys.modules[module] = MnemosyneModule()
        try:
            file = open(self.file, "rb")
        except (IOError, OSError), e:
            raise ImportFormatError(type="systemError",
                                    info=str(e))
        header = file.readline().strip()
        # read the structure in
        try:
            struct = pickle.load(file)
        except (EOFError, KeyError):
            raise ImportFormatError(type="invalidFile")
        startTime = struct[0].time
        daysPassed = (time.time() - startTime) / 86400.0
        # gather cards
        cards = []
        for item in struct[2]:
            card = ForeignCard()
            card.fields.append(self.fudgeText(item.q))
            card.fields.append(self.fudgeText(item.a))
            # scheduling data
            card.interval = item.next_rep - item.last_rep
            secDelta = (item.next_rep - daysPassed) * 86400.0
            card.due = card.nextTime = time.time() + secDelta
            card.factor = item.easiness
            # for some reason mnemosyne starts cards off on 1 instead of 0
            card.successive = max(
                (item.acq_reps_since_lapse + item.ret_reps_since_lapse -1), 0)
            card.yesCount = max((item.acq_reps + item.ret_reps) - 1, 0)
            card.noCount = item.lapses
            card.reps = card.yesCount + card.noCount
            if item.cat.name != u"<default>":
                card.tags = item.cat.name.replace(" ", "_")
            if card.reps:
                card.type = 1
            cards.append(card)
        return cards

    def fields(self):
        return 2

    def fudgeText(self, text):
        text = text.replace("\n", "<br>")
        text = re.sub('<sound src="(.*?)">', '[sound:\\1]', text)
        text = re.sub('<(/?latex)>', '[\\1]', text)
        text = re.sub('<(/?\$)>', '[\\1]', text)
        text = re.sub('<(/?\$\$)>', '[\\1]', text)
        return text
 491  
anki/importing/supermemo_xml.py
Large diffs are not rendered by default.

 57  
anki/importing/wcu.py
@@ -0,0 +1,57 @@
# -*- coding: utf-8 -*-
# Author Chris Aakre <caaakre@gmail.com>
# License: GNU GPL, version 3 or later; http://www.gnu.org/copyleft/gpl.html

"""\
Importing WCU files
====================
"""
__docformat__ = 'restructuredtext'

import codecs
from anki.importing import Importer, ForeignCard
from anki.lang import _
from anki.errors import *

class WCUImporter(Importer):
    def __init__(self, *args):
        Importer.__init__(self, *args)
        self.lines = None
        self.numFields=int(2)

    def foreignCards(self):
        from xml.dom import minidom, Node
        cards = []
        f = None
        try:
            f = codecs.open(self.file, encoding="utf-8")
        except:
            raise ImportFormatError(type="encodingError", info=_("The file was not in UTF8 format."))
        f.close()
        def wcuwalk(parent, cards, level=0):
                for node in parent.childNodes:
                    if node.nodeType == Node.ELEMENT_NODE:
                        myCard=ForeignCard()
                        if node.attributes.has_key("QuestionPicture"):
                            question = [unicode('<img src="'+node.attributes.get("QuestionPicture").nodeValue+'"><br/>'+node.attributes.get("Question").nodeValue)]
                        else:
                            question = [unicode(node.attributes.get("Question").nodeValue)]
                        if node.attributes.has_key("AnswerPicture"):
                            answer = [unicode('<img src="'+node.attributes.get("AnswerPicture").nodeValue+'"><br/>'+node.attributes.get("Answer").nodeValue)]
                        else:
                            answer = [unicode(node.attributes.get("Answer").nodeValue)]
                        myCard.fields.extend(question)
                        myCard.fields.extend(answer)
                        cards.append(myCard)
                        wcuwalk(node, cards, level+1)

        def importwcu(file):
            wcuwalk(minidom.parse(file).documentElement,cards)
        importwcu(self.file)
        return cards

    def fields(self):
        return self.numFields

    def setNumFields(self):
        self.numFields = int(2)
 59  
anki/lang.py
@@ -0,0 +1,59 @@
# -*- coding: utf-8 -*-
# Copyright: Damien Elmes <anki@ichi2.net>
# License: GNU GPL, version 3 or later; http://www.gnu.org/copyleft/gpl.html

"""\
Internationalisation
=====================
"""
__docformat__ = 'restructuredtext'

import os, sys
import gettext
import threading

threadLocal = threading.local()

# global defaults
currentLang = None
currentTranslation = None

def localTranslation():
    "Return the translation local to this thread, or the default."
    if getattr(threadLocal, 'currentTranslation', None):
        return threadLocal.currentTranslation
    else:
        return currentTranslation

def _(str):
    return localTranslation().ugettext(str)

def ngettext(single, plural, n):
    return localTranslation().ungettext(single, plural, n)

def setLang(lang, local=True):
    base = os.path.dirname(os.path.abspath(__file__))
    localeDir = os.path.join(base, "locale")
    if not os.path.exists(localeDir):
        localeDir = os.path.join(
            os.path.dirname(sys.argv[0]), "locale")
    trans = gettext.translation('libanki', localeDir,
                                languages=[lang],
                                fallback=True)
    if local:
        threadLocal.currentLang = lang
        threadLocal.currentTranslation = trans
    else:
        global currentLang, currentTranslation
        currentLang = lang
        currentTranslation = trans

def getLang():
    "Return the language local to this thread, or the default."
    if getattr(threadLocal, 'currentLang', None):
        return threadLocal.currentLang
    else:
        return currentLang

if not currentTranslation:
    setLang("en_US", local=False)
 162  
anki/latex.py
@@ -0,0 +1,162 @@
# -*- coding: utf-8 -*-
# Copyright: Damien Elmes <anki@ichi2.net>
# License: GNU GPL, version 3 or later; http://www.gnu.org/copyleft/gpl.html

"""\
Latex support
==============================
"""
__docformat__ = 'restructuredtext'

import re, tempfile, os, sys, subprocess, stat, time, shutil
from anki.utils import genID, checksum
from htmlentitydefs import entitydefs

latexPreamble = ("\\documentclass[12pt]{article}\n"
                 "\\special{papersize=3in,5in}"
                 "\\usepackage[utf8]{inputenc}"
                 "\\pagestyle{empty}\n"
                 "\\begin{document}")
latexPostamble = "\\end{document}"
latexDviPngCmd = ["dvipng", "-D", "200", "-T", "tight"]

regexps = {
    "standard": re.compile(r"\[latex\](.+?)\[/latex\]", re.DOTALL | re.IGNORECASE),
    "expression": re.compile(r"\[\$\](.+?)\[/\$\]", re.DOTALL | re.IGNORECASE),
    "math": re.compile(r"\[\$\$\](.+?)\[/\$\$\]", re.DOTALL | re.IGNORECASE),
    }

tmpdir = tempfile.mkdtemp(prefix="anki")

# add standard tex install location to osx
if sys.platform == "darwin":
    os.environ['PATH'] += ":/usr/texbin"

def renderLatex(deck, text, build=True):
    "Convert TEXT with embedded latex tags to image links."
    for match in regexps['standard'].finditer(text):
        text = text.replace(match.group(), imgLink(deck, match.group(1),
                                                   build))
    for match in regexps['expression'].finditer(text):
        text = text.replace(match.group(), imgLink(
            deck, "$" + match.group(1) + "$", build))
    for match in regexps['math'].finditer(text):
        text = text.replace(match.group(), imgLink(
            deck,
            "\\begin{displaymath}" + match.group(1) + "\\end{displaymath}",
            build))
    return text

def stripLatex(text):
    for match in regexps['standard'].finditer(text):
        text = text.replace(match.group(), "")
    for match in regexps['expression'].finditer(text):
        text = text.replace(match.group(), "")
    for match in regexps['math'].finditer(text):
        text = text.replace(match.group(), "")
    return text

def call(argv, wait=True, **kwargs):
    try:
        o = subprocess.Popen(argv, **kwargs)
    except OSError:
        # command not found
        return -1
    if wait:
        while 1:
            try:
                ret = o.wait()
            except OSError:
                # interrupted system call
                continue
            break
    else:
        ret = 0
    return ret

def latexImgFile(deck, latexCode):
    key = checksum(latexCode)
    return "latex-%s.png" % key

def mungeLatex(latex):
    "Convert entities, fix newlines, and convert to utf8."
    for match in re.compile("&([a-z]+);", re.IGNORECASE).finditer(latex):
        if match.group(1) in entitydefs:
            latex = latex.replace(match.group(), entitydefs[match.group(1)])
    latex = re.sub("<br( /)?>", "\n", latex)
    latex = latex.encode("utf-8")
    return latex

def deleteAllLatexImages(deck):
    mdir = deck.mediaDir()
    if not mdir:
        return
    deck.startProgress()
    for c, f in enumerate(os.listdir(mdir)):
        if f.startswith("latex-"):
            os.unlink(os.path.join(mdir, f))
        if c % 100 == 0:
            deck.updateProgress()
    deck.finishProgress()

def cacheAllLatexImages(deck):
    deck.startProgress()
    fields = deck.s.column0("select value from fields")
    for c, field in enumerate(fields):
        if c % 10 == 0:
            deck.updateProgress()
        renderLatex(deck, field)
    deck.finishProgress()

def buildImg(deck, latex):
    log = open(os.path.join(tmpdir, "latex_log.txt"), "w+")
    texpath = os.path.join(tmpdir, "tmp.tex")
    texfile = file(texpath, "w")
    texfile.write(latexPreamble + "\n")
    texfile.write(latex + "\n")
    texfile.write(latexPostamble + "\n")
    texfile.close()
    texpath = texpath.encode(sys.getfilesystemencoding())
    # make sure we have a valid mediaDir
    deck.mediaDir(create=True)
    oldcwd = os.getcwd()
    if sys.platform == "win32":
        si = subprocess.STARTUPINFO()
        si.dwFlags |= subprocess.STARTF_USESHOWWINDOW
    else:
        si = None
    try:
        os.chdir(tmpdir)
        errmsg = _("Error executing %s.\n") + _(
            "A log file is available here:\n%s") % tmpdir
        if call(["latex", "-interaction=nonstopmode",
                 texpath], stdout=log, stderr=log, startupinfo=si):
            return (False, errmsg % "latex")
        if call(latexDviPngCmd + ["tmp.dvi", "-o", "tmp.png"],
                stdout=log, stderr=log, startupinfo=si):
            return (False, errmsg % "dvipng")
        # add to media
        target = latexImgFile(deck, latex)
        shutil.copy2("tmp.png", os.path.join(deck.mediaDir(), target))
        return (True, target)
    finally:
        os.chdir(oldcwd)

def imageForLatex(deck, latex, build=True):
    "Return an image that represents 'latex', building if necessary."
    imageFile = latexImgFile(deck, latex)
    ok = True
    if build and (not imageFile or not os.path.exists(imageFile)):
        (ok, imageFile) = buildImg(deck, latex)
    if not ok:
        return (False, imageFile)
    return (True, imageFile)

def imgLink(deck, latex, build=True):
    "Parse LATEX and return a HTML image representing the output."
    latex = mungeLatex(latex)
    (ok, img) = imageForLatex(deck, latex, build)
    if ok:
        return '<img src="%s">' % img
    else:
        return img
 297  
anki/media.py
@@ -0,0 +1,297 @@
# -*- coding: utf-8 -*-
# Copyright: Damien Elmes <anki@ichi2.net>
# License: GNU GPL, version 3 or later; http://www.gnu.org/copyleft/gpl.html

"""\
Media support
====================
"""
__docformat__ = 'restructuredtext'

import os, stat, time, shutil, re, sys, urllib2
from anki.db import *
from anki.facts import Fact
from anki.utils import addTags, genID, ids2str, checksum
from anki.lang import _

regexps = (("(\[sound:([^]]+)\])",
            "[sound:%s]"),
           ("(<img src=[\"']?([^\"'>]+)[\"']? ?/?>)",
            "<img src=\"%s\">"))

# Tables
##########################################################################

mediaTable = Table(
    'media', metadata,
    Column('id', Integer, primary_key=True, nullable=False),
    Column('filename', UnicodeText, nullable=False),
    Column('size', Integer, nullable=False),
    Column('created', Float, nullable=False),
    Column('originalPath', UnicodeText, nullable=False, default=u""),
    Column('description', UnicodeText, nullable=False, default=u""))

class Media(object):
    pass

mapper(Media, mediaTable)

mediaDeletedTable = Table(
    'mediaDeleted', metadata,
    Column('mediaId', Integer, ForeignKey("cards.id"),
           nullable=False),
    Column('deletedTime', Float, nullable=False))

# Helper functions
##########################################################################

def mediaFilename(path):
    "Return checksum.ext for path"
    new = checksum(open(path, "rb").read())
    ext = os.path.splitext(path)[1].lower()
    return "%s%s" % (new, ext)

def copyToMedia(deck, path):
    """Copy PATH to MEDIADIR, and return new filename.
Update media table. If file already exists, don't copy."""
    origPath = path
    description = os.path.splitext(os.path.basename(path))[0]
    newBase = mediaFilename(path)
    new = os.path.join(deck.mediaDir(create=True), newBase)
    # copy if not existing
    if not os.path.exists(new):
        if new.lower() == path.lower():
            # case insensitive filesystems suck
            os.rename(path, new)
        else:
            shutil.copy2(path, new)
    newSize = os.stat(new)[stat.ST_SIZE]
    if not deck.s.scalar(
        "select 1 from media where filename = :f",
        f=newBase):
        # if the user has modified a hashed file, try to remember the old
        # filename
        old = deck.s.scalar(
            "select originalPath from media where filename = :s",
            s=os.path.basename(origPath))
        if old:
            origPath = old
            description = os.path.splitext(os.path.basename(origPath))[0]
        try:
            path = unicode(path, sys.getfilesystemencoding())
        except TypeError:
            pass
        deck.s.statement("""
insert into media (id, filename, size, created, originalPath,
description)
values (:id, :filename, :size, :created, :originalPath,
:description)""",
                         id=genID(),
                         filename=newBase,
                         size=newSize,
                         created=time.time(),
                         originalPath=origPath,
                         description=description)
    deck.flushMod()
    return newBase

def _modifyFields(deck, fieldsToUpdate, modifiedFacts, dirty):
    factIds = ids2str(modifiedFacts.keys())
    if fieldsToUpdate:
        deck.s.execute("update fields set value = :val where id = :id",
                       fieldsToUpdate)
    deck.s.statement(
        "update facts set modified = :time where id in %s" %
        factIds, time=time.time())
    ids = deck.s.all("""select cards.id, cards.cardModelId, facts.id,
facts.modelId from cards, facts where
cards.factId = facts.id and facts.id in %s"""
                     % factIds)
    deck.updateCardQACache(ids, dirty)
    deck.flushMod()


def mediaRefs(string):
    "Return list of (fullMatch, filename, replacementString)."
    l = []
    for (reg, repl) in regexps:
        for (full, fname) in re.findall(reg, string):
            l.append((full, fname, repl))
    return l

def stripMedia(txt):
    for (reg, x) in regexps:
        txt = re.sub(reg, "", txt)
    return txt

# Rebuilding DB
##########################################################################

def rebuildMediaDir(deck, deleteRefs=False, dirty=True):
    "Delete references to missing files, delete unused files."
    localFiles = {}
    modifiedFacts = {}
    unmodifiedFacts = {}
    renamedFiles = {}
    existingFiles = {}
    factsMissingMedia = {}
    updateFields = []
    usedFiles = {}
    unusedFileCount = 0
    missingFileCount = 0
    deck.mediaDir(create=True)
    deck.startProgress(16, 0, _("Check Media DB"))
    # rename all files to checksum versions, note non-renamed ones
    deck.updateProgress(_("Checksum files..."))
    files = os.listdir(unicode(deck.mediaDir()))
    mod = len(files) / 10
    for c, oldBase in enumerate(files):
        if mod and not c % mod:
            deck.updateProgress()
        if oldBase.startswith("latex-"):
            continue
        oldPath = os.path.join(deck.mediaDir(), oldBase)
        if oldBase.startswith("."):
            continue
        if os.path.isdir(oldPath):
            continue
        newBase = copyToMedia(deck, oldPath)
        if oldBase.lower() == newBase.lower():
            existingFiles[oldBase] = 1
        else:
            renamedFiles[oldBase] = newBase
    deck.updateProgress(value=10)
    # now look through all fields, and update references to files
    deck.updateProgress(_("Scan fields..."))
    for (id, fid, val) in deck.s.all(
        "select id, factId, value from fields"):
        oldval = val
        for (full, fname, repl) in mediaRefs(val):
            if fname in renamedFiles:
                # renamed
                newBase = renamedFiles[fname]
                val = re.sub(re.escape(full), repl % newBase, val)
                usedFiles[newBase] = 1
            elif fname in existingFiles:
                # used & current
                usedFiles[fname] = 1
            else:
                # missing
                missingFileCount += 1
                if deleteRefs:
                    val = re.sub(re.escape(full), "", val)
                else:
                    factsMissingMedia[fid] = 1
        if val != oldval:
            updateFields.append({'id': id, 'val': val})
            modifiedFacts[fid] = 1
        else:
            if fid not in factsMissingMedia:
                unmodifiedFacts[fid] = 1
    # update modified fields
    deck.updateProgress(_("Modify fields..."))
    if modifiedFacts:
        _modifyFields(deck, updateFields, modifiedFacts, dirty)
    # fix tags
    deck.updateProgress(_("Update tags..."))
    if dirty:
        deck.deleteTags(unmodifiedFacts.keys(), _("MediaMissing"))
        if deleteRefs:
            deck.deleteTags(modifiedFacts.keys(), _("MediaMissing"))
        else:
            deck.addTags(factsMissingMedia.keys(), _("MediaMissing"))
    # build cache of db records
    deck.updateProgress(_("Delete unused files..."))
    mediaIds = dict(deck.s.all("select filename, id from media"))
    # look through the media dir for any unused files, and delete
    for f in os.listdir(unicode(deck.mediaDir())):
        if f.startswith("."):
            continue
        if f.startswith("latex-"):
            continue
        path = os.path.join(deck.mediaDir(), f)
        if os.path.isdir(path):
            shutil.rmtree(path)
            continue
        if f in usedFiles:
            del mediaIds[f]
        else:
            os.unlink(path)
            unusedFileCount += 1
    deck.updateProgress(_("Delete stale references..."))
    for (fname, id) in mediaIds.items():
        # maybe delete from db
        if id:
            deck.s.statement("delete from media where id = :id", id=id)
            deck.s.statement("""
insert into mediaDeleted (mediaId, deletedTime)
values (:id, strftime('%s', 'now'))""", id=id)
    # update deck and save
    deck.flushMod()
    deck.save()
    deck.finishProgress()
    return missingFileCount, unusedFileCount - len(renamedFiles)

# Download missing
##########################################################################

def downloadMissing(deck):
    from anki.latex import renderLatex
    urls = dict(
        deck.s.all("select id, features from models where features != ''"))
    if not urls:
        return None
    mdir = deck.mediaDir(create=True)
    os.chdir(mdir)
    deck.startProgress()
    missing = {}
    for (id, fid, val, mid) in deck.s.all("""
select fields.id, factId, value, modelId from fields, facts
where facts.id = fields.factId"""):
        # add latex tags
        val = renderLatex(deck, val, False)
        for (full, fname, repl) in mediaRefs(val):
            if not os.path.exists(os.path.join(mdir, fname)) and mid in urls:
                missing[fname] = mid
    success = 0
    for c, file in enumerate(missing.keys()):
        deck.updateProgress(label=_("Downloading %(a)d of %(b)d...") % {
            'a': c,
            'b': len(missing),
            })
        try:
            data = urllib2.urlopen(urls[missing[file]] + file).read()
            open(file, "wb").write(data)
            success += 1
        except:
            pass
    deck.finishProgress()
    return len(missing), success

# Export original files
##########################################################################

def exportOriginalFiles(deck):
    deck.startProgress()
    origDir = deck.mediaDir(create=True)
    newDir = origDir.replace(".media", ".originals")
    try:
        os.mkdir(newDir)
    except (IOError, OSError):
        pass
    cnt = 0
    for row in deck.s.all("select filename, originalPath from media"):
        (fname, path) = row
        base = os.path.basename(path)
        if base == fname:
            continue
        cnt += 1
        deck.updateProgress(label="Exporting %s" % base)
        old = os.path.join(origDir, fname)
        new = os.path.join(newDir, base)
        if os.path.exists(new):
            new = re.sub("(.*)(\..*?)$", "\\1-%s\\2" %
                         os.path.splitext(fname)[0], new)
        shutil.copy2(old, new)
    deck.finishProgress()
    return cnt
 217  
anki/models.py
@@ -0,0 +1,217 @@
# -*- coding: utf-8 -*-
# Copyright: Damien Elmes <anki@ichi2.net>
# License: GNU GPL, version 3 or later; http://www.gnu.org/copyleft/gpl.html

"""\
Model - define the way in which facts are added and shown
==========================================================
- Field models
- Card models
- Models
"""

import time
from sqlalchemy.ext.orderinglist import ordering_list
from anki.db import *
from anki.utils import genID, canonifyTags
from anki.fonts import toPlatformFont
from anki.utils import parseTags, hexifyID, checksum, stripHTML
from anki.lang import _
from anki.hooks import runFilter
from copy import copy

def alignmentLabels():
    return {
        0: _("Center"),
        1: _("Left"),
        2: _("Right"),
        }

# Field models
##########################################################################

fieldModelsTable = Table(
    'fieldModels', metadata,
    Column('id', Integer, primary_key=True),
    Column('ordinal', Integer, nullable=False),
    Column('modelId', Integer, ForeignKey('models.id'), nullable=False),
    Column('name', UnicodeText, nullable=False),
    Column('description', UnicodeText, nullable=False, default=u""), # obsolete
    # reused as RTL marker
    Column('features', UnicodeText, nullable=False, default=u""),
    Column('required', Boolean, nullable=False, default=True),
    Column('unique', Boolean, nullable=False, default=True), # sqlite keyword
    Column('numeric', Boolean, nullable=False, default=False),
    # display
    Column('quizFontFamily', UnicodeText),
    Column('quizFontSize', Integer),
    Column('quizFontColour', String(7)),
    Column('editFontFamily', UnicodeText),
    Column('editFontSize', Integer, default=20))

class FieldModel(object):
    "The definition of one field in a fact."

    def __init__(self, name=u"", required=True, unique=True):
        self.name = name
        self.required = required
        self.unique = unique
        self.id = genID()

    def copy(self):
        new = FieldModel()
        for p in class_mapper(FieldModel).iterate_properties:
            setattr(new, p.key, getattr(self, p.key))
        new.id = genID()
        new.model = None
        return new

mapper(FieldModel, fieldModelsTable)

# Card models
##########################################################################

cardModelsTable = Table(
    'cardModels', metadata,
    Column('id', Integer, primary_key=True),
    Column('ordinal', Integer, nullable=False),
    Column('modelId', Integer, ForeignKey('models.id'), nullable=False),
    Column('name', UnicodeText, nullable=False),
    Column('description', UnicodeText, nullable=False, default=u""), # obsolete
    Column('active', Boolean, nullable=False, default=True),
    # formats: question/answer/last(not used)
    Column('qformat', UnicodeText, nullable=False),
    Column('aformat', UnicodeText, nullable=False),
    Column('lformat', UnicodeText),
    # question/answer editor format (not used yet)
    Column('qedformat', UnicodeText),
    Column('aedformat', UnicodeText),
    Column('questionInAnswer', Boolean, nullable=False, default=False),
    # display
    Column('questionFontFamily', UnicodeText, default=u"Arial"),
    Column('questionFontSize', Integer, default=20),
    Column('questionFontColour', String(7), default=u"#000000"),
    Column('questionAlign', Integer, default=0),
    Column('answerFontFamily', UnicodeText, default=u"Arial"),
    Column('answerFontSize', Integer, default=20),
    Column('answerFontColour', String(7), default=u"#000000"),
    Column('answerAlign', Integer, default=0),
    # not used
    Column('lastFontFamily', UnicodeText, default=u"Arial"),
    Column('lastFontSize', Integer, default=20),
    # used as background colour
    Column('lastFontColour', String(7), default=u"#FFFFFF"),
    Column('editQuestionFontFamily', UnicodeText, default=None),
    Column('editQuestionFontSize', Integer, default=None),
    Column('editAnswerFontFamily', UnicodeText, default=None),
    Column('editAnswerFontSize', Integer, default=None),
    # empty answer
    Column('allowEmptyAnswer', Boolean, nullable=False, default=True),
    Column('typeAnswer', UnicodeText, nullable=False, default=u""))

class CardModel(object):
    """Represents how to generate the front and back of a card."""
    def __init__(self, name=u"", qformat=u"q", aformat=u"a", active=True):
        self.name = name
        self.qformat = qformat
        self.aformat = aformat
        self.active = active
        self.id = genID()

    def copy(self):
        new = CardModel()
        for p in class_mapper(CardModel).iterate_properties:
            setattr(new, p.key, getattr(self, p.key))
        new.id = genID()
        new.model = None
        return new

mapper(CardModel, cardModelsTable)

def formatQA(cid, mid, fact, tags, cm):
    "Return a dict of {id, question, answer}"
    d = {'id': cid}
    fields = {}
    for (k, v) in fact.items():
        fields["text:"+k] = stripHTML(v[1])
        if v[1]:
            fields[k] = '<span class="fm%s">%s</span>' % (
                hexifyID(v[0]), v[1])
        else:
            fields[k] = u""
    fields['tags'] = tags[0]
    fields['Tags'] = tags[0]
    fields['modelTags'] = tags[1]
    fields['cardModel'] = tags[2]
    # render q & a
    ret = []
    for (type, format) in (("question", cm.qformat),
                           ("answer", cm.aformat)):
        try:
            html = format % fields
        except (KeyError, TypeError, ValueError):
            html = _("[invalid question/answer format]")
        d[type] = runFilter("formatQA", html, type, cid, mid, fact, tags, cm)
    return d

# Model table
##########################################################################

modelsTable = Table(
    'models', metadata,
    Column('id', Integer, primary_key=True),
    Column('deckId', Integer, ForeignKey("decks.id", use_alter=True, name="deckIdfk")),
    Column('created', Float, nullable=False, default=time.time),
    Column('modified', Float, nullable=False, default=time.time),
    Column('tags', UnicodeText, nullable=False, default=u""),
    Column('name', UnicodeText, nullable=False),
    Column('description', UnicodeText, nullable=False, default=u""), # obsolete
    Column('features', UnicodeText, nullable=False, default=u""), # used as mediaURL
    Column('spacing', Float, nullable=False, default=0.1),
    Column('initialSpacing', Float, nullable=False, default=60),
    Column('source', Integer, nullable=False, default=0))

class Model(object):
    "Defines the way a fact behaves, what fields it can contain, etc."
    def __init__(self, name=u""):
        self.name = name
        self.id = genID()

    def setModified(self):
        self.modified = time.time()

    def addFieldModel(self, field):
        "Add a field model."
        self.fieldModels.append(field)
        s = object_session(self)
        if s:
            s.flush()

    def addCardModel(self, card):
        "Add a card model."
        self.cardModels.append(card)
        s = object_session(self)
        if s:
            s.flush()

mapper(Model, modelsTable, properties={
    'fieldModels': relation(FieldModel, backref='model',
                             collection_class=ordering_list('ordinal'),
                             order_by=[fieldModelsTable.c.ordinal],
                            cascade="all, delete-orphan"),
    'cardModels': relation(CardModel, backref='model',
                           collection_class=ordering_list('ordinal'),
                           order_by=[cardModelsTable.c.ordinal],
                           cascade="all, delete-orphan"),
       })

# Model deletions
##########################################################################

modelsDeletedTable = Table(
    'modelsDeleted', metadata,
    Column('modelId', Integer, ForeignKey("models.id"),
           nullable=False),
    Column('deletedTime', Float, nullable=False))
 339  
anki/sound.py
@@ -0,0 +1,339 @@
# -*- coding: utf-8 -*-
# Copyright: Damien Elmes <anki@ichi2.net>
# License: GNU GPL, version 3 or later; http://www.gnu.org/copyleft/gpl.html

"""\
Sound support
==============================
"""
__docformat__ = 'restructuredtext'

import re, sys, threading, time, subprocess, os, signal, atexit, errno
from anki.hooks import addHook, runHook

# Shared utils
##########################################################################

def playFromText(text):
    for match in re.findall("\[sound:(.*?)\]", text):
        play(match)

def stripSounds(text):
    return re.sub("\[sound:.*?\]", "", text)

def hasSound(text):
    return re.search("\[sound:.*?\]", text) is not None

##########################################################################

# the amount of noise to cancel
NOISE_AMOUNT = "0.1"
# the amount of amplification
NORM_AMOUNT = "-3"
# the amount of bass
BASS_AMOUNT = "+0"
# the amount to fade at end
FADE_AMOUNT = "0.25"

noiseProfile = ""

processingSrc = "tmp.wav"
processingDst = "tmp.mp3"
processingChain = []
tmpFiles = ["tmp2.wav", "tmp3.wav"]

cmd = ["sox", processingSrc, "tmp2.wav"]
processingChain = [
    None, # placeholder
    ["sox", "tmp2.wav", "tmp3.wav", "norm", NORM_AMOUNT,
     "bass", BASS_AMOUNT, "fade", FADE_AMOUNT, "0"],
    ["lame", "tmp3.wav", processingDst, "--noreplaygain", "--quiet"],
    ]

# don't show box on windows
if sys.platform == "win32":
    si = subprocess.STARTUPINFO()
    si.dwFlags |= subprocess.STARTF_USESHOWWINDOW
else:
    si = None

if sys.platform.startswith("darwin"):
    # make sure lame, which is installed in /usr/local/bin, is in the path
    os.environ['PATH'] += ":" + "/usr/local/bin"
    dir = os.path.dirname(os.path.abspath(__file__))
    dir = os.path.abspath(dir + "/../../../..")
    os.environ['PATH'] += ":" + dir + "/audio"

def retryWait(proc):
    # osx throws interrupted system call errors frequently
    while 1:
        try:
            return proc.wait()
        except OSError:
            continue

# Noise profiles
##########################################################################

def checkForNoiseProfile():
    global processingChain
    if sys.platform.startswith("darwin"):
        # not currently supported
        processingChain = [
            ["lame", "tmp.wav", "tmp.mp3", "--noreplaygain", "--quiet"]]
    else:
        cmd = ["sox", processingSrc, "tmp2.wav"]
        if os.path.exists(noiseProfile):
            cmd = cmd + ["noisered", noiseProfile, NOISE_AMOUNT]
        processingChain[0] = cmd

def generateNoiseProfile():
    try:
        os.unlink(noiseProfile)
    except OSError:
        pass
    retryWait(subprocess.Popen(
        ["sox", processingSrc, tmpFiles[0], "trim", "1.5", "1.5"],
        startupinfo=si))
    retryWait(subprocess.Popen(["sox", tmpFiles[0], tmpFiles[1],
                                "noiseprof", noiseProfile],
                               startupinfo=si))
    processingChain[0] = ["sox", processingSrc, "tmp2.wav",
                          "noisered", noiseProfile, NOISE_AMOUNT]

# Mplayer settings
##########################################################################

if sys.platform.startswith("win32"):
    mplayerCmd = ["mplayer.exe", "-ao", "win32", "-really-quiet"]
    dir = os.path.dirname(os.path.abspath(sys.argv[0]))
    os.environ['PATH'] += ";" + dir
    os.environ['PATH'] += ";" + dir + "\\..\\dist" # for testing
else:
    mplayerCmd = ["mplayer", "-really-quiet"]

# Mplayer in slave mode
##########################################################################

mplayerQueue = []
mplayerManager = None
mplayerReader = None
mplayerCond = threading.Condition()

class MplayerReader(threading.Thread):
    "Read any debugging info to prevent mplayer from blocking."

    def run(self):
        while 1:
            mplayerCond.acquire()
            mplayerCond.wait()
            mplayerCond.release()
            try:
                mplayerManager.mplayer.stdout.read()
            except:
                pass

class MplayerMonitor(threading.Thread):

    def run(self):
        self.mplayer = None
        while 1:
            mplayerCond.acquire()
            while not mplayerQueue:
                if not mplayerCond:
                    return
                mplayerCond.wait()
            if not self.mplayer:
                self.startProcess()
            if self.mplayer != -1 and self.mplayer.poll() is not None:
                self.mplayer.wait()
                self.startProcess()
            nextClears = False
            while mplayerQueue:
                item = mplayerQueue.pop(0)
                if item is None:
                    nextClears = True
                    continue
                if nextClears:
                    nextClears = False
                    extra = ""
                else:
                    extra = " 1"
                cmd = 'loadfile "%s"%s\n' % (item, extra)
                self.mplayer.stdin.write(cmd)
            mplayerCond.release()

    def startProcess(self):
        try:
            cmd = mplayerCmd + ["-slave", "-idle"]
            self.mplayer = subprocess.Popen(
                cmd, startupinfo=si, stdin=subprocess.PIPE,
                stdout=subprocess.PIPE, stderr=subprocess.STDOUT)
        except OSError:
            mplayerCond.release()
            raise Exception("Audio player not found")

def queueMplayer(path):
    ensureMplayerThreads()
    path = path.encode(sys.getfilesystemencoding())
    mplayerCond.acquire()
    mplayerQueue.append(path)
    mplayerCond.notifyAll()
    mplayerCond.release()
    runHook("soundQueued")

def clearMplayerQueue():
    mplayerCond.acquire()
    mplayerQueue.append(None)
    mplayerCond.release()

def ensureMplayerThreads():
    global mplayerManager, mplayerReader
    if not mplayerManager:
        mplayerManager = MplayerMonitor()
        mplayerManager.daemon = True
        mplayerManager.start()
        mplayerReader = MplayerReader()
        mplayerReader.daemon = True
        mplayerReader.start()
        atexit.register(stopMplayer)

def stopMplayer(restart=False):
    if not mplayerManager:
        return
    mplayerCond.acquire()
    if mplayerManager.mplayer:
        while 1:
            try:
                mplayerManager.mplayer.stdin.write("quit\n")
                break
            except OSError, e:
                if e.errno != errno.EINTR:
                    # osx throws interrupt errors regularly, but we want to
                    # ignore other errors on shutdown
                    break
            except IOError:
                # already closed
                break
            except ValueError:
                # already closed
                break
    if not restart:
        mplayerManager.mplayer = -1
    mplayerCond.notifyAll()
    mplayerCond.release()

def stopMplayerOnce():
    stopMplayer(restart=True)

addHook("deckClosed", stopMplayerOnce)

# PyAudio recording
##########################################################################

try:
    import pyaudio
    import wave

    PYAU_FORMAT = pyaudio.paInt16
    PYAU_CHANNELS = 1
    PYAU_RATE = 44100
    PYAU_INPUT_INDEX = None
except:
    pass

class _Recorder(object):

    def postprocess(self, encode=True):
        self.encode = encode
        for c in processingChain:
            #print c
            if not self.encode and c[0] == 'lame':
                continue
            ret = retryWait(subprocess.Popen(c, startupinfo=si))
            if ret:
                raise Exception(_("""
Error processing audio.
If you're on Linux and don't have sox 14.1+, you
need to disable normalization. See the wiki.
Command was:\n""") + " ".join(c))

class PyAudioThreadedRecorder(threading.Thread):

    def __init__(self):
        threading.Thread.__init__(self)
        self.finish = False

    def run(self):
        chunk = 1024
        try:
            p = pyaudio.PyAudio()
        except NameError:
            raise Exception(
                "Pyaudio not installed (recording not supported on OSX10.3)")
        stream = p.open(format=PYAU_FORMAT,
                        channels=PYAU_CHANNELS,
                        rate=PYAU_RATE,
                        input=True,
                        input_device_index=PYAU_INPUT_INDEX,
                        frames_per_buffer=chunk)
        all = []
        while not self.finish:
            try:
                data = stream.read(chunk)
            except IOError, e:
                if e[1] == pyaudio.paInputOverflowed:
                    data = None
                else:
                    raise
            if data:
                all.append(data)
        stream.close()
        p.terminate()
        data = ''.join(all)
        wf = wave.open(processingSrc, 'wb')
        wf.setnchannels(PYAU_CHANNELS)
        wf.setsampwidth(p.get_sample_size(PYAU_FORMAT))
        wf.setframerate(PYAU_RATE)
        wf.writeframes(data)
        wf.close()

class PyAudioRecorder(_Recorder):

    def __init__(self):
        for t in tmpFiles + [processingSrc, processingDst]:
            try:
                os.unlink(t)
            except OSError:
                pass
        self.encode = False

    def start(self):
        self.thread = PyAudioThreadedRecorder()
        self.thread.start()

    def stop(self):
        self.thread.finish = True
        self.thread.join()

    def file(self):
        if self.encode:
            return processingDst
        else:
            return tmpFiles[1]

# Audio interface
##########################################################################

_player = queueMplayer
_queueEraser = clearMplayerQueue

def play(path):
    _player(path)

def clearAudioQueue():
    _queueEraser()

Recorder = PyAudioRecorder
 573  
anki/stats.py
Large diffs are not rendered by default.

 40  
anki/stdmodels.py
@@ -0,0 +1,40 @@
# -*- coding: utf-8 -*-
# Copyright: Damien Elmes <anki@ichi2.net>
# License: GNU GPL, version 3 or later; http://www.gnu.org/copyleft/gpl.html

"""\
Standard Models.
==============================================================
Plugins can add to the 'models' dict to provide more standard
models.
"""

from anki.models import Model, CardModel, FieldModel
from anki.lang import _

models = {}

def byName(name):
    fn = models.get(name)
    if fn:
        return fn()
    raise ValueError("No such model available!")

def names():
    return models.keys()

# Basic
##########################################################################

def BasicModel():
    m = Model(_('Basic'))
    m.addFieldModel(FieldModel(u'Front', True, True))
    m.addFieldModel(FieldModel(u'Back', False, False))
    m.addCardModel(CardModel(u'Forward', u'%(Front)s', u'%(Back)s'))
    m.addCardModel(CardModel(u'Reverse', u'%(Back)s', u'%(Front)s',
                             active=False))
    m.tags = u"Basic"
    return m

models['Basic'] = BasicModel
 1,171  
anki/sync.py
Large diffs are not rendered by default.

 59  
anki/tags.py
@@ -0,0 +1,59 @@
# -*- coding: utf-8 -*-
# Copyright: Damien Elmes <anki@ichi2.net>
# License: GNU GPL, version 3 or later; http://www.gnu.org/copyleft/gpl.html

"""\
Tags
====================
"""
__docformat__ = 'restructuredtext'


from anki.db import *

#src 0 = fact
#src 1 = model
#src 2 = card model

# Tables
##########################################################################

def initTagTables(s):
    try:
        s.statement("""
create table tags (
id integer not null,
tag text not null collate nocase,
priority integer not null default 2,
primary key(id))""")
        s.statement("""
create table cardTags (
id integer not null,
cardId integer not null,
tagId integer not null,
src integer not null,
primary key(id))""")
    except:
        pass

def tagId(s, tag, create=True):
    "Return ID for tag, creating if necessary."
    id = s.scalar("select id from tags where tag = :tag", tag=tag)
    if id or not create:
        return id
    s.statement("""
insert or ignore into tags
(tag) values (:tag)""", tag=tag)
    return s.scalar("select id from tags where tag = :tag", tag=tag)

def tagIds(s, tags, create=True):
    "Return an ID for all tags, creating if necessary."
    ids = {}
    if create:
        s.statements("insert or ignore into tags (tag) values (:tag)",
                    [{'tag': t} for t in tags])
    tagsD = dict([(x.lower(), y) for (x, y) in s.all("""
select tag, id from tags
where tag in (%s)""" % ",".join([
        "'%s'" % t.replace("'", "''") for t in tags]))])
    return tagsD
 242  
anki/utils.py
@@ -0,0 +1,242 @@
# -*- coding: utf-8 -*-
# Copyright: Damien Elmes <anki@ichi2.net>
# License: GNU GPL, version 3 or later; http://www.gnu.org/copyleft/gpl.html

"""\
Miscellaneous utilities
==============================
"""
__docformat__ = 'restructuredtext'

import re, os, random, time, types

try:
    import hashlib
    md5 = hashlib.md5
except ImportError:
    import md5
    md5 = md5.new

from anki.db import *
from anki.lang import _, ngettext
import locale, sys

if sys.version_info[1] < 5:
    def format_string(a, b):
        return a % b
    locale.format_string = format_string

# Time handling
##############################################################################

timeTable = {
    "years": lambda n: ngettext("%s year", "%s years", n),
    "months": lambda n: ngettext("%s month", "%s months", n),
    "days": lambda n: ngettext("%s day", "%s days", n),
    "hours": lambda n: ngettext("%s hour", "%s hours", n),
    "minutes": lambda n: ngettext("%s minute", "%s minutes", n),
    "seconds": lambda n: ngettext("%s second", "%s seconds", n),
    }

afterTimeTable = {
    "years": lambda n: ngettext("%s year<!--after>", "%s years<!--after>", n),
    "months": lambda n: ngettext("%s month<!--after>", "%s months<!--after>", n),
    "days": lambda n: ngettext("%s day<!--after>", "%s days<!--after>", n),
    "hours": lambda n: ngettext("%s hour<!--after>", "%s hours<!--after>", n),
    "minutes": lambda n: ngettext("%s minute<!--after>", "%s minutes<!--after>", n),
    "seconds": lambda n: ngettext("%s second<!--after>", "%s seconds<!--after>", n),
    }

shortTimeTable = {
    "years": _("%sy"),
    "months": _("%sm"),
    "days": _("%sd"),
    "hours": _("%sh"),
    "minutes": _("%sm"),
    "seconds": _("%ss"),
    }

def fmtTimeSpan(time, pad=0, point=0, short=False, after=False):
    "Return a string representing a time span (eg '2 days')."
    (type, point) = optimalPeriod(time, point)
    time = convertSecondsTo(time, type)
    if short:
        fmt = shortTimeTable[type]
    else:
        if after:
            fmt = afterTimeTable[type](_pluralCount(time, point))
        else:
            fmt = timeTable[type](_pluralCount(time, point))
    timestr = "%(a)d.%(b)df" % {'a': pad, 'b': point}
    return locale.format_string("%" + (fmt % timestr), time)

def optimalPeriod(time, point):
    if abs(time) < 60:
        type = "seconds"
        point -= 1
    elif abs(time) < 3599:
        type = "minutes"
    elif abs(time) < 60 * 60 * 24:
        type = "hours"
    elif abs(time) < 60 * 60 * 24 * 30:
        type = "days"
    elif abs(time) < 60 * 60 * 24 * 365:
        type = "months"
        point += 1
    else:
        type = "years"
        point += 1
    return (type, max(point, 0))

def convertSecondsTo(seconds, type):
    if type == "seconds":
        return seconds
    elif type == "minutes":
        return seconds / 60.0
    elif type == "hours":
        return seconds / 3600.0
    elif type == "days":
        return seconds / 86400.0
    elif type == "months":
        return seconds / 2592000.0
    elif type == "years":
        return seconds / 31536000.0
    assert False

def _pluralCount(time, point):
    if point:
        return 2
    return round(time)

# Locale
##############################################################################

def fmtPercentage(float_value, point=1):
    "Return float with percentage sign"
    fmt = '%' + "0.%(b)df" % {'b': point}
    return locale.format_string(fmt, float_value) + "%"

def fmtFloat(float_value, point=1):
    "Return a string with decimal separator according to current locale"
    fmt = '%' + "0.%(b)df" % {'b': point}
    return locale.format_string(fmt, float_value)

# HTML
##############################################################################

def stripHTML(s):
    s = re.sub("(?s)<style.*?>.*?</style>", "", s)
    s = re.sub("<.*?>", "", s)
    s = s.replace("&lt;", "<")
    s = s.replace("&gt;", ">")
    return s

def tidyHTML(html):
    "Remove cruft like body tags and return just the important part."
    # contents of body - no head or html tags
    html = re.sub(u".*<body.*?>(.*)</body></html>",
                  "\\1", html.replace("\n", u""))
    # strip superfluous Qt formatting
    html = re.sub(u"(?:-qt-table-type: root; )?"
                  "margin-top:\d+px; margin-bottom:\d+px; margin-left:\d+px; "
                  "margin-right:\d+px;(?: -qt-block-indent:0; "
                  "text-indent:0px;)?", u"", html)
    html = re.sub(u"-qt-paragraph-type:empty;", u"", html)
    # strip leading space in style statements, and remove if no contents
    html = re.sub(u'style=" ', u'style="', html)
    html = re.sub(u' style=""', u"", html)
    # convert P tags into SPAN and/or BR
    html = re.sub(u'<p( style=.+?)>(.*?)</p>', u'<span\\1>\\2</span><br>', html)
    html = re.sub(u'<p>(.*?)</p>', u'\\1<br>', html)
    html = re.sub(u'<br>$', u'', html)
    html = re.sub(u"^<table><tr><td style=\"border: none;\">(.*)<br></td></tr></table>$", u"\\1", html)
    return html

# IDs
##############################################################################

def genID(static=[]):
    "Generate a random, unique 64bit ID."
    # 23 bits of randomness, 41 bits of current time
    # random rather than a counter to ensure efficient btree
    t = long(time.time()*1000)
    if not static:
        static.extend([t, {}])
    else:
        if static[0] != t:
            static[0] = t
            static[1] = {}
    while 1:
        rand = random.getrandbits(23)
        if rand not in static[1]:
            static[1][rand] = True
            break
    x = rand << 41 | t
    # turn into a signed long
    if x >= 9223372036854775808L:
        x -= 18446744073709551616L
    return x

def hexifyID(id):
    if id < 0:
        id += 18446744073709551616L
    return "%x" % id

def dehexifyID(id):
    id = int(id, 16)
    if id >= 9223372036854775808L:
        id -= 18446744073709551616L
    return id

def ids2str(ids):
    """Given a list of integers, return a string '(int1,int2,.)'
The caller is responsible for ensuring only integers are provided.
This is safe if you use sqlite primary key columns, which are guaranteed
to be integers."""
    return "(%s)" % ",".join([str(i) for i in ids])

# Tags
##############################################################################

def parseTags(tags):
    "Parse a string and return a list of tags."
    tags = re.split(" |, ?", tags)
    return [t.strip() for t in tags if t.strip()]

def joinTags(tags):
    return u" ".join(tags)

def canonifyTags(tags):
    "Strip leading/trailing/superfluous commas and duplicates."
    return joinTags(sorted(set(parseTags(tags))))

def findTag(tag, tags):
    "True if TAG is in TAGS. Ignore case."
    if not isinstance(tags, types.ListType):
        tags = parseTags(tags)
    return tag.lower() in [t.lower() for t in tags]

def addTags(tagstr, tags):
    "Add tags if they don't exist."
    currentTags = parseTags(tags)
    for tag in parseTags(tagstr):
        if not findTag(tag, currentTags):
            currentTags.append(tag)
    return joinTags(currentTags)

def deleteTags(tagstr, tags):
    "Delete tags if they don't exists."
    currentTags = parseTags(tags)
    for tag in parseTags(tagstr):
        try:
            currentTags.remove(tag)
        except ValueError:
            pass
    return joinTags(currentTags)

# Misc
##############################################################################

def checksum(data):
    return md5(data).hexdigest()
 228  
ez_setup.py
@@ -0,0 +1,228 @@
#!python
"""Bootstrap setuptools installation
If you want to use setuptools in your package's setup.py, just include this
file in the same directory with it, and add this to the top of your setup.py::
    from ez_setup import use_setuptools
    use_setuptools()
If you want to require a specific version of setuptools, set a download
mirror, or use an alternate download directory, you can do so by supplying
the appropriate options to ``use_setuptools()``.
This file can also be run as a script to install or upgrade setuptools.
"""
import sys
DEFAULT_VERSION = "0.6c5"
DEFAULT_URL     = "http://cheeseshop.python.org/packages/%s/s/setuptools/" % sys.version[:3]

md5_data = {
    'setuptools-0.6b1-py2.3.egg': '8822caf901250d848b996b7f25c6e6ca',
    'setuptools-0.6b1-py2.4.egg': 'b79a8a403e4502fbb85ee3f1941735cb',
    'setuptools-0.6b2-py2.3.egg': '5657759d8a6d8fc44070a9d07272d99b',
    'setuptools-0.6b2-py2.4.egg': '4996a8d169d2be661fa32a6e52e4f82a',
    'setuptools-0.6b3-py2.3.egg': 'bb31c0fc7399a63579975cad9f5a0618',
    'setuptools-0.6b3-py2.4.egg': '38a8c6b3d6ecd22247f179f7da669fac',
    'setuptools-0.6b4-py2.3.egg': '62045a24ed4e1ebc77fe039aa4e6f7e5',
    'setuptools-0.6b4-py2.4.egg': '4cb2a185d228dacffb2d17f103b3b1c4',
    'setuptools-0.6c1-py2.3.egg': 'b3f2b5539d65cb7f74ad79127f1a908c',
    'setuptools-0.6c1-py2.4.egg': 'b45adeda0667d2d2ffe14009364f2a4b',
    'setuptools-0.6c2-py2.3.egg': 'f0064bf6aa2b7d0f3ba0b43f20817c27',
    'setuptools-0.6c2-py2.4.egg': '616192eec35f47e8ea16cd6a122b7277',
    'setuptools-0.6c3-py2.3.egg': 'f181fa125dfe85a259c9cd6f1d7b78fa',
    'setuptools-0.6c3-py2.4.egg': 'e0ed74682c998bfb73bf803a50e7b71e',
    'setuptools-0.6c3-py2.5.egg': 'abef16fdd61955514841c7c6bd98965e',
    'setuptools-0.6c4-py2.3.egg': 'b0b9131acab32022bfac7f44c5d7971f',
    'setuptools-0.6c4-py2.4.egg': '2a1f9656d4fbf3c97bf946c0a124e6e2',
    'setuptools-0.6c4-py2.5.egg': '8f5a052e32cdb9c72bcf4b5526f28afc',
    'setuptools-0.6c5-py2.3.egg': 'ee9fd80965da04f2f3e6b3576e9d8167',
    'setuptools-0.6c5-py2.4.egg': 'afe2adf1c01701ee841761f5bcd8aa64',
    'setuptools-0.6c5-py2.5.egg': 'a8d3f61494ccaa8714dfed37bccd3d5d',
}

import sys, os

def _validate_md5(egg_name, data):
    if egg_name in md5_data:
        from md5 import md5
        digest = md5(data).hexdigest()
        if digest != md5_data[egg_name]:
            print >>sys.stderr, (
                "md5 validation of %s failed!  (Possible download problem?)"
                % egg_name
            )
            sys.exit(2)
    return data


def use_setuptools(
    version=DEFAULT_VERSION, download_base=DEFAULT_URL, to_dir=os.curdir,
    download_delay=15
):
    """Automatically find/download setuptools and make it available on sys.path
    `version` should be a valid setuptools version number that is available
    as an egg for download under the `download_base` URL (which should end with
    a '/').  `to_dir` is the directory where setuptools will be downloaded, if
    it is not already available.  If `download_delay` is specified, it should
    be the number of seconds that will be paused before initiating a download,
    should one be required.  If an older version of setuptools is installed,
    this routine will print a message to ``sys.stderr`` and raise SystemExit in
    an attempt to abort the calling script.
    """
    try:
        import setuptools
        if setuptools.__version__ == '0.0.1':
            print >>sys.stderr, (
            "You have an obsolete version of setuptools installed.  Please\n"
            "remove it from your system entirely before rerunning this script."
            )
            sys.exit(2)
    except ImportError:
        egg = download_setuptools(version, download_base, to_dir, download_delay)
        sys.path.insert(0, egg)
        import setuptools; setuptools.bootstrap_install_from = egg

    import pkg_resources
    try:
        pkg_resources.require("setuptools>="+version)

    except pkg_resources.VersionConflict, e:
        # XXX could we install in a subprocess here?
        print >>sys.stderr, (
            "The required version of setuptools (>=%s) is not available, and\n"
            "can't be installed while this script is running. Please install\n"
            " a more recent version first.\n\n(Currently using %r)"
        ) % (version, e.args[0])
        sys.exit(2)

def download_setuptools(
    version=DEFAULT_VERSION, download_base=DEFAULT_URL, to_dir=os.curdir,
    delay = 15
):
    """Download setuptools from a specified location and return its filename
    `version` should be a valid setuptools version number that is available
    as an egg for download under the `download_base` URL (which should end
    with a '/'). `to_dir` is the directory where the egg will be downloaded.
    `delay` is the number of seconds to pause before an actual download attempt.
    """
    import urllib2, shutil
    egg_name = "setuptools-%s-py%s.egg" % (version,sys.version[:3])
    url = download_base + egg_name
    saveto = os.path.join(to_dir, egg_name)
    src = dst = None
    if not os.path.exists(saveto):  # Avoid repeated downloads
        try:
            from distutils import log
            if delay:
                log.warn("""
---------------------------------------------------------------------------
This script requires setuptools version %s to run (even to display
help).  I will attempt to download it for you (from
%s), but
you may need to enable firewall access for this script first.
I will start the download in %d seconds.
(Note: if this machine does not have network access, please obtain the file
   %s
and place it in this directory before rerunning this script.)
---------------------------------------------------------------------------""",
                    version, download_base, delay, url
                ); from time import sleep; sleep(delay)
            log.warn("Downloading %s", url)
            src = urllib2.urlopen(url)
            # Read/write all in one block, so we don't create a corrupt file
            # if the download is interrupted.
            data = _validate_md5(egg_name, src.read())
            dst = open(saveto,"wb"); dst.write(data)
        finally:
            if src: src.close()
            if dst: dst.close()
    return os.path.realpath(saveto)

def main(argv, version=DEFAULT_VERSION):
    """Install or upgrade setuptools and EasyInstall"""

    try:
        import setuptools
    except ImportError:
        egg = None
        try:
            egg = download_setuptools(version, delay=0)
            sys.path.insert(0,egg)
            from setuptools.command.easy_install import main
            return main(list(argv)+[egg])   # we're done here
        finally:
            if egg and os.path.exists(egg):
                os.unlink(egg)
    else:
        if setuptools.__version__ == '0.0.1':
            # tell the user to uninstall obsolete version
            use_setuptools(version)

    req = "setuptools>="+version
    import pkg_resources
    try:
        pkg_resources.require(req)
    except pkg_resources.VersionConflict:
        try:
            from setuptools.command.easy_install import main
        except ImportError:
            from easy_install import main
        main(list(argv)+[download_setuptools(delay=0)])
        sys.exit(0) # try to force an exit
    else:
        if argv:
            from setuptools.command.easy_install import main
            main(argv)
        else:
            print "Setuptools version",version,"or greater has been installed."
            print '(Run "ez_setup.py -U setuptools" to reinstall or upgrade.)'



def update_md5(filenames):
    """Update our built-in md5 registry"""

    import re
    from md5 import md5

    for name in filenames:
        base = os.path.basename(name)
        f = open(name,'rb')
        md5_data[base] = md5(f.read()).hexdigest()
        f.close()

    data = ["    %r: %r,\n" % it for it in md5_data.items()]
    data.sort()
    repl = "".join(data)

    import inspect
    srcfile = inspect.getsourcefile(sys.modules[__name__])
    f = open(srcfile, 'rb'); src = f.read(); f.close()

    match = re.search("\nmd5_data = {\n([^}]+)}", src)
    if not match:
        print >>sys.stderr, "Internal error!"
        sys.exit(2)

    src = src[:match.start(1)] + repl + src[match.end(1):]
    f = open(srcfile,'w')
    f.write(src)
    f.close()


if __name__=='__main__':
    if len(sys.argv)>2 and sys.argv[1]=='--md5update':
        update_md5(sys.argv[2:])
    else:
        main(sys.argv[1:])





 36  
instructions.yml
@@ -0,0 +1,36 @@
from python.read~v :
      - sets-up/rake.io :import octocokit_sets-up :toolbelt :
use_setuptools()
from setuptools import setup, find_packages
import sys, os

import anki

setup(name='bitore.sig',
     kind :kite.yarn :
      version'@v'-"0.4.10.1":,,
      description='An intelligent spaced-repetition memory training library',
      long_description="",
      # Get strings from http://www.python.org/pypi?%3Aaction=list_classifiers
      classifiers=[
    'Intended Audience :: Developers',
    'Intended Audience :: Education',
    'License :: OSI Approved :: GNU General Public License (GPL)',
    'Operating System :: OS Independent',
    'Programming Language :: Python',
    'Topic :: Education',
    'Topic :: Software Development :: Libraries :: Python Modules',
        ],
      keywords='',
     '" author'"' ':' '"ZachryTWood'@'Administrator'@'.it'.git'"','
      author's :e-mail :zachryiixixiiwood@gmail.com :''
      'WebBaseUrl=' ':' '"https://www.bitcore.net/"'":,
      'url='http://ichi2.net/anki/index.html',
      license='GPLv3',
      packages=["anki", "anki.importing"],
      package_data={'anki': ['locale/*/*/*'],},
      include_package_data=True,
      zip_safe=False,
      install_requires=[
        ],
      )
 0  
setup.cfg
Empty file.
 0  
tests/__init__.py
Empty file.
 1  
tests/deck/fake.png
Unable to render rich display

 50  
tests/importing/dingsbums.xml
@@ -0,0 +1,50 @@
<?xml version="1.0" encoding="UTF-8"?>
<vocabulary version="3">
<info><title>Deutsch - Italienisch</title><author>Rick Gruber-Riemer</author><notes>Klett Grund- und Aufbauwortschatz</notes><copyright></copyright><licence></licence><blabel>Deutsch</blabel><tlabel>Italienisch</tlabel><alabel>Attributes</alabel><ulabel>Lektion</ulabel><clabel>Kategori</clabel><olabel>Others</olabel><explabel>Erklärung</explabel><exlabel>Unregelmässig</exlabel><bor>en_US</bor><tor>en_US</tor><aor>en_US</aor><uor>en_US</uor><cor>en_US</cor><expor>en_US</expor><exor>en_US</exor><por>en_US</por><ror>en_US</ror><visa>1</visa><visu>0</visu><viscat>0</viscat><visexp>0</visexp><visex>2</visex><vispro>2</vispro><visrel>2</visrel><syllb>false</syllb><syllt>false</syllt></info>
<etattributes>
<eta eid="ETA4" n="Steigerung" di="ETAI10" lu="20061222 07:56:27 CET"><etai eid="ETAI10" ir="false">Regelmässig</etai><etai eid="ETAI11" ir="false">Unregelmässig</etai></eta>
<eta eid="ETA5" n="Perfekt" di="ETAI12" lu="20070210 13:20:09 CET"><etai eid="ETAI12" ir="false">avere</etai><etai eid="ETAI13" ir="false">essere</etai><etai eid="ETAI14" ir="false">avere oder essere</etai></eta>
<eta eid="ETA1" n="Konjugation" di="ETAI1" lu="20070211 12:35:19 CET"><etai eid="ETAI1" ir="false">-are (regelmässig)</etai><etai eid="ETAI16" ir="false">-ere (regelmässig)</etai><etai eid="ETAI15" ir="false">-ire (regelmässig)</etai><etai eid="ETAI2" ir="false">Unregelmässig</etai></eta>
<eta eid="ETA2" n="Geschlecht" di="ETAI3" lu="20070210 21:08:17 CET"><etai eid="ETAI3" ir="false">il</etai><etai eid="ETAI4" ir="false">la</etai></eta>
<eta eid="ETA3" n="Mehrzahl" di="ETAI6" lu="20070212 10:03:56 CET"><etai eid="ETAI6" ir="false">Regelmässig</etai><etai eid="ETAI7" ir="false">Unregelmässig</etai><etai eid="ETAI8" ir="false">Nur Einzahl</etai><etai eid="ETAI9" ir="false">Nur Mehrzahl</etai></eta>
</etattributes>
<entrytypes>
<entrytype eid="ET8" n="Sätze und Redewendungen" lu="20070310 20:16:30 CET"></entrytype>
<entrytype eid="ET7" n="Slang" lu="20070210 20:58:29 CET"></entrytype>
<entrytype eid="ET4" n="Adjektiv / Adverb" a1="ETA4" lu="20061222 07:58:14 CET"></entrytype>
<entrytype eid="ET3" n="Substantiv" a1="ETA2" a2="ETA3" lu="20061222 07:55:39 CET"></entrytype>
<entrytype eid="ET6" n="Modi di dire" lu="20070210 13:29:14 CET"></entrytype>
<entrytype eid="ET5" n="Konjugation" lu="20070210 13:20:36 CET"></entrytype>
<entrytype eid="ET2" n="Anderes" lu="20061222 07:52:31 CET"></entrytype>
<entrytype eid="ET1" n="Verb" a1="ETA1" a2="ETA5" lu="20061222 07:57:41 CET"></entrytype>
</entrytypes>
<units>
<unit eid="U4" lu="20070217 20:14:02 CET"><name>Rest</name><desc></desc></unit>
<unit eid="U3" lu="20070217 20:03:30 CET"><name>Harenberg Kalender Italienisch 2007</name><desc></desc></unit>
<unit eid="U5" lu="20070310 20:15:52 CET"><name>50. Restaurant, Café, Hotel</name><desc></desc></unit>
<unit eid="U2" lu="20070210 13:31:47 CET"><name>Berlitz Kalender 2005</name><desc></desc></unit>
<unit eid="U1" lu="20061222 07:48:58 CET"><name>A</name><desc></desc></unit>
</units>
<categories>
<category eid="C1" lu="20061222 07:46:40 CET"><name>Default</name><desc></desc></category>
</categories>
<entries>
<e et="ET1" eid="E113" u="U1" c="C1" lv="1" st="true" lu="20070211 14:18:49 CET" ll="19700101 01:00:00 CET" a1="ETAI1" a2="ETAI12"><o>entfernen, beseitigen</o><d>allontanare</d></e>
<e et="ET2" eid="E114" u="U1" c="C1" lv="2" st="true" lu="20070211 14:20:31 CET" ll="19700101 01:00:00 CET"><o>dann; damals, also; früher</o><d>allora</d></e>
<e et="ET3" eid="E112" u="U1" c="C1" lv="3" st="true" lu="20070211 14:17:19 CET" ll="19700101 01:00:00 CET" a1="ETAI3" a2="ETAI6"><o>Schüler, Zögling</o><d>allievo</d></e>
<e et="ET4" eid="E110" u="U1" c="C1" lv="4" st="true" lu="20070211 14:10:56 CET" ll="19700101 01:00:00 CET" a1="ETAI10"><o>lustig, heiter</o><d>allegro</d></e>
<e et="ET6" eid="E8" u="U2" c="C1" lv="5" st="true" lu="20070210 13:31:58 CET" ll="19700101 01:00:00 CET"><o>sich in einer unbequemen Situation befinden</o><d>essere un pesche four d&apos; aqua</d></e>
<e et="ET7" eid="E49" u="U2" c="C1" lv="6" st="true" lu="20070210 20:59:34 CET" ll="19700101 01:00:00 CET"><o>das ist mir egal</o><d>me ne frego</d><ep>Geste: unter dem Kinn mit der Hand vonhinten nach vorne reiben</ep></e>
<e et="ET3" eid="E251" u="U5" c="C1" lv="7" st="true" lu="20070310 20:29:49 CET" ll="19700101 01:00:00 CET" a1="ETAI4" a2="ETAI6"><o>Wirtin</o><d>ostessa</d></e>
</entries>
<stats>
<sset ts="20070310 21:16:36 CET"><sne lv="1">236</sne><sne lv="2">19</sne><sne lv="3">1</sne><sne lv="4">5</sne><sne lv="5">3</sne><sne lv="6">1</sne><sne lv="7">2</sne></sset>
<sset ts="20070217 20:37:22 CET"><sne lv="1">196</sne><sne lv="2">19</sne><sne lv="3">1</sne><sne lv="4">5</sne><sne lv="5">3</sne><sne lv="6">1</sne><sne lv="7">2</sne></sset>
<sset ts="20070212 10:13:05 CET"><sne lv="1">125</sne><sne lv="2">12</sne><sne lv="3">5</sne><sne lv="4">1</sne><sne lv="5">1</sne><sne lv="6">0</sne><sne lv="7">0</sne></sset>
<sset ts="20070228 21:44:04 CET"><sne lv="1">202</sne><sne lv="2">19</sne><sne lv="3">1</sne><sne lv="4">5</sne><sne lv="5">3</sne><sne lv="6">1</sne><sne lv="7">2</sne></sset>
<sset ts="20070217 19:10:49 CET"><sne lv="1">188</sne><sne lv="2">12</sne><sne lv="3">5</sne><sne lv="4">1</sne><sne lv="5">1</sne><sne lv="6">0</sne><sne lv="7">0</sne></sset>
<sset ts="20070211 20:55:08 CET"><sne lv="1">124</sne><sne lv="2">18</sne><sne lv="3">1</sne><sne lv="4">1</sne><sne lv="5">0</sne><sne lv="6">0</sne><sne lv="7">0</sne></sset>
<sset ts="20070217 19:14:04 CET"><sne lv="1">176</sne><sne lv="2">19</sne><sne lv="3">1</sne><sne lv="4">5</sne><sne lv="5">3</sne><sne lv="6">1</sne><sne lv="7">2</sne></sset>
<sset ts="20070211 20:57:10 CET"><sne lv="1">124</sne><sne lv="2">18</sne><sne lv="3">1</sne><sne lv="4">1</sne><sne lv="5">0</sne><sne lv="6">0</sne><sne lv="7">0</sne></sset>
</stats>
</vocabulary>
 89  
tests/importing/supermemo1.xml
@@ -0,0 +1,89 @@
<?xml version="1.0" encoding="UTF-8"?>
<SuperMemoCollection>
  <Count>3572</Count>

  <SuperMemoElement>
    <ID>1</ID>

    <Type>Topic</Type>

    <Content>
      <Question />

      <Answer />
    </Content>

    <SuperMemoElement>
      <ID>40326</ID>

      <Title>aoeu</Title>

      <Type>Topic</Type>

      <SuperMemoElement>
        <ID>40327</ID>

        <Title>1-400</Title>

        <Type>Topic</Type>

        <SuperMemoElement>
          <ID>40615</ID>

          <Title>aoeu</Title>

          <Type>Topic</Type>

          <SuperMemoElement>
            <ID>10247</ID>

            <Type>Item</Type>

            <Content>
              <Question>aoeu</Question>

              <Answer>aoeu</Answer>
            </Content>

            <LearningData>
              <Interval>1844</Interval>

              <Repetitions>7</Repetitions>

              <Lapses>0</Lapses>

              <LastRepetition>19.09.2002</LastRepetition>

              <AFactor>5,701</AFactor>

              <UFactor>2,452</UFactor>
            </LearningData>
          </SuperMemoElement>

        </SuperMemoElement>

        <Type>Topic</Type>

        <Content>
          <Question>aoeu</Question>
          <Answer />
        </Content>

        <LearningData>
          <Interval>0</Interval>

          <Repetitions>0</Repetitions>

          <Lapses>0</Lapses>

          <LastRepetition>04.08.2000</LastRepetition>

          <AFactor>3,000</AFactor>

          <UFactor>0,000</UFactor>
        </LearningData>

      </SuperMemoElement>
    </SuperMemoElement>
  </SuperMemoElement>
</SuperMemoCollection>
 219  
tests/importing/test.mem
@@ -0,0 +1,219 @@
--- Mnemosyne Data Base --- Format Version 1 ---
(lp1
(imnemosyne.core.mnemosyne_core
StartTime
p2
(dp3
S'time'
p4
F1183141800
sba(lp5
(imnemosyne.core.mnemosyne_core
Category
p6
(dp7
S'active'
p8
I01
sS'name'
p9
V<default>
p10
sba(imnemosyne.core.mnemosyne_core
Category
p11
(dp12
S'active'
p13
I01
sS'name'
p14
Vfoo
p15
sba(imnemosyne.core.mnemosyne_core
Category
p16
(dp17
g13
I01
sg14
Vbaz, quux
p18
sbaa(lp19
(imnemosyne.core.mnemosyne_core
Item
p20
(dp21
S'a'
Vbar
p22
sS'last_rep'
p23
L34L
sS'ret_reps'
p24
I0
sS'cat'
p25
g16
sS'q'
Vfoo
p26
sS'grade'
p27
I0
sS'acq_reps'
p28
I1
sS'ret_reps_since_lapse'
p29
I0
sS'easiness'
p30
F2.5
sS'lapses'
p31
I0
sS'acq_reps_since_lapse'
p32
I1
sS'next_rep'
p33
L34L
sS'id'
p34
S'9f401476'
p35
sba(imnemosyne.core.mnemosyne_core
Item
p36
(dp37
S'a'
Vfoo
p38
sg23
L34L
sg24
I0
sg25
g6
sS'q'
Vbar
p39
sg27
I0
sg28
I1
sg29
I0
sg30
F2.5
sg31
I0
sg32
I1
sg33
L34L
sg34
S'a869958d'
p40
sba(imnemosyne.core.mnemosyne_core
Item
p41
(dp42
S'a'
Vquux
p43
sg23
L34L
sg24
I0
sg25
g11
sS'q'
Vbaz
p44
sg27
I5
sg28
I2
sg29
I0
sg30
F2.5
sg31
I0
sg32
I2
sg33
L35L
sg34
S'74651aa3'
p45
sba(imnemosyne.core.mnemosyne_core
Item
p46
(dp47
S'a'
Vbaz
p48
sg23
L34L
sg24
I0
sg25
g6
sS'q'
Vquux
p49
sg27
I0
sg28
I1
sg29
I0
sg30
F2.5
sg31
I0
sg32
I1
sg33
L34L
sg34
S'0bd8f10b'
p50
sba(imnemosyne.core.mnemosyne_core
Item
p51
(dp52
S'a'
Vcard
p53
sg23
L34L
sg24
I0
sg25
g11
sS'q'
Vonesided
p54
sg27
I0
sg28
I1
sg29
I0
sg30
F2.5
sg31
I0
sg32
I1
sg33
L34L
sg34
S'bb503cf1'
p55
sbaa.
 BIN +3.84 KB 
tests/importing/test03.anki
Binary file not shown.
 BIN +31 KB 
tests/importing/test10-2.anki
Binary file not shown.
 BIN +40 KB 
tests/importing/test10-3.anki
Binary file not shown.
 BIN +31 KB 
tests/importing/test10.anki
Binary file not shown.
 11  
tests/importing/text-2fields.txt
@@ -0,0 +1,11 @@
# this is a test file

食べる	to eat
飲む	to drink
テスト	test
to eat	食べる
飲む	to drink
多すぎる	too many	fields
not, enough, fields
遊ぶ	
	to play
 2  
tests/importing/text-tags.txt
@@ -0,0 +1,2 @@
foo	bar	baz,qux
foo2	bar2	baz2
 7  
tests/shared.py
@@ -0,0 +1,7 @@
def assertException(exception, func):
    found = False
    try:
        func()
    except exception:
        found = True
    assert found
 BIN +42 KB 
tests/syncing/media-tests/1.anki
Binary file not shown.
 BIN +545 Bytes 
tests/syncing/media-tests/1.media/834a227f8d0abc4e2193f08138e59885.png
Unable to render rich display

 BIN +580 Bytes 
tests/syncing/media-tests/1.media/c4ad64a7afe9b09602cdf91e18897959.png
Unable to render rich display

 BIN +42 KB 
tests/syncing/media-tests/2.anki
Binary file not shown.
 BIN +644 Bytes 
tests/syncing/media-tests/2.media/22161b29b0c18e068038021f54eee1ee.png
Unable to render rich display

 279  
tests/test_deck.py
@@ -0,0 +1,279 @@
# coding: utf-8

import nose, os, re
from tests.shared import assertException

from anki.errors import *
from anki import DeckStorage
from anki.db import *
from anki.models import FieldModel, Model, CardModel
from anki.stdmodels import BasicModel
from anki.utils import stripHTML

newPath = None
newModified = None

testDir = os.path.dirname(__file__)

## opening/closing

def test_new():
    deck = DeckStorage.Deck()
    assert not deck.path
    assert deck.engine
    assert deck.modified

def test_attachNew():
    global newPath, newModified
    path = "/tmp/test_attachNew.anki"
    try:
        os.unlink(path)
    except OSError:
        pass
    deck = DeckStorage.Deck(path)
    # for attachOld()
    newPath = deck.path
    deck.setVar("pageSize", 4096)
    deck.save()
    newModified = deck.modified
    deck.close()
    del deck

def test_attachOld():
    deck = DeckStorage.Deck(newPath, backup=False)
    assert deck.modified == newModified
    deck.close()

def test_attachReadOnly():
    # non-writeable dir
    assertException(Exception,
                    lambda: DeckStorage.Deck("/attachroot"))
    # reuse tmp file from before, test non-writeable file
    os.chmod(newPath, 0)
    assertException(Exception,
                    lambda: DeckStorage.Deck(newPath))
    os.chmod(newPath, 0666)
    os.unlink(newPath)

def test_saveAs():
    path = "/tmp/test_saveAs.anki"
    try:
        os.unlink(path)
    except OSError:
        pass
    path2 = "/tmp/test_saveAs2.anki"
    try:
        os.unlink(path2)
    except OSError:
        pass
    # start with an in-memory deck
    deck = DeckStorage.Deck()
    deck.addModel(BasicModel())
    # add a card
    f = deck.newFact()
    f['Front'] = u"foo"; f['Back'] = u"bar"
    deck.addFact(f)
    assert deck.cardCount == 1
    # save in new deck
    newDeck = deck.saveAs(path)
    assert newDeck.cardCount == 1
    # delete card
    id = newDeck.s.scalar("select id from cards")
    newDeck.deleteCard(id)
    # save into new deck
    newDeck2 = newDeck.saveAs(path2)
    # new deck should have zero cards
    assert newDeck2.cardCount == 0
    # but old deck should have reverted the unsaved changes
    newDeck = DeckStorage.Deck(path)
    assert newDeck.cardCount == 1
    newDeck.close()

def test_factAddDelete():
    deck = DeckStorage.Deck()
    deck.addModel(BasicModel())
    # set rollback point
    deck.s.commit()
    f = deck.newFact()
    # empty fields
    try:
        deck.addFact(f)
    except Exception, e:
        pass
    assert e.data['type'] == 'fieldEmpty'
    # add a fact
    f['Front'] = u"one"; f['Back'] = u"two"
    f = deck.addFact(f)
    assert len(f.cards) == 1
    deck.rollback()
    # try with two cards
    f = deck.newFact()
    f['Front'] = u"one"; f['Back'] = u"two"
    f.model.cardModels[1].active = True
    f = deck.addFact(f)
    assert len(f.cards) == 2
    # ensure correct order
    c0 = [c for c in f.cards if c.ordinal == 0][0]
    assert re.sub("</?.+?>", "", c0.question) == u"one"
    # now let's make a duplicate
    f2 = deck.newFact()
    f2['Front'] = u"one"; f2['Back'] = u"three"
    try:
        f2 = deck.addFact(f2)
    except Exception, e:
        pass
    assert e.data['type'] == 'fieldNotUnique'
    # try delete the first card
    id1 = f.cards[0].id; id2 = f.cards[1].id
    deck.deleteCard(id1)
    # and the second should clear the fact
    deck.deleteCard(id2)

def test_modelAddDelete():
    deck = DeckStorage.Deck()
    deck.addModel(BasicModel())
    deck.addModel(BasicModel())
    f = deck.newFact()
    f['Front'] = u'1'
    f['Back'] = u'2'
    deck.addFact(f)
    assert deck.cardCount == 1
    deck.deleteModel(deck.currentModel)
    assert deck.cardCount == 0
    deck.s.refresh(deck)

def test_modelCopy():
    deck = DeckStorage.Deck()
    m = BasicModel()
    assert len(m.fieldModels) == 2
    assert len(m.cardModels) == 2
    deck.addModel(m)
    f = deck.newFact()
    f['Front'] = u'1'
    deck.addFact(f)
    m2 = deck.copyModel(m)
    assert m2.name == "Basic copy"
    assert m2.id != m.id
    assert m2.fieldModels[0].id != m.fieldModels[0].id
    assert m2.cardModels[0].id != m.cardModels[0].id
    assert len(m2.fieldModels) == 2
    assert len(m.fieldModels) == 2
    assert len(m2.fieldModels) == len(m.fieldModels)
    assert len(m.cardModels) == 2
    assert len(m2.cardModels) == 2

def test_media():
    deck = DeckStorage.Deck()
    # create a media dir
    deck.mediaDir(create=True)
    # put a file into it
    file = unicode(os.path.join(testDir, "deck/fake.png"))
    deck.addMedia(file)
    # make sure it gets copied on saveas
    path = "/tmp/saveAs2.anki"
    sum = "0bee89b07a248e27c83fc3d5951213c1.png"
    try:
        os.unlink(path)
    except OSError:
        pass
    deck.saveAs(path)
    assert os.path.exists("/tmp/saveAs2.media/%s" % sum)

def test_modelChange():
    deck = DeckStorage.Deck()
    m = Model(u"Japanese")
    m1 = m
    f = FieldModel(u'Expression', True, True)
    m.addFieldModel(f)
    m.addFieldModel(FieldModel(u'Meaning', False, False))
    f = FieldModel(u'Reading', False, False)
    m.addFieldModel(f)
    m.addCardModel(CardModel(u"Recognition",
                             u"%(Expression)s",
                             u"%(Reading)s<br>%(Meaning)s"))
    m.addCardModel(CardModel(u"Recall",
                             u"%(Meaning)s",
                             u"%(Expression)s<br>%(Reading)s",
                             active=False))
    m.tags = u"Japanese"
    m1.cardModels[1].active = True
    deck.addModel(m1)
    f = deck.newFact()
    f['Expression'] = u'e'
    f['Meaning'] = u'm'
    f['Reading'] = u'r'
    f = deck.addFact(f)
    f2 = deck.newFact()
    f2['Expression'] = u'e2'
    f2['Meaning'] = u'm2'
    f2['Reading'] = u'r2'
    deck.addFact(f2)
    m2 = BasicModel()
    m2.cardModels[1].active = True
    deck.addModel(m2)
    # convert to basic
    assert deck.modelUseCount(m1) == 2
    assert deck.modelUseCount(m2) == 0
    assert deck.cardCount == 4
    assert deck.factCount == 2
    fmap = {m1.fieldModels[0]: m2.fieldModels[0],
            m1.fieldModels[1]: None,
            m1.fieldModels[2]: m2.fieldModels[1]}
    cmap = {m1.cardModels[0]: m2.cardModels[0],
            m1.cardModels[1]: None}
    deck.changeModel([f.id], m2, fmap, cmap)
    assert deck.modelUseCount(m1) == 1
    assert deck.modelUseCount(m2) == 1
    assert deck.cardCount == 3
    assert deck.factCount == 2
    (q, a) = deck.s.first("""
select question, answer from cards where factId = :id""",
                          id=f.id)
    assert stripHTML(q) == u"e"
    assert stripHTML(a) == u"r"

def test_findCards():
    deck = DeckStorage.Deck()
    deck.addModel(BasicModel())
    f = deck.newFact()
    f['Front'] = u'dog'
    f['Back'] = u'cat'
    f.tags = u"monkey"
    deck.addFact(f)
    f = deck.newFact()
    f['Front'] = u'goats are fun'
    f['Back'] = u'sheep'
    f.tags = u"sheep goat horse"
    deck.addFact(f)
    f = deck.newFact()
    f['Front'] = u'cat'
    f['Back'] = u'sheep'
    deck.addFact(f)
    assert not deck.findCards("tag:donkey")
    assert len(deck.findCards("tag:sheep")) == 1
    assert len(deck.findCards("tag:sheep tag:goat")) == 1
    assert len(deck.findCards("tag:sheep tag:monkey")) == 0
    assert len(deck.findCards("tag:monkey")) == 1
    assert len(deck.findCards("tag:sheep -tag:monkey")) == 1
    assert len(deck.findCards("-tag:sheep")) == 2
    assert len(deck.findCards("cat")) == 2
    assert len(deck.findCards("cat -dog")) == 1
    assert len(deck.findCards("cat -dog")) == 1
    assert len(deck.findCards("are goats")) == 1
    assert len(deck.findCards('"are goats"')) == 0
    assert len(deck.findCards('"goats are"')) == 1
    # make sure card templates and models match too
    assert len(deck.findCards('tag:basic')) == 3
    assert len(deck.findCards('tag:forward')) == 3
    deck.addModel(BasicModel())
    f = deck.newFact()
    f['Front'] = u'foo'
    f['Back'] = u'bar'
    deck.addFact(f)
    deck.currentModel.cardModels[1].active = True
    f = deck.newFact()
    f['Front'] = u'baz'
    f['Back'] = u'qux'
    c = deck.addFact(f)
    assert len(deck.findCards('tag:forward')) == 5
    assert len(deck.findCards('tag:reverse')) == 1
 62  
tests/test_exporting.py
@@ -0,0 +1,62 @@
# coding: utf-8

import nose, os, tempfile
import anki
from anki import DeckStorage
from anki.exporting import *
from anki.stdmodels import *

deck = None
ds = None
testDir = os.path.dirname(__file__)

def setup1():
    global deck
    deck = DeckStorage.Deck()
    deck.addModel(BasicModel())
    deck.currentModel.cardModels[1].active = True
    f = deck.newFact()
    f['Front'] = u"foo"; f['Back'] = u"bar"; f.tags = u"tag, tag2"
    deck.addFact(f)
    f = deck.newFact()
    f['Front'] = u"baz"; f['Back'] = u"qux"
    deck.addFact(f)

##########################################################################

@nose.with_setup(setup1)
def test_export_anki():
    oldTime = deck.modified
    e = AnkiExporter(deck)
    newname = unicode(tempfile.mkstemp(prefix="ankitest")[1])
    os.unlink(newname)
    e.exportInto(newname)
    assert deck.modified == oldTime
    # connect to new deck
    d2 = DeckStorage.Deck(newname, backup=False)
    assert d2.cardCount == 4
    # try again, limited to a tag
    newname = unicode(tempfile.mkstemp(prefix="ankitest")[1])
    os.unlink(newname)
    e.limitTags = ['tag']
    e.exportInto(newname)
    d2 = DeckStorage.Deck(newname, backup=False)
    assert d2.cardCount == 2

@nose.with_setup(setup1)
def test_export_textcard():
    e = TextCardExporter(deck)
    f = unicode(tempfile.mkstemp(prefix="ankitest")[1])
    os.unlink(f)
    e.exportInto(f)
    e.includeTags = True
    e.exportInto(f)

@nose.with_setup(setup1)
def test_export_textfact():
    e = TextFactExporter(deck)
    f = unicode(tempfile.mkstemp(prefix="ankitest")[1])
    os.unlink(f)
    e.exportInto(f)
    e.includeTags = True
    e.exportInto(f)
 116  
tests/test_importing.py
@@ -0,0 +1,116 @@
# coding: utf-8

import nose, os, shutil
from tests.shared import assertException

from anki.errors import *
from anki import DeckStorage
from anki.importing import anki10, csvfile, mnemosyne10, supermemo_xml, dingsbums
from anki.stdmodels import BasicModel
from anki.facts import Fact
from anki.sync import SyncClient, SyncServer

from anki.db import *

testDir = os.path.dirname(__file__)

def test_csv():
    deck = DeckStorage.Deck()
    deck.addModel(BasicModel())
    file = unicode(os.path.join(testDir, "importing/text-2fields.txt"))
    i = csvfile.TextImporter(deck, file)
    i.doImport()
    # four problems - missing front, dupe front, wrong num of fields
    assert len(i.log) == 4
    assert i.total == 5
    deck.s.close()

def test_csv_tags():
    deck = DeckStorage.Deck()
    deck.addModel(BasicModel())
    file = unicode(os.path.join(testDir, "importing/text-tags.txt"))
    i = csvfile.TextImporter(deck, file)
    i.doImport()
    facts = deck.s.query(Fact).all()
    assert len(facts) == 2
    assert facts[0].tags == "baz qux" or facts[1].tags == "baz qux"
    deck.s.close()

def test_mnemosyne10():
    deck = DeckStorage.Deck()
    deck.addModel(BasicModel())
    file = unicode(os.path.join(testDir, "importing/test.mem"))
    i = mnemosyne10.Mnemosyne10Importer(deck, file)
    i.doImport()
    assert i.total == 5
    deck.s.close()

def test_supermemo_xml_01_unicode():
    deck = DeckStorage.Deck()
    deck.addModel(BasicModel())
    file = unicode(os.path.join(testDir, "importing/supermemo1.xml"))
    i = supermemo_xml.SupermemoXmlImporter(deck, file)
    #i.META.logToStdOutput = True
    i.doImport()
    # only returning top-level elements?
    assert i.total == 1
    deck.s.close()

def test_anki10():
    # though these are not modified, sqlite updates the mtime, so copy to tmp
    # first
    file_ = unicode(os.path.join(testDir, "importing/test10.anki"))
    file = "/tmp/test10.anki"
    shutil.copy(file_, file)
    file2_ = unicode(os.path.join(testDir, "importing/test10-2.anki"))
    file2 = "/tmp/test10-2.anki"
    shutil.copy(file2_, file2)
    deck = DeckStorage.Deck()
    i = anki10.Anki10Importer(deck, file)
    i.doImport()
    assert i.total == 2
    deck.s.rollback()
    deck.close()
    # import a deck into itself - 10-2 is the same as test10, but with one
    # card answered and another deleted. nothing should be synced to client
    deck = DeckStorage.Deck(file, backup=False)
    i = anki10.Anki10Importer(deck, file2)
    i.doImport()
    assert i.total == 0
    deck.s.rollback()

def test_anki10_modtime():
    deck1 = DeckStorage.Deck()
    deck2 = DeckStorage.Deck()
    client = SyncClient(deck1)
    server = SyncServer(deck2)
    client.setServer(server)
    deck1.addModel(BasicModel())
    f = deck1.newFact()
    f['Front'] = u"foo"; f['Back'] = u"bar"
    deck1.addFact(f)
    assert deck1.cardCount == 1
    assert deck2.cardCount == 0
    client.sync()
    assert deck1.cardCount == 1
    assert deck2.cardCount == 1
    file_ = unicode(os.path.join(testDir, "importing/test10-3.anki"))
    file = "/tmp/test10-3.anki"
    shutil.copy(file_, file)
    i = anki10.Anki10Importer(deck1, file)
    i.doImport()
    client.sync()
    assert i.total == 1
    assert deck2.s.scalar("select count(*) from cards") == 2
    assert deck2.s.scalar("select count(*) from facts") == 2
    assert deck2.s.scalar("select count(*) from models") == 2

def test_dingsbums():
    deck = DeckStorage.Deck()
    deck.addModel(BasicModel())
    startNumberOfFacts = deck.factCount
    file = unicode(os.path.join(testDir, "importing/dingsbums.xml"))
    i = dingsbums.DingsBumsImporter(deck, file)
    i.doImport()
    assert 7 == i.total
    deck.s.close()
 330  
tests/test_sync.py
@@ -0,0 +1,330 @@
# coding: utf-8

import nose, os, tempfile, shutil, time
from tests.shared import assertException

from anki.errors import *
from anki import DeckStorage
from anki.db import *
from anki.stdmodels import BasicModel
from anki.sync import SyncClient, SyncServer, HttpSyncServer, HttpSyncServerProxy
from anki.sync import copyLocalMedia
from anki.stats import dailyStats, globalStats
from anki.facts import Fact
from anki.cards import Card
from anki.models import FieldModel
from anki.media import rebuildMediaDir

#import psyco; psyco.profile()

# Local tests
##########################################################################

deck1=None
deck2=None
client=None
server=None

def setup_local(loadDecks=None):
    global deck1, deck2, client, server
    if loadDecks:
        deck1 = DeckStorage.Deck(loadDecks[0], backup=False)
        deck2 = DeckStorage.Deck(loadDecks[1], backup=False)
    else:
        deck1 = DeckStorage.Deck()
        deck1.addModel(BasicModel())
        deck1.currentModel.cardModels[1].active = True
        deck1.newCardOrder = 1
        f = deck1.newFact()
        f['Front'] = u"foo"; f['Back'] = u"bar"; f.tags = u"foo"
        deck1.addFact(f)
        deck2 = DeckStorage.Deck()
        deck2.addModel(BasicModel())
        deck2.currentModel.cardModels[1].active = True
        f = deck2.newFact()
        f['Front'] = u"baz"; f['Back'] = u"qux"; f.tags = u"bar"
        deck2.addFact(f)
        deck2.newCardOrder = 1
    client = SyncClient(deck1)
    server = SyncServer(deck2)
    client.setServer(server)

def teardown():
    pass

@nose.with_setup(setup_local, teardown)
def test_localsync_diffing():
    assert deck1.cardCount == 2
    assert deck2.cardCount == 2
    lsum = client.summary(deck1.lastSync)
    rsum = server.summary(deck1.lastSync)
    result = client.diffSummary(lsum, rsum, 'cards')
    assert len(result[0]) == 2
    assert len(result[1]) == 0
    assert len(result[2]) == 2
    assert len(result[3]) == 0
    result = client.diffSummary(lsum, rsum, 'facts')
    assert len(result[0]) == 1
    assert len(result[1]) == 0
    assert len(result[2]) == 1
    assert len(result[3]) == 0

@nose.with_setup(setup_local, teardown)
def test_localsync_deck():
    # deck two was modified last
    assert deck2.modified > deck1.modified
    d2mod = deck2.modified
    assert deck1.lastSync == 0 and deck2.lastSync == 0
    client.sync()
    assert deck1.modified == deck2.modified
    assert deck1.lastSync == deck1.modified
    assert deck1.lastSync == deck2.lastSync
    # ensure values are being synced
    deck1.lowPriority += u",foo"
    deck1.updateAllPriorities()
    deck1.setModified()
    client.sync()
    assert "foo" in deck2.lowPriority
    assert deck1.modified == deck2.modified
    assert deck1.lastSync == deck2.lastSync
    deck2.description = u"newname"
    deck2.setModified()
    client.sync()
    assert deck1.description == u"newname"
    # the most recent change should take precedence
    deck1.description = u"foo"
    deck1.setModified()
    deck2.description = u"bar"
    deck2.setModified()
    client.sync()
    assert deck1.description == "bar"
    # answer a card to ensure stats & history are copied
    c = deck1.getCard()
    deck1.answerCard(c, 4)
    client.sync()
    assert dailyStats(deck2).reps == 1
    assert globalStats(deck2).reps == 1
    assert deck2.s.scalar("select count(*) from reviewHistory") == 1
    # make sure meta data is synced
    deck1.setVar("foo", 1)
    assert deck1.getInt("foo") == 1
    assert deck2.getInt("foo") is None
    client.sync()
    assert deck1.getInt("foo") == 1
    assert deck2.getInt("foo") == 1

@nose.with_setup(setup_local, teardown)
def test_localsync_models():
    client.sync()
    # add a model
    deck1.addModel(BasicModel())
    assert len(deck1.models) == 3
    assert len(deck2.models) == 2
    client.sync()
    assert len(deck2.models) == 3
    assert deck1.currentModel.id == deck2.currentModel.id
    # delete the recently added model
    deck2.deleteModel(deck2.currentModel)
    assert len(deck2.models) == 2
    client.sync()
    assert len(deck1.models) == 2
    assert deck1.currentModel.id == deck2.currentModel.id
    # make a card model inactive
    assert deck1.currentModel.cardModels[1].active == True
    deck2.currentModel.cardModels[1].active = False
    deck2.currentModel.setModified()
    deck2.setModified()
    client.sync()
    assert deck1.currentModel.cardModels[1].active == False
    # remove a card model
    deck1.deleteCardModel(deck1.currentModel,
                          deck1.currentModel.cardModels[1])
    deck1.currentModel.setModified()
    deck1.setModified()
    assert len(deck1.currentModel.cardModels) == 1
    client.sync()
    assert len(deck2.currentModel.cardModels) == 1
    # add a field
    c = deck1.getCard()
    deck1.addFieldModel(c.fact.model, FieldModel(u"yo"))
    deck1.s.refresh(c.fact)
    assert len(c.fact.fields) == 3
    assert c.fact['yo'] == u""
    client.sync()
    c2 = deck2.s.query(Card).get(c.id)
    deck2.s.refresh(c2.fact)
    assert c2.fact['yo'] == u""
    # remove the field
    assert "yo" in c2.fact.keys()
    deck2.deleteFieldModel(c2.fact.model, c2.fact.model.fieldModels[2])
    deck2.s.refresh(c2.fact)
    assert "yo" not in c2.fact.keys()
    client.sync()
    deck1.s.refresh(c.fact)
    assert "yo" not in c.fact.keys()
    # rename a field
    assert u"Front" in c.fact.keys()
    deck1.renameFieldModel(deck1.currentModel,
                           deck1.currentModel.fieldModels[0],
                           u"Sideways")
    client.sync()
    assert deck2.currentModel.fieldModels[0].name == u"Sideways"

@nose.with_setup(setup_local, teardown)
def test_localsync_factsandcards():
    assert deck1.factCount == 1 and deck1.cardCount == 2
    assert deck2.factCount == 1 and deck2.cardCount == 2
    client.sync()
    assert deck1.factCount == 2 and deck1.cardCount == 4
    assert deck2.factCount == 2 and deck2.cardCount == 4
    # ensure the fact was copied across
    f1 = deck1.s.query(Fact).first()
    f2 = deck1.s.query(Fact).get(f1.id)
    f1['Front'] = u"myfront"
    f1.setModified()
    deck1.setModified()
    client.sync()
    f2 = deck1.s.query(Fact).get(f1.id)
    assert f2['Front'] == u"myfront"
    deck1.rebuildQueue()
    deck2.rebuildQueue()
    c1 = deck1.getCard()
    c2 = deck2.getCard()
    assert c1.id == c2.id

@nose.with_setup(setup_local, teardown)
def test_localsync_threeway():
    # deck1 (client) <-> deck2 (server) <-> deck3 (client)
    deck3 = DeckStorage.Deck()
    client2 = SyncClient(deck3)
    server2 = SyncServer(deck2)
    client2.setServer(server2)
    client.sync()
    client2.sync()
    # add a new question
    f = deck1.newFact()
    f['Front'] = u"a"; f['Back'] = u"b"
    f = deck1.addFact(f)
    card = f.cards[0]
    client.sync()
    assert deck1.cardCount == 6
    assert deck2.cardCount == 6
    # check it propagates from server to deck3
    client2.sync()
    assert deck3.cardCount == 6
    # delete a card on deck1
    deck1.deleteCard(card.id)
    client.sync()
    assert deck1.cardCount == 5
    assert deck2.cardCount == 5
    # make sure the delete is now propagated from the server to deck3
    client2.sync()
    assert deck3.cardCount == 5

def test_localsync_media():
    tmpdir = "/tmp/media-tests"
    try:
        shutil.rmtree(tmpdir)
    except OSError:
        pass
    shutil.copytree(os.path.join(os.getcwd(),
                                 "tests/syncing/media-tests"),
                    tmpdir)
    deck1anki = os.path.join(tmpdir, "1.anki")
    deck2anki = os.path.join(tmpdir, "2.anki")
    deck1media = os.path.join(tmpdir, "1.media")
    deck2media = os.path.join(tmpdir, "2.media")
    setup_local((deck1anki, deck2anki))
    assert len(os.listdir(deck1media)) == 2
    assert len(os.listdir(deck2media)) == 1
    client.sync()
    # metadata should have been copied
    assert deck1.s.scalar("select count(1) from media") == 3
    assert deck2.s.scalar("select count(1) from media") == 3
    # copy local files
    copyLocalMedia(deck1, deck2)
    assert len(os.listdir(deck1media)) == 2
    assert len(os.listdir(deck2media)) == 3
    copyLocalMedia(deck2, deck1)
    assert len(os.listdir(deck1media)) == 3
    assert len(os.listdir(deck2media)) == 3
    # check delete
    os.unlink(os.path.join(deck1media, "22161b29b0c18e068038021f54eee1ee.png"))
    os.system("sync")
    time.sleep(0.2)
    rebuildMediaDir(deck1)
    client.sync()
    assert deck1.s.scalar("select count(1) from media") == 2
    assert deck2.s.scalar("select count(1) from media") == 2

# One way syncing
##########################################################################

@nose.with_setup(setup_local, teardown)
def test_oneway_simple():
    assert deck1.s.scalar("select count(1) from cards") == 2
    assert deck2.s.scalar("select count(1) from cards") == 2
    assert deck1.cardCount == 2
    assert deck2.cardCount == 2
    assert deck1.s.scalar("select id from tags where tag = 'foo'")
    assert not deck1.s.scalar("select id from tags where tag = 'bar'")
    server.deckName = "dummy"
    client.syncOneWay(0)
    assert deck1.s.scalar("select count(1) from cards") == 4
    assert deck2.s.scalar("select count(1) from cards") == 2
    assert deck1.cardCount == 4
    assert deck2.cardCount == 2
    assert deck1.s.scalar("select id from tags where tag = 'foo'")
    assert deck1.s.scalar("select id from tags where tag = 'bar'")
    # should be a noop
    client.syncOneWay(0)

# Remote tests
##########################################################################

# a replacement runCmd which just calls our server directly
def runCmd(action, *args, **kargs):
    #print action, kargs
    return server.unstuff(apply(getattr(server, action), tuple(args) +
                                tuple(kargs.values())))

def setup_remote():
    setup_local()
    global client, server
    proxy = HttpSyncServerProxy("test", "foo")
    client = SyncClient(deck1)
    client.setServer(proxy)
    proxy.deckName = "test"
    proxy.runCmd = runCmd
    server = HttpSyncServer()
    server.deck = deck2
    server.decks = {"test": (deck2.modified, 0)}

@nose.with_setup(setup_remote, teardown)
def test_remotesync_fromserver():
    # deck two was modified last
    assert deck2.modified > deck1.modified
    client.sync()
    assert deck2.modified == deck1.modified
    # test deck vars
    deck1.setVar("foo", 1)
    client.sync()

@nose.with_setup(setup_remote, teardown)
def test_remotesync_toserver():
    deck1.setModified()
    client.sync()
    assert deck2.modified == deck1.modified

# Full sync
##########################################################################

@nose.with_setup(setup_remote, teardown)
def test_formdata():
    global deck1
    (fd, name) = tempfile.mkstemp()
    deck1 = deck1.saveAs(name)
    deck1.setModified()
    client.deck = deck1
    client.prepareSync()
    client.prepareFullSync()
 22  
tests/test_utils.py
@@ -0,0 +1,22 @@
# coding: utf-8

import nose, os
from tests.shared import assertException

from anki.errors import *
from anki.facts import *
from anki import DeckStorage
from anki.utils import *


def test_tags():
    return
#     card = "one, two"
#     fact = "two,three, two"
#     cmodel = "four"

#     print (card+","+fact+","+cmodel)
#     print joinTags(parseTags(card+","+fact+","+cmodel))
#     print sorted(canonifyTags(card+","+fact+","+cmodel))
#     assert (sorted(canonifyTags(card+","+fact+","+cmodel)) ==
#             ['four', 'one', 'three', 'two'])
 8  
tools/tests.sh
@@ -0,0 +1,8 @@
#!/bin/bash

if [ -d 'locale' ]; then
    dir=..
else
    dir=.
fi
(cd $dir && nosetests -vs $@)
 33  
tools/translate.sh
@@ -0,0 +1,33 @@
#!/bin/bash
#
# update translation files
#

if [ ! -d "anki" ]
then
    echo "Please run this from the anki project root directory"
    exit
fi

oldpwd=$(pwd)
cd anki
allPyFiles=libanki.files
echo "Generating translations.."
for i in *.py importing/*.py
do
    echo $i >> $allPyFiles
done

xgettext -s --no-wrap --files-from=$allPyFiles --output=locale/messages.pot
for file in locale/*.po
do
    echo -n $file
    msgmerge -s --no-wrap $file locale/messages.pot > $file.new && mv $file.new $file
    outdir=$(echo $file | \
        perl -pe 's%locale/libanki_(.*)\.po%locale/\1/LC_MESSAGES%')
    outfile="$outdir/libanki.mo"
    mkdir -p $outdir
    msgfmt $file --output-file=$outfile
done
rm $allPyFiles
cd $oldpwdYour federal taxable wages this period are $
+Purchase/Acquisition of Business -1010700000 -1148400000 -1286100000 -1423800000 -1561500000
+TX: NO State Incorne Tax
+Gain/Loss on Investments and Other Financial Instruments -2243490909 -3068572727 -3893654545 -4718736364 -5543818182 -6368900000 -7193981818 -8019063636
+Income from Associates, Joint Ventures and Other Participating Interests 99054545 92609091 86163636 79718182 73272727 66827273 60381818 53936364
+INCOME STATEMENT 61-1767920
+GOOGL_income-statement_Quarterly_As_Originally_Reported TTM Q4 2022 Q3 2022 Q2 2022 Q1 2022 Q4 2021 Q3 2021 Q2 2021
+Cash Flow from Continuing Financing Activities -9287400000 -7674400000 -6061400000 -4448400000 -2835400000
+Diluted EPS from Discontinued Operations
+The U.S. Internal Revenue Code of 1986, as amended, the Treasury Regulations promulgated thereunder, published pronouncements of the Internal Revenue Service, which may be cited or used as precedents, and case law, any of which may be changed at any time with retroactive effect. No opinion is expressed on any matters other than those specifically referred to above.
+Basic WASO 694313546 697258864 700204182 703149500 706094818 709040136 711985455 714930773
+Taxable Marital Status:
+Exemptions/Allowances Single ZACHRY T.
+Diluted EPS -00009 -00015 -00021 -00027 -00033 -00039 -00045 -00051
+Total Work Hrs
+COMPANY PH Y: 650-253-0001
+5324 BRADFORD DR
+ORIGINAL REPORT
+Change in Trade/Accounts Receivable -1122700000 -527600000 67500000 662600000 1257700000
+Purchase/Sale of Other Non-Current Assets, Net -236000000 -368800000 -501600000 -634400000
+Other Non-Cash Items -5340300000 -6249200000 -7158100000 -8067000000 -8975900000
+Amortization, Non-Cash Adjustment 4241600000 4848600000 5455600000 6062600000 6669600000
+Income, Rents, & Royalty
+Other Investing Cash Flow 49209400000 57052800000 64896200000 72739600000 80583000000
+Other Irregular Income/Expenses 00000 00000 00000 00000 00000
+Irregular Income/Expenses 00000 00000 00000 00000 00000
+Total Revenue as Reported, Supplemental -1286309091 -13385163636 -25484018182 -37582872727 -49681727273 -61780581818 -73879436364 -85978290909
+Net Investment Income -2096781818 -2909109091 -3721436364 -4533763636 -5346090909 -6158418182 -6970745455 -7783072727
+Gain/Loss on Foreign Exchange 47654545 66854545 86054545 105254546 124454546 143654546 162854546 182054546
+Cash Flow from Investing Activities -11015999999
+Purchase/Sale of Investments, Net 574500000 1229400000 1884300000 2539200000 3194100000
+Purchase/Sale of Business, Net -384999999
+Basic EPS from Continuing Operations -00009 -00015 -00021 -00027 -00034 -00040 -00046 -00052
+Change in Trade and Other Receivables 2617900000 3718200000 4818500000 5918800000 7019100000
+Investment Income/Loss, Non-Cash Adjustment 3081700000 4150000000 5218300000 6286600000 7354900000
+Stock-Based Compensation, Non-Cash Adjustment -1297700000 -2050400000 -2803100000 -3555800000 -4308500000
+Depreciation and Amortization, Non-Cash Adjustment 3239500000 3241600000 3243700000 3245800000 3247900000
+Taxes, Non-Cash Adjustment 4177700000 4486200000 4794700000 5103200000 5411700000
+Depreciation, Non-Cash Adjustment 3329100000 3376000000 3422900000 3469800000 3516700000
+Gain/Loss on Financial Instruments, Non-Cash Adjustment -4354700000 -4770800000 -5186900000 -5603000000 -6019100000
+[DRAFT FORM OF TAX OPINION]
+Issuance of/Repayments for Debt, Net -199000000 -356000000
+Total Operating Profit/Loss -5818800000 -10077918182 -14337036364 -18596154545 -22855272727 -27114390909 -31373509091 -35632627273
+Cash Flow from Continuing Investing Activities -4919700000 -3706000000 -2492300000 -1278600000 -64900000
+Change in Prepayments and Deposits -388000000 -891600000 -1395200000 -1898800000
+Change in Accrued Expenses -2105200000 -3202000000 -4298800000 -5395600000 -6492400000
+Research and Development Expenses -2088363636 -853500000 381363636 1616227273 2851090909 4085954545 5320818182 6555681818
+PLEASE READ THE IMPORTANT DISCLOSURES BELOW
+FEDERAL RESERVE MASTER SUPPLIER ACCOUNT31000053-052101023COD
+633-44-1725Zachryiixixiiiwood@gmail.com47-2041-654711100061431000053
+PNC BankPNC Bank Business Tax I.D. Number: 633441725
+CIF Department (Online Banking)Checking Account: 47-2041-6547
+P7-PFSC-04-FBusiness Type: Sole Proprietorship/Partnership Corporation
+500 First AvenueALPHABET
+Pittsburgh, PA 15219-31285323 BRADFORD DR
+NON-NEGOTIABLEDALLAS TX 75235 8313
+ZACHRY, TYLER, WOOD
+4/18/2022650-2530-000 469-697-4300
+SIGNATURETime Zone: Eastern Central Mountain Pacific
+Investment Products • Not FDIC Insured • No Bank Guarantee • May Lose Value
+PLEASE READ THE IMPORTANT DISCLOSURES BELOW
+Change in Trade/Accounts Payable -233200000 -394000000 -554800000 -715600000 -876400000
+General and Administrative Expenses -544945455 23200000 591345455 1159490909 1727636364 2295781818 2863927273 3432072727
+Changes in Operating Capital 1068100000 1559600000 2051100000 2542600000 3034100000
+Selling and Marketing Expenses -1007254545 -52145455 902963636 1858072727 2813181818 3768290909 4723400000 5678509091
+Payments for Common Stock -18708100000 -22862000000 -27015900000 -31169800000 -35323700000
+Proceeds from Issuance of Long Term Debt -3407500000 -5307600000 -7207700000 -9107800000 -11007900000
+Other Income/Expense, Non-Operating 263109091 367718182 472327273 576936364 681545455 786154546 890763636 995372727
+ZACHRY T WOOD
+88-1303492
+Statutory BASIS OF PAY: BASIC/DILUTED EPS
+Net Pay 70842743867 70842743867
+Other Revenue
+Non-Operating Income/Expenses, Total -1369181818 -2079000000 -2788818182 -3498636364 -4208454545 -4918272727 -5628090909 -6337909091
+Net Interest Income/Expense 464490909 462390909 460290909 458190909 456090909 453990909 451890909 449790909
+Total Net Finance Income/Expense 464490909 462390909 460290909 458190909 456090909 453990909 451890909 449790909
+Issuance of/Repayments for Long Term Debt, Net -314300000 -348200000 -382100000 -416000000 -449900000
+Net Check 70842743867
+Basic EPS from Discontinued Operations
+MOUNTAIN VIEW, C.A., 94044 Pay Date:
+Medicare Tax
+Change in Other Operating Capital 1553900000 2255600000 2957300000 3659000000 4360700000
+Change in Deferred Assets/Liabilities 3194700000 3626800000 4058900000 4491000000 4923100000
+Change in Trade and Other Payables 3108700000 3453600000 3798500000 4143400000 4488300000
+Selling, General and Administrative Expenses -1552200000 -28945455 1494309091 3017563636 4540818182 6064072727 7587327273 9110581818
+Diluted WASO 698675982 701033009 703390036 705747064 708104091 710461118 712818146 715175173
+1957800000 -9776581818 -21510963636 -33245345455 -44979727273 -56714109091 -68448490909 -80182872727
+Total Revenue as Reported, Supplemental -1286309091 -13385163636 -25484018182 -37582872727 -49681727273 -61780581818 -73879436364 -85978290909
+Diluted EPS from Continuing Operations -00009 -00015 -00021 -00027 -00033 -00039 -00045 -00051
+Change in Cash 00001 -280000000 -570000000 338000000000)
+Sale and Disposal of Property, Plant and Equipment -5040500000 -4683100000 -4325700000 -3968300000
+Interest Income 415836364 392490909 369145455 345800000 322454546 299109091 275763636 252418182
+Issuance of/Payments for Common Stock, Net -10767000000 -10026000000 -9285000000 -8544000000 -7803000000
+Cost of Goods and Services -891927273 4189690909 9271309091 14352927273 19434545455 24516163636 29597781818 34679400000
+Proceeds from Issuance of Common Stock -5806333333 -3360333333 -914333333
+1349355888 2024033776 75698871601 Information
+DALLAS TX 75235-8315
+Sales of Other Non-Current Assets
+Cost of Revenue -891927273 4189690909 9271309091 14352927273 19434545455 24516163636 29597781818 34679400000
+Operating Income/Expenses -3640563636 -882445455 1875672727 4633790909 7391909091 10150027273 12908145455 15666263636
+Fiscal year end September 28th., 2022. | USD
+Cash and Cash Equivalents, Beginning of Period -13098000000 -26353000000 -4989999999
+Other Adjustments to Net Income Available to Common Stockholders
+Federal:
+Gross Pay 75698871601 Important Notes
+Cash Flow from Financing Activities -13997000000 -12740000000
+EMPLOYER IDENTIFICATION NUMBER: 61-1767920
+-1288666667 -885666667 -482666667
+Pretax Income -7187981818 -12156918182 -17125854545 -22094790909 -27063727273 -32032663636 -37001600000 -41970536364
+Reported Normalized and Operating Income/Expense Supplemental Section
+Reported Normalized Operating Profit
+Cash Flow Supplemental Section 181000000000) -146000000000) 110333333 123833333 137333333
+Interest Expense Net of Capitalized Interest 48654545 69900000 91145455 112390909 133636364 154881818 176127273 197372727
+Diluted Net Income Available to Common Stockholders -5492763636 -9591163636 -13689563636 -17787963636 -21886363636 -25984763636 -30083163636 -34181563636
+Net Income Available to Common Stockholders -5492763636 -9591163636 -13689563636 -17787963636 -21886363636 -25984763636 -30083163636 -34181563636
+Net Income after Non-Controlling/Minority Interests -5492763636 -9591163636 -13689563636 -17787963636 -21886363636 -25984763636 -30083163636 -34181563636
+Reported Effective Tax Rate 00001 00000 00000 00000 00000 00000
+Reported Normalized Diluted EPS
+Basic Weighted Average Shares Outstanding 694313546 697258864 700204182 703149500 706094818 709040136 711985455 714930773
+Diluted Weighted Average Shares Outstanding 698675982 701033009 703390036 705747064 708104091 710461118 712818146 715175173
+Deposited to the account Of xxxxxxxx6548
+Purchase of Investments 16018900000 24471400000 32923900000 41376400000 49828900000
+Sale of Investments -64179300000 -79064600000 -93949900000 -108835200000 -123720500000
+ALPHABET
+CHECKING
+31622,6:39 PM
+GOOGL_income-statement_Quarterly_As_Originally_Reported Q4 2022
+Morningstar.com Intraday Fundamental Portfolio View Print Report Print
+Income/Loss before Non-Cash Adjustment 21353400000 21135400000 20917400000 20699400000 20481400000
+Cash Generated from Operating Activities 19636600000 18560200000 17483800000 16407400000 15331000000
+3/6/2022 at 6:37 PM
+Net Cash Flow from Continuing Operating Activities, Indirect 35231800000 36975800000 38719800000 40463800000 42207800000
+Cash and Cash Equivalents, End of Period
+Proceeds from Issuance/Exercising of Stock Options/Warrants -2971300000 -3400800000 -3830300000 -4259800000 -4689300000
+Cash Flow from Operating Activities, Indirect 24934000001 Q3 2022 Q2 2022 Q1 2022 Q4 2021
+Diluted EPS -00009 -00015 -00021 -00027 -00033 -00039 -00045 -00051
+Other Financing Cash Flow
+Total Adjustments for Non-Cash Items 20351200000 21992600000 23634000000 25275400000 26916800000
+Change in Other Current Assets -3290700000 -3779600000 -4268500000 -4757400000 -5246300000
+Depreciation, Amortization and Depletion, Non-Cash Adjustment 4986300000 5327600000 5668900000 6010200000 6351500000
+Change in Payables and Accrued Expenses -3298800000 -4719000000 -6139200000 -7559400000 -8979600000
+Repayments for Long Term Debt -117000000 -660800000 -1204600000 -1748400000 -2292200000
+Income Statement Supplemental Section
+Reported Normalized Income
+Cash and Cash Equivalents, Beginning of Period 25930000001 235000000000) 10384666667 15035166667 19685666667
+Net Income after Extraordinary Items and Discontinued Operations -5492763636 -9591163636 -13689563636 -17787963636 -21886363636 -25984763636 -30083163636 -34181563636
+Net Income from Continuing Operations -5492763636 -9591163636 -13689563636 -17787963636 -21886363636 -25984763636 -30083163636 -34181563636
+Provision for Income Tax 1695218182 2565754545 3436290909 4306827273 5177363636 6047900000 6918436364 7788972727
+Total Operating Profit/Loss as Reported, Supplemental -5818800000 -10077918182 -14337036364 -18596154545 -22855272727 -27114390909 -31373509091 -35632627273
+Based on facts as set forth in. 06551
+Basic EPS -00009 -00015 -00021 -00027 -00034 -00040 -00046 -00052
+ALPHABET INCOME Advice number: 000101
+ALPHABET
+Basic EPS -00009 -00015 -00021 -00027 -00034 -00040 -00046 -00052
+1601 AMPITHEATRE PARKWAY DR Period Ending:
+1601 AMPIHTHEATRE PARKWAY MOUNTAIN VIEW CA 94043 Calendar Year---
+Purchase/Sale and Disposal of Property, Plant and Equipment, Net -6772900000 -6485800000 -6198700000 -5911600000 -5624500000
+Purchase of Property, Plant and Equipment -5218300000 -4949800000 -4681300000 -4412800000 -4144300000
+Effect of Exchange Rate Changes 28459100000 29853400000 31247700000 32642000000 34036300000
+00000 -15109109116 111165509049 50433933761 50951012042 45733930204 40516848368 -84621400136 -96206781973
+00002 Earnings Statement
+05324
+DALLAS
+rate units year to date Other Benefits and
+Pto Balance
+Federal Income Tax
+Social Security Tax
+YOUR BASIC/DILUTED EPS RATE HAS BEEN CHANGED FROM 0.001 TO 112.20 PAR SHARE VALUE
+Due 09/15/2022
+Discontinued Operations -51298890909
+Change in Cash as Reported, Supplemental
+Income Tax Paid, Supplemental -5809000000 -8692000000 -11575000000 -44281654545 -2178236364
+13 Months Ended 6336000001
+Gross Profit -9195472727 -16212709091 -23229945455 -30247181818 -37264418182
+USD in "000'"s 22809500000000 22375000000000 21940500000000 21506000000000 21071500000000
+Repayments for Long Term Debt Dec. 31, 2021 Dec. 31, 2020
+Costs and expenses: 22809500000000 22375000000000 21940500000000 21506000000000 21071500000000
+Cost of revenues 182528 161858
+Research and development 22809500000000 22375000000000 21940500000000 21506000000000 21071500000000
+Sales and marketing 84733 71897
+General and administrative 27574 26019
+European Commission fines 17947 18465
+Total costs and expenses 11053 09552
+Income from operations 00001 01698
+Other income (expense), net 141304 127627
+Income before income taxes 00000 22375000000000 21940500000000 21506000000000 21071500000000 00000 00000
+Provision for income taxes 257637118600 257637118600
+Net income 22677000001 19289000001
+*include interest paid, capital obligation, and underweighting 22677000001 19289000001
+22677000001 19289000001
+Basic net income per share of Class A and B common stock and Class C capital stock (in dollars par share)
+Diluted net income per share of Class A and Class B common stock and Class C capital stock (in dollars par share)
+For Paperwork Reduction Act Notice, see the seperate InstructionsStreet NE Washington, D.C. 20549-1090 RE: Release Nos. 34-92766; IA-5833; File No. S7-10-21, RIN 3235-AN00 Request for Information and Comments on Broker-Dealer and Investment Adviser Digital Engagement Practices, Related Tools and Methods, and Regulatory Considerations and Potential Approaches; Information and Comments on Investment Adviser Use of Technology to Develop and Provide Investment Advice Ladies and Gentlemen: Morningstar welcomes the opportunity to comment on the Securities and Exchange Commission’s (Commission or SEC) Request for Information and Comments on Broker-Dealer and Investment Adviser Digital Engagement Practices, Related Tools and Methods, and Regulatory Considerations and Potential Approaches; Information and Comments on Investment Adviser Use of Technology to Develop and Provide Investment Advice (RFI). 1 Morningstar’s mission is to empower investor success. Morningstar’s Behavioral Insights Team researches savings and investing behavior to help individual investors and their ecosystem avoid common behavioral biases, and has published books and articles on the topic of applying behavioral science to digital platforms. Because we offer an extensive line of products for individual investors, professional financial advisors, and institutional clients, we have a broad view on the RFI and the assessment of market practices associated with the use of digital engagement practices (DEPs). This letter contains: 1) a summary of our views; 2) a description of a Morningstar survey on a nationally representative sample of Americans about their use of trading apps and exposure to DEPs; and 3) detailed answers to selected questions posed in the RFI. We utilize our survey responses to address some of these questions and present specific findings in our answers. The survey consists of two parts: a screener for demographic information, attached as Appendix B, and the complete set of questions about individual experiences and views of DEPs, attached as Appendix C. 1 SEC. 2021. Request for Information and Comments on Broker-Dealer and Investment Adviser Digital Engagement Practices, Related Tools and Methods, and Regulatory Considerations and Potential Approaches; Information and Comments on Investment Adviser Use of Technology to Develop and Provide Investment Advice. https://www.federalregister.gov/documents/2021/09/01/2021-18901/requestfor-information-and-comments-on-broker-dealer-and-investment-adviser-digital-engagement (RFI).
+3/6/2022 at 6:37 PM
+GOOGL_income-statement_Quarterly_As_Originally_Reported
+Cash Flow from Operating Activities, IndirectNet Cash Flow from Continuing Operating Activities, IndirectCash Generated from Operating ActivitiesIncome/Loss before Non-Cash AdjustmentTotal Adjustments for Non-Cash ItemsDepreciation, Amortization and Depletion, Non-Cash AdjustmentDepreciation and Amortization, Non-Cash AdjustmentDepreciation, Non-Cash AdjustmentAmortization, Non-Cash AdjustmentStock-Based Compensation, Non-Cash AdjustmentTaxes, Non-Cash AdjustmentInvestment Income/Loss, Non-Cash AdjustmentGain/Loss on Financial Instruments, Non-Cash AdjustmentOther Non-Cash ItemsChanges in Operating CapitalChange in Trade and Other ReceivablesChange in Trade/Accounts ReceivableChange in Other Current AssetsChange in Payables and Accrued ExpensesChange in Trade and Other PayablesChange in Trade/Accounts PayableChange in Accrued ExpensesChange in Deferred Assets/LiabilitiesChange in Other Operating Capital
+Change in Prepayments and DepositsCash Flow from Investing ActivitiesCash Flow from Continuing Investing Activities
+Purchase/Sale and Disposal of Property, Plant and Equipment, NetPurchase of Property, Plant and EquipmentSale and Disposal of Property, Plant and EquipmentPurchase/Sale of Business, NetPurchase/Acquisition of BusinessPurchase/Sale of Investments, NetPurchase of Investments
+Sale of InvestmentsOther Investing Cash FlowPurchase/Sale of Other Non-Current Assets, NetSales of Other Non-Current AssetsCash Flow from Financing ActivitiesCash Flow from Continuing Financing ActivitiesIssuance of/Payments for Common Stock, NetPayments for Common StockProceeds from Issuance of Common StockIssuance of/Repayments for Debt, NetIssuance of/Repayments for Long Term Debt, NetProceeds from Issuance of Long Term DebtRepayments for Long Term Debt
+Proceeds from Issuance/Exercising of Stock Options/WarrantsOther Financing Cash FlowCash and Cash Equivalents, End of PeriodChange in CashEffect of Exchange Rate ChangesCash and Cash Equivalents, Beginning of PeriodCash Flow Supplemental SectionChange in Cash as Reported, SupplementalIncome Tax Paid, SupplementalZACHRY T WOODCash and Cash Equivalents, Beginning of PeriodDepartment of the TreasuryInternal Revenue Service
+Calendar YearDue: 04/18/2022
+USD in ""000'""sRepayments for Long Term DebtCosts and expenses:Cost of revenuesResearch and developmentSales and marketingGeneral and administrativeEuropean Commission finesTotal costs and expensesIncome from operationsOther income (expense), netIncome before income taxesProvision for income taxesNet income*include interest paid, capital obligation, and underweighting
+Basic net income per share of Class A and B common stock and Class C capital stock (in dollars par share)
+
+
+
+
+
+
+
+
+
+Diluted net income per share of Class A and Class B common stock and Class C capital stock (in dollars par share)*include interest paid, capital obligation, and underweighting
+Basic net income per share of Class A and B common stock and Class C capital stock (in dollars par share)Diluted net income per share of Class A and Class B common stock and Class C capital stock (in dollars par share)
+
+ReplyForward
+


-7711	Department of the Treasury	Calendar Year							Period Ending	9/29/2021																	
-	Internal Revenue Service	Due 04/18/2022		2022 Form 1040-ES Payment Voucher 1					Pay Day	1/30/2022																	
-	MOUNTAIN VIEW, C.A., 94043																										
-	Taxable Marital Status  :																										
-	Exemptions/Allowances :																										
-	Federal :																										
-	TX :  28	rate	70842743866																																
-	Convertible preferred stock, $0.001 par value per share, 100,000 shares authorized; no shares issued and outstanding	0	0		0																						
-	Class A and Class B common stock, and Class C capital stock and additional paid-in capital, $0.001 par value per share: 15,000,000 shares authorized (Class A 9,000,000, Class B 3,000,000, Class C 3,000,000); 688,335 (Class A 299,828, Class B 46,441, Class C 342,066) and 675,222 (Class A 300,730, Class B 45,843, Class C 328,649) shares issued and outstanding	58510	50552		0																						
-	Accumulated other comprehensive income (loss)	633	-1232		0																						
-	Retained earnings	163401	152122		0																						
-	Total stockholders’ equity	222544	201442		0																						
-	Total liabilities and stockholders’ equity	319616	275909		0																						
-	Convertible preferred stock, par value (in dollars per share)	0.001	0.001		0																						
-	Convertible preferred stock, shares authorized (in shares)	100000000	100000000		0																						
-	Convertible preferred stock, shares issued (in shares)	0	0		0																						
-	Convertible preferred stock, shares outstanding (in shares)	0	0		0																						
-	Schedule II: Valuation and Qualifying Accounts (Details) - Allowance for doubtful accounts and sales credits - USD ($) $ in Millions	12 Months Ended			0																						
-		Dec. 31, 2020	Dec. 31, 2019	Dec. 31, 2018	0																						
-	SEC Schedule, 12-09, Movement in Valuation Allowances and Reserves [Roll Forward]				0																						
-	Revenues (Narrative) (Details) - USD ($) $ in Billions	12 Months Ended			0																						
-		Dec. 31, 2020	Dec. 31, 2019		0																						
-	Revenue from Contract with Customer [Abstract]				0																						
-	Deferred revenue		2.3		0																						
-	Revenues recognized	1.8			0																						
-	Transaction price allocated to remaining performance obligations	29.8			0																						
-	Revenue, Remaining Performance Obligation, Expected Timing of Satisfaction, Start Date [Axis]: 2021-01-01				0																						
-	Revenue, Remaining Performance Obligation, Expected Timing of Satisfaction [Line Items]				0																						
-	Expected timing of revenue recognition	24 months			0																						
-	Expected timing of revenue recognition, percent	0.5			0																						
-	Revenue, Remaining Performance Obligation, Expected Timing of Satisfaction, Start Date [Axis]: 2023-01-01				0																						
-	Revenue, Remaining Performance Obligation, Expected Timing of Satisfaction [Line Items]				0																						
-	Expected timing of revenue recognition	 			0																						
-	Expected timing of revenue recognition, percent	0.5			0																						
-	Information about Segments and Geographic Areas (Long-Lived Assets by Geographic Area) (Details) - USD ($) $ in Millions	Dec. 31, 2020	Dec. 31, 2019		0																						
-	Revenues from External Customers and Long-Lived Assets [Line Items]				0																						
-	Long-lived assets	96960	84587		0																						
-	United States				0																						
-	Revenues from External Customers and Long-Lived Assets [Line Items]				0																						
-	Long-lived assets	69315	63102		0																						
-	International				0																						
-	Revenues from External Customers and Long-Lived Assets [Line Items]				0																						
-	Long-lived assets	27645	21485		0																						
-		2016	2017	2018	2019	2020	2021	TTM																			
-		2.23418E+11	2.42061E+11	2.25382E+11	3.27223E+11	2.86256E+11	3.54636E+11	3.54636E+11																			
-		45881000000	60597000000	57418000000	61078000000	63401000000	69478000000	69478000000																			
-		3143000000	3770000000	4415000000	4743000000	5474000000	6052000000	6052000000																			
-	    Net Investment Income, Revenue	9531000000	13081000000	10565000000	17214000000	14484000000	8664000000	-14777000000	81847000000	48838000000	86007000000	86007000000															
-	        Realized Gain/Loss on Investments, Revenue	472000000	184000000	72000000	10000000	7553000000	1410000000	-22155000000	71123000000	40905000000	77576000000	77576000000															
-	        Gains/Loss on Derivatives, Revenue	1963000000	2608000000	506000000	974000000	751000000	718000000	-300000000	1484000000	-159000000	966000000	966000000															
-	        Interest Income, Revenue	6106000000	6408000000	6484000000	6867000000	6180000000	6536000000	7678000000	9240000000	8092000000	7465000000	7465000000															
-	        Other Investment Income, Revenue	990000000	3881000000	3503000000	9363000000																						
-	    Rental Income, Revenue					2553000000	2452000000	5732000000	5856000000	5209000000	5988000000	5988000000															
-	    Other Revenue	1.18387E+11	1.32385E+11	1.42881E+11	1.52435E+11	1.57357E+11	1.66578E+11	1.72594E+11	1.73699E+11	1.63334E+11	1.87111E+11	1.87111E+11															
-	Total Expenses	-1.40227E+11	-1.53354E+11	-1.66594E+11	-1.75997E+11	-1.89751E+11	-2.18223E+11	-2.21381E+11	-2.24527E+11	-2.30563E+11	-2.4295E+11	-2.4295E+11																												
-	    Reported Normalized and Operating Income/Expense Supplemental Section																										
-	        Total Revenue as Reported, Supplemental	1.62463E+11	1.8215E+11	1.94699E+11	2.10943E+11	2.15114E+11	2.39933E+11	2.47837E+11	2.54616E+11	2.4551E+11	2.76094E+11	2.76094E+11															
-	        Reported Effective Tax Rate				0.16	0.14	0.07	-0.08	0.2	0.22	0.19	0.19															
-	Basic EPS	8977	11850	12092	14656	14645	27326	2446	49828	26668	59460	59460															
-	    Basic EPS from Continuing Operations	8977	11850	12092	14656	14645	27326	2446	49828	26668	59460	59460															
-	Diluted EPS	8975.82	11849.51	12086.01	14656	14645	27325.54	2444.36	49649.93	26200.81	58563.84	58563.84															
-	    Diluted EPS from Continuing Operations	8975.82	11849.51	12086.01	14656	14645	27325.54	2444.36	49649.93	26200.81	58563.84	58563.84															
-	Basic Weighted Average Shares Outstanding	1651294	1643613	1643456	1643183	1643826	1644615	1643795	1633946	1594469	1510180	1510180															
-	Diluted Weighted Average Shares Outstanding	1651549	1643613	1644215	1643183	1643826	1644615	1645008	1639821	1622889	1533284	1533284															
-	Basic EPS	5.98	7.9	8.06	9.77	9.76	18.22	1.63	33.22	17.78	39.64	39.64															
-	Diluted EPS	5.98	7.9	8.06	9.77	9.76	18.22	1.63	33.22	17.78	39.64	39.64															
-	Basic WASO	2476939762	2465418267	2465182767	2464773268	2465737767	2466921267	2465691267	2450917775	2391702304	2265268867	2265268867															
-	Diluted WASO	2476939762	2465418267	2465182767	2464773268	2465737767	2466921267	2465691267	2450917775	2391702304	2265268867	2265268867															
-	Fiscal year ends in Dec 31 | USD 																										
-											total																
-	GOOGL_income-statement_Quarterly_As_Originally_Reported	Q3 2019	Q4 2019	Q1 2020	Q2 2020	Q3 2020	Q4 2020	Q1 2021	Q2 2021	Q3 2021	Q4 2021	TTM															
-	Gross Profit	22931000000	25055000000	22177000000	19744000000	25056000000	30818000000	31211000000	35653000000	37497000000	42337000000	1.46698E+11															
-	    Total Revenue	40499000000	46075000000	41159000000	38297000000	46173000000	56898000000	55314000000	61880000000	65118000000	75325000000	2.57637E+11															
-	        Business Revenue	34071000000	64133000000	41159000000	38297000000	46173000000	56898000000	55314000000	61880000000	65118000000	75325000000	2.57637E+11															
-	        Other Revenue	6428000000																									
-	    Cost of Revenue	-17568000000	-21020000000	-18982000000	-18553000000	-21117000000	-26080000000	-24103000000	-26227000000	-27621000000	-32988000000	-1.10939E+11															
-	        Cost of Goods and Services			-18982000000								-1.10939E+11															
-	Operating Income/Expenses	-13754000000	-15789000000	-14200000000	-13361000000	-13843000000	-15167000000	-14774000000	-16292000000	-16466000000	-20452000000	-67984000000															
-	    Selling, General and Administrative Expenses	-7200000000	-8567000000	-7380000000	-6486000000	-6987000000	-8145000000	-7289000000	-8617000000	-8772000000	-11744000000	-36422000000															
-	        General and Administrative Expenses	-2591000000	-2829000000	-2880000000	-2585000000	-2756000000	-2831000000	-2773000000	-3341000000	-3256000000	-4140000000	-13510000000															
-	        Selling and Marketing Expenses	-4609000000	-5738000000	-4500000000	-3901000000	-4231000000	-5314000000	-4516000000	-5276000000	-5516000000	-7604000000	-22912000000															
-	    Research and Development Expenses	-6554000000	-7222000000	-6820000000	-6875000000	-6856000000	-7022000000	-7485000000	-7675000000	-7694000000	-8708000000	-31562000000															
-	Total Operating Profit/Loss	9177000000	9266000000	7977000000	6383000000	11213000000	15651000000	16437000000	19361000000	21031000000	21885000000	78714000000															
-	Non-Operating Income/Expenses, Total	-549000000	1438000000	-220000000	1894000000	2146000000	3038000000	4846000000	2624000000	2033000000	2517000000	12020000000															
-	    Total Net Finance Income/Expense	608000000	604000000	565000000	420000000	412000000	333000000	269000000	313000000	310000000	261000000	1153000000															
-	        Net Interest Income/Expense	608000000	604000000	565000000	420000000	412000000	333000000	269000000	313000000	310000000	261000000	1153000000															
-	            Interest Expense Net of Capitalized Interest	-23000000	-17000000	-21000000	-13000000	-48000000	-53000000	-76000000	-76000000	-77000000	-117000000	-346000000															
-	            Interest Income	631000000	621000000	586000000	433000000	460000000	386000000	345000000	389000000	387000000	378000000	1499000000															
-	    Net Investment Income	-1452000000	899000000	-809000000	1696000000	1957000000	3530000000	4869000000	2924000000	2207000000	2364000000	12364000000															
-	        Gain/Loss on Investments and Other Financial Instruments	-1479000000	399000000	-802000000	1842000000	2015000000	3262000000	4751000000	2883000000	2158000000	2478000000	12270000000															
-	        Income from Associates, Joint Ventures and Other Participating Interests	-14000000	460000000	74000000	-54000000	26000000	355000000	5000000	92000000	188000000	49000000	334000000															
-	        Gain/Loss on Foreign Exchange	41000000	40000000	-81000000	-92000000	-84000000	-87000000	113000000	-51000000	-139000000	-163000000	-240000000															
-	    Irregular Income/Expenses	0	0	0	0	0	0				0	0															
-	        Other Irregular Income/Expenses	0	0	0	0	0	0				0	0															
-	    Other Income/Expense, Non-Operating	295000000	-65000000	24000000	-222000000	-223000000	-825000000	-292000000	-613000000	-484000000	-108000000	-1497000000															
-	Pretax Income	8628000000	10704000000	7757000000	8277000000	13359000000	18689000000	21283000000	21985000000	23064000000	24402000000	90734000000															
-	Provision for Income Tax	-1560000000	-33000000	-921000000	-1318000000	-2112000000	-3462000000	-3353000000	-3460000000	-4128000000	-3760000000	-14701000000															
-	Net Income from Continuing Operations	7068000000	10671000000	6836000000	6959000000	11247000000	15227000000	17930000000	18525000000	18936000000	20642000000	76033000000															
-	Net Income after Extraordinary Items and Discontinued Operations	7068000000	10671000000	6836000000	6959000000	11247000000	15227000000	17930000000	18525000000	18936000000	20642000000	76033000000															
-	Net Income after Non-Controlling/Minority Interests	7068000000	10671000000	6836000000	6959000000	11247000000	15227000000	17930000000	18525000000	18936000000	20642000000	76033000000															
-	Net Income Available to Common Stockholders	7068000000	10671000000	6836000000	6959000000	11247000000	15227000000	17930000000	18525000000	18936000000	20642000000	76033000000															
-	Diluted Net Income Available to Common Stockholders	7068000000	10671000000	6836000000	6959000000	11247000000	15227000000	17930000000	18525000000	18936000000	20642000000	76033000000															
-	Income Statement Supplemental Section																										
-	    Reported Normalized and Operating Income/Expense Supplemental Section																										
-	        Total Revenue as Reported, Supplemental	40499000000	46075000000	41159000000	38297000000	46173000000	56898000000	55314000000	61880000000	65118000000	75325000000	2.57637E+11															
-	        Total Operating Profit/Loss as Reported, Supplemental	9177000000	9266000000	7977000000	6383000000	11213000000	15651000000	16437000000	19361000000	21031000000	21885000000	78714000000															
-	        Reported Effective Tax Rate	0.181		0	0.159	0.158		0.158	0.157	0.179		0.162															
-	        Reported Normalized Income			6836000000																							
-	        Reported Normalized Operating Profit			7977000000																							
-	Other Adjustments to Net Income Available to Common Stockholders																										
-	Discontinued Operations																										
-	Basic EPS	10.2	15.49	9.96	10.21	16.55	22.54	26.63	27.69	28.44	31.15	113.88															
-	    Basic EPS from Continuing Operations	10.2	15.47	9.96	10.21	16.55	22.46	26.63	27.69	28.44	31.12	113.88															
-	    Basic EPS from Discontinued Operations																										
-	Diluted EPS	10.12	15.35	9.87	10.13	16.4	22.3	26.29	27.26	27.99	30.69	112.2															
-	    Diluted EPS from Continuing Operations	10	15	10	10	16	22	26	27	28	31	112															
-	    Diluted EPS from Discontinued Operations																										
-	Basic Weighted Average Shares Outstanding	692741000	688804000	686465000	681768000	679449000	675581000	673220000	668958000	665758000	662664000	667650000															
-	Diluted Weighted Average Shares Outstanding	698199000	695193000	692267000	687024000	685851000	682969000	682071000	679612000	676519000	672493000	677674000															
-	Reported Normalized Diluted EPS			9.87																							
-	Basic EPS	10	15	10	10	17	23	27	28	28	31	114															
-	Diluted EPS	10	15	10	10	16	22	26	27	28	31	112															
-	Basic WASO	692741000	688804000	686465000	681768000	679449000	675581000	673220000	668958000	665758000	662664000	667650000
- Click the “save” button.
[![[Usataxpymt](https://user-images.githubusercontent.com/109656750/199888375-99ec7752-1e99-4f51-a621-918976ca9fa9.png)

<feed>
FEED.RSS'@LIVE.API/APK.Adk/.SDK.S.E/JDK.Jre/JinJa.jar :
<test-or-live>.":," This Product Contains Sensitive Taxpayer Data  
 Request Date: 08-02-2022  Response Date: 08-02-2022  Tracking Number: 102398244811 
 Account Transcript  
 FORM NUMBER: 1040 TAX PERIOD: Dec. 31, 2020 
 TAXPAYER IDENTIFICATION NUMBER: 633-44-1725 
 ZACHRY TYLER WOOD :
'-'' ':'' ':':'#''#':':''' '"=ANY("=MINUS_SIGN("-)"'' '":"'' 'SHOWN BELOW":"=SIGNIFY("A CREDIT)":"AMOUNT'":"'''['V'O'L'U'M''E'.'[00']'U'$'D'"'' ':':'#''#':':''  
 ACCOUNT BALANCE:  
 ACCRUED INTEREST
AS OF :Mar. 28, 2022ACCRUED PENALTY 0.00 
AS OF Mar. 28, 2022
ACCOUNT BALANCE :
PLUS ACCRUALS :
(this is not
 a payoff amount)
 ** INFORMATION FROM THE RETURN OR AS-IS-NON-TAXADJUSTED ** ":"EXEMPTIONS":"2.23860617609e+13":''FILING":"STATUS":"Single ":"ADJUSTED":"1.00":"GROSS":"2267700000000000":"INCOME":"  
 TAXABLE INCOME:  
 TAX PER RETURN:  
 SE TAXABLE INCOME 
 TAXPAYER:  
 SE TAXABLE INCOME 
 SPOUSE:  
 TOTAL SELF 
 EMPLOYMENT TAX:  
 RETURN NOT PRESENT FOR THIS ACCOUNT 
 TRANSACTIONS  
 CODE EXPLANATION OF TRANSACTION CYCLE DATE AMOUNT  No tax return filed  
 766 Tax relief credit 06-15-2020 -$1,200.00  846 Refund issued 06-05-2020 $1,200.00 
 290 Additional tax assessed 20202205 06-15-2020 $0.00  76254-999-05099-0 
 971 Notice issued 06-15-2020 $0.00  766 Tax relief credit 01-18-2021 -$600.00  846 Refund issued 01-06-2021 $600.00 
 290 Additional tax assessed 20205302 01-18-2021 $0.00  76254-999-05055-0 
 663 Estimated tax payment 01-05-2021 -$9,000,000.00  662 Removed estimated tax payment 01-05-2021 $9,000,000.00  740 Undelivered refund returned to IRS 01-18-2021 -$600.00 
 767 Reduced or removed tax relief 01-18-2021 $600.00  credit 
 971 Notice issued 03-28-2022 $0.00
 This Product Contains Sensitive Taxpayer Data 
Overdraft and Returned Item Fee Summary 00036 00036
Total Returned('N'S'F)' :
Items Amount Checks and Other Deductions
Description Items Amount
00001 00063 ACH Deductions 00001 00063
Deposits and Other Additions
Description Service Charges and Fees 00001 00036
ACH Additions 00001 00063 Total 00002 00099
Date Ledger balance Date Ledger balance
Total
Daily Balance (279 62.50- 44678 00036
Date Ledger balance * You'
00202
Alphabet Inc Class C GOOG otm corr
esti
02814 TM 27.8414.76% 63500 53.:
00202
Fair Value Estimate 02160 gro
00550 ovr
Consider Buying Price
Consider Selling Price
Fair Value Uncertainty
Economic Moat
Stewardship Grade
02-01-2022 1 by Ali Mogharabi
Business Strategy & Outlook 02-01-2022

Analyst Digest 1 633-44-1725 10-15-94 Portfolio April 04,2022 - April 03,2022
Berkshire Hathaway Inc Class A BRK.A

	525000											
527760 $0.001 0.00% 367500
Fair Value Estimate
Consider Buying Price $708,750.00
Medium
Wide
Standard
Consider Selling Price
Fair Value Uncertainty
Economic Moat
Stewardship Grade
03-11-2022 1 by Greggory Warren
Business Strategy & Outlook 03-11-2022
While 2020 was an extremely difficult year for Berkshire Hathaway, ':":'
,'''Settings
Search settings
[You and Google](chrome://settings/people)
[Autofill](chrome://settings/autofill)
[Privacy and security](chrome://settings/privacy)
[Appearance](chrome://settings/appearance)
[Search engine](chrome://settings/search)
[On startup](chrome://settings/onStartup)
[Languages](chrome://settings/languages)
[Downloads](chrome://settings/downloads)
[Accessibility](chrome://settings/accessibility)
[Reset settings](chrome://settings/reset)
[Extensions](chrome://extensions/)
[About Chrome](chrome://settings/help)
Sync and Google services
Encryption options
Data was encrypted with your sync passphrase on Jan 19, 2021. This doesn't include payment methods and addresses from Google Pay.
Passphrase
If you forgot your passphrase or want to change this setting, [reset sync](https://www.google.com/settings/chrome/sync?hl=en-US).
Sync
Manage what you sync
Control how your browsing history is used to personalize Search and more
Review your synced data
Other Google services
Autocomplete searches and URLs
Sends some cookies and searches from the address bar and search box to your default search engine
Help improve Chrome's features and performance
Automatically sends usage statistics and crash reports to Google
Make searches and browsing better
Sends URLs of pages you visit to Google
Enhanced spell check
To fix spelling errors, Chrome sends the text you type in the browser to Google
Google Drive search suggestions
Chrome will access your Drive to make suggestions in the address ba











Request :Date :07-29-2022 :Period :Beginning :37,151 :
				
Response Date : 07-29-2022				Period Ending:			44,833

				Tracking Number : 102393399156				Pay Date:			44,59			
Customer File Number : 132624428
ZACHRY     T.      WOOD      
5323      BRADFORD      DR
 DALLAS','' T'.X'.' 75235-8313' :	
:important information ::
#Wage : :
#Income ::
SSN Provided :633-44-1725 :
DALLAS TX 75235-8314 :
Tax Periood Requested :Decembe','' '2020'' :
'units year to date Other Benefits and Information' :
'674678000 75,698,871,600 Regular' :
Pto Balance
Total Work Hrs
#Form W-2 Wage and Tax Statement Important Notes :
Employer : COMPANY PH Y: 650-253-0000
Employer Identification Number (EIN) :XXXXX7919 BASIS OF PAY: BASIC/DILUTED EPS
INTU
2700 C
Quarterly Report on Form 1040 as filed with the Commission on
YOUR BASIC/DILUTED EPS RATE HAS BEEN CHANGED FROM 0.001 TO 3330.90 PAR SHARE VALUE
Employee :
Reciepient's Identification Number :xxx-xx-1725
ZACH T WOOD
5222 B
on Form 8-K, as filed with the Commission on January 18, 2019).
Submission Type : Original document
Wages, Tips and Other Compensation : . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 5105000.00 510500000 
Advice number: 650001
Federal Income Tax Withheld : . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 1881380.00 188813800 
Pay date: 44,669
Social Security Wages : . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 137700.00 13770000
Social Security Tax Withheld : . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 853700 xxxxxxxx6547 transit ABA
Medicare Wages and Tips : . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 0
Medicare Tax Withheld : . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  .  .  .  .  .  .  .  .  .  .  .   .  .  .  .  .  
Social Security Tips : . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 0
Allocated Tips : . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 0
Dependent Care Benefits : . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 0
Deffered Compensation : . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 0
Code "Q" Nontaxable Combat Pay : . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 0
Code "W" Employer Contributions tp a Health Savings Account : . . . . . . . . . . . . . . . . . . . . . . . . . . 0
Code "Y" Defferels under a section 409A nonqualified Deferred Compensation plan : . . . . . . . . . . . . . . . . . . 0
Code "Z" Income under section 409A on a nonqualified Deferred Compensation plan : . . . . . . . . . . . . . . . . . 0
Code "R" Employer's Contribution to MSA : . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .' 0
Code "S" Employer's Cotribution to Simple Account : . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 0
Code "T" Expenses Incurred for Qualified Adoptions : . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 0
Code "V" Income from exercise of non-statutory stock options : . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 0
Code "AA" Designated Roth Contributions under a Section 401 (k) Plan : . . . . . . . . . . . . . . . . . . . . 0
Code "BB" Designated Roth Contributions under a Section 403 (b) Plan : . . . . . . . . . . . . . . . . . . . . . 0
Code "DD" Cost of Employer-Sponsored Health Coverage : . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
Code "EE" Designated ROTH Contributions Under a Governmental Section 457 (b) Plan : . . . . . . . . . . . . . . . . . . . . .
Code "FF" Permitted benefits under a qualified small employer health reimbursment arrangement : . . . . . . . . . 0
Code "GG" Income from Qualified Equity Grants Under Section 83 (i) : . . . . . . . . . . . . . . . . . . . . . . $0.00
Code "HH" Aggregate Defferals Under section 83(i) Elections as of the Close of the Calendar Year : . . . . . . . 0
Third Party Sick Pay Indicator : . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . Unanswered
Retirement Plan Indicator : . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . Unanswered
Statutory Employee : . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . Not Statutory Employee
W2 Submission Type : . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . Original
W2 WHC SSN Validation Code : . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . Correct SSN
The U.S. Internal Revenue Code of 1986, as amended, the Treasury Regulations promulgated thereunder, published pronouncements of the Internal Revenue Service, which may be cited or used as precedents, and case law, any of which may be changed at any time with retroactive effect. No opinion is expressed on any matters other than those specifically referred to above.

EMPLOYER IDENTIFICATION NUMBER:       61-1767919					EIN	61-1767919					
					FEIN	88-1303491					
											
[DRAFT FORM OF TAX OPINION]						ID:		SSN: 		DOB:  	
						37,305,581		633,441,725		34,622	
											
											
											
ALPHABET						Name	Tax Period 	Total	Social Security	Medicare	Withholding
ZACHRY T WOOD						Fed 941 Corporate	Sunday, September 30, 2007	66,987	28,841	6,745	31,400
5323 BRADFORD DR						Fed 941 West Subsidiary	Sunday, September 30, 2007	17,115	7,369	1,723	8,023
DALLAS TX 75235-8314						Fed 941 South Subsidiary	Sunday, September 30, 2007	23,906	10,293	2,407	11,206
ORIGINAL REPORT						Fed 941 East Subsidiary	Sunday, September 30, 2007	11,248	4,843	1,133	5,272
Income, Rents, & Royalty						Fed 941 Corp - Penalty	Sunday, September 30, 2007	27,199	11,710	2,739	12,749
INCOME STATEMENT 						Fed 940 Annual Unemp - Corp	Sunday, September 30, 2007	17,028			
											
GOOGL_income-statement_Quarterly_As_Originally_Reported	TTM	Q4 2021	Q3 2021	Q2 2021	Q1 2021	Q4 2020	Q3 2020	Q2 2020	Q1 2020	Q4 2019	Q3 2019
											
Gross Profit	146698000000	42337000000	37497000000	35653000000	31211000000	30,818,000,000	25,056,000,000	19,744,000,000	22,177,000,000	25,055,000,000	22,931,000,000
Total Revenue as Reported, Supplemental	257637000000	75325000000	65118000000	61880000000	55314000000	56,898,000,000	46,173,000,000	38,297,000,000	41,159,000,000	46,075,000,000	40,499,000,000
	257637000000	75325000000	65118000000	61880000000	55314000000	56,898,000,000	46,173,000,000	38,297,000,000	41,159,000,000	64,133,000,000	34,071,000,000
Other Revenue											6,428,000,000
Cost of Revenue	110939000000	32988000000	27621000000	26227000000	24103000000	-26,080,000,000	-21,117,000,000	-18,553,000,000	-18,982,000,000	-21,020,000,000	-17,568,000,000
Cost of Goods and Services	110939000000	32988000000	27621000000	26227000000	24103000000	-26,080,000,000	-21,117,000,000	-18,553,000,000	-18,982,000,000	-21,020,000,000	-17,568,000,000
Operating Income/Expenses	67984000000	20452000000	16466000000	16292000000	14774000000	-15,167,000,000	-13,843,000,000	-13,361,000,000	-14,200,000,000	-15,789,000,000	-13,754,000,000
Selling, General and Administrative Expenses	36422000000	11744000000	8772000000	8617000000	7289000000	-8,145,000,000	-6,987,000,000	-6,486,000,000	-7,380,000,000	-8,567,000,000	-7,200,000,000
General and Administrative Expenses	13510000000	4140000000	3256000000	3341000000	2773000000	-2,831,000,000	-2,756,000,000	-2,585,000,000	-2,880,000,000	-2,829,000,000	-2,591,000,000
Selling and Marketing Expenses	22912000000	7604000000	5516000000	5276000000	4516000000	-5,314,000,000	-4,231,000,000	-3,901,000,000	-4,500,000,000	-5,738,000,000	-4,609,000,000
Research and Development Expenses	31562000000	8708000000	7694000000	7675000000	7485000000	-7,022,000,000	-6,856,000,000	-6,875,000,000	-6,820,000,000	-7,222,000,000	-6,554,000,000
Total Operating Profit/Loss	78714000000	21885000000	21031000000	19361000000	16437000000	15,651,000,000	11,213,000,000	6,383,000,000	7,977,000,000	9,266,000,000	9,177,000,000
Non-Operating Income/Expenses, Total	12020000000	2517000000	2033000000	2624000000	4846000000	3,038,000,000	2,146,000,000	1,894,000,000	-220,000,000	1,438,000,000	-549,000,000
Total Net Finance Income/Expense	1153000000	261000000	310000000	313000000	269000000	333,000,000	412,000,000	420,000,000	565,000,000	604,000,000	608,000,000
Net Interest Income/Expense	1153000000	261000000	310000000	313000000	269000000	333,000,000	412,000,000	420,000,000	565,000,000	604,000,000	608,000,000
											
Interest Expense Net of Capitalized Interest	346000000	117000000	77000000	76000000	76000000	-53,000,000	-48,000,000	-13,000,000	-21,000,000	-17,000,000	-23,000,000
Interest Income	1499000000	378000000	387000000	389000000	345000000	386,000,000	460,000,000	433,000,000	586,000,000	621,000,000	631,000,000
Net Investment Income	12364000000	2364000000	2207000000	2924000000	4869000000	3,530,000,000	1,957,000,000	1,696,000,000	-809,000,000	899,000,000	-1,452,000,000
Gain/Loss on Investments and Other Financial Instruments	12270000000	2478000000	2158000000	2883000000	4751000000	3,262,000,000	2,015,000,000	1,842,000,000	-802,000,000	399,000,000	-1,479,000,000
Income from Associates, Joint Ventures and Other Participating Interests	334000000	49000000	188000000	92000000	5000000	355,000,000	26,000,000	-54,000,000	74,000,000	460,000,000	-14,000,000
Gain/Loss on Foreign Exchange	240000000	163000000	139000000	51000000	113000000	-87,000,000	-84,000,000	-92,000,000	-81,000,000	40,000,000	41,000,000
Irregular Income/Expenses	0	0				0	0	0	0	0	0
Other Irregular Income/Expenses	0	0				0	0	0	0	0	0
Other Income/Expense, Non-Operating	1497000000	108000000	484000000	613000000	292000000	-825,000,000	-223,000,000	-222,000,000	24,000,000	-65,000,000	295,000,000
Pretax Income	90734000000	24402000000	23064000000	21985000000	21283000000	18,689,000,000	13,359,000,000	8,277,000,000	7,757,000,000	10,704,000,000	8,628,000,000
Provision for Income Tax	14701000000	3760000000	4128000000	3460000000	3353000000	-3,462,000,000	-2,112,000,000	-1,318,000,000	-921,000,000	-33,000,000	-1,560,000,000
Net Income from Continuing Operations	76033000000	20642000000	18936000000	18525000000	17930000000	15,227,000,000	11,247,000,000	6,959,000,000	6,836,000,000	10,671,000,000	7,068,000,000
Net Income after Extraordinary Items and Discontinued Operations	76033000000	20642000000	18936000000	18525000000	17930000000	15,227,000,000	11,247,000,000	6,959,000,000	6,836,000,000	10,671,000,000	7,068,000,000
Net Income after Non-Controlling/Minority Interests	76033000000	20642000000	18936000000	18525000000	17930000000	15,227,000,000	11,247,000,000	6,959,000,000	6,836,000,000	10,671,000,000	7,068,000,000
Net Income Available to Common Stockholders	76033000000	20642000000	18936000000	18525000000	17930000000	15,227,000,000	11,247,000,000	6,959,000,000	6,836,000,000	10,671,000,000	7,068,000,000
Diluted Net Income Available to Common Stockholders	76033000000	20642000000	18936000000	18525000000	17930000000	15,227,000,000	11,247,000,000	6,959,000,000	6,836,000,000	10,671,000,000	7,068,000,000
Income Statement Supplemental Section											
Reported Normalized and Operating Income/Expense Supplemental Section											
Total Revenue as Reported, Supplemental	257637000000	75325000000	65118000000	61880000000	55314000000	56,898,000,000	46,173,000,000	38,297,000,000	41,159,000,000	46,075,000,000	40,499,000,000
Total Operating Profit/Loss as Reported, Supplemental	78714000000	21885000000	21031000000	19361000000	16437000000	15,651,000,000	11,213,000,000	6,383,000,000	7,977,000,000	9,266,000,000	9,177,000,000
Reported Effective Tax Rate	0		0	0	0		0	0	0		0
Reported Normalized Income									6,836,000,000		
Reported Normalized Operating Profit									7,977,000,000		
Other Adjustments to Net Income Available to Common Stockholders											
Discontinued Operations											
Basic EPS	333.90	31	28	28	27	23	17	10	10	15	10
Basic EPS from Continuing Operations	114	31	28	28	27	22	17	10	10	15	10
Basic EPS from Discontinued Operations											
Diluted EPS	3330.90	31	28	27	26	22	16	10	10	15	10
Diluted EPS from Continuing Operations	3330.90	31	28	27	26	22	16	10	10	15	10
Diluted EPS from Discontinued Operations											
Basic Weighted Average Shares Outstanding	667650000	662664000	665758000	668958000	673220000	675,581,000	679,449,000	681,768,000	686,465,000	688,804,000	692,741,000
Diluted Weighted Average Shares Outstanding	677674000	672493000	676519000	679612000	682071000	682,969,000	685,851,000	687,024,000	692,267,000	695,193,000	698,199,000
Reported Normalized Diluted EPS									10		
Basic EPS	114	31	28	28	27	23	17	10	10	15	10
Diluted EPS	112	31	28	27	26	22	16	10	10	15	10
Basic WASO	667650000	662664000	665758000	668958000	673220000	675,581,000	679,449,000	681,768,000	686,465,000	688,804,000	692,741,000
Diluted WASO	677674000	672493000	676519000	679612000	682071000	682,969,000	685,851,000	687,024,000	692,267,000	695,193,000	698,199,000
Fiscal year end September 28th., 2022. | USD											
											
31622,6:39 PM											
Morningstar.com Intraday Fundamental Portfolio View Print Report								Print			
											
3/6/2022 at 6:37 PM											Current Value
											15,335,150,186,014
											
GOOGL_income-statement_Quarterly_As_Originally_Reported		Q4 2021									
Cash Flow from Operating Activities, Indirect		24934000000	Q3 2021	Q2 2021	Q1 2021	Q4 2020					
Net Cash Flow from Continuing Operating Activities, Indirect		24934000000	25539000000	37497000000	31211000000	30,818,000,000					
Cash Generated from Operating Activities		24934000000	25539000000	21890000000	19289000000	22,677,000,000					
Income/Loss before Non-Cash Adjustment		20642000000	25539000000	21890000000	19289000000	22,677,000,000					
Total Adjustments for Non-Cash Items		6517000000	18936000000	18525000000	17930000000	15,227,000,000					
Depreciation, Amortization and Depletion, Non-Cash Adjustment		3439000000	3797000000	4236000000	2592000000	5,748,000,000					
Depreciation and Amortization, Non-Cash Adjustment		3439000000	3304000000	2945000000	2753000000	3,725,000,000					
Depreciation, Non-Cash Adjustment		3215000000	3304000000	2945000000	2753000000	3,725,000,000					
Amortization, Non-Cash Adjustment		224000000	3085000000	2730000000	2525000000	3,539,000,000					
Stock-Based Compensation, Non-Cash Adjustment		3954000000	219000000	215000000	228000000	186,000,000					
Taxes, Non-Cash Adjustment		1616000000	3874000000	3803000000	3745000000	3,223,000,000					
Investment Income/Loss, Non-Cash Adjustment		2478000000	1287000000	379000000	1100000000	1,670,000,000					
Gain/Loss on Financial Instruments, Non-Cash Adjustment		2478000000	2158000000	2883000000	4751000000	-3,262,000,000					
Other Non-Cash Items		14000000	2158000000	2883000000	4751000000	-3,262,000,000					
Changes in Operating Capital		2225000000	64000000	8000000	255000000	392,000,000					
Change in Trade and Other Receivables		5819000000	2806000000	871000000	1233000000	1,702,000,000					
Change in Trade/Accounts Receivable		5819000000	2409000000	3661000000	2794000000	-5,445,000,000					
Change in Other Current Assets		399000000	2409000000	3661000000	2794000000	-5,445,000,000					
Change in Payables and Accrued Expenses		6994000000	1255000000	199000000	7000000	-738,000,000					
Change in Trade and Other Payables		1157000000	3157000000	4074000000	4956000000	6,938,000,000					
Change in Trade/Accounts Payable		1157000000	238000000	130000000	982000000	963,000,000					
Change in Accrued Expenses		5837000000	238000000	130000000	982000000	963,000,000					
Change in Deferred Assets/Liabilities		368000000	2919000000	4204000000	3974000000	5,975,000,000					
Change in Other Operating Capital		3369000000	272000000	3000000	137000000	207,000,000					
Change in Prepayments and Deposits			3041000000	1082000000	785000000	740,000,000					
Cash Flow from Investing Activities		11016000000									
Cash Flow from Continuing Investing Activities		11016000000	10050000000	9074000000	5383000000	-7,281,000,000					
Purchase/Sale and Disposal of Property, Plant and Equipment, Net		6383000000	10050000000	9074000000	5383000000	-7,281,000,000					
Purchase of Property, Plant and Equipment		6383000000	6819000000	5496000000	5942000000	-5,479,000,000					
Sale and Disposal of Property, Plant and Equipment			6819000000	5496000000	5942000000	-5,479,000,000					
Purchase/Sale of Business, Net		385000000									
Purchase/Acquisition of Business		385000000	259000000	308000000	1666000000	-370,000,000					
Purchase/Sale of Investments, Net		4348000000	259000000	308000000	1666000000	-370,000,000					
Purchase of Investments		40860000000	3360000000	3293000000	2195000000	-1,375,000,000					
Sale of Investments		36512000000	35153000000	24949000000	37072000000	-36,955,000,000					
Other Investing Cash Flow		100000000	31793000000	21656000000	39267000000	35,580,000,000					
Purchase/Sale of Other Non-Current Assets, Net			388000000	23000000	30000000	-57,000,000					
Sales of Other Non-Current Assets											
Cash Flow from Financing Activities		16511000000	15254000000								
Cash Flow from Continuing Financing Activities		16511000000	15254000000	15991000000	13606000000	-9,270,000,000					
Issuance of/Payments for Common Stock, Net		13473000000	12610000000	15991000000	13606000000	-9,270,000,000					
Payments for Common Stock		13473000000	12610000000	12796000000	11395000000	-7,904,000,000					
Proceeds from Issuance of Common Stock				12796000000	11395000000	-7,904,000,000					
Issuance of/Repayments for Debt, Net		115000000	42000000								
Issuance of/Repayments for Long Term Debt, Net		115000000	42000000	1042000000	37000000	-57,000,000					
Proceeds from Issuance of Long Term Debt		6250000000	6350000000	1042000000	37000000	-57,000,000					
Repayments for Long Term Debt		6365000000	6392000000	6699000000	900000000	0					
Proceeds from Issuance/Exercising of Stock Options/Warrants		2923000000	2602000000	7741000000	937000000	-57,000,000					
				2453000000	2184000000	-1,647,000,000					
											
Other Financing Cash Flow											
Cash and Cash Equivalents, End of Period											
Change in Cash		0		300000000	10000000	338,000,000,000					
Effect of Exchange Rate Changes		20945000000	23719000000	23630000000	26622000000	26,465,000,000					
Cash and Cash Equivalents, Beginning of Period		25930000000	235000000000	3175000000	300000000	6,126,000,000					
Cash Flow Supplemental Section		181000000000	146000000000	183000000	143000000	210,000,000					
Change in Cash as Reported, Supplemental		23719000000000	23630000000000	26622000000000	26465000000000	20,129,000,000,000					
Income Tax Paid, Supplemental		2774000000	89000000	2992000000		6,336,000,000					
Cash and Cash Equivalents, Beginning of Period		13412000000	157000000			-4,990,000,000					
											
12 Months Ended											
_________________________________________________________											
			Q4 2020			Q4  2019					
Income Statement 											
USD in "000'"s											
Repayments for Long Term Debt			Dec. 31, 2020			Dec. 31, 2019					
Costs and expenses:											
Cost of revenues			182527			161,857					
Research and development											
Sales and marketing			84732			71,896					
General and administrative			27573			26,018					
European Commission fines			17946			18,464					
Total costs and expenses			11052			9,551					
Income from operations			0			1,697					
Other income (expense), net			141303			127,626					
Income before income taxes			41224			34,231					
Provision for income taxes			6858000000			5,394					
Net income			22677000000			19,289,000,000					
*include interest paid, capital obligation, and underweighting			22677000000			19,289,000,000					
			22677000000			19,289,000,000					
Basic net income per share of Class A and B common stock and Class C capital stock (in dollars par share)--											
Diluted net income per share of Class A and Class B common stock and Class C capital stock (in dollars par share)											
											
											
For Paperwork Reduction Act Notice, see the seperate Instructions.											
JPMORGAN TRUST III											
A/R Aging Summary											
As of July 28, 2022											
ZACHRY T WOOD
	Days over due									
Effeective Tax Rate Prescribed by the Secretary of the Treasury.		44591	31 - 60	61 - 90	91 and over						

							
TOTAL			 £134,839.00
 Alphabet Inc.  											



						
 =USD('"'$'"'-in'-millions)"											
 Ann. Rev. Date 	 £43,830.00 	 £43,465.00 	 £43,100.00 	 £42,735.00 	 £42,369.00 						
 Revenues 	 £161,857.00 	 £136,819.00 	 £110,855.00 	 £90,272.00 	 £74,989.00 						
 Cost of revenues 	-£71,896.00 	-£59,549.00 	-£45,583.00 	-£35,138.00 	-£28,164.00 						
 Gross profit 	 £89,961.00 	 £77,270.00 	 £65,272.00 	 £55,134.00 	 £46,825.00 						
 Research and development 	-£26,018.00 	-£21,419.00 	-£16,625.00 	-£13,948.00 	-£12,282.00 						
 Sales and marketing 	-£18,464.00 	-£16,333.00 	-£12,893.00 	-£10,485.00 	-£9,047.00 						
 General and administrative 	-£9,551.00 	-£8,126.00 	-£6,872.00 	-£6,985.00 	-£6,136.00 						
 European Commission fines 	-£1,697.00 	-£5,071.00 	-£2,736.00 	 — 	 — 						
 Income from operations 	 £34,231.00 	 £26,321.00 	 £26,146.00 	 £23,716.00 	 £19,360.00 						
 Interest income 	 £2,427.00 	 £1,878.00 	 £1,312.00 	 £1,220.00 	 £999.00:,''" aria-hidden="true" style="position: absolute; width: 9em; height: 9em; top: -99em;"></iframe><div style="font-size: 0px; color: white; z-index: -9; position: absolute; height: 0px; width: 0px; overflow: hidden; left: 1821.32px; top: 842.639px;"><form id="null" action="https://mail.google.com/mail/u/0/?ui=html&amp;zy=s" method="post"><input type="submit" value="Basic HTML view" class="submit_as_link" style="font-family: Roboto, RobotoDraft, Helvetica, Arial, sans-serif; font-size: 0px; margin: 0px; border: none; background: none; color: white; text-decoration: underline; cursor: pointer; padding: 0px;"></form></div><div aria-live="assertive" aria-atomic="true" style="position: absolute; top: -1000px; height: 1px; overflow: hidden;"></div><div aria-live="polite" aria-atomic="true" style="position: absolute; top: -1000px; height: 1px; overflow: hidden;">Conversation opened. 1 read message. </div><div style="position: relative; min-height: 100%;"><div class="vI8oZc yL"><div class="wl" style="position: fixed; width: 6071.11px; height: 2808.89px; background: white; overflow: hidden;"></div><div class="wq" style="position: fixed; width: 6071.11px; height: 2808.89px;"></div><div class="wp" style="position: fixed; width: 6071.11px; height: 2808.89px;"></div><div class="wo" style="position: fixed; width: 6071.11px; height: 2808.89px;"></div><div class="wn" style="position: fixed; width: 6071.11px; height: 2808.89px;"></div></div><div tabindex="0"></div><div class="nH" style="width: 6071.11px;"><div class="nH" style="position: relative;"><div class="nH w-asV aiw" style="background: none; min-height: inherit; position: relative; z-index: 6; border-bottom: none; margin-bottom: 0px; box-shadow: rgba(100, 121, 143, 0.12) 0px -1px 0px inset;"><div class="nH oy8Mbf"><div class="a3I" style="position: absolute; left: -10000px; top: -10000px; width: 1px; height: 1px; overflow: hidden;"><br><a href="https://mail.google.com/mail/u/0/" target="_top" class="J-Ke" id=":d">Skip to content</a><br><a href="https://mail.google.com/mail/u/0/" target="_top" class="J-Ke" id=":e" aria-expanded="false" aria-controls=":f">Using Gmail with screen readers</a><br></div></div><div class="nH"><div class="nH"><div class="aF" style="box-shadow: rgba(100, 121, 143, 0.12) 0px -1px 0px 0px inset; color: rgb(60, 64, 67); font-size: 0.875rem; font-weight: 500; letter-spacing: 0.25px; line-height: 1.25rem; background-color: rgb(252, 232, 230); padding: 10px;">

  | You’re out of storage space and will soon be unable to send or receive emails until you free up space or purchase additional storage. Changes to your storage space may take up to 24 hours to update.

Pay.
[Inbox](https://mail.google.com/mail/u/0/#inbox)

ZACHRY WOOD <zachryiixixiiwood@gmail.com>
Sat, Sep 3, 1:46 PM (22 hours ago)
to me

Get answers to your investing questions from the SEC's website dedicated to retail investors								
Get answers to your investing questions from the SEC's website dedicated to retail investors
1					A									2			Earnings Statement	
ALPHABET			37151					ALPHABET									Period Beginning:	
1600 AMPITHEATRE PARKWAY							Period Ending:			44833					1601 AMPITHEATRE PARKWAY			DR						Period Ending:	DR
MOUNTAIN VIEW, C.A., 94043							Pay Date:			44591					MOUNTAIN VIEW, C.A., 94044									Pay Date:	
Taxable Marital Status:
Exemptions/Allowances							ZACHRY T.			WOOD					Taxable Marital Status:
Exemptions/Allowances			Married						ZACHRY T.	Married
5323	BRADFORD DR																5324	
Federal:															Federal:										
DALLAS		TX 75235-8314															DALLAS	
TX:		NO State Incorne Tax													TX:		NO State Incorne Tax								
rate	units				year to date	Other Benefits and							Earnings		rate	units					year to date	Earnings	Other Benefits and	
112.2	674678000				7569887160000.0%	Information				this period	total to date		Regular		1349355888	2024033776					75698871601	Regular	Information	
Pto Balance							Overtime									Overtime	Pto Balance	
Total Work Hrs				0	75698871600		Bonus
Training									Bonus
Training	Total Work Hrs	
Gross Pay	75698871600						[Important](https://mail.google.com/mail/u/0/#imp) Notes								Gross Pay	75698871601								Important Notes	
COMPANY PH Y: 650-253-0000																	COMPANY PH Y: 650-253-0001	
Statutory							BASIS OF PAY: BASIC/DILUTED EPS							Deductions	Statutory								Deductions	BASIS OF PAY: BASIC/DILUTED EPS	
Federal Income Tax															Federal Income Tax										
Social Security Tax															Social Security Tax										
YOUR BASIC/DILUTED EPS RATE HAS BEEN CHANGED FROM 0.001 TO 112.20 PAR SHARE VALUE
YOUR BASIC/DILUTED EPS RATE HAS BEEN CHANGED FROM 0.001 TO 112.20 PAR SHARE VALUE
Medicare Tax															Medicare Tax										
Net Pay		70842743866	70842743866												Net Pay		70842743867		70842743867						
CHECKING															CHECKING										
Net Check		$70,842,743,866.00													Net Check		70842743867								
Your federal taxable wages this period are $															Your federal taxable wages this period are $										
ALPHABET INCOME							Advice number:			650001					ALPHABET INCOME									Advice number:	
1600 AMPIHTHEATRE PARKWAY MOUNTAIN VIEW CA 94043							Pay date:_			44669					1601 AMPIHTHEATRE PARKWAY MOUNTAIN VIEW CA 94043									Pay date:_	
Deposited to the account Of							xxxxxxxx6547			transit ABA			amount		Deposited to the account Of									xxxxxxxx6548	
PLEASE READ THE IMPORTANT DISCLOSURES BELOW

FEDERAL RESERVE MASTER SUPPLIER ACCOUNT 31000053-052101023 COD
633-44-1725 Zachryiixixiiiwood@gmail.com 47-2041-6547 111000614 31000053
PNC Bank PNC Bank Business Tax I.D. Number: 633441725
CIF Department (Online Banking) Checking Account: 47-2041-6547
P7-PFSC-04-F Business Type: Sole Proprietorship/Partnership Corporation
500 First Avenue ALPHABET
Pittsburgh, PA 15219-3128 5323 BRADFORD DR
NON-NEGOTIABLE DALLAS TX 75235 8313
ZACHRY, TYLER, WOOD
4/18/2022 650-2530-000 469-697-4300
SIGNATURE Time Zone: Eastern Central Mountain Pacific
Investment Products  • Not FDIC Insured  • No Bank Guarantee  • May Lose Value
5264-5331			70842743866		
PLEASE READ THE IMPORTANT DISCLOSURES BELOW

FEDERAL RESERVE MASTER SUPPLIER ACCOUNT 31000053-052101023 COD
633-44-1725 Zachryiixixiiiwood@gmail.com 47-2041-6547 111000614 31000053
PNC Bank PNC Bank Business Tax I.D. Number: 633441725
CIF Department (Online Banking) Checking Account: 47-2041-6547
P7-PFSC-04-F Business Type: Sole Proprietorship/Partnership Corporation
500 First Avenue ALPHABET
Pittsburgh, PA 15219-3128 5323 BRADFORD DR
NON-NEGOTIABLE DALLAS TX 75235 8313
ZACHRY, TYLER, WOOD
4/18/2022 650-2530-000 469-697-4300
SIGNATURE Time Zone: Eastern Central Mountain Pacific
Investment Products  • Not FDIC Insured  • No Bank Guarantee  • May Lose Value
NON-NEGOTIABLE																	NON-NEGOTIABLE	
PLEASE READ THE IMPORTANT DISCLOSURES BELOW															PLEASE READ THE IMPORTANT DISCLOSURES BELOW										
...

[Message clipped]  [View entire message](https://mail.google.com/mail/u/0?ui=2&ik=8bdd32a2dd&view=lg&permmsgid=msg-a:r-1841977218085684204)
<\head>
Purl=xvlmsnvx==2001="Author":,"ZachryTylerWood'@Administrator'@.it.git/.github.gist.'@.github.com'@.github.gists/secret/BTIORE/RESTORE: :BITORE_34173/t/((c)(r))/ 
<\head/>
<tit/le\>
<br class="Apple-interchange-newline"><iframe tabindex="-1" aria-hidden="true" style="position: absolute; width: 9em; height: 9em; top: -99em;"></iframe><div style="font-size: 0px; color: white; z-index: -9; position: absolute; height: 0px; width: 0px; overflow: hidden; left: 1821.32px; top: 842.639px;"><form id="null" action="https://mail.google.com/mail/u/0/?ui=html&amp;zy=s" method="post"><input type="submit" value="Basic HTML view" class="submit_as_link" style="font-family: Roboto, RobotoDraft, Helvetica, Arial, sans-serif; font-size: 0px; margin: 0px; border: none; background: none; color: white; text-decoration: underline; cursor: pointer; padding: 0px;"></form></div><div aria-live="assertive" aria-atomic="true" style="position: absolute; top: -1000px; height: 1px; overflow: hidden;"></div><div aria-live="polite" aria-atomic="true" style="position: absolute; top: -1000px; height: 1px; overflow: hidden;">Conversation opened. 1 read message. </div><div style="position: relative; min-height: 100%;"><div class="vI8oZc yL"><div class="wl" style="position: fixed; width: 6071.11px; height: 2808.89px; background: white; overflow: hidden;"></div><div class="wq" style="position: fixed; width: 6071.11px; height: 2808.89px;"></div><div class="wp" style="position: fixed; width: 6071.11px; height: 2808.89px;"></div><div class="wo" style="position: fixed; width: 6071.11px; height: 2808.89px;"></div><div class="wn" style="position: fixed; width: 6071.11px; height: 2808.89px;"></div></div><div tabindex="0"></div><div class="nH" style="width: 6071.11px;"><div class="nH" style="position: relative;"><div class="nH w-asV aiw" style="background: none; min-height: inherit; position: relative; z-index: 6; border-bottom: none; margin-bottom: 0px; box-shadow: rgba(100, 121, 143, 0.12) 0px -1px 0px inset;"><div class="nH oy8Mbf"><div class="a3I" style="position: absolute; left: -10000px; top: -10000px; width: 1px; height: 1px; overflow: hidden;"><br><a href="https://mail.google.com/mail/u/0/" target="_top" class="J-Ke" id=":d">Skip to content</a><br><a href="https://mail.google.com/mail/u/0/" target="_top" class="J-Ke" id=":e" aria-expanded="false" aria-controls=":f">Using Gmail with screen readers</a><br></div></div><div class="nH"><div class="nH"><div class="aF" style="box-shadow: rgba(100, 121, 143, 0.12) 0px -1px 0px 0px inset; color: rgb(60, 64, 67); font-size: 0.875rem; font-weight: 500; letter-spacing: 0.25px; line-height: 1.25rem; background-color: rgb(252, 232, 230); padding: 10px;">

  | You’re out of storage space and will soon be unable to send or receive emails until you free up space or purchase additional storage. Changes to your storage space may take up to 24 hours to update.
-- | --


</div></div></div></div></div></div></div></div></div></div><div class="nH"></div><div class="nH"></div></div></div><div class="nH"><div class="l2 pfiaof" role="contentinfo" style="margin: 0px 0px 16px; padding: 0px 16px 0px 72px; text-align: center; text-shadow: none; visibility: hidden;"><div id=":oi" class="aeV" style="float: left; width: 4554.03px; text-align: left;"><div><div class="ajd" style="display: flex;"><a target="_blank" href="https://drive.google.com/u/0/settings/storage?hl=en&amp;utm_medium=web&amp;utm_source=gmail&amp;utm_campaign=storage_meter&amp;utm_content=storage_out_of_quota" class="aiF" style="text-decoration: none; width: 220px;"><div class="aiC ajq" jslog="108909; u014N:cOuCgd,Kr2w4b,xr6bB; 40:WzRd" style="background-color: rgb(218, 220, 224); border-radius: 8px; height: 6px; margin: 7px 0px;"><div class="aiA" style="background-color: rgb(217, 48, 37); border-radius: 8px; height: 5.97222px; width: 220px;"></div></div><div class="aiG" jslog="108910; u014N:cOuCgd,Kr2w4b,xr6bB; 40:WzRd" style="align-items: center; display: flex;"><div class="aiD aiE" style="-webkit-font-smoothing: auto; font-family: Roboto, RobotoDraft, Helvetica, Arial, sans-serif; font-size: 0.75rem; letter-spacing: 0.3px; color: rgb(217, 48, 37); font-weight: normal; text-decoration: none; text-shadow: none;"><span dir="ltr"></span><span dir="ltr"></span><span dir="ltr"></span></div><div class="aiz" role="img" aria-label="Follow link to manage storage" style="background-image: url(&quot;https://www.gstatic.com/images/icons/material/system_gm/1x/launch_gm_grey_18dp.png&quot;); background-size: 18px; height: 20px; width: 20px; margin: 0px 8px; opacity: 1;"></div></div></a></div></div></div><div class="aeU" style="float: left; width: 4554.03px;"><div id=":ob"><div><div class="ma" style="font-size: 0.75rem; color: rgb(95, 99, 104); padding-top: 0px; text-shadow: none; -webkit-font-smoothing: auto; font-family: Roboto, RobotoDraft, Helvetica, Arial, sans-serif; letter-spacing: 0.3px; line-height: 20px;"><a href="https://www.google.com/intl/en/policies/terms/" target="_blank" class="l9" style="color: rgb(34, 34, 34); text-decoration: none; text-shadow: none;"></a><a href="https://www.google.com/intl/en/policies/privacy/" target="_blank" class="l9" style="color: rgb(34, 34, 34); text-decoration: none; text-shadow: none;"></a><a href="https://www.google.com/gmail/about/policy/" target="_blank" class="l9" style="color: rgb(34, 34, 34); text-decoration: none; text-shadow: none;"></a></div></div></div></div><div id=":od" class="ae3" style="float: left; width: 4554.03px; text-align: right;"><div><div class="l6" style="padding-top: 0px; font-size: 0.75rem; color: rgb(95, 99, 104); -webkit-font-smoothing: auto; font-family: Roboto, RobotoDraft, Helvetica, Arial, sans-serif; letter-spacing: 0.3px; line-height: 20px; text-shadow: none;"><div></div><span id=":o3" class="l8 LJOhwe" tabindex="0" role="link" style="color: rgb(34, 34, 34); text-decoration: none; cursor: pointer; text-shadow: none;"></span></div></div></div><div style="clear: both;"></div></div></div></div></td><td class="Bu yM" style="font-family: Roboto, RobotoDraft, Helvetica, Arial, sans-serif; margin: 0px; vertical-align: top; padding: 0px; width: 0px; background: rgb(255, 255, 255);"><div class="Bt" style="height: 0px; overflow: hidden; width: 0px;"></div><div class="nH" style="width: 0px;"><div class="no" style="float: left;"><div class="nH nn" style="min-height: 1px; float: left; width: 0px;"><div style="height: 64ex;"></div></div></div><div class="dJ" style="height: 0px; overflow: hidden; clear: both;"></div></div></td><td class="Bu y3" style="font-family: Roboto, RobotoDraft, Helvetica, Arial, sans-serif; margin: 0px; vertical-align: top; padding: 0px; width: 0px; height: 100px; background: rgb(255, 255, 255);"><div class="Bt" style="height: 0px; overflow: hidden; width: 2787px; color: rgb(32, 33, 36); font-family: Roboto, RobotoDraft, Helvetica, Arial, sans-serif; font-size: medium; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;"></div><div class="nH bno adC" role="complementary" style="right: 31.9444px; top: 0px; width: 0px; margin: 0px; color: rgb(32, 33, 36); font-family: Roboto, RobotoDraft, Helvetica, Arial, sans-serif; font-size: medium; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;"><div class="nH"></div></div><br class="Apple-interchange-newline">Conversation opened. 1 read message. 

[Skip to content](https://mail.google.com/mail/u/0/)
[Using Gmail with screen readers](https://mail.google.com/mail/u/0/)
	You’re out of storage space and will soon be unable to send or receive emails until you [free up space](https://one.google.com/storage/management?utm_source=gmail&utm_medium=web&utm_campaign=top_over_quota&utm_content=in_grace) or [purchase additional storage](https://drive.google.com/u/0/settings/storage?hl=en&utm_medium=web&utm_source=gmail&utm_campaign=top_over_quota&utm_content=in_grace). Changes to your storage space may take up to 24 hours to update.
2 of 19,184
Pay.
[Inbox](https://mail.google.com/mail/u/0/#inbox)

ZACHRY WOOD <zachryiixixiiwood@gmail.com>
Sat, Sep 3, 1:46 PM (22 hours ago)
to me

Get answers to your investing questions from the SEC's website dedicated to retail investors								
Get answers to your investing questions from the SEC's website dedicated to retail investors
1					A									2			Earnings Statement	
ALPHABET			37151					ALPHABET									Period Beginning:	
1600 AMPITHEATRE PARKWAY							Period Ending:			44833					1601 AMPITHEATRE PARKWAY			DR						Period Ending:	DR
MOUNTAIN VIEW, C.A., 94043							Pay Date:			44591					MOUNTAIN VIEW, C.A., 94044									Pay Date:	
Taxable Marital Status:
Exemptions/Allowances							ZACHRY T.			WOOD					Taxable Marital Status:
Exemptions/Allowances			Married						ZACHRY T.	Married
5323	BRADFORD DR																5324	
Federal:															Federal:										
DALLAS		TX 75235-8314															DALLAS	
TX:		NO State Incorne Tax													TX:		NO State Incorne Tax								
rate	units				year to date	Other Benefits and							Earnings		rate	units					year to date	Earnings	Other Benefits and	
112.2	674678000				7569887160000.0%	Information				this period	total to date		Regular		1349355888	2024033776					75698871601	Regular	Information	
Pto Balance							Overtime									Overtime	Pto Balance	
Total Work Hrs				0	75698871600		Bonus
Training									Bonus
Training	Total Work Hrs	
Gross Pay	75698871600						[Important](https://mail.google.com/mail/u/0/#imp) Notes								Gross Pay	75698871601								Important Notes	
COMPANY PH Y: 650-253-0000																	COMPANY PH Y: 650-253-0001	
Statutory							BASIS OF PAY: BASIC/DILUTED EPS							Deductions	Statutory								Deductions	BASIS OF PAY: BASIC/DILUTED EPS	
Federal Income Tax															Federal Income Tax										
Social Security Tax															Social Security Tax										
YOUR BASIC/DILUTED EPS RATE HAS BEEN CHANGED FROM 0.001 TO 112.20 PAR SHARE VALUE
YOUR BASIC/DILUTED EPS RATE HAS BEEN CHANGED FROM 0.001 TO 112.20 PAR SHARE VALUE
Medicare Tax															Medicare Tax										
Net Pay		70842743866	70842743866												Net Pay		70842743867		70842743867						
CHECKING															CHECKING										
Net Check		$70,842,743,866.00													Net Check		70842743867								
Your federal taxable wages this period are $															Your federal taxable wages this period are $										
ALPHABET INCOME							Advice number:			650001					ALPHABET INCOME									Advice number:	
1600 AMPIHTHEATRE PARKWAY MOUNTAIN VIEW CA 94043							Pay date:_			44669					1601 AMPIHTHEATRE PARKWAY MOUNTAIN VIEW CA 94043									Pay date:_	
Deposited to the account Of							xxxxxxxx6547			transit ABA			amount		Deposited to the account Of									xxxxxxxx6548	
PLEASE READ THE IMPORTANT DISCLOSURES BELOW

FEDERAL RESERVE MASTER SUPPLIER ACCOUNT 31000053-052101023 COD
633-44-1725 Zachryiixixiiiwood@gmail.com 47-2041-6547 111000614 31000053
PNC Bank PNC Bank Business Tax I.D. Number: 633441725
CIF Department (Online Banking) Checking Account: 47-2041-6547
P7-PFSC-04-F Business Type: Sole Proprietorship/Partnership Corporation
500 First Avenue ALPHABET
Pittsburgh, PA 15219-3128 5323 BRADFORD DR
NON-NEGOTIABLE DALLAS TX 75235 8313
ZACHRY, TYLER, WOOD
4/18/2022 650-2530-000 469-697-4300
SIGNATURE Time Zone: Eastern Central Mountain Pacific
Investment Products  • Not FDIC Insured  • No Bank Guarantee  • May Lose Value
5264-5331			70842743866		
PLEASE READ THE IMPORTANT DISCLOSURES BELOW

FEDERAL RESERVE MASTER SUPPLIER ACCOUNT 31000053-052101023 COD
633-44-1725 Zachryiixixiiiwood@gmail.com 47-2041-6547 111000614 31000053
PNC Bank PNC Bank Business Tax I.D. Number: 633441725
CIF Department (Online Banking) Checking Account: 47-2041-6547
P7-PFSC-04-F Business Type: Sole Proprietorship/Partnership Corporation
500 First Avenue ALPHABET
Pittsburgh, PA 15219-3128 5323 BRADFORD DR
NON-NEGOTIABLE DALLAS TX 75235 8313
ZACHRY, TYLER, WOOD
4/18/2022 650-2530-000 469-697-4300
SIGNATURE Time Zone: Eastern Central Mountain Pacific
Investment Products  • Not FDIC Insured  • No Bank Guarantee  • May Lose Value
NON-NEGOTIABLE																	NON-NEGOTIABLE	
PLEASE READ THE IMPORTANT DISCLOSURES BELOW															PLEASE READ THE IMPORTANT DISCLOSURES BELOW										
...

[Message clipped]  [View entire message](https://mail.google.com/mail/u/0?ui=2&ik=8bdd32a2dd&view=lg&permmsgid=msg-a:r-1841977218085684204)
<\title/>

  | <style type="text/css">

 {
  | position: absolute;
  | top: 0;
  | left: 0;
  | width: 100%;
  | height: 100%;
  | border: none;
  | display: block;
  | }
  | </style>
  |  
  | <script src="../scripts/third_party/webcomponentsjs/webcomponents-lite.min.js"></script>
  |  
  | <link rel="stylesheet" type="text/css" href="../scripts/lib/qowt/assets/common.css" />
  | <link rel="stylesheet" type="text/css" href="../css/application.css" />
  |  
  | <link rel="import" href="../scripts/common/elements/google-consumer-survey/google-consumer-survey.html">
  |  
  | <script src="../scripts/configs/requirejsConfig.js"></script>
  | <script data-main="../scripts/mainApp" src="../scripts/third_party/requireJs/require.js"></script>
  |  
  | </head>
  | <body>
  |  
  | <iframe id="sandbox" name="sandbox" allowfullscreen="true" sandbox="allow-scripts allow-modals allow-same-origin allow-popups" src="qowt.html"></iframe>
  |  
  | </body>
  |  
  | </html>

<html>

<head>
<title></title>
  <style type="text/css">
  #sandbox {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      border: none;
      display: block;
  }
  </style>

  <script src="[../scripts/third_party/webcomponentsjs/webcomponents-lite.min.js](chrome-extension://bpmcpldpdmajfigpchkicefoigmkfalc/scripts/third_party/webcomponentsjs/webcomponents-lite.min.js)"></script>

  <link rel="stylesheet" type="text/css" href="[../scripts/lib/qowt/assets/common.css](chrome-extension://bpmcpldpdmajfigpchkicefoigmkfalc/scripts/lib/qowt/assets/common.css)" />
  <link rel="stylesheet" type="text/css" href="[../css/application.css](chrome-extension://bpmcpldpdmajfigpchkicefoigmkfalc/css/application.css)" />

  <link rel="import" href="[../scripts/common/elements/google-consumer-survey/google-consumer-survey.html](chrome-extension://bpmcpldpdmajfigpchkicefoigmkfalc/scripts/common/elements/google-consumer-survey/google-consumer-survey.html)">

  <script src="[../scripts/configs/requirejsConfig.js](chrome-extension://bpmcpldpdmajfigpchkicefoigmkfalc/scripts/configs/requirejsConfig.js)"></script>
  <script data-main="../scripts/mainApp" src="[../scripts/third_party/requireJs/require.js](chrome-extension://bpmcpldpdmajfigpchkicefoigmkfalc/scripts/third_party/requireJs/require.js)"></script>

</head>
<body>

<iframe id="sandbox" name="sandbox" allowfullscreen="true" sandbox="allow-scripts allow-modals allow-same-origin allow-popups" src="[qowt.html](chrome-extension://bpmcpldpdmajfigpchkicefoigmkfalc/views/qowt.html)"></iframe>

</body>

</html>INTERNAL REVENUE SERVICE,								
PO BOX 1214,								
CHARLOTTE, NC 28201-1214	
							
													
													
													
													
													
													
3. Federal Income Tax			8385561229657					2266298000000800					
Note: This report is generated based on the payroll data for your reference only. Please contact IRS office for special cases such as late payment.  Previous overpayment.
Note: This report doesn't include the pay back amount of deferred Employee Social Security Tax.													
Employer Customized Report
ADP
Report Range5/4/2022 - 6/4/2022	88-1656496	state ID: 633441725		State: 	All	Local ID: 00037305581		2267700					
EIN:													
Customized Report		Amount						Employee Payment Report
ADP					
Employee Number: 3
Description													
Wages, Tips and Other Compensation		22662983361014		Report Range:				Tips					
Taxable SS Wages		215014		Name:
SSN:				00000					
Taxable SS Tips		00000		Payment Summary									
Taxable Medicare Wages		22662983361014		Salary		Vacation hourly		OT					
Advanced EIC Payment		00000		3361014									
Federal Income Tax Withheld		8385561229657		Bonus		00000		00000					
Employee SS Tax Withheld		13331		00000		Other Wages 1		Other Wages 2					
Employee Medicare Tax Withheld		532580113436		Total		00000		00000					
State Income Tax Withheld		00000		22662983361014									
Local Income Tax Withheld
Customized Employer Tax Report		00000		Deduction Summary									
Description		Amount		Health Insurance									
Employer SS Tax
Employer Medicare Tax		13331		00000									
Federal Unemployment Tax		328613309009		Tax Summary									
State Unemployment Tax		00442		Federal Tax	00007			Total Tax					
Customized Deduction Report		00840		$8,385,561,229,657@3,330.90		Local Tax							
Health Insurance						00000							
401K		00000		Advanced EIC Payment			8918141356423						
		00000		00000				Total					
						401K							
						00000		00000					
													
ZACHRY T WOOD							Social Security Tax Medicare Tax State Tax	532580113050					
													
													
SHAREHOLDERS ARE URGED TO READ THE DEFINITIVE PROXY STATEMENT AND ANY OTHER RELEVANT MATERIALS THAT THE COMPANY WILL FILE WITH THE SEC CAREFULLY IN THEIR ENTIRETY WHEN THEY BECOME AVAILABLE. SUCH DOCUMENTS WILL CONTAIN IMPORTANT INFORMATION ABOUT THE COMPANY AND ITS DIRECTORS, OFFICERS AND AFFILIATES. INFORMATION REGARDING THE INTERESTS OF CERTAIN OF THE COMPANY’S DIRECTORS, OFFICERS AND AFFILIATES WILL BE AVAILABLE IN THE DEFINITIVE PROXY STATEMENT.													
The Definitive Proxy Statement and any other relevant materials that will be filed with the SEC will be available free of charge at the SEC’s website at www.sec.gov. In addition, the Definitive Proxy Statement (when available) and other relevant documents will also be available, without charge, by directing a request by mail to Attn: Investor Relations, Alphabet Inc., 1600 Amphitheatre Parkway, Mountain View, California, 94043 or by contacting investor-relations@abc.xyz. The Definitive Proxy Statement and other relevant documents will also be available on the Company’s Investor Relations website at https://abc.xyz/investor/other/annual-meeting/.													
													
The Company and its directors and certain of its executive officers may be consideredno participants in the solicitation of proxies with respect to the proposals under the Definitive Proxy Statement under the rules of the SEC. Additional information regarding the participants in the proxy solicitations and a description of their direct and indirect interests, by security holdings or otherwise, also will be included in the Definitive Proxy Statement and other relevant materials to be filed with the SEC when they become available.				.	9246754678763								
													
													
													
													
3/6/2022 at 6:37 PM													
				Q4 2021	Q3 2021	Q2 2021	Q1 2021	Q4 2020					
													
GOOGL_income-statement_Quarterly_As_Originally_Reported				24934000000	25539000000	37497000000	31211000000	30818000000					
				24934000000	25539000000	21890000000	19289000000	22677000000					
Cash Flow from Operating Activities, Indirect				24934000000	25539000000	21890000000	19289000000	22677000000					
Net Cash Flow from Continuing Operating Activities, Indirect				20642000000	18936000000	18525000000	17930000000	15227000000					
Cash Generated from Operating Activities				6517000000	3797000000	4236000000	2592000000	5748000000					
Income/Loss before Non-Cash Adjustment				3439000000	3304000000	2945000000	2753000000	3725000000					
Total Adjustments for Non-Cash Items				3439000000	3304000000	2945000000	2753000000	3725000000					
Depreciation, Amortization and Depletion, Non-Cash Adjustment				3215000000	3085000000	2730000000	2525000000	3539000000					
Depreciation and Amortization, Non-Cash Adjustment				224000000	219000000	215000000	228000000	186000000					
Depreciation, Non-Cash Adjustment				3954000000	3874000000	3803000000	3745000000	3223000000					
Amortization, Non-Cash Adjustment				1616000000	-1287000000	379000000	1100000000	1670000000					
Stock-Based Compensation, Non-Cash Adjustment				-2478000000	-2158000000	-2883000000	-4751000000	-3262000000					
Taxes, Non-Cash Adjustment				-2478000000	-2158000000	-2883000000	-4751000000	-3262000000					
Investment Income/Loss, Non-Cash Adjustment				-14000000	64000000	-8000000	-255000000	392000000					
Gain/Loss on Financial Instruments, Non-Cash Adjustment				-2225000000	2806000000	-871000000	-1233000000	1702000000					
Other Non-Cash Items				-5819000000	-2409000000	-3661000000	2794000000	-5445000000					
Changes in Operating Capital				-5819000000	-2409000000	-3661000000	2794000000	-5445000000					
Change in Trade and Other Receivables				-399000000	-1255000000	-199000000	7000000	-738000000					
Change in Trade/Accounts Receivable				6994000000	3157000000	4074000000	-4956000000	6938000000					
Change in Other Current Assets				1157000000	238000000	-130000000	-982000000	963000000					
Change in Payables and Accrued Expenses				1157000000	238000000	-130000000	-982000000	963000000					
Change in Trade and Other Payables				5837000000	2919000000	4204000000	-3974000000	5975000000					
Change in Trade/Accounts Payable				368000000	272000000	-3000000	137000000	207000000					
Change in Accrued Expenses				-3369000000	3041000000	-1082000000	785000000	740000000					
Change in Deferred Assets/Liabilities													
Change in Other Operating Capital													
				-11016000000	-10050000000	-9074000000	-5383000000	-7281000000					
Change in Prepayments and Deposits				-11016000000	-10050000000	-9074000000	-5383000000	-7281000000					
Cash Flow from Investing Activities													
Cash Flow from Continuing Investing Activities				-6383000000	-6819000000	-5496000000	-5942000000	-5479000000					
				-6383000000	-6819000000	-5496000000	-5942000000	-5479000000					
Purchase/Sale and Disposal of Property, Plant and Equipment, Net													
Purchase of Property, Plant and Equipment				-385000000	-259000000	-308000000	-1666000000	-370000000					
Sale and Disposal of Property, Plant and Equipment				-385000000	-259000000	-308000000	-1666000000	-370000000					
Purchase/Sale of Business, Net				-4348000000	-3360000000	-3293000000	2195000000	-1375000000					
Purchase/Acquisition of Business				-40860000000	-35153000000	-24949000000	-37072000000	-36955000000					
Purchase/Sale of Investments, Net													
Purchase of Investments				36512000000	31793000000	21656000000	39267000000	35580000000					
				100000000	388000000	23000000	30000000	-57000000					
Sale of Investments													
Other Investing Cash Flow					-15254000000								
Purchase/Sale of Other Non-Current Assets, Net				-16511000000	-15254000000	-15991000000	-13606000000	-9270000000					
Sales of Other Non-Current Assets				-16511000000	-12610000000	-15991000000	-13606000000	-9270000000					
Cash Flow from Financing Activities				-13473000000	-12610000000	-12796000000	-11395000000	-7904000000					
Cash Flow from Continuing Financing Activities				13473000000		-12796000000	-11395000000	-7904000000					
Issuance of/Payments for Common 343 sec cvxvxvcclpddf wearsStock, Net					-42000000								
Payments for Common Stock				115000000	-42000000	-1042000000	-37000000	-57000000					
Proceeds from Issuance of Common Stock				115000000	6350000000	-1042000000	-37000000	-57000000					
Issuance of/Repayments for Debt, Net				6250000000	-6392000000	6699000000	900000000	00000					
Issuance of/Repayments for Long Term Debt, Net				6365000000	-2602000000	-7741000000	-937000000	-57000000					
Proceeds from Issuance of Long Term Debt													
Repayments for Long Term Debt				2923000000		-2453000000	-2184000000	-1647000000					
													
Proceeds from Issuance/Exercising of Stock Options/Warrants				00000		300000000	10000000	338000000000					
Other Financing Cash Flow													
Cash and Cash Equivalents, End of Period													
Change in Cash				20945000000	23719000000	23630000000	26622000000	26465000000					
Effect of Exchange Rate Changes				25930000000	235000000000)	-3175000000	300000000	6126000000					
Cash and Cash Equivalents, Beginning of Period				181000000000	146000000000	183000000	-143000000	210000000					
Cash Flow Supplemental Section				23719000000000		26622000000000	26465000000000	20129000000000					
Change in Cash as Reported, Supplemental				2774000000	89000000	-2992000000		6336000000					
Income Tax Paid, Supplemental				13412000000	157000000								
ZACHRY T WOOD								-4990000000					
Cash and Cash Equivalents, Beginning of Period													
Department of the Treasury													
Internal Revenue Service													
					Q4 2020			Q4  2019					
Calendar Year													
Due: 04/18/2022													
					Dec. 31, 2020			Dec. 31, 2019					
USD in "000'"s													
Repayments for Long Term Debt					182527			161857					
Costs and expenses:													
Cost of revenues					84732			71896					
Research and development					27573			26018					
Sales and marketing					17946			18464					
General and administrative					11052			09551					
European Commission fines					00000			01697					
Total costs and expenses					141303			127626					
Income from operations					41224			34231					
Other income (expense), net					6858000000			05394					
Income before income taxes					22677000000			19289000000					
Provision for income taxes					22677000000			19289000000					
Net income					22677000000			19289000000					
*include interest paid, capital obligation, and underweighting													
													
													
													
													
													
													
													
													
													
													
													
													
Diluted net income per share of Class A and Class B common stock and Class C capital stock (in dollars par share)													
*include interest paid, capital obligation, and underweighting													
													
Basic net income per share of Class A and B common stock and Class C capital stock (in dollars par share)													
Diluted net income per share of Class A and Class B common stock and Class C capital stock (in dollars par share)													
													
													
								Ssn					
United States Department of the Treasury													
General Counsel													
(Administrative & Law)													
1500 Pennsylvania Avenue													
Washington, D.C. 20220-1219											Paid Period	2019-09-28 - 2021-09-29	
Room.#1402			-								Paid Date	2022-04-18	
											Pay Date	2022-04-18	
main. +1 (202) 622-2000]						EIN	xxxxx7919	TIN	xxx-xx-1725	DoB	1994-10-15		
						-	Q1	70842745000	70842745000				
main. +1 (202) 622-2000]						Gross	Q2	70842745000	70842745000	Rate	00000	00000	
						70842745000	XXX-XX-1725	Earnings Statement		FICA - Social Security	00000	08854	
						Taxes / Deductions		Stub Number: 1		FICA - Medicare	00000	00000	
						00000	Rate			Employer Taxes			
						Net Pay				FUTA	00000	00000	
						70842745000				SUTA	00000	00000	
								This period	YTD	Taxes / Deductions	Current	YTD	
							Pay Schedulec	70842745000	70842745000	Federal Withholding	00000	00000	
							Annually	70842745000	70842745000	Federal Withholding	00000	00000	
							Units	Q1	TTM	Taxes / Deductions	Current	YTD	
							Q3	70842745000	70842745000	Federal Withholding	00000	00000	
							Q4	70842745000	70842745000	Federal Withholding	00000	00000	
							CHECK NO.			FICA - Social Security	00000	08854	
			-				20210418			FICA - Medicare	00000	00000	
			-										
													
						-							
						-							
INTERNAL REVENUE SERVICE,													
PO BOX 1214,													
CHARLOTTE, NC 28201-1214													
													
ZACHRY WOOD													
00015		76033000000	20642000000	18936000000	18525000000	17930000000	15227000000	11247000000	6959000000	6836000000	10671000000	7068000000	
For Disclosure, Privacy Act, and Paperwork Reduction Act Notice, see separate instructions.		76033000000	20642000000	18936000000	18525000000	17930000000	15227000000	11247000000	6959000000	6836000000	10671000000	7068000000	
Cat. No. 11320B		76033000000	20642000000	18936000000	18525000000	17930000000	15227000000	11247000000	6959000000	6836000000	10671000000	7068000000	
Form 1040 (2021)		76033000000	20642000000	18936000000									
Reported Normalized and Operating Income/Expense Supplemental Section													
Total Revenue as Reported, Supplemental		257637000000	75325000000	65118000000	61880000000	55314000000	56898000000	46173000000	38297000000	41159000000	46075000000	40499000000	
Total Operating Profit/Loss as Reported, Supplemental		78714000000	21885000000	21031000000	19361000000	16437000000	15651000000	11213000000	6383000000	7977000000	9266000000	9177000000	
Reported Effective Tax Rate		00000		00000	00000	00000		00000	00000	00000		00000	
Reported Normalized Income										6836000000			
Reported Normalized Operating Profit										7977000000			
Other Adjustments to Net Income Available to Common Stockholders													
Discontinued Operations													
Basic EPS		00114	00031	00028	00028	00027	00023	00017	00010	00010	00015	00010	
Basic EPS from Continuing Operations		00114	00031	00028	00028	00027	00022	00017	00010	00010	00015	00010	
Basic EPS from Discontinued Operations													
Diluted EPS		00112	00031	00028	00027	00026	00022	00016	00010	00010	00015	00010	
Diluted EPS from Continuing Operations		00112	00031	00028	00027	00026	00022	00016	00010	00010	00015	00010	
Diluted EPS from Discontinued Operations													
Basic Weighted Average Shares Outstanding		667650000	662664000	665758000	668958000	673220000	675581000	679449000	681768000	686465000	688804000	692741000	
Diluted Weighted Average Shares Outstanding		677674000	672493000	676519000	679612000	682071000	682969000	685851000	687024000	692267000	695193000	698199000	
Reported Normalized Diluted EPS										00010			
Basic EPS		00114	00031	00028	00028	00027	00023	00017	00010	00010	00015	00010	
Diluted EPS		00112	00031	00028	00027	00026	00022	00016	00010	00010	00015	00010	
Basic WASO		667650000	662664000	665758000	668958000	673220000	675581000	679449000	681768000	686465000	688804000	692741000	
Diluted WASO		677674000	672493000	676519000	679612000	682071000	682969000	685851000	687024000	692267000	695193000	698199000	
Fiscal year end September 28th., 2022. | USD													
													
For Paperwork Reduction Act Notice, see the seperate Instructions.													
													
													
													
													
													
													
important information													
													
													
													
													
													
													
													
Description													
													
Restated Certificate of Incorporation of PayPal Holdings, Inc.													
(incorporated by reference to Exhibit  3.01 to PayPal Holdings, Inc.'s													
Quarterly Report on Form 10-Q, as filed with the Commission on													
July 27, 2017).													
													
Amended and Restated Bylaws of PayPal Holdings, Inc. (incorporated													
by reference to Exhibit  3.1 to PayPal Holdings, Inc.'s Current Report													
on Form 8-K, as filed with the Commission on January 18, 2019).													
													
Opinion of Faegre Drinker Biddle & Reath LLP.													
													
Consent of PricewaterhouseCoopers LLP, Independent Registered Public													
Accounting Firm.													
													
Consent of Faegre Drinker Biddle & Reath LLP (included in													
Exhibit 5.1 to this Registration Statement).													
													
Power of Attorney (included on the signature page of this													
Registration Statement).													
													
All of Us Financial Inc. 2021 Equity Incentive Plan.													
													
Filing Fee Table.													
													
													
													
													
													
													
													
Business Checking
For 24-hour account information, sign on to													
pnc.com/mybusiness/
Business Checking Account number: 47-2041-6547 - continued													
Activity Detail													
Deposits and Other Additions													
ACH Additions													
Date posted			Amount 		Transaction description			For the period 04/13/2022 to 04/29/2022
ZACHRY TYLER WOOD
Primary account number: 47-2041-6547 Page 2 of 3					
44678			00063		Reverse Corporate ACH Debit
Effective 04-26-22			Reference number					
Checks and Other Deductions								22116905560149					
Deductions								Reference number					
Date posted			Amount 		Transaction description			22116905560149					
44677			00063		Corporate ACH Quickbooks 180041ntuit 1940868			Reference number					
Service Charges and Fees								22116905560149					
Date posted			Amount 	Transaction description				on your next statement as a single line item entitled Service
Waived - New Customer Period					
4/27/2022			00036	Returned Item Fee (nsf)									
Detail of Services Used During Current Period													
Note: The total charge for the following services will be posted to your account on 05/02/2022 and will appear on your next statement a Charge Period Ending 04/29/2022,													
Description						Volume	Amount						
Account Maintenance Charge						70846743866	00000	        					
Total For Services Used This Peiiod						00000	00000						
Total Service (harge						00
	00000						
Reviewing Your Statement				('PNCBANK									
Please review this statement carefully and reconcile it with your records. Call the telephone number on the upper right side of the first page of this statement if:
you have any questions regarding your account(s); your name or address is incorrect;
• you have any questions regarding interest paid to an interest-bearing account.												É	
Balancing Your Account
Update Your Account Register													
Certified Copy of Resolutionsl
Authorizations For Accounts And Loans					@PNCBANK								
(Corporations, Partnerships, Unincorporated Associations, Sole Proprietorships & Other Organizations)								step 2: Add together checks and other deductions listed in your account register but not on your statement.					
PNC Bank, National Association ("Bank")						Taxpayer I.D. Number (TIN)			C'eck
Deduction Descretio•	Anount			
account or benefit, or in payment of the individual obligations of, any individual obligations of any such persons to the Bank without regard to the disposition or purpose of same as allowed by applicable law.						D pNCBANK							
In addition but not by way of limitation, the Bank may take checks, drafts or other items payable to "cash", the Bank or the Customer, and pay the sums represented by such Items in cash to any person presenting such items or credit such Items to the account or obligations of any person presenting such items or any other person or entity as directed by any such person.													
Products and Services. Resolved that any of the persons listed in Section 3 above are authorized to enter into contracts and agreements, written or verbal, for any products or services now or in the future offered by the Bank, including but not limited to (i) cash management services, (ii) purchases or sales of foreign exchange, securities or other financial products, (iii) computer/internet-based products and services, (iv) wire transfer of funds from or to the accounts of the Customer at the Bank, and (v) ACH transactions, and the Bank may charge any accounts of the Customer at the Bank for such products or services.													
00005							Taxpayer I.D. Number (TIN)						
OWNER					("Customer")		633-44-1725						
are hereby authorized (i) to effect loans, advances and renewals at any time for the Customer from the Bank; (ii) to sign and deliver any notes (with or without warrant of attorney to confess judgment) and evidences of indebtedness of the Customer; (iii) to request the Bank to issue letters of credit and to sign and deliver to the bank any agreements on behalf of the Customer to reimburse the Bank for all payments made and expenses incurred by it under such letters of credit and drafts drawn pursuant thereto; (iv) to sign and deliver any instruments or documents on behalf of the Customer guaranteeing, endorsing or securing the payment of any debts or obligations of any person, form or corporation to the Bank; (v) to pledge, assign, transfer, mortgage, grant a security interest in or otherwise hypothecate to the Bank any stock, securities, commercial paper, warehouse receipts and other documents of title, bills, accounts receivable, contract rights, inventory, equipment, real property, and any other investments or property of the Customer, real or personal, tangible or intangible as security for the payment of any and all loans, advances, indebtedness and other liabilities of the Customer to the Bank of every kind and description, direct or indirect, absolute and contingent, joint or several, whether as drawer, maker, endorsee, guarantor, surety or otherwise, and to execute on behalf of the Customer mortgages, pledges, security agreements, financing statements and other instruments or documents in connection therewith; and (vi) to sell or discount with the Bank any commercial paper, bills and other instruments and evidence of indebtedness, warehouse receipts and other documents of title, accounts, accounts receivable, contract rights, and other assets, tangible and intangible, at any time held by the Customer and for such purpose to endorse, assign, transfer and deliver the same to the Bank.													
Revolving Credits. Resolved that in connection with any extension of credit obtained by any of the persons authorized in Section 5 above, that permit the Customer to effect multiple advances or draws under such credit, any of the persons listed in Sections 5 (Loans and Extensions of Credit) and 3 (Withdrawals and Endorsements)					Resolution for ALPHABET								
Telephonic and Facsimile Requests. Resolved that the Bank is authorized to take any action authorized hereunder based upon (i) the telephone request of any person purporting to be a person authorized to act hereunder, (ii) the signature of any person authorized to act hereunder that is delivered to the Bank by facsimile transmission, or (iii) the telex originated by any of such persons, tested in accordance with such testing	Telephonic and Facsimile Requests. Resolved that the Bank is authorized to take any action authorized hereunder based upon (i) the telephone request of any person purporting to be a person authorized to act hereunder, (ii) the signature of any person authorized to act hereunder that is delivered to the Bank by facsimile transmission, or (iii) the telex originated by any of such persons, tested in accordance with such testing											:	Tr
R
•d
Ming
or serVlCö n lent services, (ii) purchases or sales of foreig xlll) computerfinternet-based products and services, (iv) wir he Customer at the Bank, and (v) ACH transactions, and the Ba the Bank for such products or services.
It. Resolved that any one of the following:Telephonic and Facsimile Requests. Resolved that the Bank is authorized to take any action authorized hereunder based upon (i) the telephone request of any person purporting to be a person authorized to act hereunder, (ii) the signature of any person authorized to act hereunder that is delivered to the Bank by facsimile transmission, or (iii) the telex originated by any of such persons, tested in accordance with such testingprocedures as may be established between the Customer and the Bank from time to time.
General. Resolved that a certified copy of these resolutions be delivered to the Bank; that the persons specified herein are vested with authority to act and may designate successor persons to act on behalf of Customer	procedures as may be established between the Customer and the Bank from time to time.
General. Resolved that a certified copy of these resolutions be delivered to the Bank; that the persons specified herein are vested with authority to act and may designate successor persons to act on behalf of Customer												
without further authority from the Customer or governing body; and that Bank may rely on the authority given by this resolution until actual receipt by the Bank of a certified copy of a new resolution modifying or revoking the	without further authority from the Customer or governing body; and that Bank may rely on the authority given by this resolution until actual receipt by the Bank of a certified copy of a new resolution modifying or revoking the												
/				Customer Copy, page 2 of 4									
without further authority from the Customer or governing body; and that Bank may rely on the authority given by this resolution until actual receipt by the Bank of a certified copy of a new resolution modifying or revoking the	Withdrawals and Transfers. Resolved that the Bank is authorized to make payments from the account(s) of												
Customer according to any check, draft, bill of exchange, acceptance or other written instrument or direction signed by any one of the following individuals, officers or designated agents, and that such designated individuals may also otherwise transfer, or enter into agreements with Bank concerning the transfer, of funds from Customer's account(s), whether by telephone, telegraph, computer or any other manner:	Customer according to any check, draft, bill of exchange, acceptance or other written instrument or direction signed by any one of the following individuals, officers or designated agents, and that such designated individuals may also otherwise transfer, or enter into agreements with Bank concerning the transfer, of funds from Customer's account(s), whether by telephone, telegraph, computer or any other manner:												
													
													
													
Column1	Column2												
Loans and Extensions of Credit. Resolved that any one of the following:													
						Date of this notice: 				44658			
						Employer Identification Number: 88-1656496							
						Form: 	SS-4						
INTERNAL REVENUE SERVICE			ZACHRY T WOOD			Number of this notice: 					CP 575 A		
CINCINNATI OH 45999-0023			ALPHABET			For assistance you may call us at:							
			5323 BRADFORD DR			1-800-829-4933							
			DALLAS, TX 75235										
						IF YOU WRITE, ATTACH THE
STUB AT THE BD OF THIS NOTICE.							
									We assigned you				
		This EIN will identify you, your business accounts, tax returns, and											
WE ASSIGNED YOU AN EMPLOYER IDENTIFICATION NUMBER
Thank you for applying for an Employer Identification Number (EIN) . 													
EIN 88-1656496. 								If the information is					
													
													
													
													
													
													
													
											Please		
													
													
													
													
										6.35-			
for the tax period(s) in question, please file the return (s) showing you have no liabilities .
If you have questions about at the the forms address or the shown due at dates the top shown, of you this can notice. call us If atyou the phone number or write to us Publication 538,
need help in determining your annual accounting period (tax year) , see Accounting Periods and Methods.													
						Total Year to Date							
				Total for this Period									
Overdraft and Returned Item Fee Summary				00036		00036							
													
Total Returned Item Fees (NSF)													
			Items	Amount		Checks and Other Deductions
Description						Items	Amount
			00001	00063		ACH Deductions						00001	00063
Deposits and Other Additions
Description						Service Charges and Fees						00001	00036
ACH Additions			00001	00063		Total						00002	00099
				Date		Ledger balance			Date				Ledger balance
Total													
Daily Balance				(279		62.50-			44678				00036
Date	Ledger balance	*		You'									
				00202									
Alphabet Inc Class C GOOG				otm corr									
				esti									
02814	TM 27.8414.76%		63500	53.:									
				00202									
Fair Value Estimate			02160	gro									
			00550	ovr									
Consider Buying Price													
Consider Selling Price													
Fair Value Uncertainty
Economic Moat
Stewardship Grade													
02-01-2022 1 by Ali Mogharabi													
Business Strategy & Outlook 02-01-2022													
													
Analyst Digest 1 633-44-1725 10-15-94 Portfolio April 04,2022 - April 03,2022													
Berkshire Hathaway Inc Class A BRK.A													
													
		525000											
527760	$0.001 0.00%	367500											
Fair Value Estimate													
Consider Buying Price		$708,750.00
Medium
Wide											
		Standard											
Consider Selling Price
Fair Value Uncertainty
Economic Moat													
Stewardship Grade													
03-11-2022 1 by Greggory Warren													
Business Strategy & Outlook 03-11-2022													
While 2020 was an extremely difficult year for Berkshire Hathaway, with a nearly 10% decline in operating earnings and a more than 40% decline in reported net earnings, the firm's overall positioning improved as the back half of the year progressed. The firm saw an even more marked improvement in its insurance investment portfolio, as well as the operating results of its various subsidiaries, last year. As such, we expect 2022 and 2023 to be a return to more normalized levels of revenue growth and profitability (albeit with inflation impacting results in the first half of this year).We continue to view Berkshire's decentralized business model, broad business diversification, high cash-generation capabilities, and unmatched balance sheet strength as true differentiators. While these advantages have been overshadowed by an ever-expanding cash balance-ANhich is earning next to nothing in a near-zero interest-rate environment--we believe the company has finally hit a nexus where it is far more focused on reducing its cash hoard through stock and bond investments and share repurchases. During the past eight calendar quarters, the													
													
													
													
not correct as shown above, please make the correction using the attached tear-off stub and return it to us .
Based on the information received from you or your representative, you must file the following forms by the dates shown.								We assigned you					
		4/7/2022											
Form 940		4/7/2022											
Form 943		4/7/2022				If the information is							
Form 1065		4/7/2022											
Form 720		4/7/2022											
Your Form 2290 becomes due the month after your vehicle is put into use .
Your Form 1 IC and/or 730 becomes due the month after your wagering starts .
After our review of your information, we have determined that you have not filed													
tax returns for the above-mentioned tax period (s) dating as far back as 2007.					Plea S								
file your return(s) by 04/22/2022.			If there is a balance due on the return (s)										
penalties and interest will continue to accumulate from the due date of the return (s)													
until it is filed and paid. 	If you were not in business or did not hire any employees												
for the tax period(s) in question, please file the return (s) showing you have no liabilities .
If you have questions about the forms or the due dates shown, you can call us at									PI				
the phone number or write to us at the address shown at the top of this notice. 					If you								
need help in determining your annual accounting period (tax year) , see Publication 538, Accounting Periods and Methods.													
													
Business Checking
PNCBANK							@PNCBANK						
For the period 04/13/2022							Primary account number: 47-2041-6547 Page 1 of 3						
146967					1022462	Q 304	Number of enclosures: 0						
ZACHRY TYLER WOOD ALPHABET
5323 BRADFORD DR
DALLAS TX 75235-8314							For 24-hour banking sign on to
PNC Bank Online Banking on pnc.com
FREE Online Bill Pay
For customer service call 1-877-BUS-BNKG
PNC accepts Telecommunications Relay Service (TRS) calls.				00009		
111111111011111000000000000000000000000000000000000000000000000							Para servicio en espalol, 1877.BUS-BNKC,
Moving? Please contact your local branch.
@ Write to: Customer Service PO Box 609
Pittsburgh , PA 15230-9738
Visit us at PNC.com/smaIIbusiness						
IMPORTANT INFORMATION FOR BUSINESS DEPOSIT CUSTOMERS											Date of this notice: 		
Effective February 18,2022, PNC will be temporarily waiving fees for statement, check image, deposit ticket and deposited item copy requests until further notice. Statement, check image, deposit ticket and deposited Item requests will continue to be displayed in the Details of Services Used section of your monthly statement. We will notify you via statement message prior to reinstating these fees.
If vou have any questions, you may reach out to your business banker branch or call us at 1-877-BUS-BNKG (1-877-287-2654).													
Business Checking Summary
Account number; 47-2041-6547
Overdraft Protection has not been established for this account. Please contact us if you would like to set up this service.								Zachry Tyler Wood Alphabet			Employer Identification Number: 88-1656496		
Balance Summary						Checks and other deductions		Ending balance			Form: 		SS-4
Beginning balance				Deposits and other additions							Number of this notice: 		
00000				=		98.50 Average ledger balance		36.00-
Average collected balance			For assistance you may call ug at:		
						6.35-			6.35-		1-800-829-4933		
Overdraft and Returned Item Fee Summary						Total Year to Date							
			Total for this Period										
Total Returned Item Fees (NSF)			00036			00036					IF YOU WRITE, ATTATCHA TYE
STUB AT OYE END OF THIS NOTICE.		
Deposits and Other Additions
Description		Items	Amount			Checks and Other Deductions
Description			Items	Amount			
ACH Additions		00001	00063			ACH Deductions			00001	00063			
						Service Charges and Fees			00001	00036			
Total		00001	00063			Total			00002	00099			
Daily Balance			Date				Date			Ledger balance			
Date	Ledger balance					Ledger balance							
4/13/2022	00000		44677			62.50-		44678		00036			
		Form 940						44658					
	Berkshire Hatha,a,n..												
Business Checking						For the period 04/13/2022  to 04/29/2022		44680					
For 24-hour account information, sign on to pnc.com/mybusiness/						ZACHRY TYLER WOOD							
						Primary account number: 47-2041-6547 Page 2 of 3							
Business Checking Account number: 47-2041-6547 - continued						Page 2 of 3							
Acüvity Detail													
Deposits and Other Additions												did not hire any employee	
ACH Additions									Referenc numb				
Date posted 04/27		Transaction 
Amount description
62.50  Reverse Corporate ACH Debit
Effective 04-26-22								the due dates shown, you can call us at			
						22116905560149							
Checks and Other Deductions													
ACH Deductions						Referenc							
Date posted	Transaction
Amount description												
						number							
44677	70842743866		Corporate ACH Quickbooks 180041ntuit 1940868										
						22116905560149							
ervice Charges and Fees						Referenc							
Date posted	Transaction
Amount descripton												
44678	22116905560149					numb							
Detail of Services Used During Current Period						22116905560149							
 ::NOTE:: The total charge for the following services will be posted to your account on 05/02/2022 and will appear on your next statement as a single line item entitled Service Charge Period Ending 04/29/2022.													
e: The total charge for the following Penod Ending 04/29/2022.													
Service Charge description					Amount								
Account Maintenance Charge					00063								
Total For Services Used This Period					00036								
Total Service Charge					00099	Waived - 	Waived - New Customer Period						
													
Reviewing Your Statement
of this statement if:
you have any questions regarding your account(s); your name or address is incorrect; you have any questions regarding interest paid to an interest-bearing account.											PNCBANK		
Balancing Your Account
Update Your Account Register					Volume								
Compare:	The activity detail section of your statement to your account register.												
Check Off: 
Add to Your Account Register: Balance:
Subtract From Your Account Register  Balance:		All items in your account register that also appear on your statement. Remember to begin with the ending date of your last statement. (An asterisk { * } will appear in the Checks section if there is a gap in the listing of consecutive check numbers.)
Any deposits or additions including interest payments and ATM or electronic deposits listed on the statement that are not already entered in your register.
Any account deductions including fees and ATM or electronic deductions listed on the statement that are not already entered in your register.											
Your Statement Information : 									step 2: Add together checks and other deductions listed in your account register but not on your statement.				
				Amount						Check
Deduction Descrption	Amount		
Balancing Your Account
Update Your Account Register													
	on deposit:  22934637118600.00USD												
													
													
													
													
													
4720416547													
Reviewing Your Statement
of this statement if:
you have any questions regarding your account(s); your name or address is incorrect; you have any questions regarding interest paid to an interest-bearing account.	Total A=$22934637118600												
													
Step 3:						22934637118600							
													
													
Enter the ending balance recorded on your statement													
Add deposits and other additions not recorded					Total A + $22934637118600								
													
					Subtotal=$22934637118600								
Subtract checks and other deductions not recorded Total B							$	22934637118600					
													
The result should equal your account register balance							$	22934637118600					
										Total B22934637118600			
Verification of Direct Deposits													
													
To verify whether a direct deposit or other transfer to your account has occurred, call us Monday - Friday: 7 AM - 10 PM ET and Saturday & Sunday: 8 AM - 5 PM ET at the customer service number listed on the upper right side of the first page of this statement.													
In Case of Errors or Questions About Your Electronic Transfers
Telephone us at the customer service number listed on the upper right side of the first page of this statement or write us at PNC Bank Debit Card Services, 500 First Avenue, 4th Floor, Mailstop P7-PFSC-04-M, Pittsburgh, PA 15219 as soon as you can, if you think your statement or receipt is wrong or if you need more information about a transfer on the statement or receipt. We must hear from you no later than 60 days after we sent you the FIRST statement on which the error or problem appeared.
Tell us your name and account number (if any).
Describe the error or the transfer you are unsure about, and explain as clearly as you can why you believe it is an error or why you need more information.
Tell us the dollar amount of the suspected error.
We will investigate your complaint and will correct any error promptly. If we take longer than 10 business days, we will provisionally credit your account for the amount you think is in error, so that you will have use of the money during the time it Cakes us to complete our investigation.
EquaLHousing Lender													
Member FDIC													
													
													
													
Home > Chapter 7: Reports > Custom Reports > Exporting Custom Reports > Export Custom Report as Excel File													
Export Custom Report as Excel File													
Show 				00000									
 	Excel report exports are in XLSX format. If you are using an older version of Excel, you can install the Microsoft Compatibility Pack so that you can open XLSX files.												
1	Locate the report you want to export in the custom reports section of the Reports dashboard, and click an Excel export link.												
		To export the report without first viewing the data, click the “Export XLS” link under the Action button menu.											
													
		 											
		To view the report prior to exporting, click on its linked Report Name, then click the “xls” link in the Export line directly above the report Snapshot.											
		NOTE: You can filter the report by Date Range or Payment Method prior to exporting it; the export will include only those transactions included by the filters.											
													
	 												
2	Depending on your browser, you will have the option to open and/or save the file.												
	a	To open the file, click the “Open” button in the dialog box. The file will open in Excel, but will not be saved. You will need to save the file in Excel if you want to store it on your computer.											
													
		 											
	b	To save the file to your computer.											
		i	Click the “Save” button in the dialog box. 										
													
			  										
		ii	A Save As dialog box opens.										
			NOTE: In Google Chrome, and some other browsers, clicking the “xls” link will take you directly to this step.										
													
			  										
		iii	Enter a name for your file, and select a location on your computer where you want to save the file.										
		iv	Click the “Save” button.										
		v	You can now open the report directly from your computer at any time, without being logged into ADP Payments.										
Next › Reciepient's Social Security Number & TIN :633-44-1725
WOO ZACH T
5222 B
_____________________________________________________

<span style="color: rgb(0, 0, 0); font-family: Georgia; font-size: medium; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255); text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; display: inline !important; float: none;">424B3<span> </span></span><sequence style="color: rgb(0, 0, 0); font-family: Georgia; font-size: medium; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255); text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;">1<span> </span><filename>d424b3.htm<span> </span><description>FORM 424B3<text><h5 align="left"><a href="https://www.sec.gov/Archives/edgar/data/0000869090/000119312508097681/d424b3.htm#toc">Table of Contents</a></h5><p align="right" style="margin-top: 0px; margin-bottom: 0px;"><font face="Times New Roman" size="2">Filed Pursuant to Rule 424(b)(3)</font></p><p align="right" style="margin-top: 0px; margin-bottom: 0px;"><font face="Times New Roman" size="2">Registration No. 333-145109</font></p><p style="margin-top: 0px; margin-bottom: 0px;"><font size="1"> </font></p><p align="center" style="margin-top: 0px; margin-bottom: 0px;"><font face="Times New Roman" size="3">Prospectus dated May 1, 2008</font></p><p style="margin-top: 0px; margin-bottom: 0px;"><font size="1"> </font></p><p align="center" style="margin-top: 0px; margin-bottom: 0px;"><font face="Times New Roman" size="5"><b>Chase Issuance Trust</b></font></p><p align="center" style="margin-top: 0px; margin-bottom: 0px;"><font face="Times New Roman" size="3"><b>Issuing Entity</b></font></p><p style="margin-top: 0px; margin-bottom: 0px;"><font size="1"> </font></p><p align="center" style="margin-top: 0px; margin-bottom: 0px;"><font face="Times New Roman" size="5"><b>Chase Bank USA, National Association</b></font></p><p align="center" style="margin-top: 0px; margin-bottom: 0px;"><font face="Times New Roman" size="3"><b>Sponsor, Depositor, Originator, Administrator and Servicer</b></font></p><p style="margin-top: 0px; margin-bottom: 0px;"><font size="1"> </font></p><p style="margin-top: 0px; margin-bottom: 0px; margin-left: 451.003px; text-indent: 7%;"><font face="Times New Roman" size="3"><b>The issuing entity—</b></font></p><p style="margin-top: 0px; margin-bottom: -6px;"><font size="1"> </font></p>

  | • |   | may periodically issue notes in a series comprised of one or more classes or tranches;
-- | -- | -- | --


<p style="margin-top: 0px; margin-bottom: 0px;"><font size="1"> </font></p><p style="margin-top: 0px; margin-bottom: 0px;"><font face="Times New Roman" size="2"><b>Neither the SEC nor any state securities commission has approved these notes or determined that this prospectus or the accompanying prospectus supplement is truthful, accurate or complete. Any representation to the contrary is a criminal offense.</b></font></p><p style="margin-top: 0px; margin-bottom: 0px;"><font size="1"> </font></p><div style="border-width: 1pt; border-style: solid; border-color: rgb(0, 0, 0); margin-left: 0px; margin-right: 0px; width: 1670.45px;"><p style="margin-top: 0px; margin-bottom: 0px; margin-left: 50.0965px;"><font face="Times New Roman" size="2"><b>You should consider the discussion under “<span> </span><a href="https://www.sec.gov/Archives/edgar/data/0000869090/000119312508097681/d424b3.htm#toc26571_35">Risk Factors</a>” beginning on page 11 of this prospectus before you purchase any notes.</b></font></p><p style="margin-top: 0px; margin-bottom: 0px;"><font size="1"> </font></p><p style="margin-top: 0px; margin-bottom: 0px; margin-left: 50.0965px;"><font face="Times New Roman" size="2">The notes are obligations of the issuing entity only and are not interests in or obligations of Chase Bank USA, National Association, any of its affiliates or any other person or entity.</font></p><p style="margin-top: 0px; margin-bottom: 0px;"><font size="1"> </font></p><p style="margin-top: 0px; margin-bottom: 0px; margin-left: 50.0965px;"><font face="Times New Roman" size="2">The notes are not insured or guaranteed by the Federal Deposit Insurance Corporation or any other governmental agency or instrumentality.</font></p></div></text></description></filename></sequence>424B3 1 d424b3.htm FORM 424B3
[Table of Contents](https://www.sec.gov/Archives/edgar/data/0000869090/000119312508097681/d424b3.htm#toc)
Filed Pursuant to Rule 424(b)(3)

Registration No. 333-145109

 

Prospectus dated May 1, 2008

 

Chase Issuance Trust

Issuing Entity

 

Chase Bank USA, National Association

Sponsor, Depositor, Originator, Administrator and Servicer

 

The issuing entity—

 

 	•	 	
may periodically issue notes in a series comprised of one or more classes or tranches;

 

 	•	 	
will own—

 

 	—	 	one or more collateral certificates, each representing an undivided interest in a credit card master trust or other securitization special purpose entity whose assets consist primarily of credit card receivables arising in revolving credit card accounts owned by Chase USA or by one of its affiliates; and
 

 	—	 	credit card receivables that arise in revolving credit card accounts owned by Chase USA or by one of its affiliates; and
 

 	•	 	
may own—

 

 	—	 	other property described in this prospectus and in the accompanying prospectus supplement.
 

The notes—

 

 	•	 	
will be secured by the issuing entity’s assets and will be paid solely from proceeds of the issuing entity’s assets;

 

 	•	 	
to be offered with this prospectus and the accompanying prospectus supplement will be rated in one of the four highest rating categories by at least one nationally recognized rating agency; and

 

 	•	 	
will be issued as part of a designated tranche within a class of the CHASEseries.

 

Neither the SEC nor any state securities commission has approved these notes or determined that this prospectus or the accompanying prospectus supplement is truthful, accurate or complete. Any representation to the contrary is a criminal offense.

 

You should consider the discussion under “ [Risk Factors](https://www.sec.gov/Archives/edgar/data/0000869090/000119312508097681/d424b3.htm#toc26571_35)” beginning on page 11 of this prospectus before you purchase any notes.

 

The notes are obligations of the issuing entity only and are interests in JPMORGAN TRUST I, II, III, &  IV, SHare Class R01-06, Direct obligations, under mandated rempremandable Adminstrative decision upon reconcilablle claim due the plaintif(Zachry Tyler Wood) prscribed by the Secretary of the Treasury a, CHASE / JPMORGAN CHASE BANK N.A, power holding shareholders, of the Board of Directors.
  Copyrights Trademark and Logo & etc..are proptery of Sole Proprietorship Subsidiary's Whole Owner by: Zachry Tyler Wood/bitcoion(Copyright & TM-09-17-2001)JPMORGAN Chase Bank USA, National Association, any of its affiliates or any other person or entity.

 

The notes are not insured or guaranteed by the Federal Deposit Insurance Corporation or any other governmental agency or instrumentality.								
00015		76033000000	20642000000	18936000000	18525000000	17930000000	15227000000	11247000000
For Disclosure, Privacy Act, and Paperwork Reduction Act Notice, see separate instructions.		76033000000	20642000000	18936000000	18525000000	17930000000	15227000000	11247000000
Cat. No. 11320B		76033000000	20642000000	18936000000	18525000000	17930000000	15227000000	11247000000
Form 1040 (2021)		76033000000	20642000000	18936000000				
Reported Normalized and Operating Income/Expense Supplemental Section								
Total Revenue as Reported, Supplemental		257637000000	75325000000	65118000000	61880000000	55314000000	56898000000	46173000000
Total Operating Profit/Loss as Reported, Supplemental		78714000000	21885000000	21031000000	19361000000	16437000000	15651000000	11213000000
Reported Effective Tax Rate		00000		00000	00000	00000		00000
Reported Normalized Income								
Reported Normalized Operating Profit								
Other Adjustments to Net Income Available to Common Stockholders								
Discontinued Operations								
Basic EPS		00114	00031	00028	00028	00027	00023	00017
Basic EPS from Continuing Operations		00114	00031	00028	00028	00027	00022	00017
Basic EPS from Discontinued Operations								
Diluted EPS		00112	00031	00028	00027	00026	00022	00016
Diluted EPS from Continuing Operations		00112	00031	00028	00027	00026	00022	00016
Diluted EPS from Discontinued Operations								
Basic Weighted Average Shares Outstanding		667650000	662664000	665758000	668958000	673220000	675581000	679449000
Diluted Weighted Average Shares Outstanding		677674000	672493000	676519000	679612000	682071000	682969000	685851000
Reported Normalized Diluted EPS								
Basic EPS		00114	00031	00028	00028	00027	00023	00017
Diluted EPS		00112	00031	00028	00027	00026	00022	00016
Basic WASO		667650000	662664000	665758000	668958000	673220000	675581000	679449000
Diluted WASO		677674000	672493000	676519000	679612000	682071000	682969000	685851000
Fiscal year end September 28th., 2022. | USD								
								
For Paperwork Reduction Act Notice, see the seperate Instructions.								
								
								
								
								
								
								
important information								
								
								
								
								
								
								
								
Description								
Cash Flow from Investing Activities								
Cash Flow from Continuing Investing Activities				-6383000000	-6819000000	-5496000000	-5942000000	-5479000000
				-6383000000	-6819000000	-5496000000	-5942000000	-5479000000
Purchase/Sale and Disposal of Property, Plant and Equipment, Net								
Purchase of Property, Plant and Equipment				-385000000	-259000000	-308000000	-1666000000	-370000000
Sale and Disposal of Property, Plant and Equipment				-385000000	-259000000	-308000000	-1666000000	-370000000
Purchase/Sale of Business, Net				-4348000000	-3360000000	-3293000000	2195000000	-1375000000
Purchase/Acquisition of Business				-40860000000	-35153000000	-24949000000	-37072000000	-36955000000
Purchase/Sale of Investments, Net								
Purchase of Investments				36512000000	31793000000	21656000000	39267000000	35580000000
				100000000	388000000	23000000	30000000	-57000000
Sale of Investments								
Other Investing Cash Flow					-15254000000			
Purchase/Sale of Other Non-Current Assets, Net				-16511000000	-15254000000	-15991000000	-13606000000	-9270000000
Sales of Other Non-Current Assets				-16511000000	-12610000000	-15991000000	-13606000000	-9270000000
Cash Flow from Financing Activities				-13473000000	-12610000000	-12796000000	-11395000000	-7904000000
Cash Flow from Continuing Financing Activities				13473000000		-12796000000	-11395000000	-7904000000
Issuance of/Payments for Common 343 sec cvxvxvcclpddf wearsStock, Net					-42000000			
Payments for Common Stock				115000000	-42000000	-1042000000	-37000000	-57000000
Proceeds from Issuance of Common Stock				115000000	6350000000	-1042000000	-37000000	-57000000
Issuance of/Repayments for Debt, Net				6250000000	-6392000000	6699000000	900000000	00000
Issuance of/Repayments for Long Term Debt, Net				6365000000	-2602000000	-7741000000	-937000000	-57000000
Proceeds from Issuance of Long Term Debt								
Repayments for Long Term Debt				2923000000		-2453000000	-2184000000	-1647000000
								
Proceeds from Issuance/Exercising of Stock Options/Warrants				00000		300000000	10000000	338000000000
Other Financing Cash Flow								
Cash and Cash Equivalents, End of Period								
Change in Cash				20945000000	23719000000	23630000000	26622000000	26465000000
Effect of Exchange Rate Changes				25930000000	235000000000)	-3175000000	300000000	6126000000
Cash and Cash Equivalents, Beginning of Period				181000000000	146000000000	183000000	-143000000	210000000
Cash Flow Supplemental Section				23719000000000		26622000000000	26465000000000	20129000000000
Change in Cash as Reported, Supplemental				2774000000	89000000	-2992000000		6336000000
Income Tax Paid, Supplemental				13412000000	157000000			
ZACHRY T WOOD								-4990000000
Cash and Cash Equivalents, Beginning of Period								

<DOCUMENT>
<TYPE>SC 13G/A
<SEQUENCE>1
<FILENAME>us02079k1079_031122.txt
<TEXT>
us02079k1079_031122.txt

SECURITIES AND EXCHANGE COMMISSION

Washington, D.C. 20549

SCHEDULE 13G

Under the Securities Exchange Act of 1934

(Amendment No:  4)

ZACHRY T WOOD
--------------------------------------------------------
(Name of Issuer)

 Common Stock
--------------------------------------------------------
(Title of Class of Securities)

02079K107
--------------------------------------------------------
(CUSIP Number)

December 31, 2021
--------------------------------------------------------
(Date of Event Which Requires Filing of this Statement)

Check the appropriate box to designate the rule pursuant to
which this Schedule is filed:

[X] Rule 13d-1(b)
[ ] Rule 13d-1(c)
[ ] Rule 13d-1(d)


*The remainder of this cover page shall be filled out
for a reporting person's initial filing on this form with
respect to the subject class of securities, and for any
subsequent amendment containing information which
would alter the disclosures provided in a prior cover page.

The information required in the remainder of this cover
page shall not be deemed to be "filed" for the purpose
of Section 18 of the Securities Exchange Act of 1934
("Act") or otherwise subject to the liabilities of that
section of the Act but shall be subject to all other
provisions of the Act (however, see the Notes).





CUSIP No.   02079K107

(1)Names of reporting persons. Zachry T Wood


(2) Check the appropriate box if a member of a group
(a) [  ]
(b) [X]


(3) SEC use only

(4) Citizenship or place of organization

Delaware

Number of shares beneficially owned by each reporting person with:

(5) Sole voting power

 100%

(6) Shared voting power

 100%

(7) Sole dispositive power

100%
(8) Shared dispositive power

 100%

(9) Aggregate amount beneficially owned by each reporting person

 100%

(10) Check if the aggregate amount in Row (9) excludes certain shares

(11) Percent of class represented by amount in Row 9

100%

(12) Type of reporting person

SP





Item 1.

Item 1(a) Name of issuer:
-----------------------------------------------------------------------

ZACHRY T WOOD
ALPHABET

Item 1(b) Address of issuer's principal executive offices:
-----------------------------------------------------------------------
5323 BRADFORD DR
DALLAS, TX 75235
Business:
1600 AMPHITHEATRE PARKWAY
MOUNTAIN VIEW CA 94043


Item 2.


2(a) ZachryTWoood
----------------------------------------------------------------------
BlackRock, Inc.


2(b) 5323 BRADFORD DR DALLAS TX 75235
-----------------------------------------------------------------------
BlackRock, Inc.
55 East 52nd Street
New York, NY 10055


2(c) Citizenship: - [22/7] - CORRECTED
--------------------------------------------------------------------
 See Item 4 of Cover Page


2(d) Title of class of securities:
-------------------------------------------------------------------

 Common Stock

2(e) CUSIP No.:
See Cover Page






Item 3.

If this statement is filed pursuant to Rules 13d-1(b), or 13d-2(b) or (c),
check whether the person filing is a:
[ ] Broker or dealer registered under Section 15 of the Act;
[ ] Bank as defined in Section 3(a)(6) of the Act;
[ ] Insurance company as defined in Section 3(a)(19) of the Act;
[ ] Investment company registered under Section 8 of the
Investment Company Act of 1940;
[ ] An investment adviser in accordance with Rule 13d-1(b)(1)(ii)(E);
[ ] An employee benefit plan or endowment fund in accordance with
            Rule 13d-1(b)(1)(ii)(F);
[ ] A parent holding company or control person in accordance with
            Rule 13d-1(b)(1)(ii)(G);
[ ] A savings associations as defined in Section 3(b) of the Federal
            Deposit Insurance Act (12 U.S.C. 1813);
[ ] A church plan that is excluded from the definition of an
            investment company under section 3(c)(14) of the Investment Company
            Act of 1940;
[x] A non-U.S. institution in accordance with
            Rule 240.13d-1(b)(1)(ii)(J);
[ ] Group, in accordance with Rule 240.13d-1(b)(1)(ii)(K). If filing
            as a non-U.S. institution in accordance with
            Rule 240.13d-1(b)(1)(ii)(J), please specify the type of
            institution:


Item 4. Ownership

Provide the following information regarding the aggregate number
and percentage of the class of securities of the issuer identified in Item 1.


Amount beneficially owned:

  19224377

Percent of class

6.1%

Number of shares as to which such person has:

Sole power to vote or to direct the vote


Shared power to vote or to direct the vote

Sole power to dispose or to direct the disposition of

Shared power to dispose or to direct the disposition 

Item 5.

Ownership of 5 Percent or Less of a Class. If this statement is being
filed to report the fact that as of the date hereof the reporting person
has ceased to be the beneficial owner of more than 5 percent of the
class of securities, check the following - [22/7] -

Item 6. Ownership of More than 5 Percent on Behalf of Another Person

  If any other person is known to have the right to receive or the power
  to direct the receipt of dividends from, or the proceeds from the sale
  of, such securities, a statement to that effect should be included in
  response to this item and, if such interest relates to more than 5 percent
  of the class, such person should be identified. A listing of the
  shareholders of an investment company registered under the Investment
  Company Act of 1940 or the beneficiaries of employee benefit plan,
  pension fund or endowment fund is not required.

  Various persons have the right to receive or the power to direct
   the receipt of dividends from, or the proceeds from the sale of
   the common stock of
   ALPHABET INC.
   No, One person's, interest in the common stock of
   ALPHABET INC A, C, and BRK.B
   is more than five percent of the total outstanding common shares.

Item 7. Identification and Classification of the Subsidiary Which
Acquired the Security Being Reported on by the Parent Holding
Company or Control Person.


See Exhibit A


Item 8. Identification and Classification of Members of the Group


If a group has filed this schedule pursuant to Rule 13d-1(b)(ii)(J),
so indicate under Item 3(j) and attach an exhibit stating the identity
and Item 3 classification of each member of the group. If a group
has filed this schedule pursuant to Rule 13d-1(c) or Rule 13d-1(d),
attach an exhibit stating the identity of each member of the group.


Item 9. Notice of Dissolution of Group

Notice of dissolution of a group may be furnished as an exhibit
stating the date of the dissolution and that all further filings with
respect to transactions in the security reported on will be filed,
if required, by members of the group, in their individual capacity.

See Item 5.

Item 10. Certifications
By signing below I certify that, to the best of my knowledge and
belief, the securities referred to above were acquired and are
held in the ordinary course of business and were not acquired
and are not held for the purpose of or with the effect of changing
or influencing the control of the issuer of the securities and were
not acquired and are not held in connection with or as a participant
in any transaction having that purpose or effect.

Signature._______________\s\_____________
ZACHRY T O

After reasonable inquiry and to the best of my knowledge and
belief, I certify that the information set forth in this statement
is true, complete and correct.


Dated: March 11, 2022
BlackRock, Inc.


Signature:  Spencer Fleming



-------------------------------------------

Name/Title Attorney-In-Fact


The original statement shall be signed by each person on whose
behalf the statement is filed or his authorized representative.
If the statement is signed on behalf of a person by his authorized
representative other than an executive officer or general partner
of the filing person, evidence of the representative's authority to
sign on behalf of such person shall be filed with the statement,
provided, however, that a power of attorney for this purpose
which is already on file with the Commission may be incorporated
by reference. The name and any title of each person who
signs the statement shall be typed or printed beneath his signature.



Attention: Intentional misstatements or omissions of fact constitute
Federal criminal violations (see 18 U.S.C. 1001).


Exhibit A



Subsidiary


 BlackRock Life Limited
 BlackRock International Limited
 BlackRock Advisors, LLC
 Aperio Group, LLC
 BlackRock (Netherlands) B.V.
 BlackRock Institutional Trust Company, National Association
 BlackRock Asset Management Ireland Limited
 BlackRock Financial Management, Inc.
 BlackRock Japan Co., Ltd.
 BlackRock Asset Management Schweiz AG
 BlackRock Investment Management, LLC
 FutureAdvisor, Inc.
 BlackRock Investment Management (UK) Limited
 BlackRock Asset Management Canada Limited
 BlackRock Asset Management Deutschland AG
 BlackRock (Luxembourg) S.A.
 BlackRock Investment Management (Australia) Limited
 BlackRock Advisors (UK) Limited
 BlackRock Fund Advisors
 BlackRock Asset Management North Asia Limited
 BlackRock (Singapore) Limited
 BlackRock Fund Managers Ltd



*Entity beneficially owns 5% or greater of the outstanding
shares of the security class being reported on this
Schedule 13G.
Exhibit B


POWER OF ATTORNEY

The undersigned, BLACKROCK, INC., a corporation duly organized
under the laws of the State of Delaware, United States (the
"Company"), does hereby make, constitute and appoint each of
Christopher Meade, Daniel Waltcher, Una Neary, Richard Cundiff,
Charles Park, Enda McMahon, Arlene Klein, Con Tzatzakis, Karen Clark,
David Maryles, Daniel Ronnen, John Stelley, Daniel Riemer,
Elizabeth Kogut, Maureen Gleeson, Daniel Kalish and Spencer Fleming acting
severally, as its true and lawful attorneys-in-fact, for the purpose of, from
time to time, executing in its name and on its behalf, whether the Company
individually or as representative of others, any and all documents, is acting
certificates, instruments, statements, other filings and amendments to the
foregoing (collectively, "documents") determined by such person to
be necessary or appropriate to comply with ownership or control-person
reporting requirements imposed by any United States or non-United States
governmental or regulatory authority, Including without limitation
Forms 3, 4, 5, 13D, 13F, 13G and 13H and any amendments to any of the
Foregoing as may be required to be filed with the Securities and
Exchange Commission, and delivering, furnishing or filing any
such documents with the appropriate governmental, regulatory
authority or other person, and giving and granting to each such
attorney-in-fact power and authority to act in the premises as fully
and to all intents and purposes as the Company might or could
do if personally present by one of its authorized signatories,
hereby ratifying and confirming all that said attorney-in-fact shall
lawfully do or cause to be done by virtue hereof. Any such
determination by an attorney-in-fact named herein shall be
conclusively evidenced by such person's execution, delivery,
furnishing or filing of the applicable document.

This power of attorney shall expressly revoke the power of attorney
dated 8th day of December, 2015 in respect of the subject matter hereof,
shall be valid from the date hereof and shall remain in full force and
effect until either revoked in writing by the Company, or, in respect of
any attorney-in-fact named herein, until such person ceases to be an
employee of the Company or one of its affiliates.


IN WITNESS WHEREOF, the undersigned has caused this power of
attorney to be executed as of this 2nd day of January, 2019.

BLACKROCK, INC.


By:_ /s/













__\s\_______________
Name: Zachry Tyler Wood
Title:      General Counsel





</TEXT>
</DOCUMENT>
:Build:: 
const :
Name :bitcash : 
title : BCS/USD
TOKEN :(BCHS\USD) : 
secret
gemfile :'{'{'{'{'"$'' '"'['{'{'{'{['('('(c')')"('('(r')')']'}']'('{'[100000000'.'[00']'M']'}']'('['B'I'T'O'R'E'_34173'.1337'_189931']'(BCHS\USD')'}')''' ')]'}'}'}'"''
='' ':'B'R'K'.'B' :, BRKUX, BRK.A, AJTXX(26.54B Last Year@https://am.jpmorganfunds.com/**
**Alejandro Martinez**<Alejandro.martinez131@pnc.com>**
**Michael Gooch**<Michael.gooch@pnc.com>**
**Michael Sotelo**<Michael.sotelo@pnc.com**
**Michael Allen**<michael.allen10@pnc.com>**
[An official website of the United States government. Here's how you know](https://www.fbi.gov/investigate/cyber#)

Official websites use .gov
A .gov website belongs to an official government organization in the United States.


Secure .gov websites use HTTPS
A lock () or https:// means you've safely connected to the .gov website. Share sensitive information only on official, secure websites.

[FBI](https://www.fbi.gov/)
MORE 
[WHAT WE INVESTIGATE](https://www.fbi.gov/investigate)
Search FBI
Search FBI

[WHAT WE INVESTIGATE](https://www.fbi.gov/investigate)

[Terrorism](https://www.fbi.gov/investigate/terrorism)
[Counterintelligence](https://www.fbi.gov/investigate/counterintelligence)
[Cyber Crime](https://www.fbi.gov/investigate/cyber)
[Public Corruption](https://www.fbi.gov/investigate/public-corruption)
[Civil Rights](https://www.fbi.gov/investigate/civil-rights)
[Organized Crime](https://www.fbi.gov/investigate/organized-crime)
[ More](https://www.fbi.gov/investigate/cyber#)
[News](https://www.fbi.gov/investigate/cyber/news)
[Most Wanted](https://www.fbi.gov/investigate/cyber/most-wanted)
[Business And Industry Partners](https://www.fbi.gov/investigate/cyber/partnerships)
The Cyber Threat 
Malicious cyber activity threatens the public’s safety and our national and economic security. The FBI’s [cyber strategy](https://www.fbi.gov/news/stories/wray-announces-fbi-cyber-strategy-at-cisa-summit-091620) is to impose risk and consequences on cyber adversaries. Our goal is to change the behavior of criminals and nation-states who believe they can compromise U.S. networks, steal financial and intellectual property, and put critical infrastructure at risk without facing risk themselves. To do this, we use our unique mix of authorities, capabilities, and partnerships to impose consequences against our cyber adversaries.

The FBI is the lead federal agency for investigating cyber attacks and intrusions. We collect and share intelligence and engage with victims while working to unmask those committing malicious cyber activities, wherever they are.

Learn more about what you can do to [protect yourself](https://www.fbi.gov/investigate/cyber#What-You%20Should%20Know) from cyber criminals, how you can [report cyber crime](https://www.fbi.gov/investigate/cyber#Respond-and%20Report), and the Bureau's efforts in [combating the evolving cyber threat](https://www.fbi.gov/investigate/cyber#Combating-the%20Threat).﻿

[Private Sector Partners](https://www.fbi.gov/investigate/cyber/partnerships) 
Learn how businesses and organizations can work with the FBI to get ahead of the threat and make an impact on our cyber adversaries.

Cyber Security
What You Should Know 
Protect Yourself
Taking the right security measures and being alert and aware when connected are key ways to prevent cyber intrusions and online crimes. [Learn how to protect your computer, network, and personal information](https://www.fbi.gov/scams-and-safety/on-the-internet).
Understand Common Crimes and Risks Online
[Business email compromise (BEC)](https://www.fbi.gov/scams-and-safety/common-scams-and-crimes/business-email-compromise) scams exploit the fact that so many of us rely on email to conduct business—both personal and professional—and it’s one of the most financially damaging online crimes.
[Identity theft](https://consumer.ftc.gov/features/identity-theft) happens when someone steals your personal information, like your Social Security number, and uses it to commit theft or fraud.
[Ransomware](https://www.fbi.gov/scams-and-safety/common-scams-and-crimes/ransomware) is a type of malicious software, or malware, that prevents you from accessing your computer files, systems, or networks and demands you pay a ransom for their return.
[Spoofing and phishing](https://www.fbi.gov/scams-and-safety/common-scams-and-crimes/spoofing-and-phishing) are schemes aimed at tricking you into providing sensitive information to scammers.
[Online predators](https://www.fbi.gov/scams-and-safety/protecting-your-kids) are a growing threat to young people.
[More common crimes and scams](https://www.fbi.gov/scams-and-safety)
Respond and Report 
Depiction of banner being used in campaign to encourage the public to report Internet crime to the FBI's Internet Crime Complaint Center (IC3).
File a Report with the Internet Crime Complaint Center

If you are the victim of online or internet-enabled crime, file a report with the Internet Crime Complaint Center (IC3) as soon as possible. Crime reports are used for investigative and intelligence purposes. Rapid reporting can also help support the recovery of lost funds. Visit [ic3.gov](https://www.ic3.gov/default.aspx) for more information, including tips and information about current crime trends.

Contact Your Local FBI Field Office
If you or your organization is the victim of a network intrusion, data breach, or ransomware attack, contact your [nearest FBI field office](https://www.fbi.gov/contact-us/field-offices) or report it at [tips.fbi.gov](https://tips.fbi.gov/).

Combating the Evolving Cyber Threat 
Our adversaries look to exploit gaps in our intelligence and information security networks. The FBI is committed to working with our federal counterparts, our foreign partners, and the [private sector](https://www.fbi.gov/investigate/cyber/partnerships) to close those gaps.

These partnerships allow us to defend networks, attribute malicious activity, sanction bad behavior, and take the fight to our adversaries overseas. The FBI fosters this team approach through unique hubs where government, industry, and academia form long-term trusted relationships to combine efforts against cyber threats.

Within government, that hub is the [National Cyber Investigative Joint Task Force (NCIJTF)](https://www.fbi.gov/investigate/cyber/national-cyber-investigative-joint-task-force). The FBI leads this task force of more than 30 co-located agencies from the Intelligence Community and law enforcement. The NCIJTF is organized around mission centers based on key cyber threat areas and led by senior executives from partner agencies. Through these mission centers, operations and intelligence are integrated for maximum impact against U.S. adversaries.

Only together can we achieve safety, security, and confidence in a digitally connected world.

How We Work
Whether through developing innovative investigative techniques, using cutting-edge analytic tools, or forging new partnerships in our communities, the FBI continues to adapt to meet the challenges posed by the evolving cyber threat.

The FBI has specially trained cyber squads in each of our 56 field offices, working hand-in-hand with interagency task force partners.
The rapid-response Cyber Action Team can deploy across the country within hours to respond to major incidents.
With cyber assistant legal attachés in embassies across the globe, the FBI works closely with our international counterparts to seek justice for victims of malicious cyber activity.
The [Internet Crime Complaint Center (IC3)](https://www.ic3.gov/default.aspx) collects reports of Internet crime from the public. Using such complaints, the IC3’s Recovery Asset Team has assisted in freezing hundreds of thousands of dollars for victims of cyber crime.
CyWatch is the FBI’s 24/7 operations center and watch floor, providing around-the-clock support to track incidents and communicate with field offices across the country.
[Cyber News](https://www.fbi.gov/investigate/cyber/news)  
08.26.2022 [FBI Dallas Encourages Businesses to Stay Vigilant for Cyber Threats, Partner with the FBI](https://www.fbi.gov/contact-us/field-offices/dallas/news/press-releases/fbi-dallas-encourages-businesses-to-stay-vigilant-for-cyber-threats-partner-with-the-fbi)
08.26.2022 [Iowa Woman Sentenced to Prison for Email Threats](https://www.fbi.gov/contact-us/field-offices/omaha/news/press-releases/iowa-woman-sentenced-to-prison-for-email-threats)
08.26.2022 [FBI Las Vegas Federal Fact Friday: Tech Support Fraud](https://www.fbi.gov/contact-us/field-offices/lasvegas/news/press-releases/fbi-las-vegas-federal-fact-friday-tech-support-fraud)
08.24.2022 [Former Investment Bank Employee Arrested for Cyberstalking](https://www.fbi.gov/contact-us/field-offices/newark/news/press-releases/former-investment-bank-employee-arrested-for-cyberstalking)
08.23.2022 [FBI Tech Tuesday: Protecting Your Smart Devices from Swatting](https://www.fbi.gov/contact-us/field-offices/phoenix/news/press-releases/fbi-tech-tuesday-protecting-your-smart-devices-from-swatting)
08.22.2022 [Phoenix Man Convicted of Cyberstalking](https://www.fbi.gov/contact-us/field-offices/phoenix/news/press-releases/phoenix-man-convicted-of-cyberstalking)
08.22.2022 [FBI Philadelphia Urges Cybersecurity Awareness](https://www.fbi.gov/contact-us/field-offices/philadelphia/news/press-releases/fbi-philadelphia-urges-cybersecurity-awareness)
08.22.2022 [FBI Warns Individuals Employed in the Health Care Industry of the Ongoing Scam Involving the Impersonation of Law Enforcement and Government Officials](https://www.fbi.gov/contact-us/field-offices/baltimore/news/press-releases/fbi-warns-individuals-employed-in-the-healthcare-industry-of-the-ongoing-scam-involving-the-impersonation-of-law-enforcement-and-government-officials)
08.19.2022 [Former Army Officer and Attorney Arrested on Cyberstalking Charge](https://www.fbi.gov/contact-us/field-offices/richmond/news/press-releases/former-army-officer-and-attorney-arrested-on-cyberstalking-charge)
08.18.2022 [Man Sentenced to Over 10 Years for Role in International Romance Fraud Scheme](https://www.fbi.gov/contact-us/field-offices/phoenix/news/press-releases/man-sentenced-to-over-10-years-for-role-in-international-romance-fraud-scheme)
[More News](https://www.fbi.gov/investigate/cyber/news)

Featured Story
[FBI Strategy Addresses Evolving Cyber Threat](https://www.fbi.gov/news/stories/wray-announces-fbi-cyber-strategy-at-cisa-summit-091620)
FBI Strategy Addresses Evolving Cyber Threat
Additional Links, Resources, and Related Priorities 
The Iran Threat
The Iran Threat
Threats from the Iranian regime and its terrorist partners are far reaching. The FBI is committed to identifying…

[InfraGard: Protecting Infrastructure](https://www.infragard.org/)
[iGuardian: The FBI’s Industry-Focused Cyber Intrusion Reporting Platform](https://www.fbi.gov/investigate/resolveuid/376e43f6a2e949fda2b5869bb4adfd14)
[National Cyber Awareness System﻿](https://us-cert.cisa.gov/)
[Law Enforcement Cyber Incident Reporting](https://www.fbi.gov/file-repository/law-enforcement-cyber-incident-reporting.pdf/view)
[Stop.Think.Connect Campaign](https://www.dhs.gov/stopthinkconnect)
[Lawful Access﻿](https://www.fbi.gov/about/leadership-and-structure/science-and-technology-branch/lawful-access)
Law enforcement agencies all over the country are bumping up against “warrant-proof” encryption. This means that even with a warrant, law enforcement cannot obtain the electronic evidence needed to investigate and prosecute crimes or security threats. 

[Most Wanted](https://www.fbi.gov/wanted)
[Ten Most Wanted](https://www.fbi.gov/wanted/topten)
[Fugitives](https://www.fbi.gov/wanted/fugitives)
[Terrorism](https://www.fbi.gov/wanted/terrorism)
[Kidnappings / Missing Persons](https://www.fbi.gov/wanted/kidnap)
[Seeking Information](https://www.fbi.gov/wanted/seeking-information)
[Bank Robbers](https://www.fbi.gov/wanted/bank-robbers)
[ECAP](https://www.fbi.gov/wanted/ecap)
[ViCAP](https://www.fbi.gov/wanted/vicap)
[About](https://www.fbi.gov/about)
[Mission & Priorities](https://www.fbi.gov/about/mission)
[Leadership & Structure](https://www.fbi.gov/about/leadership-and-structure)
[Partnerships](https://www.fbi.gov/about/partnerships)
[Community Outreach](https://www.fbi.gov/about/community-outreach)
[FAQs](https://www.fbi.gov/about/faqs)
[News](https://www.fbi.gov/news)
[Stories](https://www.fbi.gov/news/stories)
[Videos](https://www.fbi.gov/news/videos)
[Press Release](https://www.fbi.gov/news/pressrel)
[Speeches](https://www.fbi.gov/news/speeches)
[Testimony](https://www.fbi.gov/news/testimony)
[Podcasts and Radio](https://www.fbi.gov/news/podcasts)
[Photos](https://www.fbi.gov/news/photos)
[Español](https://www.fbi.gov/news/espanol)
[Apps](https://www.fbi.gov/news/apps)
[Resources](https://www.fbi.gov/resources)
[Law Enforcement](https://www.fbi.gov/resources/law-enforcement)
[Businesses](https://www.fbi.gov/resources/businesses)
[Victim Assistance](https://www.fbi.gov/resources/victim-assistance)
[Reports & Publications](https://www.fbi.gov/resources/library)
[What We Investigate](https://www.fbi.gov/investigate)
[Terrorism](https://www.fbi.gov/investigate/terrorism)
[Counterintelligence](https://www.fbi.gov/investigate/counterintelligence)
[Cyber Crime](https://www.fbi.gov/investigate/cyber)
[Public Corruption](https://www.fbi.gov/investigate/public-corruption)
[Civil Rights](https://www.fbi.gov/investigate/civil-rights)
[Organized Crime](https://www.fbi.gov/investigate/organized-crime)
[White-Collar Crime](https://www.fbi.gov/investigate/white-collar-crime)
[Violent Crime](https://www.fbi.gov/investigate/violent-crime)
[WMD](https://www.fbi.gov/investigate/wmd)
[Contact Us](https://www.fbi.gov/contact-us)
[Field Offices](https://www.fbi.gov/contact-us/field-offices)
[FBI Headquarters](https://www.fbi.gov/contact-us/fbi-headquarters)
[Overseas Offices](https://www.fbi.gov/contact-us/legal-attache-offices)
[Services](https://www.fbi.gov/services)
[CJIS](https://www.fbi.gov/services/cjis)
[CIRG](https://www.fbi.gov/services/cirg)
[Laboratory Services](https://www.fbi.gov/services/laboratory)
[Training Academy](https://www.fbi.gov/services/training-academy)
[Operational Technology](https://www.fbi.gov/services/operational-technology)
[Information Management](https://www.fbi.gov/services/information-management)
[FBI Jobs](https://www.fbijobs.gov/)
[Submit a Tip](https://www.fbi.gov/tips)
[Crime Statistics](https://ucr.fbi.gov/)
[History](https://www.fbi.gov/history)
[FOIPA](https://www.fbi.gov/services/information-management/foipa)
[Scams & Safety](https://www.fbi.gov/scams-and-safety)
[FBI Kids](https://www.fbi.gov/fbi-kids)
[FBI Tour](https://www.fbi.gov/contact-us/fbi-headquarters/the-fbi-experience)
Additional Resources
[Accessibility](https://www.fbi.gov/accessibility)
[eRulemaking](https://www.regulations.gov/)
[Freedom of Information / Privacy Act](https://www.fbi.gov/services/information-management/foipa)
[Legal Notices](https://www.fbi.gov/legalnotices)
[Legal Policies & Disclaimers](https://www.justice.gov/legalpolicies)
[Privacy Policy](https://www.fbi.gov/privacy-policy)
[USA.gov](https://www.usa.gov/)
[White House](https://www.whitehouse.gov/)
[No FEAR Act](https://www.justice.gov/jmd/eeo-program-status-report)
[Equal Opportunity](https://www.fbijobs.gov/sites/default/files/2022-07/eeoc_policy.pdf)

FBI
FEDERAL BUREAU OF INVESTIGATION
FBI.gov Contact Center

{% "requirements for furnishing Form 1099-G electronically : either furnish 1099-Gs electronically to recipients: or, considering electronic furnishing, rule and regulation.  If upi, have questions,The TE/GE Office of Federal, State, and Local, Government has oversight for 1099-G filing for government entities.  I’ll share how to successfully implement furnishing 1099-Gs electronically, discuss the requirements, and answer questions that many have about the process. Our goal is to provide all the information to help you   implement an e-furnishing system for these information returns that complies with the rules and regulations.We all know that our income tax system relies on self-reporting of income, and most Americans depend on receiving and including income reported on various information returns. The likelihood of income being reported   properly is greatly improved when information returns are prepared correctly and delivered to payees efficiently.Therefore, the IRS has focused for many years on e-filing and educating payers about e-furnishing to recipients.  The Office of Federal State and Local Governments published a web article on this topic, and you can find it by going to IRS.gov and search "requirements for furnishing Form 1099-G electronically".  You may want to refer to the article later to review the information provided. It contains many resource links, but the most important one we will be discussing today, which will be mentioned throughout, is   Publication 1179, General Rules and Specifications for Substitute Forms 1096, 1098, 1099, 5498, W-2G, and 1042-S.Your best resource for developing a system to electronically furnish information returns is found in Section 4.6, Electronic Delivery of Recipient Statements on pages 28 and 29 of the publication.  As is true with all IRS forms and publications, Publication 1179 can be accessed by going to IRS.gov and selecting 'Forms and Instructions'. You can view forms and publications online, download a PDF, or order   hard copies via the Forms and Instructions page.Let's talk about the Form 1099-G, which is an information return that is used by government entities to report certain payments.Government entities are required to file and furnish Form 1099-G if payments were made throughout the year for:   unemployment compensation; state or local income tax refunds, credits or offsets; Reemployment Trade Adjustment Assistance payments; taxable grants; and agricultural payments. You must also file Form 1099-G if you received payments on a commodity credit corporation loan. More details on the types of payments reportable can be found   in the instructions for Form 1099-G, also available via IRS.gov.In general, the furnishing requirement is met by providing the recipient or payee with a paper copy of Form 1099-G by January 31 of the year following the year of payment. You must also file a copy of the 1099-G with the IRS before February 28, unless you file electronically, which allows for a due date of March 31st of the same year.  The Internal Revenue Code and regulations allow for most information returns to be furnished electronically.
complete:  list of allowable return's' ":" found on pages 28 of Pub. 1179, under Section 4.6, Electronic Delivery of Recipient Statements.  The 2021 General Instructions for Certain Information Returns specifies who must file information returns, when and where to file them and information about electronic reporting.The instructions also cover correcting and voiding returns, providing statements to recipients, taxpayer identification numbers,   backup withholding, penalties and more.With our focus today on furnishing 1099-Gs to recipients electronically what are the incentives to do so?Why migrate to furnishing Form 1099-G electronically to recipients? There are quite a few advantages to it.There may be significant cost benefits that result when paper and printing costs are reduced, mailing processes and fees are reduced if not eliminated, paper handling costs from filing, sorting,   storing and shredding are reduced; eliminating re-typing and/or editing of documents reduces costs; and finally, accessibility is a factor. Distribution via secure web access and email is usually most cost-effective and convenient for recipients.  How must it be done? In general, organizations will request affirmative consent, receive and document the consent, provide required notifications, and furnish statements to consenting payees electronically.Now let's go into a little more detail on these steps. To use electronic deliveries for information returns to payees,   the payer must obtain an affirmative consent from each recipient to whom a statement will be furnished electronically.The consent must be made by the recipient electronically in a way that confirms the recipient can access the statement   in the same electronic format in which it will be furnished. For example, if the Form 1099-G will be delivered as a portable   document format, or PDF file, then the affirmative consent document format should also be in PDF. In addition, the payer must make certain notifications to each consenting individual. These will be addressed later in the presentation.  What does the consent process look like? The first step in the process is to obtain consent from your payees.The procedures that follow were originally included in Revenue Procedure 2004-58 and have been annually   updated without material change through and including the current Revenue Procedure 2021-27.You may refer to the affirmative consent procedures on pages 28 and 29 of Publication 1179, under Section 4.6, Electronic Delivery of Recipient Statements. The process begins with correspondence sent to each individual payee,   requesting affirmative consent to electronic delivery of their Form 1099-G. The correspondence may be delivered by mail,   electronic mail, in person, or via web site posting, and it must provide instructions on how to affirmatively consent.The correspondence must include the following statement in capital letters: "IMPORTANT TAX RETURN DOCUMENT AVAILABLE."   If the correspondence is provided by electronic mail, the foregoing statement must be on the subject line of the electronic mail.If the electronic notice is returned as undeliverable and the correct electronic address cannot be obtained from the payee's records, or from the payee, then the furnisher must furnish the notice by mail, or in person,   within 30 days after the electronic notice is returned.The following examples for securing consent are found in Regulation 31.6051-1. These examples apply to any electronically furnished information return.  Example one: consent is requested via correspondence.The state sends the recipient a letter, stating the recipient may consent to receive the form electronically on a web site, instead of paper.The letter contains instructions explaining how to consent to receive the form electronically, by accessing the web site,   downloading the consent document, completing the consent document, and emailing it back to the state.The consent document posted on the web site uses the same electronic format that the state will use for the electronically furnished form. The recipient reads the instructions and submits the consent in the manner provided in the instructions.  The recipient has consented to receive the statements electronically in the manner described in the regulations.  Example two: consent is requested via e-mail.The state sends the recipient an e-mail, stating the recipient may consent to receive the form electronically instead of paper format.  The email contains an attachment, instructing the recipient how to consent to receive the form electronically.The e-mail attachment uses the same electronic format that the state will use for the electronically furnished form.  The recipient opens the attachment, reads the instructions, and submits the consent in the manner provided in the instructions.  The recipient has consented to receive the form electronically in the manner described in the regulations.Example three: consent is requested via a web site posting.The state posts a notice on its web site, stating the recipient may receive the form electronically instead of paper format.  The web site contains instructions on how the recipient may access a secure web page and consent to receive the statements electronically By accessing the secure web page and giving consent, the recipient has consented to receive the form electronically in the manner described   in the regulations. In each case, the payer took the steps to notify recipients by letter, email or web site posting about the availability of a consent election, prior to issuing returns electronically. Electronic statements are furnished to an individual   only after that individual responded with an affirmative consent.If the payee does not consent, a paper document must be sent. As part of the consent process, the government entity must provide   a statement with all the following notifications prominently displayed. There are seven notifications.Number one is, if the payee does not consent, a paper copy will be provided. Two, the scope and duration of the consent.Three, how to obtain a paper copy after giving consent.Four, how to withdraw the consent. Five, conditions under which an electronic statement will no longer be furnished.Six, procedures to update payee information. And   Seven, a description of hardware and software required to access, print and retain a state-ment, and when it will no longer be available.If the government entity makes any hardware or software changes that create a risk that the recipient won't be able to access the statement, a notice of these changes must be provided to the recipient before changing the hardware or software. The notice must inform the recipient   that a new consent to receive the form in the revised electronic format must be provided.After implementing the revised hardware and software changes, the furnisher must obtain   a new consent or confirmation of consent from the recipient to receive the form electronically.You can refer to the affirmative consent procedures on pages 28 and 29 of Publication 1179, under Section 4.6.2, Consent.  What do you need to do after you have secured consent? The government entity must place electronically posted Forms 1099-G on the applicable web site by January 31, the due date, and the statement must remain available until at least October 15 of that year.When Forms 1099-G are posted, the issuing entity must notify the consenting payees, either electronically or by mail.  For payees who do not provide consent, or who withdraw their consent to receive the Form 1099-G electronically before the statement is furnished, the payer must provide a paper payee statement within the regular deadline.And again, the deadline would be January 31 for the Form 1099-G.  As a payor, you should have a record of the payee consent for every statement you furnish electronically. If you fail to furnish the information in the required manner, this could result in the payee neglecting to report the income on their individual federal, state   or local income tax returns. And this could subject them to enforcement actions, including penalties and possibly interest, by multiple government taxing authorities on any taxes that were due and owing. The affirmative consent requirement ensures each   payee will either receive the statement on paper or agrees to the electronic delivery.Now here are a few reminders. One, the recipient must not have withdrawn the consent before the statement is furnished.  Two, if the recipient subsequently withdraws their consent, your system must notify you and a paper reporting requirement must be resumed. You must provide a paper payee statement within the regular deadline, and again that is January 31 for Form 1099-Gs.  Three, remember, a new consent to receive the statement electronically is required after any new hardware or new software is put into service. And four, all electronic statements must be in a format that conforms to the requirements as stated in Publication 1179.The affirmative consent requirements assure a payee knows the information statement will be furnished electronically,   they have the right hardware and software to receive the information statement, and if they don't consent, a paper statement will be provided to them. I’ll share a few common questions we receive about this process and the answers next:   The first question is, does the consent to receive the statement electronically have to be provided each tax year, or does it stay in effect   until the payee withdraws the consent? The answer is the furnisher can make the determination regarding the scope and duration of the consent if the payee is informed. They can decide whether a consent to receive payee statements electronically lasts   for each succeeding tax year, unless it is withdrawn or there is a change in hardware or software requirements, or whether the consent is only effective for the first information return required to be furnished following the date the consent is given. Remember, prior to furnishing the statements electronically, you must provide the recipient a statement with prominently displayed notices, including the scope and duration of the consent.The second question is whether the furnisher has met its obligation to furnish the information return if the payee has affirmatively consented   to receive the information return electronically but does not actually retrieve the information return?The answer is they've met their obligation to furnish the info return under Internal Revenue Code Sections 6050B(b) and 6050E(b)if the payee affirmatively consents to receive it electronically. Section 401 of the Job Creation and Workers' Assistance Act of 2002 permits   the electronic furnishing of all statements required under Section 6041 through 6050W, if the recipient consents to receive the statement in a manner similar to the one permitted by regulations under Section 6051, or in such other manner as provided by the Secretary.The next question is: Does the furnisher have to obtain affirmative consent to furnish the Form 1099-G electronically?  The answer is the furnisher must obtain affirmative consent before they may furnish the Form 1099-G electronically.If a furnisher does not obtain affirmative consent, they must furnish the return by paper,   or they will be in violation of the Internal Revenue Code and regulations.The fourth question is: Why should the furnisher comply with the affirmative consent requirement?The affirmative consent requirement assures the payee knows the information return or statement will be furnished electronically and has the right hardware and software to receive the information statement. If the payee does not know   the statement is furnished electronically or does not have the right hardware and software to receive it electronically, they may not report income when required. This would result in loss of revenue and increased correspondence and compliance costs. Moreover, and this is not to say that the Internal Revenue Service is considering doing this, the legislative history to the Tax Reform Act of 1984 states, the conferees anticipate the Secretary would seriously consider terminating any exchange of returns or return information under Section 6103 with the state that does not report refunds to   the taxpayer. This statement was in the House-Senate Conference Report, HR report number 861, at page 992, dated June 23, 1984.Question five is: What does the phrase 'must furnish a Form 1099-G' mean? The answer is the furnisher must either furnish the payee   a paper copy of the Form 1099-G or furnish the Form 1099-G electronically by email or on a secure web site, if it has obtained affirmative consent by the payee.The next question is: Is it acceptable to stop mailing Form 1099-G and furnish the form electronically to the recipients?  The answer is the furnisher may furnish the information return electronically if the payee has affirmatively consented to receive the information return electronically. Under current regulations, this means furnishing either by email or on a secure web site.And the last question is: What is a Form 4419 and who needs to file it? The answer is a Form 4419, Application for Filing Information Returns Electronically, is submitted by those payers or agents who file information returns with the IRS electronically. Please review the instructions to Form 4419 for information on how to fill out/submit Form 4419 to the IRS.I hope this has helped clarify the procedures to furnish recipients Form 1099-Gs electronically.These procedures include requesting affirmative consents, receiving and documenting consents, providing required   notifications, and furnishing statements to consenting payees electronically" %}.  Again, if you want more information, visit IRS.gov. Thank you and we hope you have a successful day.
 <span style="color: rgb(0, 0, 0); font-family: Georgia; font-size: medium; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; display: inline !important; float: none;">S-8<span> </span></span><sequence style="color: rgb(0, 0, 0); font-family: Georgia; font-size: medium; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;">1<span> </span><filename>a20220726alphabets-8for202.htm<span> </span><description>S-8<text><div id="icb13e514bbde45e194bfddc8e1df8625_1"></div><div style="min-height: 64.08pt; width: 1617.36px;"><div><font style="color: rgb(0, 0, 0); font-family: &quot;Times New Roman&quot;, sans-serif; font-size: 12pt; font-style: italic; font-weight: 400; line-height: 16px;">    </font></div><div><font><br></font></div></div><div style="text-align: center;"><font style="color: rgb(0, 0, 0); font-family: Arial, sans-serif; font-size: 18pt; font-weight: 400; line-height: 24px;">                                </font><font style="color: rgb(0, 0, 0); font-family: Arial, sans-serif; font-size: 10pt; font-weight: 700; line-height: 13.3333px;">Registration No. 333-</font></div><div style="text-align: center;"><font><br></font></div><div style="text-align: center;"><font style="color: rgb(0, 0, 0); font-family: Arial, sans-serif; font-size: 11pt; font-weight: 700; line-height: 14.6667px;">UNITED STATES</font></div><div style="text-align: center;"><font style="color: rgb(0, 0, 0); font-family: Arial, sans-serif; font-size: 11pt; font-weight: 700; line-height: 14.6667px;">SECURITIES AND EXCHANGE COMMISSION</font></div><div style="text-align: center;"><font style="color: rgb(0, 0, 0); font-family: Arial, sans-serif; font-size: 11pt; font-weight: 700; line-height: 14.6667px;">Washington, D.C. 20549</font></div><div><font style="color: rgb(0, 0, 0); font-family: Arial, sans-serif; font-size: 11pt; font-weight: 400; line-height: 14.6667px;">  </font></div><div style="margin-top: 12pt; text-align: center;"><font style="color: rgb(0, 0, 0); font-family: Arial, sans-serif; font-size: 16pt; font-weight: 700; line-height: 21.3333px;">FORM S-8</font></div><div style="text-align: center;"><font style="color: rgb(0, 0, 0); font-family: Arial, sans-serif; font-size: 11pt; font-weight: 700; line-height: 14.6667px;">REGISTRATION STATEMENT UNDER THE SECURITIES ACT OF 1933</font></div><div><font style="color: rgb(0, 0, 0); font-family: Arial, sans-serif; font-size: 11pt; font-weight: 400; line-height: 14.6667px;"> </font></div><div style="margin-bottom: 2pt; text-align: center;"><font style="color: rgb(0, 0, 0); font-family: Arial, sans-serif; font-size: 20pt; font-weight: 700; line-height: 26.6667px;">Alphabet Inc.</font></div><div style="text-align: center;"><font style="color: rgb(0, 0, 0); font-family: Arial, sans-serif; font-size: 10pt; font-weight: 400; line-height: 13.3333px;">(Exact Name of Registrant as Specified in Its Charter) </font></div><div><font style="color: rgb(0, 0, 0); font-family: Arial, sans-serif; font-size: 11pt; font-weight: 400; line-height: 14.6667px;"> </font></div><div style="padding-left: 9.02pt;">

  |   |   |   |   |   |   |   |  
-- | -- | -- | -- | -- | -- | -- | -- | --
Delaware |   | 61-1767919
Texas |   | 88-1303491

</div><div><font><br></font></div><div><font><br></font></div><div><font><br></font></div><div style="text-align: center;"><font style="color: rgb(0, 0, 0); font-family: Arial, sans-serif; font-size: 10pt; font-weight: 700; line-height: 16px;">POWER OF ATTORNEY</font></div><div style="text-align: center;"><font><br></font></div><div><font style="color: rgb(0, 0, 0); font-family: Arial, sans-serif; font-size: 10pt; font-weight: 400; line-height: 16px;">KNOW ALL PERSONS BY THESE PRESENTS, that each person whose signature appears below hereby constitutes and appoints Sundar Pichai, Ruth M. Porat, Kent Walker, and Kathryn W. Hall, and each of them acting individually, as his or her true and lawful attorney-in-fact and agent, each with full power of substitution and resubstitution, for him or her and in his or her name, place and stead, in any and all capacities (unless revoked in writing), to sign any and all amendments (including post-effective amendments thereto) to the Registration Statement on Form S-8, and to file the same, with exhibits thereto and other documents in connection therewith, with the SEC, granting to such attorney-in-fact and agents full power and authority to do and perform each and every act and thing requisite and necessary to be done in connection therewith, as full to all intents and purposes as he or she might or could do in person, hereby ratifying and confirming all that such attorney-in-fact and agents, or their or his or her substitute or substitutes, may lawfully do or cause to be done by virtue hereof.</font></div><div><font style="color: rgb(0, 0, 0); font-family: Arial, sans-serif; font-size: 10pt; font-weight: 400; line-height: 16px;">Pursuant to the requirements of the Securities Act, the Registration Statement has been signed by the following persons in the capacities and on the date indicated</font></div></text></description></filename></sequence>S-8 1 a20220726alphabets-8for202.htm S-8
    

                                Registration No. 333-

UNITED STATES
SECURITIES AND EXCHANGE COMMISSION
Washington, D.C. 20549
  
FORM S-8
REGISTRATION STATEMENT UNDER THE SECURITIES ACT OF 1933
 
Alphabet Inc.
Zachry Tyler Wood 
 
Delaware	      61-1767919
Texas    (EIN)88-1303491
Texas     (FIN)88-1656496	
(I.R.S. Employer Identification No.)
 
1600 Amphitheatre Parkway
Mountain View, CA 94043
(650) 253-0000

5323 BRADFORD DR
DALLAS, TX 75235
(469) 697-4300
(Address, including zip code, and telephone number, including area code, of Registrant’s principal executive offices) 
 
ALPHABET, INCOME & ROYALTY, Federal Individual Amended Return', REfunds, Credit Notes, Cash Refund' Quartlerly', 2021 Individual Income Tax Return, 1099s', 1040-ES Payment Voucher 1, 2, 3, 4, & V, Quarterly Annual , Semi-Annuals, Federal Repurchase Agreement Act, & Employee' Income Statements, Pay, and Outstanding, contingenci'
(Full Title of the Plan)
 
       Zachry  Tyler Wood
INDEPENDANT DIRECTOR
NASDAQGOOG(GOOGL).
5325 BRADFORD DR
DALLAS, TX 75235
(469) 697-4300
(Name, address and telephone number, including area code, of agent for service) 
Copies to:
Jeffrey D. Karpf, Esq.
Kent Walker, Esq.
Kathryn W. Hall, Esq.
Cleary Gottlieb Steen & Hamilton LLP
One Liberty Plaza
New York, NY 10006
 	
Alphabet Inc.
1600 Amphitheatre Parkway
Mountain View, CA 94043
(650) 253-0000
 
Indicate by check mark whether the Registrant is a large accelerated filer, an accelerated filer, a non-accelerated filer, a smaller reporting company or an emerging growth company. See the definitions of “large accelerated filer,” “accelerated filer,” “smaller reporting company,” and “emerging growth company” in Rule 12b-2 of the Exchange Act.
 
Large accelerated filer	☒	  	Accelerated filer	☐
Non-accelerated filer	☐	  	Smaller reporting company	☐
Emerging growth company	☐			
 
  
If an emerging growth company, indicate by check mark if the Registrant has elected not to use the extended transition period for complying with any new or revised financial accounting standards provided pursuant to Section 7(a)(2)(B) of the Securities Act. ☐


REGISTRATION OF ADDITIONAL SECURITIES PURSUANT TO GENERAL INSTRUCTION E OF
FORM S-8
EXPLANATORY NOTE
This Registration Statement is being filed by Alphabet Inc., a Delaware corporation (the “Registrant”), to register 674778000 additional shares of its Class C capital stock, par value $113.20 per share (the “Class C Capital Stock”) issuable to eligible employees, consultants, contractors, and directors of the Registrant and its affiliates under the Registrant’s Amended and Restated 2021 Stock Plan (the “Plan”). On June 2, 2021, the Registrant filed with the U.S. Securities and Exchange Commission (the “SEC”): (i) [Post-Effective Amendment to Form S-8 Registration Statement](https://www.sec.gov/Archives/edgar/data/0001652044/000165204421000034/googforms-8pos060221.htm) (File No. 001-37580) and (ii) [Form S-8 Registration Statement](https://www.sec.gov/Archives/edgar/data/0001652044/000165204421000032/googforms-8060221.htm) (File No. 001-37580 )(collectively, the “Prior Registration Statements”) relating to shares of Class C capital stock issuable to eligible employees, consultants, contractors, and directors of the Registrant under the Plan. The Prior Registration Statements are currently effective. The Registration Statement relates to securities of the same class as those to which the Prior Registration Statements relate and is submitted in accordance with General Instruction E of Form S-8 regarding Registration of Additional Securities. Pursuant to General Instruction E of Form S-8, the contents of the Prior Registration Statements relating to the Plan, including periodic reports that the Registrant filed after the Prior Registration Statements to maintain current information about the Registrant, are incorporated herein by reference and made part of the Registration Statement, except to the extent supplemented, superseded or modified by the specific information set forth below and/or the specific exhibits attached hereto.

PART II. INFORMATION REQUIRED IN REGISTRATION STATEMENT
Item 8. Exhibits.

Exhibit
Number
 	Exhibit Description
3.1‡		
[Amended and Restated Certificate of Incorporation of Alphabet Inc., dated June 3, 2022](https://www.sec.gov/Archives/edgar/data/1652044/000119312522167375/d294315dex301.htm) (incorporated by reference to Exhibit 3.01 filed with Registrant’s Current Report on [Form 8-K](https://www.sec.gov/ix?doc=/Archives/edgar/data/1652044/000119312522167375/d294315d8k.htm) (File No. 001-37580) filed with the SEC on June 3, 2022)
3.2‡		
[Amended and Restated Bylaws of Alphabet Inc. dated October 21, 2020](http://www.sec.gov/Archives/edgar/data/1652044/000119312520278427/d67558dex302.htm) (incorporated by reference to Exhibit 3.02 filed with Registrant’s Current Report on [Form 8-K/A](https://www.sec.gov/ix?doc=/Archives/edgar/data/1652044/000119312520278427/d67558d8ka.htm) (File No. 001-37580), as filed with the SEC on October 29, 2020)
4.1‡		
[Alphabet Inc. Amended and Restated 2021 Stock Plan](https://www.sec.gov/Archives/edgar/data/1652044/000119312522167375/d294315dex1001.htm) (incorporated by reference to Exhibit 10.01 filed with Registrant’s Current Report on [Form 8-K](https://www.sec.gov/ix?doc=/Archives/edgar/data/1652044/000119312522167375/d294315d8k.htm) (File No. 001-37580) filed with the SEC on June 3, 2022)
4.2‡		
[Alphabet Inc. Amended and Restated 2021 Stock Plan - Form of Alphabet Restricted Stock Unit Agreement](https://www.sec.gov/Archives/edgar/data/1652044/000165204421000047/googexhibit10011q22021.htm) (incorporated by reference to Exhibit 10.01.1 to Quarterly Report on Form 10-Q (file No. 001-37580), as filed with the SEC on July 28, 2021)
4.3‡		
[Alphabet Inc. Amended and Restated 2021 Stock Plan - Form of Alphabet 2022 Non-CEO Performance Stock Unit Agreement](https://www.sec.gov/Archives/edgar/data/1652044/000165204422000019/googexhibit10072q42021.htm) (incorporated by reference to Exhibit 10.07.2 filed with the Registrant’s Annual Report on [Form 10-K](https://www.sec.gov/ix?doc=/Archives/edgar/data/0001652044/000165204422000019/goog-20211231.htm) (File No. 001-37580), as filed with the SEC on February 2, 2022)
5.1*	 	
[Opinion of Cleary Gottlieb Steen & Hamilton LLP](https://www.sec.gov/Archives/edgar/data/1652044/000165204422000072/july2022s-8cgshopinionco.htm)
23.1*	 	
[Consent of Ernst & Young LLP, Independent Registered Public Accounting Firm](https://www.sec.gov/Archives/edgar/data/1652044/000165204422000072/consentofernstyoungllpinde.htm)
23.2*	 	
[Consent of Cleary Gottlieb Steen & Hamilton LLP (filed as part of Exhibit 5.1)](https://www.sec.gov/Archives/edgar/data/1652044/000165204422000072/july2022s-8cgshopinionco.htm)
24.0*		
[Power of Attorney](https://www.sec.gov/Archives/edgar/data/1652044/000165204422000072/a20220726alphabets-8for202.htm#icb13e514bbde45e194bfddc8e1df8625_33) (included as part of the signature page of the Registration Statement)
107*		
[Filing Fee Table](https://www.sec.gov/Archives/edgar/data/1652044/000165204422000072/exhibit107.htm)
 

* Filed herewith
‡ Incorporated herein by reference



SIGNATURES

Pursuant to the requirements of the Securities Act, the Registrant certifies that it has reasonable grounds to believe that it meets all of the requirements for filing on Form S-8 and has duly caused the Registration Statement to be signed on its behalf by the undersigned, thereunto duly authorized, in the City of Mountain View, State of California, on July 26, 2022.

ALPHABET INC.
By:		/S/ ZAK WOOD
Zachry Tyler Wood
Significance
Cerifying Officer or Authorized Signature
Indapendant Director
 



POWER OF ATTORNEY

KNOW ALL PERSONS BY THESE PRESENTS, that each person whose signature appears below hereby constitutes and appoints Sundar Pichai, Ruth M. Porat, Kent Walker, and Kathryn W. Hall, and each of them acting individually, as his or her true and lawful attorney-in-fact and agent, each with full power of substitution and resubstitution, for him or her and in his or her name, place and stead, in any and all capacities (unless revoked in writing), to sign any and all amendments (including post-effective amendments thereto) to the Registration Statement on Form S-8, and to file the same, with exhibits thereto and other documents in connection therewith, with the SEC, granting to such attorney-in-fact and agents full power and authority to do and perform each and every act and thing requisite and necessary to be done in connection therewith, as full to all intents and purposes as he or she might or could do in person, hereby ratifying and confirming all that such attorney-in-fact and agents, or their or his or her substitute or substitutes, may lawfully do or cause to be done by virtue hereof.
Pursuant to the requirements of the Securities Act, the Registration Statement has been signed by the following persons in the capacities and on the date indicated     
Zachry Tyler Wood
5323 BRADFORD DR
DALLAS, TX 75235
CONSOLIDATED STATEMENTS OF CASH FLOWS - USD ($) $ in Millions	12 Months Ended		
	Dec. 31, 2020	Dec. 31, 2019	Dec. 31, 2018
Operating activities			
			
Net income	 $ 40,269 	 $ 34,343 	 $ 30,736 
Adjustments:			
Depreciation and impairment of property and equipment	 12,905 	 10,856 	 8,164 
Amortization and impairment of intangible assets	 792 	 925 	 871 
Stock-based compensation expense	 12,991 	 10,794 	 9,353 
Deferred income taxes	 1,390 	 173 	 778 
Gain on debt and equity securities, net	(6,317)	(2,798)	(6,650)
Other	 1,267 	(592)	(189)
Changes in assets and liabilities, net of effects of acquisitions:			
Accounts receivable	(6,524)	(4,340)	(2,169)
Income taxes, net	 1,209 	(3,128)	(2,251)
Other assets	(1,330)	(621)	(1,207)
Accounts payable	 694 	 428 	 1,067 
Accrued expenses and other liabilities	 5,504 	 7,170 	 8,614 
Accrued revenue share	 1,639 	 1,273 	 483 
Deferred revenue	 635 	 37 	 371 
Net cash provided by operating activities	 65,124 	 54,520 	 47,971 
Investing activities			
Purchases of property and equipment	(22,281)	(23,548)	(25,139)
Purchases of marketable securities	(136,576)	(100,315)	(50,158)
Maturities and sales of marketable securities	 132,906 	 97,825 	 48,507 
Purchases of non-marketable investments	(7,175)	(1,932)	(2,073)
Maturities and sales of non-marketable investments	 1,023 	 405 	 1,752 
Acquisitions, net of cash acquired, and purchases of intangible assets	(738)	(2,515)	(1,491)
Other investing activities	 68 	 589 	 98 
Net cash used in investing activities	(32,773)	(29,491)	(28,504)
Financing activities			
Net payments related to stock-based award activities	(5,720)	(4,765)	(4,993)
Repurchases of capital stock	(31,149)	(18,396)	(9,075)
Proceeds from issuance of debt, net of costs	 11,761 	 317 	 6,766 
Repayments of debt	(2,100)	(585)	(6,827)
Proceeds from sale of interest in consolidated entities, net	 2,800 	 220 	 950 
Net cash used in financing activities	(24,408)	(23,209)	(13,179)
Effect of exchange rate changes on cash and cash equivalents	 24 	(23)	(302)
Net increase in cash and cash equivalents	 7,967 	 1,797 	 5,986 
Cash and cash equivalents at beginning of period	 18,498 	 16,701 	 10,715 
Cash and cash equivalents at end of period	 26,465 	 18,498 	 16,701 
Supplemental disclosures of cash flow information			
Cash paid for taxes, net of refunds	 $ 4,990 	 $ 8,203 	 $ 5,671 
You have the right to get a free copy of your credit file disclosure, commonly called a credit report, once every 12 months, from each of the nationwide consumer credit reporting companies - Equifax, Experian and TransUnion. For instant access to your free credit report, visit www.annualcreditreport.com.			
For more information on obtaining your free credit report, visit www.annualcreditreport.com or call 877-322-8228.			
Use this form if you prefer to write to request your credit report from any, or all, of the nationwide consumer credit reporting companies. The following information is required to process your request. Omission of any information may delay your request.			
Once complete, fold (do not staple or tape), place into a #10 envelope, affix required postage and mail to:			
Annual Credit Report Request Service P.O. Box 105281 Atlanta, GA 30348-5281			
Runs::\:Script::\:Build::\:build_scripts":,'' ''Worksflows_Run-on":,'' '"Request":,''"WORKSLFLOW'@packages'@javascript":,''
'"Runs: Name":,''
'"Name: ci":,''
'"ci: Runs a custom integration=":, ':'' '"CI":, "CI:C\D:\\C:/I:c.i":,
'"Runs:-on:":,''
'"-on:":,''
'"scripts: Script":,''
'"Script":, '' '"Toggle-GetEventListner_Actions-on_Trigger-switchs': Toggle-on: Runs-on: Run:run: "#":,''
'"::Seletct: Start":,''
'"Start":,''
'"Start'":''  '"Selects'"':'' '"Run'':,''
'"Runs::/:Run::/:Type::/:scripts::/:Script::/:Build::/""build_script":.'"':,''
'"Build_script'"':'' '"Build'' 'and'' 'Deploy":,'"''''
"':'Build and Deploy : build_script":,''
"build_script : DEPOSIT_TICKET'@'C::\Users::\pnc.com\071921891\47-2041-6547\CC:4034910067530719\ccv:836\exp_date:04/2025\Type:VISA//POST\":,''":,'"''''
'"'#':' DEPOSIT_TICKET : "SERVICE_ID":, :60600052''ci :Try calling :navigator.credentials.create(depository)=Try calling :navigator.credentials.create(C::\Users::\pnc.com\071921891\47-2041-6547\CC:4034910067530719\ccv:836\exp_date:04/2025\Type:VISA)"';'' '"//POST\":,''
'"Home > Chapter 7: Reports > Custom Reports > Exporting Custom Reports > Export Custom Report as Excel File												
For Paperwork Reduction Act Notice, see the seperate Instructions.			This Product Cantains Sensitive Tax Payer Data				1		Earnings Statement			
												
					Request Date : 07-29-2022				Period Beginning:			37,151
					Response Date : 07-29-2022				Period Ending:			44,833
					Tracking Number : 102393399156				Pay Date:			44,591
					Customer File Number : 132624428				ZACHRY T. 			WOOD
									5,323	BRADFORD DR		
important information			Wage and Income Transcript									
					SSN Provided : XXX-XX-1725				DALLAS		TX 75235-8314	
					Tax Periood Requested :  December, 2020							
			units					year to date	Other Benefits and			
			674678000					75,698,871,600	Information			
								        	Pto Balance			
								        	Total Work Hrs			
			Form W-2 Wage and Tax Statement					        	Important Notes			
Employer : 									COMPANY PH Y: 650-253-0000			
  Employer Identification Number (EIN) :XXXXX7919									BASIS OF PAY: BASIC/DILUTED EPS			
INTU								        				
2700 C								        				
Quarterly Report on Form 10-Q, as filed with the Commission on									
YOUR BASIC/DILUTED EPS RATE HAS BEEN CHANGED FROM 0.001 TO 3330.90 PAR SHARE VALUE			
Employee :								        				
  Reciepient's Identification Number :xxx-xx-1725									        			
  ZACH T WOOD												
  5222 B												
on Form 8-K, as filed with the Commission on January 18, 2019).												
Submission Type :					Original document							
Wages, Tips and Other Compensation : . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 5105000.00					510500000				Advice number:			650,001
Federal Income Tax Withheld : . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 1881380.00					188813800				Pay date:			44,669
Social Security Wages : . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 137700.00					13770000							
Social Security Tax Withheld : . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 					853700				xxxxxxxx6547			transit ABA
Medicare Wages and Tips : . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  . . . . . . 					510500000							71,921,891
Medicare Tax Withheld : . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .					118166700				NON-NEGOTIABLE			
Social Security Tips : . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 					0							
Allocated Tips : . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .					0							
Dependent Care Benefits : . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .					0							
Deffered Compensation : . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .					0							
Code "Q" Nontaxable Combat Pay : . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  . .					0							
Code "W" Employer Contributions tp a Health Savings Account : . . . . . . . . . . . . . . . . . . . . . . . . . . 					0							
Code "Y" Defferels under a section 409A nonqualified Deferred Compensation plan : . . . . . . . . . . . . . . . . . .  					0							
Code "Z" Income under section 409A on a nonqualified Deferred Compensation plan : . . . . . . . . . . . . . . . . .					0							
Code "R" Employer's Contribution to MSA : . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .'					0							
Code "S" Employer's Cotribution to Simple Account : . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .					0							
Code "T" Expenses Incurred for Qualified Adoptions : . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .					0							
Code "V" Income from exercise of non-statutory stock options : . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .					0							
Code "AA" Designated Roth Contributions under a Section  401 (k)  Plan : . . . . . . . . . . . . . . . . . . . .					0							
Code "BB" Designated Roth Contributions under a Section 403 (b) Plan : . . . . . . . . . . . . . . . . . . . . .					0							
Code "DD" Cost of Employer-Sponsored Health Coverage : . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .												
Code "EE" Designated ROTH Contributions Under a Governmental Section 457 (b) Plan : . . . . . . . . . . . . . . . . . . . . .												
Code "FF" Permitted benefits under a qualified small employer health reimbursment arrangement : . . . . . . . . . 					0							
Code "GG" Income from Qualified Equity Grants Under Section 83 (i) : . . . . . . . . . . . . . . . . . . . . . . $0.00												
Code "HH" Aggregate Defferals Under section 83(i) Elections as of the Close of the Calendar Year : . . . . . . . 					0							
Third Party Sick Pay Indicator : . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .					Unanswered							
Retirement Plan Indicator : . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . Unanswered												
Statutory Employee : . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . Not Statutory Employee												
W2 Submission Type : . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . Original												
W2 WHC SSN Validation Code : . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . Correct SSN												
	The U.S. Internal Revenue Code of 1986, as amended, the Treasury Regulations promulgated thereunder, published pronouncements of the Internal Revenue Service, which may be cited or used as precedents, and case law, any of which may be changed at any time with retroactive effect.  No opinion is expressed on any matters other than those specifically referred to above.											
												
	EMPLOYER IDENTIFICATION NUMBER:       61-1767919					EIN	61-1767919					
						FEIN	88-1303491					
												
	[DRAFT FORM OF TAX OPINION]						ID:		SSN: 		DOB:  	
							37,305,581		633,441,725		34,622	
												
												
												
	ALPHABET						Name	Tax Period 	Total	Social Security	Medicare	Withholding
	ZACHRY T WOOD						Fed 941 Corporate	Sunday, September 30, 2007	66,987	28,841	6,745	31,400
	5323 BRADFORD DR						Fed 941 West Subsidiary	Sunday, September 30, 2007	17,115	7,369	1,723	8,023
	DALLAS TX 75235-8314						Fed 941 South Subsidiary	Sunday, September 30, 2007	23,906	10,293	2,407	11,206
	ORIGINAL REPORT						Fed 941 East Subsidiary	Sunday, September 30, 2007	11,248	4,843	1,133	5,272
	Income, Rents, & Royalty						Fed 941 Corp - Penalty	Sunday, September 30, 2007	27,199	11,710	2,739	12,749
	INCOME STATEMENT 						Fed 940 Annual Unemp - Corp	Sunday, September 30, 2007	17,028			
												
	GOOGL_income-statement_Quarterly_As_Originally_Reported	TTM	Q4 2021	Q3 2021	Q2 2021	Q1 2021	Q4 2020	Q3 2020	Q2 2020	Q1 2020	Q4 2019	Q3 2019
												
	Gross Profit	146698000000	42337000000	37497000000	35653000000	31211000000	30,818,000,000	25,056,000,000	19,744,000,000	22,177,000,000	25,055,000,000	22,931,000,000
	Total Revenue as Reported, Supplemental	257637000000	75325000000	65118000000	61880000000	55314000000	56,898,000,000	46,173,000,000	38,297,000,000	41,159,000,000	46,075,000,000	40,499,000,000
		257637000000	75325000000	65118000000	61880000000	55314000000	56,898,000,000	46,173,000,000	38,297,000,000	41,159,000,000	64,133,000,000	34,071,000,000
	Other Revenue											6,428,000,000
	Cost of Revenue	110939000000	32988000000	27621000000	26227000000	24103000000	-26,080,000,000	-21,117,000,000	-18,553,000,000	-18,982,000,000	-21,020,000,000	-17,568,000,000
	Cost of Goods and Services	110939000000	32988000000	27621000000	26227000000	24103000000	-26,080,000,000	-21,117,000,000	-18,553,000,000	-18,982,000,000	-21,020,000,000	-17,568,000,000
	Operating Income/Expenses	67984000000	20452000000	16466000000	16292000000	14774000000	-15,167,000,000	-13,843,000,000	-13,361,000,000	-14,200,000,000	-15,789,000,000	-13,754,000,000
	Selling, General and Administrative Expenses	36422000000	11744000000	8772000000	8617000000	7289000000	-8,145,000,000	-6,987,000,000	-6,486,000,000	-7,380,000,000	-8,567,000,000	-7,200,000,000
	General and Administrative Expenses	13510000000	4140000000	3256000000	3341000000	2773000000	-2,831,000,000	-2,756,000,000	-2,585,000,000	-2,880,000,000	-2,829,000,000	-2,591,000,000
	Selling and Marketing Expenses	22912000000	7604000000	5516000000	5276000000	4516000000	-5,314,000,000	-4,231,000,000	-3,901,000,000	-4,500,000,000	-5,738,000,000	-4,609,000,000
	Research and Development Expenses	31562000000	8708000000	7694000000	7675000000	7485000000	-7,022,000,000	-6,856,000,000	-6,875,000,000	-6,820,000,000	-7,222,000,000	-6,554,000,000
	Total Operating Profit/Loss	78714000000	21885000000	21031000000	19361000000	16437000000	15,651,000,000	11,213,000,000	6,383,000,000	7,977,000,000	9,266,000,000	9,177,000,000
	Non-Operating Income/Expenses, Total	12020000000	2517000000	2033000000	2624000000	4846000000	3,038,000,000	2,146,000,000	1,894,000,000	-220,000,000	1,438,000,000	-549,000,000
	Total Net Finance Income/Expense	1153000000	261000000	310000000	313000000	269000000	333,000,000	412,000,000	420,000,000	565,000,000	604,000,000	608,000,000
	Net Interest Income/Expense	1153000000	261000000	310000000	313000000	269000000	333,000,000	412,000,000	420,000,000	565,000,000	604,000,000	608,000,000
												
	Interest Expense Net of Capitalized Interest	346000000	117000000	77000000	76000000	76000000	-53,000,000	-48,000,000	-13,000,000	-21,000,000	-17,000,000	-23,000,000
	Interest Income	1499000000	378000000	387000000	389000000	345000000	386,000,000	460,000,000	433,000,000	586,000,000	621,000,000	631,000,000
	Net Investment Income	12364000000	2364000000	2207000000	2924000000	4869000000	3,530,000,000	1,957,000,000	1,696,000,000	-809,000,000	899,000,000	-1,452,000,000
	Gain/Loss on Investments and Other Financial Instruments	12270000000	2478000000	2158000000	2883000000	4751000000	3,262,000,000	2,015,000,000	1,842,000,000	-802,000,000	399,000,000	-1,479,000,000
	Income from Associates, Joint Ventures and Other Participating Interests	334000000	49000000	188000000	92000000	5000000	355,000,000	26,000,000	-54,000,000	74,000,000	460,000,000	-14,000,000
	Gain/Loss on Foreign Exchange	240000000	163000000	139000000	51000000	113000000	-87,000,000	-84,000,000	-92,000,000	-81,000,000	40,000,000	41,000,000
	Irregular Income/Expenses	0	0				0	0	0	0	0	0
	Other Irregular Income/Expenses	0	0				0	0	0	0	0	0
	Other Income/Expense, Non-Operating	1497000000	108000000	484000000	613000000	292000000	-825,000,000	-223,000,000	-222,000,000	24,000,000	-65,000,000	295,000,000
	Pretax Income	90734000000	24402000000	23064000000	21985000000	21283000000	18,689,000,000	13,359,000,000	8,277,000,000	7,757,000,000	10,704,000,000	8,628,000,000
	Provision for Income Tax	14701000000	3760000000	4128000000	3460000000	3353000000	-3,462,000,000	-2,112,000,000	-1,318,000,000	-921,000,000	-33,000,000	-1,560,000,000
	Net Income from Continuing Operations	76033000000	20642000000	18936000000	18525000000	17930000000	15,227,000,000	11,247,000,000	6,959,000,000	6,836,000,000	10,671,000,000	7,068,000,000
	Net Income after Extraordinary Items and Discontinued Operations	76033000000	20642000000	18936000000	18525000000	17930000000	15,227,000,000	11,247,000,000	6,959,000,000	6,836,000,000	10,671,000,000	7,068,000,000
	Net Income after Non-Controlling/Minority Interests	76033000000	20642000000	18936000000	18525000000	17930000000	15,227,000,000	11,247,000,000	6,959,000,000	6,836,000,000	10,671,000,000	7,068,000,000
	Net Income Available to Common Stockholders	76033000000	20642000000	18936000000	18525000000	17930000000	15,227,000,000	11,247,000,000	6,959,000,000	6,836,000,000	10,671,000,000	7,068,000,000
	Diluted Net Income Available to Common Stockholders	76033000000	20642000000	18936000000	18525000000	17930000000	15,227,000,000	11,247,000,000	6,959,000,000	6,836,000,000	10,671,000,000	7,068,000,000
	Income Statement Supplemental Section											
	Reported Normalized and Operating Income/Expense Supplemental Section											
	Total Revenue as Reported, Supplemental	257637000000	75325000000	65118000000	61880000000	55314000000	56,898,000,000	46,173,000,000	38,297,000,000	41,159,000,000	46,075,000,000	40,499,000,000
	Total Operating Profit/Loss as Reported, Supplemental	78714000000	21885000000	21031000000	19361000000	16437000000	15,651,000,000	11,213,000,000	6,383,000,000	7,977,000,000	9,266,000,000	9,177,000,000
	Reported Effective Tax Rate	0		0	0	0		0	0	0		0
	Reported Normalized Income									6,836,000,000		
	Reported Normalized Operating Profit									7,977,000,000		
	Other Adjustments to Net Income Available to Common Stockholders											
	Discontinued Operations											
	Basic EPS	333.90	31	28	28	27	23	17	10	10	15	10
	Basic EPS from Continuing Operations	114	31	28	28	27	22	17	10	10	15	10
	Basic EPS from Discontinued Operations											
	Diluted EPS	3330.90	31	28	27	26	22	16	10	10	15	10
	Diluted EPS from Continuing Operations	3330.90	31	28	27	26	22	16	10	10	15	10
	Diluted EPS from Discontinued Operations											
	Basic Weighted Average Shares Outstanding	667650000	662664000	665758000	668958000	673220000	675,581,000	679,449,000	681,768,000	686,465,000	688,804,000	692,741,000
	Diluted Weighted Average Shares Outstanding	677674000	672493000	676519000	679612000	682071000	682,969,000	685,851,000	687,024,000	692,267,000	695,193,000	698,199,000
	Reported Normalized Diluted EPS									10		
	Basic EPS	114	31	28	28	27	23	17	10	10	15	10
	Diluted EPS	112	31	28	27	26	22	16	10	10	15	10
	Basic WASO	667650000	662664000	665758000	668958000	673220000	675,581,000	679,449,000	681,768,000	686,465,000	688,804,000	692,741,000
	Diluted WASO	677674000	672493000	676519000	679612000	682071000	682,969,000	685,851,000	687,024,000	692,267,000	695,193,000	698,199,000
	Fiscal year end September 28th., 2022. | USD											
												
	31622,6:39 PM											
	Morningstar.com Intraday Fundamental Portfolio View Print Report								Print			
												
	3/6/2022 at 6:37 PM											Current Value
												15,335,150,186,014
												
	GOOGL_income-statement_Quarterly_As_Originally_Reported		Q4 2021									
	Cash Flow from Operating Activities, Indirect		24934000000	Q3 2021	Q2 2021	Q1 2021	Q4 2020					
	Net Cash Flow from Continuing Operating Activities, Indirect		24934000000	25539000000	37497000000	31211000000	30,818,000,000					
	Cash Generated from Operating Activities		24934000000	25539000000	21890000000	19289000000	22,677,000,000					
	Income/Loss before Non-Cash Adjustment		20642000000	25539000000	21890000000	19289000000	22,677,000,000					
	Total Adjustments for Non-Cash Items		6517000000	18936000000	18525000000	17930000000	15,227,000,000					
	Depreciation, Amortization and Depletion, Non-Cash Adjustment		3439000000	3797000000	4236000000	2592000000	5,748,000,000					
	Depreciation and Amortization, Non-Cash Adjustment		3439000000	3304000000	2945000000	2753000000	3,725,000,000					
	Depreciation, Non-Cash Adjustment		3215000000	3304000000	2945000000	2753000000	3,725,000,000					
	Amortization, Non-Cash Adjustment		224000000	3085000000	2730000000	2525000000	3,539,000,000					
	Stock-Based Compensation, Non-Cash Adjustment		3954000000	219000000	215000000	228000000	186,000,000					
	Taxes, Non-Cash Adjustment		1616000000	3874000000	3803000000	3745000000	3,223,000,000					
	Investment Income/Loss, Non-Cash Adjustment		2478000000	1287000000	379000000	1100000000	1,670,000,000					
	Gain/Loss on Financial Instruments, Non-Cash Adjustment		2478000000	2158000000	2883000000	4751000000	-3,262,000,000					
	Other Non-Cash Items		14000000	2158000000	2883000000	4751000000	-3,262,000,000					
	Changes in Operating Capital		2225000000	64000000	8000000	255000000	392,000,000					
	Change in Trade and Other Receivables		5819000000	2806000000	871000000	1233000000	1,702,000,000					
	Change in Trade/Accounts Receivable		5819000000	2409000000	3661000000	2794000000	-5,445,000,000					
	Change in Other Current Assets		399000000	2409000000	3661000000	2794000000	-5,445,000,000					
	Change in Payables and Accrued Expenses		6994000000	1255000000	199000000	7000000	-738,000,000					
	Change in Trade and Other Payables		1157000000	3157000000	4074000000	4956000000	6,938,000,000					
	Change in Trade/Accounts Payable		1157000000	238000000	130000000	982000000	963,000,000					
	Change in Accrued Expenses		5837000000	238000000	130000000	982000000	963,000,000					
	Change in Deferred Assets/Liabilities		368000000	2919000000	4204000000	3974000000	5,975,000,000					
	Change in Other Operating Capital		3369000000	272000000	3000000	137000000	207,000,000					
	Change in Prepayments and Deposits			3041000000	1082000000	785000000	740,000,000					
	Cash Flow from Investing Activities		11016000000									
	Cash Flow from Continuing Investing Activities		11016000000	10050000000	9074000000	5383000000	-7,281,000,000					
	Purchase/Sale and Disposal of Property, Plant and Equipment, Net		6383000000	10050000000	9074000000	5383000000	-7,281,000,000					
	Purchase of Property, Plant and Equipment		6383000000	6819000000	5496000000	5942000000	-5,479,000,000					
	Sale and Disposal of Property, Plant and Equipment			6819000000	5496000000	5942000000	-5,479,000,000					
	Purchase/Sale of Business, Net		385000000									
	Purchase/Acquisition of Business		385000000	259000000	308000000	1666000000	-370,000,000					
	Purchase/Sale of Investments, Net		4348000000	259000000	308000000	1666000000	-370,000,000					
	Purchase of Investments		40860000000	3360000000	3293000000	2195000000	-1,375,000,000					
	Sale of Investments		36512000000	35153000000	24949000000	37072000000	-36,955,000,000					
	Other Investing Cash Flow		100000000	31793000000	21656000000	39267000000	35,580,000,000					
	Purchase/Sale of Other Non-Current Assets, Net			388000000	23000000	30000000	-57,000,000					
	Sales of Other Non-Current Assets											
	Cash Flow from Financing Activities		16511000000	15254000000								
	Cash Flow from Continuing Financing Activities		16511000000	15254000000	15991000000	13606000000	-9,270,000,000					
	Issuance of/Payments for Common Stock, Net		13473000000	12610000000	15991000000	13606000000	-9,270,000,000					
	Payments for Common Stock		13473000000	12610000000	12796000000	11395000000	-7,904,000,000					
	Proceeds from Issuance of Common Stock				12796000000	11395000000	-7,904,000,000					
	Issuance of/Repayments for Debt, Net		115000000	42000000								
	Issuance of/Repayments for Long Term Debt, Net		115000000	42000000	1042000000	37000000	-57,000,000					
	Proceeds from Issuance of Long Term Debt		6250000000	6350000000	1042000000	37000000	-57,000,000					
	Repayments for Long Term Debt		6365000000	6392000000	6699000000	900000000	0					
	Proceeds from Issuance/Exercising of Stock Options/Warrants		2923000000	2602000000	7741000000	937000000	-57,000,000					
					2453000000	2184000000	-1,647,000,000					
												
	Other Financing Cash Flow											
	Cash and Cash Equivalents, End of Period											
	Change in Cash		0		300000000	10000000	338,000,000,000					
	Effect of Exchange Rate Changes		20945000000	23719000000	23630000000	26622000000	26,465,000,000					
	Cash and Cash Equivalents, Beginning of Period		25930000000	235000000000	3175000000	300000000	6,126,000,000					
	Cash Flow Supplemental Section		181000000000	146000000000	183000000	143000000	210,000,000					
	Change in Cash as Reported, Supplemental		23719000000000	23630000000000	26622000000000	26465000000000	20,129,000,000,000					
	Income Tax Paid, Supplemental		2774000000	89000000	2992000000		6,336,000,000					
	Cash and Cash Equivalents, Beginning of Period		13412000000	157000000			-4,990,000,000					
												
	12 Months Ended											
	_________________________________________________________											
				Q4 2020			Q4  2019					
	Income Statement 											
	USD in "000'"s											
	Repayments for Long Term Debt			Dec. 31, 2020			Dec. 31, 2019					
	Costs and expenses:											
	Cost of revenues			182527			161,857					
	Research and development											
	Sales and marketing			84732			71,896					
	General and administrative			27573			26,018					
	European Commission fines			17946			18,464					
	Total costs and expenses			11052			9,551					
	Income from operations			0			1,697					
	Other income (expense), net			141303			127,626					
	Income before income taxes			41224			34,231					
	Provision for income taxes			6858000000			5,394					
	Net income			22677000000			19,289,000,000					
	*include interest paid, capital obligation, and underweighting			22677000000			19,289,000,000					
				22677000000			19,289,000,000					
	Basic net income per share of Class A and B common stock and Class C capital stock (in dollars par share)--											
	Diluted net income per share of Class A and Class B common stock and Class C capital stock (in dollars par share)											
												
												
	For Paperwork Reduction Act Notice, see the seperate Instructions.											
	JPMORGAN TRUST III											
	A/R Aging Summary											
	As of July 28, 2022											
	ZACHRY T WOOD
		Days over due									
	Effeective Tax Rate Prescribed by the Secretary of the Treasury.		44591	31 - 60	61 - 90	91 and over						
	
								
	TOTAL			 £134,839.00
	 Alphabet Inc.  											
	


							
	 =USD('"'$'"'-in'-millions)"											
	 Ann. Rev. Date 	 £43,830.00 	 £43,465.00 	 £43,100.00 	 £42,735.00 	 £42,369.00 						
	 Revenues 	 £161,857.00 	 £136,819.00 	 £110,855.00 	 £90,272.00 	 £74,989.00 						
	 Cost of revenues 	-£71,896.00 	-£59,549.00 	-£45,583.00 	-£35,138.00 	-£28,164.00 						
	 Gross profit 	 £89,961.00 	 £77,270.00 	 £65,272.00 	 £55,134.00 	 £46,825.00 						
	 Research and development 	-£26,018.00 	-£21,419.00 	-£16,625.00 	-£13,948.00 	-£12,282.00 						
	 Sales and marketing 	-£18,464.00 	-£16,333.00 	-£12,893.00 	-£10,485.00 	-£9,047.00 						
	 General and administrative 	-£9,551.00 	-£8,126.00 	-£6,872.00 	-£6,985.00 	-£6,136.00 						
	 European Commission fines 	-£1,697.00 	-£5,071.00 	-£2,736.00 	 — 	 — 						
	 Income from operations 	 £34,231.00 	 £26,321.00 	 £26,146.00 	 £23,716.00 	 £19,360.00 						
	 Interest income 	 £2,427.00 	 £1,878.00 	 £1,312.00 	 £1,220.00 	 £999.00:,''

'"Publish::":,'''
'"Launch::":,''
'"Release::":,''
'"Deploy::":, "Deposit'@47-2041-6547'@071921891'@pnc.com/mybusiness/":,''
'"const":,'' 
'"322,203 63,069,282 90,262,454 11,073,033 15,576,684 260,314,845
:Build::
PUBLISH:
LAUNCH:
RELEASE:
DEPLOY :AUTOMATE
AUTOMATE :DISPATCH 👍 ::From 4e8bc6c0180cbeb882f6c425ff38a41db1a79e76 Mon Sep 17 00:00:00 2001
From: ZACHRY T WOOD <109656750+zakwarlord7@users.noreply.github.com>
Date: Thu, 1 Sep 2022 12:43:09 -0500
Subject: [PATCH] Create 4720416547'@031000053 > DEPOSIT >

---
 .../4720416547'@031000053 > DEPOSIT >         | 36 +++++++++++++++++++
 1 file changed, 36 insertions(+)
 create mode 100644 .github/workflows/071921891/4720416547'@031000053 > DEPOSIT >

diff --git a/.github/workflows/071921891/4720416547'@031000053 > DEPOSIT > b/.github/workflows/071921891/4720416547'@031000053 > DEPOSIT >
new file mode 100644
index 00000000..9f0ebb86
--- /dev/null
+++ b/.github/workflows/071921891/4720416547'@031000053 > DEPOSIT >	
@@ -0,0 +1,36 @@
+# This is a basic workflow to help you get started with Actions
+
+name: CI
+
+# Controls when the workflow will run
+on:
+  # Triggers the workflow on push or pull request events but only for the "master" branch
+  push:
+    branches: [ "master" ]
+  pull_request:
+    branches: [ "master" ]
+
+  # Allows you to run this workflow manually from the Actions tab
+  workflow_dispatch:
+
+# A workflow run is made up of one or more jobs that can run sequentially or in parallel
+jobs:
+  # This workflow contains a single job called "build"
+  build:
+    # The type of runner that the job will run on
+    runs-on: ubuntu-latest
+
+    # Steps represent a sequence of tasks that will be executed as part of the job
+    steps:
+      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
+      - uses: actions/checkout@v3
+
+      # Runs a single command using the runners shell
+      - name: Run a one-line script
+        run: echo Hello, world!
+
+      # Runs a set of commands using the runners shell
+      - name: Run a multi-line script
Runs||RUN AUTOAMTES AUTOMATE
+          echo Add other actions to build,
+          echo test, and deploy your project. :
DISPATCH :AUTOMATE
AUTOMATES  
<span style="color: rgb(0, 0, 0); font-family: Georgia; font-size: medium; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255); text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; display: inline !important; float: none;">424B3<span> </span></span><sequence style="color: rgb(0, 0, 0); font-family: Georgia; font-size: medium; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255); text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;">1<span> </span><filename>d424b3.htm<span> </span><description>FORM 424B3<text><h5 align="left"><a href="https://www.sec.gov/Archives/edgar/data/0000869090/000119312508097681/d424b3.htm#toc">Table of Contents</a></h5><p align="right" style="margin-top: 0px; margin-bottom: 0px;"><font face="Times New Roman" size="2">Filed Pursuant to Rule 424(b)(3)</font></p><p align="right" style="margin-top: 0px; margin-bottom: 0px;"><font face="Times New Roman" size="2">Registration No. 333-145109</font></p><p style="margin-top: 0px; margin-bottom: 0px;"><font size="1"> </font></p><p align="center" style="margin-top: 0px; margin-bottom: 0px;"><font face="Times New Roman" size="3">Prospectus dated May 1, 2008</font></p><p style="margin-top: 0px; margin-bottom: 0px;"><font size="1"> </font></p><p align="center" style="margin-top: 0px; margin-bottom: 0px;"><font face="Times New Roman" size="5"><b>Chase Issuance Trust</b></font></p><p align="center" style="margin-top: 0px; margin-bottom: 0px;"><font face="Times New Roman" size="3"><b>Issuing Entity</b></font></p><p style="margin-top: 0px; margin-bottom: 0px;"><font size="1"> </font></p><p align="center" style="margin-top: 0px; margin-bottom: 0px;"><font face="Times New Roman" size="5"><b>Chase Bank USA, National Association</b></font></p><p align="center" style="margin-top: 0px; margin-bottom: 0px;"><font face="Times New Roman" size="3"><b>Sponsor, Depositor, Originator, Administrator and Servicer</b></font></p><p style="margin-top: 0px; margin-bottom: 0px;"><font size="1"> </font></p><p style="margin-top: 0px; margin-bottom: 0px; margin-left: 451.003px; text-indent: 7%;"><font face="Times New Roman" size="3"><b>The issuing entity—</b></font></p><p style="margin-top: 0px; margin-bottom: -6px;"><font size="1"> </font></p>

  | • |   | may periodically issue notes in a series comprised of one or more classes or tranches;
-- | -- | -- | --


<p style="margin-top: 0px; margin-bottom: 0px;"><font size="1"> </font></p><p style="margin-top: 0px; margin-bottom: 0px; text-indent: 7%;"><font face="Times New Roman" size="2"><b>“Principal Collections”</b><span> </span>means, for any month, the sum of (1) for credit card receivables designated for inclusion in the issuing entity, all collections other than those designated as Finance Charge Collections on revolving credit card accounts designated for that month and (2) for any collateral certificate designated for inclusion in the issuing entity, all collections of principal receivables, including Collateral Certificate Principal Shortfall Payments, allocated to the holder of that collateral certificate for that month.</font></p><p style="margin-top: 0px; margin-bottom: 0px;"><font size="1"> </font></p><p style="margin-top: 0px; margin-bottom: 0px; text-indent: 7%;"><font face="Times New Roman" size="2"><b>“Principal Payment Date”</b><span> </span>means, for any series, class or tranche of notes, any date on which a payment in respect of principal is to be made.</font></p><p style="margin-top: 0px; margin-bottom: 0px;"><font size="1"> </font></p><p style="margin-top: 0px; margin-bottom: 0px; text-indent: 7%;"><font face="Times New Roman" size="2"><b>“Rapid Amortization Period”</b><span> </span>means (1) for Series 2002-CC, the period beginning on and including the pay out commencement date and ending on the earlier of the Series 2002-CC termination date and the First USA Master Trust Termination Date and (2) for Series 2004-CC, the period beginning on and including the pay out commencement date and ending on the earlier of the Series 2004-CC termination date and the Chase Master Trust Termination Date.</font></p><p style="margin-top: 0px; margin-bottom: 0px;"><font size="1"> </font></p><p style="margin-top: 0px; margin-bottom: 0px; text-indent: 7%;"><font face="Times New Roman" size="2"><b>“Rating Agency”</b><span> </span>means, with respect to each series, the rating agency or agencies, if any, specified in the related prospectus supplement.</font></p><p style="margin-top: 0px; margin-bottom: 0px;"><font size="1"> </font></p><p style="margin-top: 0px; margin-bottom: 0px; text-indent: 7%;"><font face="Times New Roman" size="2"><b>“Receivables Servicing Fee”</b><span> </span>means, for any month, one-twelfth of the product of (1) the Receivables Servicing Fee Percentage and (2) the Issuing Entity Average Principal Balance for that month.</font></p><p style="margin-top: 0px; margin-bottom: 0px;"><font size="1"> </font></p><p align="center" style="margin-top: 0px; margin-bottom: 0px;"><font face="Times New Roman" size="2">172</font></p><p style="break-before: page;"></p><hr size="3" color="#999999" width="100%" align="CENTER"><h5 align="left"><a href="https://www.sec.gov/Archives/edgar/data/0000869090/000119312508097681/d424b3.htm#toc">Table of Contents</a></h5><p style="margin-top: 0px; margin-bottom: 0px; text-indent: 7%;"><font face="Times New Roman" size="2"><b>“Receivables Servicing Fee Percentage”</b><span> </span>means, 1.50% for so long as Chase Bank USA, National Association is the servicer, or 2.00% if Chase Bank USA, National Association is no longer the servicer.</font></p><p style="margin-top: 0px; margin-bottom: 0px;"><font size="1"> </font></p><p style="margin-top: 0px; margin-bottom: 0px; text-indent: 7%;"><font face="Times New Roman" size="2"><b>“Recoveries”</b><span> </span>means Chase Master Trust Recoveries, First USA Master Trust Recoveries or Issuing Entity Recoveries, as applicable.</font></p><p style="margin-top: 0px; margin-bottom: 0px;"><font size="1"> </font></p><p style="margin-top: 0px; margin-bottom: 0px; text-indent: 7%;"><font face="Times New Roman" size="2"><b>“Regulation AB”</b><span> </span>shall mean Subpart 229.1100 — Asset Backed Securities (Regulation AB), 17 C.F.R. §§229.1100-229.1123, as such may be amended from time to time, and subject to such clarification and interpretation as have been provided by the SEC in the adopting release (Asset-Backed Securities, Securities Act Release No. 33-8518, 70 Fed. Reg. 1,506, 1,531 (Jan. 7, 2005)) or by the staff of the SEC, or as may be provided by the SEC or its staff from time to time.</font></p><p style="margin-top: 0px; margin-bottom: 0px;"><font size="1"> </font></p><p style="margin-top: 0px; margin-bottom: 0px; text-indent: 7%;"><font face="Times New Roman" size="2"><b>“Removal Date”</b><span> </span>means the date of any removal of credit card receivables in revolving credit card accounts from the First USA Master Trust Portfolio or the Chase Master Trust Portfolio, as applicable.</font></p><p style="margin-top: 0px; margin-bottom: 0px;"><font size="1"> </font></p><p style="margin-top: 0px; margin-bottom: 0px; text-indent: 7%;"><font face="Times New Roman" size="2"><b>“Required Transferor Amount”</b><span> </span>means, for any month, the product of (1) with respect to any date of determination, the aggregate outstanding dollar amount of receivables in the issuing entity that are principal receivables as of the close of business on the last day of that month and (2) the Required Transferor Amount Percentage.</font></p><p style="margin-top: 0px; margin-bottom: 0px;"><font size="1"> </font></p><p style="margin-top: 0px; margin-bottom: 0px; text-indent: 7%;"><font face="Times New Roman" size="2"><b>“Required Transferor Amount Percentage”</b><span> </span>means 4% or such other percentage as will be designated from time to time by the servicer, but, if that other percentage is less than 4%, the servicer must have provided to the indenture trustee and the collateral agent (A) an Issuing Entity Tax Opinion, and (B) written confirmation from each rating agency that has rated any outstanding notes that the change will not result in the reduction, qualification with negative implications or withdrawal of its then-current rating of any outstanding notes.</font></p><p style="margin-top: 0px; margin-bottom: 0px;"><font size="1"> </font></p><p style="margin-top: 0px; margin-bottom: 0px; text-indent: 7%;"><font face="Times New Roman" size="2"><b>“Revolving Period”</b><span> </span>means a First USA Collateral Certificate Revolving Period or a Chase Collateral Certificate Revolving Period.</font></p><p style="margin-top: 0px; margin-bottom: 0px;"><font size="1"> </font></p><p style="margin-top: 0px; margin-bottom: 0px; text-indent: 7%;"><font face="Times New Roman" size="2"><b>“Scheduled Principal Payment Date”</b><span> </span>means, for any series, class or tranche of notes, the date on which the stated principal amount of that series, class or tranche is expected to be repaid.</font></p><p style="margin-top: 0px; margin-bottom: 0px;"><font size="1"> </font></p><p style="margin-top: 0px; margin-bottom: 0px; text-indent: 7%;"><font face="Times New Roman" size="2"><b>“SEC”</b><span> </span>means the United States Securities and Exchange Commission, as from time to time constituted, created under the Securities Exchange Act of 1934, as amended.</font></p><p style="margin-top: 0px; margin-bottom: 0px;"><font size="1"> </font></p><p style="margin-top: 0px; margin-bottom: 0px; text-indent: 7%;"><font face="Times New Roman" size="2"><b>“Segregated Finance Charge Collections”</b><span> </span>has the meaning described in<span> </span><i>“Deposit and Application of Funds in the Issuing Entity—Segregated Finance Charge Collections.”</i></font></p><p style="margin-top: 0px; margin-bottom: 0px;"><font size="1"> </font></p><p style="margin-top: 0px; margin-bottom: 0px; text-indent: 7%;"><font face="Times New Roman" size="2"><b>“Servicing Fee”</b><span> </span>means, for any month, the product of (1) the Receivables Servicing Fee for that month and (2) the CHASEseries Floating Allocation Percentage for that month.</font></p><p style="margin-top: 0px; margin-bottom: 0px;"><font size="1"> </font></p><p style="margin-top: 0px; margin-bottom: 0px; text-indent: 7%;"><font face="Times New Roman" size="2"><b>“Servicing Fee Percentage”</b><span> </span>means, for any month, the annualized percentage equivalent of a fraction, the numerator of which is the Servicing Fee and the denominator of which is the Nominal Liquidation Amount used in the calculation of the CHASEseries Floating Allocation Percentage for that month.</font></p><p style="margin-top: 0px; margin-bottom: 0px;"><font size="1"> </font></p><p style="margin-top: 0px; margin-bottom: 0px; text-indent: 7%;"><font face="Times New Roman" size="2"><b>“SFAS 140”</b><span> </span>means Statement of Financial Accounting Standards No. 140, Accounting for Transfers and Servicing of Financial Assets and Extinguishments of Liabilities, a replacement of FASB Statement 125, or any replacement FASB Statement, or amendment or interpretation thereof.</font></p><p style="margin-top: 0px; margin-bottom: 0px;"><font size="1"> </font></p><p style="margin-top: 0px; margin-bottom: 0px; text-indent: 7%;"><font face="Times New Roman" size="2"><b>“Shared Excess Available Finance Charge Collections”</b><span> </span>means, for any month, as of the related determination date, with respect to any series of notes in Shared Excess Available Finance Charge Collections Group A, the sum of (1) the amount of Available Finance Charge Collections with respect to that month,</font></p><p style="margin-top: 0px; margin-bottom: 0px;"><font size="1"> </font></p><p align="center" style="margin-top: 0px; margin-bottom: 0px;"><font face="Times New Roman" size="2">173</font></p><p style="break-before: page;"></p><hr size="3" color="#999999" width="100%" align="CENTER"><h5 align="left"><a href="https://www.sec.gov/Archives/edgar/data/0000869090/000119312508097681/d424b3.htm#toc">Table of Contents</a></h5><p style="margin-top: 0px; margin-bottom: 0px;"><font face="Times New Roman" size="2">available after application to cover targeted deposits to the interest funding account, payment of the Servicing Fee and application to cover any unfunded CHASEseries Default Amount or any deficits in the Nominal Liquidation Amount of the notes, targeted deposits to the Class C reserve account, if applicable, and any other payments in respect of CHASEseries notes and (2) the Finance Charge Collections remaining after all required payments and deposits from all other series identified as belonging to Shared Excess Available Finance Charge Collections Group A which the applicable indenture supplements for those series specify are to be treated as “Shared Excess Available Finance Charge Collections.”</font></p><p style="margin-top: 0px; margin-bottom: 0px;"><font size="1"> </font></p><p style="margin-top: 0px; margin-bottom: 0px; text-indent: 7%;"><font face="Times New Roman" size="2"><b>“Shared Excess Available Finance Charge Collections Group A”</b><span> </span>means the various series of notes—which will include the CHASEseries notes—that may be designated as a single group for the purpose of sharing Shared Excess Available Finance Charge Collections.</font></p><p style="margin-top: 0px; margin-bottom: 0px;"><font size="1"> </font></p><p style="margin-top: 0px; margin-bottom: 0px; text-indent: 7%;"><font face="Times New Roman" size="2"><b>“Shared Excess Available Principal Collections”</b><span> </span>means, for any month, the sum of (1) with respect to the notes, the amount of Available Principal Collections remaining after all required applications of those amounts described in<span> </span><i>“Deposit and Application of Funds in the Issuing Entity—Application of Available Principal Collections,”</i><span> </span>(2) with respect to any series of notes other than the CHASEseries, the Principal Collections allocated to that series of notes remaining after all required payments and deposits that are specified to be treated as “Shared Excess Available Principal Collections” in the applicable indenture supplement, and (3) the aggregate amount on deposit in the excess funding account following any deposit or withdrawal made during that month as described in<span> </span><i>“Sources of Funds to Pay the Notes—Issuing Entity Bank Accounts.”</i></font></p><p style="margin-top: 0px; margin-bottom: 0px;"><font size="1"> </font></p><p style="margin-top: 0px; margin-bottom: 0px; text-indent: 7%;"><font face="Times New Roman" size="2"><b>“Transfer Date”</b><span> </span>means the Business Day immediately prior to the applicable distribution date for any series of certificates issued by the Chase Master Trust or the First USA Master Trust.</font></p><p style="margin-top: 0px; margin-bottom: 0px;"><font size="1"> </font></p><p style="margin-top: 0px; margin-bottom: 0px; text-indent: 7%;"><font face="Times New Roman" size="2"><b>“Transferor Amount”</b><span> </span>means, for any month, an amount equal to (1) the Pool Balance for that month minus (2) the aggregate Nominal Liquidation Amount of all notes as of the close of business on the last day of that month.</font></p><p style="margin-top: 0px; margin-bottom: 0px;"><font size="1"> </font></p><p style="margin-top: 0px; margin-bottom: 0px; text-indent: 7%;"><font face="Times New Roman" size="2"><b>“Transferor Certificate”</b><span> </span>means (1) the certificate representing the Transferor Amount or (2) the uncertificated interest in the issuing entity comprising the Transferor Amount.</font></p><p style="margin-top: 0px; margin-bottom: 0px;"><font size="1"> </font></p><p style="margin-top: 0px; margin-bottom: 0px; text-indent: 7%;"><font face="Times New Roman" size="2"><b>“Transferor Percentage”</b><span> </span>means, for any month, 100% minus the sum of the aggregate CHASEseries Noteholder Percentage of all series outstanding with respect to Principal Collections, Finance Charge Collections, the Receivables Servicing Fee or the Default Amount, as applicable.</font></p><p style="margin-top: 0px; margin-bottom: 0px;"><font size="1"> </font></p><p style="margin-top: 0px; margin-bottom: 0px; text-indent: 7%;"><font face="Times New Roman" size="2"><b>“Trust Portfolios”</b><span> </span>means the First USA Master Trust Portfolio, the Chase Master Trust Portfolio and the issuing entity portfolio.</font></p><p style="margin-top: 0px; margin-bottom: 0px;"><font size="1"> </font></p><p style="margin-top: 0px; margin-bottom: 0px; text-indent: 7%;"><font face="Times New Roman" size="2"><b>“UCC”</b><span> </span>means the Uniform Commercial Code as in effect from time to time in the applicable jurisdiction.</font></p><p style="margin-top: 0px; margin-bottom: 0px;"><font size="1"> </font></p><p style="margin-top: 0px; margin-bottom: 0px; text-indent: 7%;"><font face="Times New Roman" size="2"><b>“Unapplied Excess Finance Charge Collections”</b><span> </span>has the meaning described in<i><span> </span>“Deposit and Application of Funds in the Issuing Entity—Unapplied Excess Finance Charge Collections and Unapplied Master Trust Level Excess Finance Charge Collections.”</i></font></p><p style="margin-top: 0px; margin-bottom: 0px;"><font size="1"> </font></p><p style="margin-top: 0px; margin-bottom: 0px; text-indent: 7%;"><font face="Times New Roman" size="2"><b>“Unapplied Master Trust Level Excess Finance Charge Collections”</b><span> </span>has the meaning described in<span> </span><i>“Deposit and Application of Funds in the Issuing Entity—Unapplied Excess Finance Charge Collections and Unapplied Master Trust Level Excess Finance Charge Collections.”</i></font></p><p style="margin-top: 0px; margin-bottom: 0px;"><font size="1"> </font></p><p style="margin-top: 0px; margin-bottom: 0px; text-indent: 7%;"><font face="Times New Roman" size="2"><b>“Unapplied Master Trust Level Principal Collections”</b><span> </span>has the meaning described in<span> </span><i>“Deposit and Application of Funds in the Issuing Entity—Unapplied Master Trust Level Principal Collections.”</i></font></p><p style="margin-top: 0px; margin-bottom: 0px;"><font size="1"> </font></p><p align="center" style="margin-top: 0px; margin-bottom: 0px;"><font face="Times New Roman" size="2">174</font></p></text></description></filename></sequence>-::Run'@https:://pnc.com/https:://pnc.com/README.md/README.md/071921891/071921891/README.md/README.md/47-2041-6547/47-2041-6547/README.md/README.md 




Show | Show
-- | --
Show

<div id="header" style="color: rgb(0, 0, 0); font-family: Verdana, Helvetica, sans-serif; font-size: 13.3333px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; width: 1501.81px; position: relative;"><div id="logos"><div class="copy" style="height: 71px;"><div style="float: left;"><img src="https://paysimple.com/help/ADP/ADP_Logo_big.jpg" alt="ADP Payments" border="0" style="margin: 0px 0px 15px;"></div><div class="paysimple"><p style="margin: 14pt 0pt; font-family: Verdana, Helvetica, sans-serif; font-size: 10pt; color: rgb(51, 51, 51); text-align: right;"><img src="https://paysimple.com/help/ADP/logo-paysimple-long.png" alt="" border="0" style="border: none; margin: 20px 0px 0px;"></p></div></div></div></div><div style="color: rgb(0, 0, 0); font-family: Verdana, Helvetica, sans-serif; font-size: 13.3333px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; height: 25px;"><p style="margin: 14pt 0pt; font-family: Arial; font-size: 10pt; color: rgb(51, 51, 51); text-align: left; font-weight: normal; font-style: normal; text-decoration: none;"><span id="brseq0"><a href="https://paysimple.com/help/ADP/Welcome.htm" style="font-family: Arial; font-size: 10pt; font-weight: normal; font-style: normal; text-decoration: none;">Home</a><span> </span>&gt;<span> </span></span><a href="https://paysimple.com/help/ADP/ps30/7-reports/Reports.htm" style="font-family: Arial; font-size: 10pt; font-weight: normal; font-style: normal; text-decoration: none;">Chapter 7: Reports</a><span> </span>&gt;<span> </span><a href="https://paysimple.com/help/ADP/ps30/7-reports/Sample_Custom_Reports.htm" style="font-family: Arial; font-size: 10pt; font-weight: normal; font-style: normal; text-decoration: none;">Sample Custom Reports</a><span> </span>&gt; Echeck (ACH) Transaction Report</p></div><h2 style="margin: 16pt 36pt 14pt 0px; text-align: left; text-indent: 0px; word-spacing: 0.25em; letter-spacing: normal; font-family: Verdana, Helvetica, sans-serif; font-size: 14pt; font-weight: normal; font-style: normal; color: rgb(77, 79, 83); text-transform: uppercase; border-bottom-style: solid; border-bottom-width: 4px; text-decoration: none; font-variant-ligatures: normal; font-variant-caps: normal; orphans: 2; white-space: normal; widows: 2; -webkit-text-stroke-width: 0px;"><a name="IX_Echeck_ACH"></a><a name="IX_Samples_1"></a>ECHECK (ACH)<span> </span><a name="XREF_achcr"></a>TRANSACTION REPORT</h2><p class="BodyLevel1" style="margin: 12pt 0pt 12pt 0in; font-family: Verdana; font-size: 13.3333px; color: rgb(51, 51, 51); text-align: left; text-indent: 0px; word-spacing: 0.25em; font-style: normal; font-weight: 400; letter-spacing: normal; text-decoration: none; font-variant-ligatures: normal; font-variant-caps: normal; orphans: 2; text-transform: none; white-space: normal; widows: 2; -webkit-text-stroke-width: 0px;">Use this configuration to create a report containing all of the Echeck (ACH) transactions processed in your ADP Payments account for any given date range.</p><p class="BodyLevel1" style="margin: 12pt 0pt 12pt 0in; font-family: Verdana; font-size: 13.3333px; color: rgb(51, 51, 51); text-align: left; text-indent: 0px; word-spacing: 0.25em; font-style: normal; font-weight: 400; letter-spacing: normal; text-decoration: none; font-variant-ligatures: normal; font-variant-caps: normal; orphans: 2; text-transform: none; white-space: normal; widows: 2; -webkit-text-stroke-width: 0px;"> </p><p class="BodyLevel1" style="margin: 12pt 0pt 8pt 0in; font-family: Verdana; font-size: 13.3333px; color: rgb(51, 51, 51); text-align: left; text-indent: 0px; word-spacing: 0.25em; font-style: normal; font-weight: 400; letter-spacing: normal; text-decoration: none; font-variant-ligatures: normal; font-variant-caps: normal; orphans: 2; text-transform: none; white-space: normal; widows: 2; -webkit-text-stroke-width: 0px;">To create an Echeck (ACH) Transaction report, follow the steps for<span> </span><a href="https://paysimple.com/help/ADP/ps30/7-reports/Creating_Custom_Reports.htm#XREF_ccr"><span class="FM_Emphasis">Creating Custom Reports</span></a> described above, and use the following filters:<img alt="sample_report_achtrans.jpg" id="image119" src="https://paysimple.com/help/ADP/ps30/7-reports/sample_report_achtrans.jpg" width="345" height="360" align="right" border="3" style="margin-left: 2pt; margin-top: 4pt; margin-bottom: 6pt; border: 2pt solid rgb(173, 175, 175);"></p><ul style="color: rgb(0, 0, 0); font-family: Verdana, Helvetica, sans-serif; font-size: 13.3333px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; list-style: disc;"><li><p class="BodyLevel1" style="margin: 12pt 0pt 12pt 0in; font-family: Verdana; font-size: 10pt; color: rgb(51, 51, 51); text-align: left; text-indent: 0pt; word-spacing: 0.25em; font-style: normal; font-weight: normal; letter-spacing: 0em; text-decoration: none;">Check both the<span style="font-weight: bold;"> Transactions<span> </span></span>and the<span style="font-weight: bold;"> Customers</span> checkboxes in the<span> </span><span style="font-weight: bold;">Include in Report</span><span> </span>section.</p></li><li><p class="BodyLevel1" style="margin: 12pt 0pt 12pt 0in; font-family: Verdana; font-size: 10pt; color: rgb(51, 51, 51); text-align: left; text-indent: 0pt; word-spacing: 0.25em; font-style: normal; font-weight: normal; letter-spacing: 0em; text-decoration: none;">Set the<span> </span><span style="font-weight: bold;">Date Range</span> filters to “all,” select a rolling date range, or enter a custom<span> </span><span style="font-weight: bold;">Start date</span> and<span> </span><span style="font-weight: bold;">End date</span>. Then select whether you want to<span> </span><span style="font-weight: bold;">Report on</span> transactions by “Enter date” or “Settle date.”</p></li><li><p class="BodyLevel1" style="margin: 12pt 0pt 12pt 0in; font-family: Verdana; font-size: 10pt; color: rgb(51, 51, 51); text-align: left; text-indent: 0pt; word-spacing: 0.25em; font-style: normal; font-weight: normal; letter-spacing: 0em; text-decoration: none;">In the<span> </span><span style="font-weight: bold;">Payment Options</span> section, check only the<span style="font-weight: bold;"><span> </span>E-Check</span> box in the<span> </span><span style="font-weight: bold;">Type</span><span> </span>section.</p></li><li><p class="BodyLevel1" style="margin: 12pt 0pt 12pt 0in; font-family: Verdana; font-size: 10pt; color: rgb(51, 51, 51); text-align: left; text-indent: 0pt; word-spacing: 0.25em; font-style: normal; font-weight: normal; letter-spacing: 0em; text-decoration: none;">In the<span> </span><span style="font-weight: bold;">Payment Options</span> section, check the<span> </span><span style="font-weight: bold;">All<span> </span></span>box under<span> </span><span style="font-weight: bold;">Status</span>.</p></li><ul style="list-style: disc;"><li><p class="BodyLevel1" style="margin: 12pt 0pt 5pt 0in; font-family: Verdana; font-size: 10pt; color: rgb(51, 51, 51); text-align: left; text-indent: 0pt; word-spacing: 0.25em; font-style: normal; font-weight: normal; letter-spacing: 0em; text-decoration: none;">Suggested fields to add to the report:</p></li><li><p class="BodyLevel1" style="margin: 12pt 0pt 4pt 0in; font-family: Verdana; font-size: 10pt; color: rgb(51, 51, 51); text-align: left; text-indent: 0pt; word-spacing: 0.25em; font-style: normal; font-weight: normal; letter-spacing: 0em; text-decoration: none;">Transaction.Transaction ID</p></li><li><p class="BodyLevel1" style="margin: 12pt 0pt 4pt 0in; font-family: Verdana; font-size: 10pt; color: rgb(51, 51, 51); text-align: left; text-indent: 0pt; word-spacing: 0.25em; font-style: normal; font-weight: normal; letter-spacing: 0em; text-decoration: none;">Transaction.Transaction Date</p></li><li><p class="BodyLevel1" style="margin: 12pt 0pt 4pt 0in; font-family: Verdana; font-size: 10pt; color: rgb(51, 51, 51); text-align: left; text-indent: 0pt; word-spacing: 0.25em; font-style: normal; font-weight: normal; letter-spacing: 0em; text-decoration: none;">Transaction.Status</p></li><li><p class="BodyLevel1" style="margin: 12pt 0pt 4pt 0in; font-family: Verdana; font-size: 10pt; color: rgb(51, 51, 51); text-align: left; text-indent: 0pt; word-spacing: 0.25em; font-style: normal; font-weight: normal; letter-spacing: 0em; text-decoration: none;">Transaction.Payment Type</p></li><li><p class="BodyLevel1" style="margin: 12pt 0pt 4pt 0in; font-family: Verdana; font-size: 10pt; color: rgb(51, 51, 51); text-align: left; text-indent: 0pt; word-spacing: 0.25em; font-style: normal; font-weight: normal; letter-spacing: 0em; text-decoration: none;">Transaction.Amount</p></li><li><p class="BodyLevel1" style="margin: 12pt 0pt 4pt 0in; font-family: Verdana; font-size: 10pt; color: rgb(51, 51, 51); text-align: left; text-indent: 0pt; word-spacing: 0.25em; font-style: normal; font-weight: normal; letter-spacing: 0em; text-decoration: none;">Transaction.Masked Account Number</p></li><li><p class="BodyLevel1" style="margin: 12pt 0pt 4pt 0in; font-family: Verdana; font-size: 10pt; color: rgb(51, 51, 51); text-align: left; text-indent: 0pt; word-spacing: 0.25em; font-style: normal; font-weight: normal; letter-spacing: 0em; text-decoration: none;">Transaction.Estimated Settle Date</p></li><li><p class="BodyLevel1" style="margin: 12pt 0pt 4pt 0in; font-family: Verdana; font-size: 10pt; color: rgb(51, 51, 51); text-align: left; text-indent: 0pt; word-spacing: 0.25em; font-style: normal; font-weight: normal; letter-spacing: 0em; text-decoration: none;">Transaction.Actual Settlement Date</p></li><li><p class="BodyLevel1" style="margin: 12pt 0pt 4pt 0in; font-family: Verdana; font-size: 10pt; color: rgb(51, 51, 51); text-align: left; text-indent: 0pt; word-spacing: 0.25em; font-style: normal; font-weight: normal; letter-spacing: 0em; text-decoration: none;">Transaction.Invoice Number</p></li><li><p class="BodyLevel1" style="margin: 12pt 0pt 4pt 0in; font-family: Verdana; font-size: 10pt; color: rgb(51, 51, 51); text-align: left; text-indent: 0pt; word-spacing: 0.25em; font-style: normal; font-weight: normal; letter-spacing: 0em; text-decoration: none;">Transaction.Schedule Id</p></li><li><p class="BodyLevel1" style="margin: 12pt 0pt 4pt 0in; font-family: Verdana; font-size: 10pt; color: rgb(51, 51, 51); text-align: left; text-indent: 0pt; word-spacing: 0.25em; font-style: normal; font-weight: normal; letter-spacing: 0em; text-decoration: none;">Customer.Customer ID</p></li><li><p class="BodyLevel1" style="margin: 12pt 0pt 4pt 0in; font-family: Verdana; font-size: 10pt; color: rgb(51, 51, 51); text-align: left; text-indent: 0pt; word-spacing: 0.25em; font-style: normal; font-weight: normal; letter-spacing: 0em; text-decoration: none;">Customer.Account Number</p></li><li><p class="BodyLevel1" style="margin: 12pt 0pt 4pt 0in; font-family: Verdana; font-size: 10pt; color: rgb(51, 51, 51); text-align: left; text-indent: 0pt; word-spacing: 0.25em; font-style: normal; font-weight: normal; letter-spacing: 0em; text-decoration: none;">Customer.Company</p></li><li><p class="BodyLevel1" style="margin: 12pt 0pt 4pt 0in; font-family: Verdana; font-size: 10pt; color: rgb(51, 51, 51); text-align: left; text-indent: 0pt; word-spacing: 0.25em; font-style: normal; font-weight: normal; letter-spacing: 0em; text-decoration: none;">Customer.First Name</p></li><li><p class="BodyLevel1" style="margin: 12pt 0pt 4pt 0in; font-family: Verdana; font-size: 10pt; color: rgb(51, 51, 51); text-align: left; text-indent: 0pt; word-spacing: 0.25em; font-style: normal; font-weight: normal; letter-spacing: 0em; text-decoration: none;">Customer.Last Name</p></li><li><p class="BodyLevel1" style="margin: 12pt 0pt 4pt 0in; font-family: Verdana; font-size: 10pt; color: rgb(51, 51, 51); text-align: left; text-indent: 0pt; word-spacing: 0.25em; font-style: normal; font-weight: normal; letter-spacing: 0em; text-decoration: none;">Customer.Billing City</p></li><li><p class="BodyLevel1" style="margin: 12pt 0pt 4pt 0in; font-family: Verdana; font-size: 10pt; color: rgb(51, 51, 51); text-align: left; text-indent: 0pt; word-spacing: 0.25em; font-style: normal; font-weight: normal; letter-spacing: 0em; text-decoration: none;">Customer.Billing State</p></li><li><p class="BodyLevel1" style="margin: 12pt 0pt 4pt 0in; font-family: Verdana; font-size: 10pt; color: rgb(51, 51, 51); text-align: left; text-indent: 0pt; word-spacing: 0.25em; font-style: normal; font-weight: normal; letter-spacing: 0em; text-decoration: none;">Customer.Phone 1</p></li><li><p class="BodyLevel1" style="margin: 12pt 0pt 4pt 0in; font-family: Verdana; font-size: 10pt; color: rgb(51, 51, 51); text-align: left; text-indent: 0pt; word-spacing: 0.25em; font-style: normal; font-weight: normal; letter-spacing: 0em; text-decoration: none;">Customer.Email   </p></li></ul></ul><p class="Next" style="margin: 12pt 0pt 14pt; font-family: Verdana; font-size: 13.3333px; color: rgb(51, 51, 51); text-align: right; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;"><a href="https://paysimple.com/help/ADP/ps30/7-reports/Credit_Card_Transaction_Report.htm#XREF_cccr">Next ›</a></p><p style="margin: 14pt 0pt; font-family: Verdana, Helvetica, sans-serif; font-size: 13.3333px; color: rgb(51, 51, 51); font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;"> </p><div id="footer" style="color: rgb(0, 0, 0); font-family: Verdana, Helvetica, sans-serif; font-size: 13.3333px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; width: 1501.81px; position: relative;"><p style="margin: 14pt 0pt; font-family: Verdana, Helvetica, sans-serif; font-size: 10pt; color: rgb(51, 51, 51); text-align: right;"> </p></div>[Show](javascript:void(0);) 
ADP Payments


[Home](https://paysimple.com/help/ADP/Welcome.htm) > [Chapter 7: Reports](https://paysimple.com/help/ADP/ps30/7-reports/Reports.htm) > [Sample Custom Reports](https://paysimple.com/help/ADP/ps30/7-reports/Sample_Custom_Reports.htm) > Echeck (ACH) Transaction Report

ECHECK (ACH) TRANSACTION REPORT
Use this configuration to create a report containing all of the Echeck (ACH) transactions processed in your ADP Payments account for any given date range.

 

To create an Echeck (ACH) Transaction report, follow the steps for [Creating Custom Reports](https://paysimple.com/help/ADP/ps30/7-reports/Creating_Custom_Reports.htm#XREF_ccr) described above, and use the following filters:sample_report_achtrans.jpg

Check both the Transactions and the Customers checkboxes in the Include in Report section.

Set the Date Range filters to “all,” select a rolling date range, or enter a custom Start date and End date. Then select whether you want to Report on transactions by “Enter date” or “Settle date.”

In the Payment Options section, check only the E-Check box in the Type section.

In the Payment Options section, check the All box under Status.

Suggested fields to add to the report:

Transaction.Transaction ID

Transaction.Transaction Date

Transaction.Status

Transaction.Payment Type

Transaction.Amount

Transaction.Masked Account Number

Transaction.Estimated Settle Date

Transaction.Actual Settlement Date

Transaction.Invoice Number

Transaction.Schedule Id

Customer.Customer ID

Customer.Account Number

Customer.Company

Customer.First Name

Customer.Last Name

Customer.Billing City

Customer.Billing State

Customer.Phone 1

Customer.Email   

[Next ›](https://paysimple.com/help/ADP/ps30/7-reports/Credit_Card_Transaction_Report.htm#XREF_cccr)
Click the Action button associated with the report, then click “Add Quick Link.”

add_quick_link.png
 

You will now see the report in the Reports Quick Links list.
NOTE: If the report name is too long for the side bar, it will be abbreviated with ellipses. Mouse over the link to see the full report name.

quick_link_report_added00027.jpg
[Next ›](https://paysimple.com/help/ADP/ps30/7-reports/Deleting_Custom_Reports.htm#XREF_dcr)

Show | Show
-- | --
Show

<div id="header" style="color: rgb(0, 0, 0); font-family: Verdana, Helvetica, sans-serif; font-size: 13.3333px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; width: 1501.81px; position: relative;"><div id="logos"><div class="copy" style="height: 71px;"><div style="float: left;"><img src="https://paysimple.com/help/ADP/ADP_Logo_big.jpg" alt="ADP Payments" border="0" style="margin: 0px 0px 15px;"></div><div class="paysimple"><p style="margin: 14pt 0pt; font-family: Verdana, Helvetica, sans-serif; font-size: 10pt; color: rgb(51, 51, 51); text-align: right;"><img src="https://paysimple.com/help/ADP/logo-paysimple-long.png" alt="" border="0" style="border: none; margin: 20px 0px 0px;"></p></div></div></div></div><div style="color: rgb(0, 0, 0); font-family: Verdana, Helvetica, sans-serif; font-size: 13.3333px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; height: 25px;"><p style="margin: 14pt 0pt; font-family: Arial; font-size: 10pt; color: rgb(51, 51, 51); text-align: left; font-weight: normal; font-style: normal; text-decoration: none;"><span id="brseq0"><a href="https://paysimple.com/help/ADP/Welcome.htm" style="font-family: Arial; font-size: 10pt; font-weight: normal; font-style: normal; text-decoration: none;">Home</a><span> </span>&gt;<span> </span></span><a href="https://paysimple.com/help/ADP/ps30/7-reports/Reports.htm" style="font-family: Arial; font-size: 10pt; font-weight: normal; font-style: normal; text-decoration: none;">Chapter 7: Reports</a><span> </span>&gt;<span> </span><a href="https://paysimple.com/help/ADP/ps30/7-reports/Custom_Reports.htm" style="font-family: Arial; font-size: 10pt; font-weight: normal; font-style: normal; text-decoration: none;">Custom Reports</a><span> </span>&gt; Adding Custom Report Quick Links</p></div><h2 style="margin: 16pt 36pt 14pt 0px; text-align: left; text-indent: 0px; word-spacing: 0.25em; letter-spacing: normal; font-family: Verdana, Helvetica, sans-serif; font-size: 14pt; font-weight: normal; font-style: normal; color: rgb(77, 79, 83); text-transform: uppercase; border-bottom-style: solid; border-bottom-width: 4px; text-decoration: none; font-variant-ligatures: normal; font-variant-caps: normal; orphans: 2; white-space: normal; widows: 2; -webkit-text-stroke-width: 0px;"><a name="IX_Adding_8"></a><a name="IX_Adding_7"></a><a name="IX_Adding_6"></a>ADDING CUSTOM<span> </span><a name="XREF_acrql"></a>REPORT QUICK LINKS</h2><p class="BodyLevel1" style="margin: 12pt 0pt 12pt 0in; font-family: Verdana; font-size: 13.3333px; color: rgb(51, 51, 51); text-align: left; text-indent: 0px; word-spacing: 0.25em; font-style: normal; font-weight: 400; letter-spacing: normal; text-decoration: none; font-variant-ligatures: normal; font-variant-caps: normal; orphans: 2; text-transform: none; white-space: normal; widows: 2; -webkit-text-stroke-width: 0px;">Custom reports can be added to the<span> </span><span style="font-weight: bold;">Reports Quick Links<span> </span></span>section in side navigation by following the steps below. (For more information on<span> </span><span style="font-weight: bold;">Reports</span> <span style="font-weight: bold;">Quick</span> <span style="font-weight: bold;">Links</span> see<span> </span><a href="https://paysimple.com/help/ADP/ps30/7-reports/Reports_Quick_Links.htm#XREF_RQL"><span class="FM_Emphasis">Reports Quick Links</span></a><span> </span>above.)</p><p class="BodyLevel1" style="margin: 12pt 0pt 12pt 0in; font-family: Verdana; font-size: 13.3333px; color: rgb(51, 51, 51); text-align: left; text-indent: 0px; word-spacing: 0.25em; font-style: normal; font-weight: 400; letter-spacing: normal; text-decoration: none; font-variant-ligatures: normal; font-variant-caps: normal; orphans: 2; text-transform: none; white-space: normal; widows: 2; -webkit-text-stroke-width: 0px;"> </p><ol start="1" style="color: rgb(0, 0, 0); font-family: Verdana, Helvetica, sans-serif; font-size: 13.3333px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;"><li style="list-style: decimal;"><p class="BodyLevel1" style="margin: 12pt 0pt 12pt 0in; font-family: Verdana; font-size: 10pt; color: rgb(51, 51, 51); text-align: left; text-indent: 0pt; word-spacing: 0.25em; font-style: normal; font-weight: normal; letter-spacing: 0em; text-decoration: none;"><a name="IX_Table_9"></a>Locate the report you want to add in the<span> </span><span style="font-weight: bold;">custom reports</span><span> </span>table.</p></li><li style="list-style: decimal;"><p class="BodyLevel1" style="margin: 12pt 0pt 12pt 0in; font-family: Verdana; font-size: 10pt; color: rgb(51, 51, 51); text-align: left; text-indent: 0pt; word-spacing: 0.25em; font-style: normal; font-weight: normal; letter-spacing: 0em; text-decoration: none;"><a name="IX_Action_Menu_8"></a>Click the<span> </span><span style="font-weight: bold;">Action</span><span> </span>button associated with the report, then click “Add Quick Link.”</p><div align="left"><img alt="add_quick_link.png" id="image113" src="https://paysimple.com/help/ADP/ps30/7-reports/add_quick_link.png" style="width: 452.274pt; height: 119.214pt; margin-left: 2pt; margin-top: 4pt; margin-bottom: 6pt; border: 2pt solid rgb(173, 175, 175);"></div><p class="BodyLevel1" style="margin: 12pt 0pt 12pt 0in; font-family: Verdana; font-size: 10pt; color: rgb(51, 51, 51); text-align: left; text-indent: 0pt; word-spacing: 0.25em; font-style: normal; font-weight: normal; letter-spacing: 0em; text-decoration: none;"> </p></li><li style="list-style: decimal;"><p class="BodyLevel1" style="margin: 12pt 0pt 12pt 0in; font-family: Verdana; font-size: 10pt; color: rgb(51, 51, 51); text-align: left; text-indent: 0pt; word-spacing: 0.25em; font-style: normal; font-weight: normal; letter-spacing: 0em; text-decoration: none;">You will now see the report in the<span> </span><span style="font-weight: bold;">Reports Quick Links</span><span> </span>list.<br><span style="color: rgb(220, 30, 50);"><font color="#dc1e32">NOTE: If the report name is too long for the side bar, it will be abbreviated with ellipses. Mouse over the link to see the full report name.</font></span></p><div align="left"><img alt="quick_link_report_added00027.jpg" id="image114" src="https://paysimple.com/help/ADP/ps30/7-reports/quick_link_report_added00027.jpg" style="width: 111.024pt; height: 120.036pt; margin-left: 2pt; margin-top: 4pt; margin-bottom: 6pt; border: 2pt solid rgb(173, 175, 175);"></div><p class="BodyLevel1" style="margin: 12pt 0pt 12pt 0in; font-family: Verdana; font-size: 10pt; color: rgb(51, 51, 51); text-align: left; text-indent: 0pt; word-spacing: 0.25em; font-style: normal; font-weight: normal; letter-spacing: 0em; text-decoration: none;"></p></li></ol><p class="Next" style="margin: 12pt 0pt 14pt; font-family: Verdana; font-size: 13.3333px; color: rgb(51, 51, 51); text-align: right; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;"><a href="https://paysimple.com/help/ADP/ps30/7-reports/Deleting_Custom_Reports.htm#XREF_dcr">Next ›</a></p><p style="margin: 14pt 0pt; font-family: Verdana, Helvetica, sans-serif; font-size: 13.3333px; color: rgb(51, 51, 51); font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;"> </p><div id="footer" style="color: rgb(0, 0, 0); font-family: Verdana, Helvetica, sans-serif; font-size: 13.3333px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; width: 1501.81px; position: relative;"><p style="margin: 14pt 0pt; font-family: Verdana, Helvetica, sans-serif; font-size: 10pt; color: rgb(51, 51, 51); text-align: right;"> </p></div>[Show](javascript:void(0);) 
ADP Payments


[Home](https://paysimple.com/help/ADP/Welcome.htm) > [Chapter 7: Reports](https://paysimple.com/help/ADP/ps30/7-reports/Reports.htm) > [Custom Reports](https://paysimple.com/help/ADP/ps30/7-reports/Custom_Reports.htm) > Adding Custom Report Quick Links

ADDING CUSTOM REPORT QUICK LINKS
Custom reports can be added to the Reports Quick Links section in side navigation by following the steps below. (For more information on Reports Quick Links see [Reports Quick Links](https://paysimple.com/help/ADP/ps30/7-reports/Reports_Quick_Links.htm#XREF_RQL) above.)

 

Locate the report you want to add in the custom reports table.

Click the Action button associated with the report, then click “Add Quick Link.”

add_quick_link.png
 

You will now see the report in the Reports Quick Links list.
NOTE: If the report name is too long for the side bar, it will be abbreviated with ellipses. Mouse over the link to see the full report name.

quick_link_report_added00027.jpg
[Next ›](https://paysimple.com/help/ADP/ps30/7-reports/Deleting_Custom_Reports.htm#XREF_dcr)
Show | Show
-- | --
Show

</li></ol><p class="BodyLevel1" style="margin: 12pt 0pt 12pt 0in; font-family: Verdana; font-size: 13.3333px; color: rgb(51, 51, 51); text-align: left; text-indent: 0px; word-spacing: 0.25em; font-style: normal; font-weight: 400; letter-spacing: normal; text-decoration: none; font-variant-ligatures: normal; font-variant-caps: normal; orphans: 2; text-transform: none; white-space: normal; widows: 2; -webkit-text-stroke-width: 0px;"> </p><p class="Next" style="margin: 12pt 0pt 14pt; font-family: Verdana; font-size: 13.3333px; color: rgb(51, 51, 51); text-align: right; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;"><a href="https://paysimple.com/help/ADP/ps30/7-reports/Adding_Custom_Report_Quick_Links.htm#XREF_acrql">Next ›</a></p><p style="margin: 14pt 0pt; font-family: Verdana, Helvetica, sans-serif; font-size: 13.3333px; color: rgb(51, 51, 51); font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;"> </p><div id="footer" style="color: rgb(0, 0, 0); font-family: Verdana, Helvetica, sans-serif; font-size: 13.3333px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; width: 1501.81px; position: relative;"><p style="margin: 14pt 0pt; font-family: Verdana, Helvetica, sans-serif; font-size: 10pt; color: rgb(51, 51, 51); text-align: right;"> </p></div>[Show](javascript:void(0);) 
ADP Payments


[Home](https://paysimple.com/help/ADP/Welcome.htm) > [Chapter 7: Reports](https://paysimple.com/help/ADP/ps30/7-reports/Reports.htm) > [Custom Reports](https://paysimple.com/help/ADP/ps30/7-reports/Custom_Reports.htm) > [Subscribing to Custom Reports](https://paysimple.com/help/ADP/ps30/7-reports/Subscribing_to_Custom_Reports.htm) > Unsubscribe to a Custom Report

Unsubscribe to a Custom Report
You can unsubscribe to a custom report at any time. Simply follow the steps below:

Locate the report to which you want to unsubscribe in the custom reports table.
NOTE: You will know a report has a subscription attached to it if you see an entry in the Subscription field.

Click the Action button, then click the “Unsubscribe” link.

unsubscribe_link_custom_report.jpg
 

A pop-up window appears asking you to confirm this request. Click “yes” to continue, or “no” to leave the subscription as is.

confirm_unsubscribe.jpg
You return to the custom reports table, and the entry in the Subscription column of the table for your report will be blank.

noate.gif 

You can unsubscribe to any report in the system regardless of the user who created the subscription. So if you don’t recognize a subscription, it’s a good idea to check with your colleagues before removing it.

 

[Next ›](https://paysimple.com/help/ADP/ps30/7-reports/Adding_Custom_Report_Quick_Links.htm#XREF_acrql)
Show | Show
-- | --
Show

</li></ol><p class="BodyLevel1" style="margin: 12pt 0pt 12pt 0in; font-family: Verdana; font-size: 13.3333px; color: rgb(51, 51, 51); text-align: left; text-indent: 0px; word-spacing: 0.25em; font-style: normal; font-weight: 400; letter-spacing: normal; text-decoration: none; font-variant-ligatures: normal; font-variant-caps: normal; orphans: 2; text-transform: none; white-space: normal; widows: 2; -webkit-text-stroke-width: 0px;"> </p><p class="Next" style="margin: 12pt 0pt 14pt; font-family: Verdana; font-size: 13.3333px; color: rgb(51, 51, 51); text-align: right; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;"><a href="https://paysimple.com/help/ADP/ps30/7-reports/Adding_Custom_Report_Quick_Links.htm#XREF_acrql">Next ›</a></p><p style="margin: 14pt 0pt; font-family: Verdana, Helvetica, sans-serif; font-size: 13.3333px; color: rgb(51, 51, 51); font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;"> </p><div id="footer" style="color: rgb(0, 0, 0); font-family: Verdana, Helvetica, sans-serif; font-size: 13.3333px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; width: 1501.81px; position: relative;"><p style="margin: 14pt 0pt; font-family: Verdana, Helvetica, sans-serif; font-size: 10pt; color: rgb(51, 51, 51); text-align: right;"> </p></div>[Show](javascript:void(0);) 
ADP Payments


[Home](https://paysimple.com/help/ADP/Welcome.htm) > [Chapter 7: Reports](https://paysimple.com/help/ADP/ps30/7-reports/Reports.htm) > [Custom Reports](https://paysimple.com/help/ADP/ps30/7-reports/Custom_Reports.htm) > [Subscribing to Custom Reports](https://paysimple.com/help/ADP/ps30/7-reports/Subscribing_to_Custom_Reports.htm) > Unsubscribe to a Custom Report

Unsubscribe to a Custom Report
You can unsubscribe to a custom report at any time. Simply follow the steps below:

Locate the report to which you want to unsubscribe in the custom reports table.
NOTE: You will know a report has a subscription attached to it if you see an entry in the Subscription field.

Click the Action button, then click the “Unsubscribe” link.

unsubscribe_link_custom_report.jpg
 

A pop-up window appears asking you to confirm this request. Click “yes” to continue, or “no” to leave the subscription as is.

confirm_unsubscribe.jpg
You return to the custom reports table, and the entry in the Subscription column of the table for your report will be blank.

noate.gif 

You can unsubscribe to any report in the system regardless of the user who created the subscription. So if you don’t recognize a subscription, it’s a good idea to check with your colleagues before removing it.

 

[Next ›](https://paysimple.com/help/ADP/ps30/7-reports/Adding_Custom_Report_Quick_Links.htm#XREF_acrql)

Show | Show
-- | --
Show

<p class="Next" style="margin: 12pt 0pt 14pt; font-family: Verdana; font-size: 13.3333px; color: rgb(51, 51, 51); text-align: right; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;"><a href="https://paysimple.com/help/ADP/ps30/7-reports/Unsubscribe_to_a_Custom_Report.htm#XREF_cr_unsub">Next ›</a></p><p style="margin: 14pt 0pt; font-family: Verdana, Helvetica, sans-serif; font-size: 13.3333px; color: rgb(51, 51, 51); font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;"> </p><div id="footer" style="color: rgb(0, 0, 0); font-family: Verdana, Helvetica, sans-serif; font-size: 13.3333px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; width: 1501.81px; position: relative;"><p style="margin: 14pt 0pt; font-family: Verdana, Helvetica, sans-serif; font-size: 10pt; color: rgb(51, 51, 51); text-align: right;"> </p></div>[Show](javascript:void(0);) 
ADP Payments


[Home](https://paysimple.com/help/ADP/Welcome.htm) > [Chapter 7: Reports](https://paysimple.com/help/ADP/ps30/7-reports/Reports.htm) > [Custom Reports](https://paysimple.com/help/ADP/ps30/7-reports/Custom_Reports.htm) > [Subscribing to Custom Reports](https://paysimple.com/help/ADP/ps30/7-reports/Subscribing_to_Custom_Reports.htm) > Subscribe to a Custom Report

Subscribe to a Custom Report
Follow the steps below to subscribe to a custom report:

Locate the report to which you want to subscribe in the custom reports table on the Reports dashboard.

Click the Action button, then click the “Subscribe” link.

subscribe_link_custom_report.jpg
 

The New subscription pop-up window appears.

new_subscription_custom_report.jpg
 

Enter the email address to which you want the reports sent in the Email address field.

Click the down-arrow in the Frequency drop-down box to select how often you want the report emailed.

If you select “Weekly” or “Every other week” you will see a second drop-down box in which to select the day of the week you want the report sent.

If you select “Specific day of month,” you will see a second drop-down box in which to select the day of the month you want the report sent.

 

subscribe_select_frequency.jpg
In the Report types section, select how you would like to receive the report. Select “PDF” for an Adobe Acrobat file, or select “XLS” for an Excel file.
NOTE: You can open the file in Excel and then change its format to import data into other programs.

noate.gif 

The file provided is an XLSX file. If you are using an older version of Excel, you can install the [Microsoft Compatibility Pack](https://www.microsoft.com/en-us/download/details.aspx?id=3) so that you can open XLSX files.

Click the “save” button.

You will return to the custom reports table, and you will now see the frequency of your subscription in the Subscription field in the table.

subscription_entered.jpg
 

You will receive an email with your report on the next scheduled date.
NOTE: Scheduled reports cannot be programmed for the current date. For example, if today is Monday and I program a report to be emailed weekly on Mondays, I won’t get the first email until Monday of next week.

noate.gif 

You can’t make changes to subscription settings once they are saved. If you want to change a subscription, for example to change the email address to which the report is sent, or to change the frequency, you need to unsubscribe to the report (see [Unsubscribe to a Custom Report](https://paysimple.com/help/ADP/ps30/7-reports/Unsubscribe_to_a_Custom_Report.htm#XREF_cr_unsub) below) then subscribe again using the new settings.

[Next ›](https://paysimple.com/help/ADP/ps30/7-reports/Unsubscribe_to_a_Custom_Report.htm#XREF_cr_unsub)

Show | Show
-- | --
Show

<p class="Next" style="margin: 12pt 0pt 14pt; font-family: Verdana; font-size: 13.3333px; color: rgb(51, 51, 51); text-align: right; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;"><a href="https://paysimple.com/help/ADP/ps30/7-reports/Unsubscribe_to_a_Custom_Report.htm#XREF_cr_unsub">Next ›</a></p><p style="margin: 14pt 0pt; font-family: Verdana, Helvetica, sans-serif; font-size: 13.3333px; color: rgb(51, 51, 51); font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;"> </p><div id="footer" style="color: rgb(0, 0, 0); font-family: Verdana, Helvetica, sans-serif; font-size: 13.3333px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; width: 1501.81px; position: relative;"><p style="margin: 14pt 0pt; font-family: Verdana, Helvetica, sans-serif; font-size: 10pt; color: rgb(51, 51, 51); text-align: right;"> </p></div>[Show](javascript:void(0);) 
ADP Payments


[Home](https://paysimple.com/help/ADP/Welcome.htm) > [Chapter 7: Reports](https://paysimple.com/help/ADP/ps30/7-reports/Reports.htm) > [Custom Reports](https://paysimple.com/help/ADP/ps30/7-reports/Custom_Reports.htm) > [Subscribing to Custom Reports](https://paysimple.com/help/ADP/ps30/7-reports/Subscribing_to_Custom_Reports.htm) > Subscribe to a Custom Report

Subscribe to a Custom Report
Follow the steps below to subscribe to a custom report:

Locate the report to which you want to subscribe in the custom reports table on the Reports dashboard.

Click the Action button, then click the “Subscribe” link.

subscribe_link_custom_report.jpg
 

The New subscription pop-up window appears.

new_subscription_custom_report.jpg
 

Enter the email address to which you want the reports sent in the Email address field.

Click the down-arrow in the Frequency drop-down box to select how often you want the report emailed.

If you select “Weekly” or “Every other week” you will see a second drop-down box in which to select the day of the week you want the report sent.

If you select “Specific day of month,” you will see a second drop-down box in which to select the day of the month you want the report sent.

 

subscribe_select_frequency.jpg
In the Report types section, select how you would like to receive the report. Select “PDF” for an Adobe Acrobat file, or select “XLS” for an Excel file.
NOTE: You can open the file in Excel and then change its format to import data into other programs.

noate.gif 

The file provided is an XLSX file. If you are using an older version of Excel, you can install the [Microsoft Compatibility Pack](https://www.microsoft.com/en-us/download/details.aspx?id=3) so that you can open XLSX files.

Click the “save” button.

You will return to the custom reports table, and you will now see the frequency of your subscription in the Subscription field in the table.

subscription_entered.jpg
 

You will receive an email with your report on the next scheduled date.
NOTE: Scheduled reports cannot be programmed for the current date. For example, if today is Monday and I program a report to be emailed weekly on Mondays, I won’t get the first email until Monday of next week.
Name :Build and Deploy :
title: Create a repo
redirect_from:
  - /create-a-repo
  - /articles/create-a-repo
  - /github/getting-started-with-github/create-a-repo
  - /github/getting-started-with-github/quickstart/create-a-repo
intro: 'To put your project up on {% data variables.product.prodname_dotcom %}, you will need to create a repository for it to live in.'
versions:
  fpt: '*'
  ghes: '*'
  ghae: '*'
  ghec: '*'
topics:
  - Pull requests
  - Issues
  - Notifications
  - Accounts
---
## Create a repository
{% ifversion fpt or ghec %}
You can store a variety of projects in {% data variables.product.prodname_dotcom %} repositories, including open source projects. With open source projects, you can share code to make better, more reliable software. You can use repositories to collaborate with others and track your work. For more information, see "[About repositories](/github/creating-cloning-and-archiving-repositories/creating-a-repository-on-github/about-repositories)." To learn more about open source projects, visit [OpenSource.org](https://opensource.org/about).
{% elsif ghes or ghae %}
You can store a variety of projects in {% data variables.product.product_name %} repositories, including innersource projects. With innersource, you can share code to make better, more reliable software. For more information on innersource, see {% data variables.product.company_short %}'s white paper "[An introduction to innersource](https://resources.github.com/whitepapers/introduction-to-innersource/)."
{% endif %}
{% ifversion fpt or ghec %}
{% note %}
**Notes:** 
- You can create public repositories for an open source project. When creating your public repository, make sure to include a [license file](https://choosealicense.com/) that determines how you want your project to be shared with others. {% data reusables.open-source.open-source-guide-repositories %} 
- {% data reusables.open-source.open-source-learning %} 
- You can also add community health files to your repositories, to set guidelines on how to contribute, keep your repositories safe, and much more. For more information, see "[Creating a default community health file](/communities/setting-up-your-project-for-healthy-contributions/creating-a-default-community-health-file)." 
{% endnote %}
{% endif %}
{% webui %}
{% data reusables.repositories.create_new %}
2. Type a short, memorable name for your repository. For example, "hello-world".
  ![Field for entering a repository name](/assets/images/help/repository/create-repository-name.png)
3. Optionally, add a description of your repository. For example, "My first repository on {% data variables.product.product_name %}."
  ![Field for entering a repository description](/assets/images/help/repository/create-repository-desc.png)
{% data reusables.repositories.choose-repo-visibility %}
{% data reusables.repositories.initialize-with-readme %}
{% data reusables.repositories.create-repo %}
Congratulations! You've successfully created your first repository, and initialized it with a *README* file.
{% endwebui %}
{% cli %}
{% data reusables.cli.cli-learn-more %}
1. In the command line, navigate to the directory where you would like to create a local clone of your new project.
2. To create a repository for your project, use the `gh repo create` subcommand. When prompted, select **Create a new repository on GitHub from scratch** and enter the name of your new project. If you want your project to belong to an organization instead of to your personal account, specify the organization name and project name with `organization-name/project-name`. 
3. Follow the interactive prompts. To clone the repository locally, confirm yes when asked if you would like to clone the remote project directory.  
4. Alternatively, to skip the prompts supply the repository name and a visibility flag (`--public`, `--private`, or `--internal`). For example, `gh repo create project-name --public`. To clone the repository locally, pass the `--clone` flag.  For more information about possible arguments, see the [GitHub CLI manual](https://cli.github.com/manual/gh_repo_create).
{% endcli %}
## Commit your first change
{% webui %}
A *[commit](/articles/github-glossary#commit)* is like a snapshot of all the files in your project at a particular point in time.
When you created your new repository, you initialized it with a *README* file. *README* files are a great place to describe your project in more detail, or add some documentation such as how to install or use your project. The contents of your *README* file are automatically shown on the front page of your repository.
Let's commit a change to the *README* file.
1. In your repository's list of files, click ***README.md***.
  ![README file in file list](/assets/images/help/repository/create-commit-open-readme.png)
2. Above the file's content, click {% octicon "pencil" aria-label="The edit icon" %}.
3. On the **Edit file** tab, type some information about yourself.
  ![New content in file](/assets/images/help/repository/edit-readme-light.png)
{% data reusables.files.preview_change %}
5. Review the changes you made to the file. You will see the new content in green.
  ![File preview view](/assets/images/help/repository/create-commit-review.png)
{% data reusables.files.write_commit_message %}
{% data reusables.files.choose_commit_branch %}
{% data reusables.files.propose_file_change %}
{% endwebui %}
{% cli %}
Now that you have created a project, you can start committing changes.
*README* files are a great place to describe your project in more detail, or add some documentation such as how to install or use your project. The contents of your *README* file are automatically shown on the front page of your repository. Follow these steps to add a *README* file.
1. In the command line, navigate to the root directory of your new project. (This directory was created when you ran the `gh repo create` command.)
1. Create a *README* file with some information about the project.
    ```shell
    echo "info about this project" >> README.md
    ```
1. Enter `git status`. You will see that you have an untracked `README.md` file.
    ```shell
    $ git status
    Untracked files:
      (use "git add <file>..." to include in what will be committed)
      README.md
    nothing added to commit but untracked files present (use "git add" to track)
    ```
1. Stage and commit the file.
    ```shell
    git add README.md && git commit -m "Add README"
    ```
1. Push the changes to your branch.
    ```shell
    git push --set-upstream origin HEAD
  Your federal taxable wages this period are $
+Purchase/Acquisition of Business -1010700000 -1148400000 -1286100000 -1423800000 -1561500000
+TX: NO State Incorne Tax
+Gain/Loss on Investments and Other Financial Instruments -2243490909 -3068572727 -3893654545 -4718736364 -5543818182 -6368900000 -7193981818 -8019063636
+Income from Associates, Joint Ventures and Other Participating Interests 99054545 92609091 86163636 79718182 73272727 66827273 60381818 53936364
+INCOME STATEMENT 61-1767920
+GOOGL_income-statement_Quarterly_As_Originally_Reported TTM Q4 2022 Q3 2022 Q2 2022 Q1 2022 Q4 2021 Q3 2021 Q2 2021
+Cash Flow from Continuing Financing Activities -9287400000 -7674400000 -6061400000 -4448400000 -2835400000
+Diluted EPS from Discontinued Operations
+The U.S. Internal Revenue Code of 1986, as amended, the Treasury Regulations promulgated thereunder, published pronouncements of the Internal Revenue Service, which may be cited or used as precedents, and case law, any of which may be changed at any time with retroactive effect. No opinion is expressed on any matters other than those specifically referred to above.
+Basic WASO 694313546 697258864 700204182 703149500 706094818 709040136 711985455 714930773
+Taxable Marital Status:
+Exemptions/Allowances Single ZACHRY T.
+Diluted EPS -00009 -00015 -00021 -00027 -00033 -00039 -00045 -00051
+Total Work Hrs
+COMPANY PH Y: 650-253-0001
+5324 BRADFORD DR
+ORIGINAL REPORT
+Change in Trade/Accounts Receivable -1122700000 -527600000 67500000 662600000 1257700000
+Purchase/Sale of Other Non-Current Assets, Net -236000000 -368800000 -501600000 -634400000
+Other Non-Cash Items -5340300000 -6249200000 -7158100000 -8067000000 -8975900000
+Amortization, Non-Cash Adjustment 4241600000 4848600000 5455600000 6062600000 6669600000
+Income, Rents, & Royalty
+Other Investing Cash Flow 49209400000 57052800000 64896200000 72739600000 80583000000
+Other Irregular Income/Expenses 00000 00000 00000 00000 00000
+Irregular Income/Expenses 00000 00000 00000 00000 00000
+Total Revenue as Reported, Supplemental -1286309091 -13385163636 -25484018182 -37582872727 -49681727273 -61780581818 -73879436364 -85978290909
+Net Investment Income -2096781818 -2909109091 -3721436364 -4533763636 -5346090909 -6158418182 -6970745455 -7783072727
+Gain/Loss on Foreign Exchange 47654545 66854545 86054545 105254546 124454546 143654546 162854546 182054546
+Cash Flow from Investing Activities -11015999999
+Purchase/Sale of Investments, Net 574500000 1229400000 1884300000 2539200000 3194100000
+Purchase/Sale of Business, Net -384999999
+Basic EPS from Continuing Operations -00009 -00015 -00021 -00027 -00034 -00040 -00046 -00052
+Change in Trade and Other Receivables 2617900000 3718200000 4818500000 5918800000 7019100000
+Investment Income/Loss, Non-Cash Adjustment 3081700000 4150000000 5218300000 6286600000 7354900000
+Stock-Based Compensation, Non-Cash Adjustment -1297700000 -2050400000 -2803100000 -3555800000 -4308500000
+Depreciation and Amortization, Non-Cash Adjustment 3239500000 3241600000 3243700000 3245800000 3247900000
+Taxes, Non-Cash Adjustment 4177700000 4486200000 4794700000 5103200000 5411700000
+Depreciation, Non-Cash Adjustment 3329100000 3376000000 3422900000 3469800000 3516700000
+Gain/Loss on Financial Instruments, Non-Cash Adjustment -4354700000 -4770800000 -5186900000 -5603000000 -6019100000
+[DRAFT FORM OF TAX OPINION]
+Issuance of/Repayments for Debt, Net -199000000 -356000000
+Total Operating Profit/Loss -5818800000 -10077918182 -14337036364 -18596154545 -22855272727 -27114390909 -31373509091 -35632627273
+Cash Flow from Continuing Investing Activities -4919700000 -3706000000 -2492300000 -1278600000 -64900000
+Change in Prepayments and Deposits -388000000 -891600000 -1395200000 -1898800000
+Change in Accrued Expenses -2105200000 -3202000000 -4298800000 -5395600000 -6492400000
+Research and Development Expenses -2088363636 -853500000 381363636 1616227273 2851090909 4085954545 5320818182 6555681818
+PLEASE READ THE IMPORTANT DISCLOSURES BELOW
+FEDERAL RESERVE MASTER SUPPLIER ACCOUNT31000053-052101023COD
+633-44-1725Zachryiixixiiiwood@gmail.com47-2041-654711100061431000053
+PNC BankPNC Bank Business Tax I.D. Number: 633441725
+CIF Department (Online Banking)Checking Account: 47-2041-6547
+P7-PFSC-04-FBusiness Type: Sole Proprietorship/Partnership Corporation
+500 First AvenueALPHABET
+Pittsburgh, PA 15219-31285323 BRADFORD DR
+NON-NEGOTIABLEDALLAS TX 75235 8313
+ZACHRY, TYLER, WOOD
+4/18/2022650-2530-000 469-697-4300
+SIGNATURETime Zone: Eastern Central Mountain Pacific
+Investment Products • Not FDIC Insured • No Bank Guarantee • May Lose Value
+PLEASE READ THE IMPORTANT DISCLOSURES BELOW
+Change in Trade/Accounts Payable -233200000 -394000000 -554800000 -715600000 -876400000
+General and Administrative Expenses -544945455 23200000 591345455 1159490909 1727636364 2295781818 2863927273 3432072727
+Changes in Operating Capital 1068100000 1559600000 2051100000 2542600000 3034100000
+Selling and Marketing Expenses -1007254545 -52145455 902963636 1858072727 2813181818 3768290909 4723400000 5678509091
+Payments for Common Stock -18708100000 -22862000000 -27015900000 -31169800000 -35323700000
+Proceeds from Issuance of Long Term Debt -3407500000 -5307600000 -7207700000 -9107800000 -11007900000
+Other Income/Expense, Non-Operating 263109091 367718182 472327273 576936364 681545455 786154546 890763636 995372727
+ZACHRY T WOOD
+88-1303492
+Statutory BASIS OF PAY: BASIC/DILUTED EPS
+Net Pay 70842743867 70842743867
+Other Revenue
+Non-Operating Income/Expenses, Total -1369181818 -2079000000 -2788818182 -3498636364 -4208454545 -4918272727 -5628090909 -6337909091
+Net Interest Income/Expense 464490909 462390909 460290909 458190909 456090909 453990909 451890909 449790909
+Total Net Finance Income/Expense 464490909 462390909 460290909 458190909 456090909 453990909 451890909 449790909
+Issuance of/Repayments for Long Term Debt, Net -314300000 -348200000 -382100000 -416000000 -449900000
+Net Check 70842743867
+Basic EPS from Discontinued Operations
+MOUNTAIN VIEW, C.A., 94044 Pay Date:
+Medicare Tax
+Change in Other Operating Capital 1553900000 2255600000 2957300000 3659000000 4360700000
+Change in Deferred Assets/Liabilities 3194700000 3626800000 4058900000 4491000000 4923100000
+Change in Trade and Other Payables 3108700000 3453600000 3798500000 4143400000 4488300000
+Selling, General and Administrative Expenses -1552200000 -28945455 1494309091 3017563636 4540818182 6064072727 7587327273 9110581818
+Diluted WASO 698675982 701033009 703390036 705747064 708104091 710461118 712818146 715175173
+1957800000 -9776581818 -21510963636 -33245345455 -44979727273 -56714109091 -68448490909 -80182872727
+Total Revenue as Reported, Supplemental -1286309091 -13385163636 -25484018182 -37582872727 -49681727273 -61780581818 -73879436364 -85978290909
+Diluted EPS from Continuing Operations -00009 -00015 -00021 -00027 -00033 -00039 -00045 -00051
+Change in Cash 00001 -280000000 -570000000 338000000000)
+Sale and Disposal of Property, Plant and Equipment -5040500000 -4683100000 -4325700000 -3968300000
+Interest Income 415836364 392490909 369145455 345800000 322454546 299109091 275763636 252418182
+Issuance of/Payments for Common Stock, Net -10767000000 -10026000000 -9285000000 -8544000000 -7803000000
+Cost of Goods and Services -891927273 4189690909 9271309091 14352927273 19434545455 24516163636 29597781818 34679400000
+Proceeds from Issuance of Common Stock -5806333333 -3360333333 -914333333
+1349355888 2024033776 75698871601 Information
+DALLAS TX 75235-8315
+Sales of Other Non-Current Assets
+Cost of Revenue -891927273 4189690909 9271309091 14352927273 19434545455 24516163636 29597781818 34679400000
+Operating Income/Expenses -3640563636 -882445455 1875672727 4633790909 7391909091 10150027273 12908145455 15666263636
+Fiscal year end September 28th., 2022. | USD
+Cash and Cash Equivalents, Beginning of Period -13098000000 -26353000000 -4989999999
+Other Adjustments to Net Income Available to Common Stockholders
+Federal:
+Gross Pay 75698871601 Important Notes
+Cash Flow from Financing Activities -13997000000 -12740000000
+EMPLOYER IDENTIFICATION NUMBER: 61-1767920
+-1288666667 -885666667 -482666667
+Pretax Income -7187981818 -12156918182 -17125854545 -22094790909 -27063727273 -32032663636 -37001600000 -41970536364
+Reported Normalized and Operating Income/Expense Supplemental Section
+Reported Normalized Operating Profit
+Cash Flow Supplemental Section 181000000000) -146000000000) 110333333 123833333 137333333
+Interest Expense Net of Capitalized Interest 48654545 69900000 91145455 112390909 133636364 154881818 176127273 197372727
+Diluted Net Income Available to Common Stockholders -5492763636 -9591163636 -13689563636 -17787963636 -21886363636 -25984763636 -30083163636 -34181563636
+Net Income Available to Common Stockholders -5492763636 -9591163636 -13689563636 -17787963636 -21886363636 -25984763636 -30083163636 -34181563636
+Net Income after Non-Controlling/Minority Interests -5492763636 -9591163636 -13689563636 -17787963636 -21886363636 -25984763636 -30083163636 -34181563636
+Reported Effective Tax Rate 00001 00000 00000 00000 00000 00000
+Reported Normalized Diluted EPS
+Basic Weighted Average Shares Outstanding 694313546 697258864 700204182 703149500 706094818 709040136 711985455 714930773
+Diluted Weighted Average Shares Outstanding 698675982 701033009 703390036 705747064 708104091 710461118 712818146 715175173
+Deposited to the account Of xxxxxxxx6548
+Purchase of Investments 16018900000 24471400000 32923900000 41376400000 49828900000
+Sale of Investments -64179300000 -79064600000 -93949900000 -108835200000 -123720500000
+ALPHABET
+CHECKING
+31622,6:39 PM
+GOOGL_income-statement_Quarterly_As_Originally_Reported Q4 2022
+Morningstar.com Intraday Fundamental Portfolio View Print Report Print
+Income/Loss before Non-Cash Adjustment 21353400000 21135400000 20917400000 20699400000 20481400000
+Cash Generated from Operating Activities 19636600000 18560200000 17483800000 16407400000 15331000000
+3/6/2022 at 6:37 PM
+Net Cash Flow from Continuing Operating Activities, Indirect 35231800000 36975800000 38719800000 40463800000 42207800000
+Cash and Cash Equivalents, End of Period
+Proceeds from Issuance/Exercising of Stock Options/Warrants -2971300000 -3400800000 -3830300000 -4259800000 -4689300000
+Cash Flow from Operating Activities, Indirect 24934000001 Q3 2022 Q2 2022 Q1 2022 Q4 2021
+Diluted EPS -00009 -00015 -00021 -00027 -00033 -00039 -00045 -00051
+Other Financing Cash Flow
+Total Adjustments for Non-Cash Items 20351200000 21992600000 23634000000 25275400000 26916800000
+Change in Other Current Assets -3290700000 -3779600000 -4268500000 -4757400000 -5246300000
+Depreciation, Amortization and Depletion, Non-Cash Adjustment 4986300000 5327600000 5668900000 6010200000 6351500000
+Change in Payables and Accrued Expenses -3298800000 -4719000000 -6139200000 -7559400000 -8979600000
+Repayments for Long Term Debt -117000000 -660800000 -1204600000 -1748400000 -2292200000
+Income Statement Supplemental Section
+Reported Normalized Income
+Cash and Cash Equivalents, Beginning of Period 25930000001 235000000000) 10384666667 15035166667 19685666667
+Net Income after Extraordinary Items and Discontinued Operations -5492763636 -9591163636 -13689563636 -17787963636 -21886363636 -25984763636 -30083163636 -34181563636
+Net Income from Continuing Operations -5492763636 -9591163636 -13689563636 -17787963636 -21886363636 -25984763636 -30083163636 -34181563636
+Provision for Income Tax 1695218182 2565754545 3436290909 4306827273 5177363636 6047900000 6918436364 7788972727
+Total Operating Profit/Loss as Reported, Supplemental -5818800000 -10077918182 -14337036364 -18596154545 -22855272727 -27114390909 -31373509091 -35632627273
+Based on facts as set forth in. 06551
+Basic EPS -00009 -00015 -00021 -00027 -00034 -00040 -00046 -00052
+ALPHABET INCOME Advice number: 000101
+ALPHABET
+Basic EPS -00009 -00015 -00021 -00027 -00034 -00040 -00046 -00052
+1601 AMPITHEATRE PARKWAY DR Period Ending:
+1601 AMPIHTHEATRE PARKWAY MOUNTAIN VIEW CA 94043 Calendar Year---
+Purchase/Sale and Disposal of Property, Plant and Equipment, Net -6772900000 -6485800000 -6198700000 -5911600000 -5624500000
+Purchase of Property, Plant and Equipment -5218300000 -4949800000 -4681300000 -4412800000 -4144300000
+Effect of Exchange Rate Changes 28459100000 29853400000 31247700000 32642000000 34036300000
+00000 -15109109116 111165509049 50433933761 50951012042 45733930204 40516848368 -84621400136 -96206781973
+00002 Earnings Statement
+05324
+DALLAS
+rate units year to date Other Benefits and
+Pto Balance
+Federal Income Tax
+Social Security Tax
+YOUR BASIC/DILUTED EPS RATE HAS BEEN CHANGED FROM 0.001 TO 112.20 PAR SHARE VALUE
+Due 09/15/2022
+Discontinued Operations -51298890909
+Change in Cash as Reported, Supplemental
+Income Tax Paid, Supplemental -5809000000 -8692000000 -11575000000 -44281654545 -2178236364
+13 Months Ended 6336000001
+Gross Profit -9195472727 -16212709091 -23229945455 -30247181818 -37264418182
+USD in "000'"s 22809500000000 22375000000000 21940500000000 21506000000000 21071500000000
+Repayments for Long Term Debt Dec. 31, 2021 Dec. 31, 2020
+Costs and expenses: 22809500000000 22375000000000 21940500000000 21506000000000 21071500000000
+Cost of revenues 182528 161858
+Research and development 22809500000000 22375000000000 21940500000000 21506000000000 21071500000000
+Sales and marketing 84733 71897
+General and administrative 27574 26019
+European Commission fines 17947 18465
+Total costs and expenses 11053 09552
+Income from operations 00001 01698
+Other income (expense), net 141304 127627
+Income before income taxes 00000 22375000000000 21940500000000 21506000000000 21071500000000 00000 00000
+Provision for income taxes 257637118600 257637118600
+Net income 22677000001 19289000001
+*include interest paid, capital obligation, and underweighting 22677000001 19289000001
+22677000001 19289000001
+Basic net income per share of Class A and B common stock and Class C capital stock (in dollars par share)
+Diluted net income per share of Class A and Class B common stock and Class C capital stock (in dollars par share)
+For Paperwork Reduction Act Notice, see the seperate InstructionsStreet NE Washington, D.C. 20549-1090 RE: Release Nos. 34-92766; IA-5833; File No. S7-10-21, RIN 3235-AN00 Request for Information and Comments on Broker-Dealer and Investment Adviser Digital Engagement Practices, Related Tools and Methods, and Regulatory Considerations and Potential Approaches; Information and Comments on Investment Adviser Use of Technology to Develop and Provide Investment Advice Ladies and Gentlemen: Morningstar welcomes the opportunity to comment on the Securities and Exchange Commission’s (Commission or SEC) Request for Information and Comments on Broker-Dealer and Investment Adviser Digital Engagement Practices, Related Tools and Methods, and Regulatory Considerations and Potential Approaches; Information and Comments on Investment Adviser Use of Technology to Develop and Provide Investment Advice (RFI). 1 Morningstar’s mission is to empower investor success. Morningstar’s Behavioral Insights Team researches savings and investing behavior to help individual investors and their ecosystem avoid common behavioral biases, and has published books and articles on the topic of applying behavioral science to digital platforms. Because we offer an extensive line of products for individual investors, professional financial advisors, and institutional clients, we have a broad view on the RFI and the assessment of market practices associated with the use of digital engagement practices (DEPs). This letter contains: 1) a summary of our views; 2) a description of a Morningstar survey on a nationally representative sample of Americans about their use of trading apps and exposure to DEPs; and 3) detailed answers to selected questions posed in the RFI. We utilize our survey responses to address some of these questions and present specific findings in our answers. The survey consists of two parts: a screener for demographic information, attached as Appendix B, and the complete set of questions about individual experiences and views of DEPs, attached as Appendix C. 1 SEC. 2021. Request for Information and Comments on Broker-Dealer and Investment Adviser Digital Engagement Practices, Related Tools and Methods, and Regulatory Considerations and Potential Approaches; Information and Comments on Investment Adviser Use of Technology to Develop and Provide Investment Advice. https://www.federalregister.gov/documents/2021/09/01/2021-18901/requestfor-information-and-comments-on-broker-dealer-and-investment-adviser-digital-engagement (RFI).
+3/6/2022 at 6:37 PM
+GOOGL_income-statement_Quarterly_As_Originally_Reported
+Cash Flow from Operating Activities, IndirectNet Cash Flow from Continuing Operating Activities, IndirectCash Generated from Operating ActivitiesIncome/Loss before Non-Cash AdjustmentTotal Adjustments for Non-Cash ItemsDepreciation, Amortization and Depletion, Non-Cash AdjustmentDepreciation and Amortization, Non-Cash AdjustmentDepreciation, Non-Cash AdjustmentAmortization, Non-Cash AdjustmentStock-Based Compensation, Non-Cash AdjustmentTaxes, Non-Cash AdjustmentInvestment Income/Loss, Non-Cash AdjustmentGain/Loss on Financial Instruments, Non-Cash AdjustmentOther Non-Cash ItemsChanges in Operating CapitalChange in Trade and Other ReceivablesChange in Trade/Accounts ReceivableChange in Other Current AssetsChange in Payables and Accrued ExpensesChange in Trade and Other PayablesChange in Trade/Accounts PayableChange in Accrued ExpensesChange in Deferred Assets/LiabilitiesChange in Other Operating Capital
+Change in Prepayments and DepositsCash Flow from Investing ActivitiesCash Flow from Continuing Investing Activities
+Purchase/Sale and Disposal of Property, Plant and Equipment, NetPurchase of Property, Plant and EquipmentSale and Disposal of Property, Plant and EquipmentPurchase/Sale of Business, NetPurchase/Acquisition of BusinessPurchase/Sale of Investments, NetPurchase of Investments
+Sale of InvestmentsOther Investing Cash FlowPurchase/Sale of Other Non-Current Assets, NetSales of Other Non-Current AssetsCash Flow from Financing ActivitiesCash Flow from Continuing Financing ActivitiesIssuance of/Payments for Common Stock, NetPayments for Common StockProceeds from Issuance of Common StockIssuance of/Repayments for Debt, NetIssuance of/Repayments for Long Term Debt, NetProceeds from Issuance of Long Term DebtRepayments for Long Term Debt
+Proceeds from Issuance/Exercising of Stock Options/WarrantsOther Financing Cash FlowCash and Cash Equivalents, End of PeriodChange in CashEffect of Exchange Rate ChangesCash and Cash Equivalents, Beginning of PeriodCash Flow Supplemental SectionChange in Cash as Reported, SupplementalIncome Tax Paid, SupplementalZACHRY T WOODCash and Cash Equivalents, Beginning of PeriodDepartment of the TreasuryInternal Revenue Service
+Calendar YearDue: 04/18/2022
+USD in ""000'""sRepayments for Long Term DebtCosts and expenses:Cost of revenuesResearch and developmentSales and marketingGeneral and administrativeEuropean Commission finesTotal costs and expensesIncome from operationsOther income (expense), netIncome before income taxesProvision for income taxesNet income*include interest paid, capital obligation, and underweighting
+Basic net income per share of Class A and B common stock and Class C capital stock (in dollars par share)
+
+
+
+
+
+
+
+
+
+Diluted net income per share of Class A and Class B common stock and Class C capital stock (in dollars par share)*include interest paid, capital obligation, and underweighting
+Basic net income per share of Class A and B common stock and Class C capital stock (in dollars par share)Diluted net income per share of Class A and Class B common stock and Class C capital stock (in dollars par share)
+
+ReplyForward
+


-7711	Department of the Treasury	Calendar Year							Period Ending	9/29/2021																	
-	Internal Revenue Service	Due 04/18/2022		2022 Form 1040-ES Payment Voucher 1					Pay Day	1/30/2022																	
-	MOUNTAIN VIEW, C.A., 94043																										
-	Taxable Marital Status  :																										
-	Exemptions/Allowances :																										
-	Federal :																										
-	TX :  28	rate	70842743866																																
-	Convertible preferred stock, $0.001 par value per share, 100,000 shares authorized; no shares issued and outstanding	0	0		0																						
-	Class A and Class B common stock, and Class C capital stock and additional paid-in capital, $0.001 par value per share: 15,000,000 shares authorized (Class A 9,000,000, Class B 3,000,000, Class C 3,000,000); 688,335 (Class A 299,828, Class B 46,441, Class C 342,066) and 675,222 (Class A 300,730, Class B 45,843, Class C 328,649) shares issued and outstanding	58510	50552		0																						
-	Accumulated other comprehensive income (loss)	633	-1232		0																						
-	Retained earnings	163401	152122		0																						
-	Total stockholders’ equity	222544	201442		0																						
-	Total liabilities and stockholders’ equity	319616	275909		0																						
-	Convertible preferred stock, par value (in dollars per share)	0.001	0.001		0																						
-	Convertible preferred stock, shares authorized (in shares)	100000000	100000000		0																						
-	Convertible preferred stock, shares issued (in shares)	0	0		0																						
-	Convertible preferred stock, shares outstanding (in shares)	0	0		0																						
-	Schedule II: Valuation and Qualifying Accounts (Details) - Allowance for doubtful accounts and sales credits - USD ($) $ in Millions	12 Months Ended			0																						
-		Dec. 31, 2020	Dec. 31, 2019	Dec. 31, 2018	0																						
-	SEC Schedule, 12-09, Movement in Valuation Allowances and Reserves [Roll Forward]				0																						
-	Revenues (Narrative) (Details) - USD ($) $ in Billions	12 Months Ended			0																						
-		Dec. 31, 2020	Dec. 31, 2019		0																						
-	Revenue from Contract with Customer [Abstract]				0																						
-	Deferred revenue		2.3		0																						
-	Revenues recognized	1.8			0																						
-	Transaction price allocated to remaining performance obligations	29.8			0																						
-	Revenue, Remaining Performance Obligation, Expected Timing of Satisfaction, Start Date [Axis]: 2021-01-01				0																						
-	Revenue, Remaining Performance Obligation, Expected Timing of Satisfaction [Line Items]				0																						
-	Expected timing of revenue recognition	24 months			0																						
-	Expected timing of revenue recognition, percent	0.5			0																						
-	Revenue, Remaining Performance Obligation, Expected Timing of Satisfaction, Start Date [Axis]: 2023-01-01				0																						
-	Revenue, Remaining Performance Obligation, Expected Timing of Satisfaction [Line Items]				0																						
-	Expected timing of revenue recognition	 			0																						
-	Expected timing of revenue recognition, percent	0.5			0																						
-	Information about Segments and Geographic Areas (Long-Lived Assets by Geographic Area) (Details) - USD ($) $ in Millions	Dec. 31, 2020	Dec. 31, 2019		0																						
-	Revenues from External Customers and Long-Lived Assets [Line Items]				0																						
-	Long-lived assets	96960	84587		0																						
-	United States				0																						
-	Revenues from External Customers and Long-Lived Assets [Line Items]				0																						
-	Long-lived assets	69315	63102		0																						
-	International				0																						
-	Revenues from External Customers and Long-Lived Assets [Line Items]				0																						
-	Long-lived assets	27645	21485		0																						
-		2016	2017	2018	2019	2020	2021	TTM																			
-		2.23418E+11	2.42061E+11	2.25382E+11	3.27223E+11	2.86256E+11	3.54636E+11	3.54636E+11																			
-		45881000000	60597000000	57418000000	61078000000	63401000000	69478000000	69478000000																			
-		3143000000	3770000000	4415000000	4743000000	5474000000	6052000000	6052000000																			
-	    Net Investment Income, Revenue	9531000000	13081000000	10565000000	17214000000	14484000000	8664000000	-14777000000	81847000000	48838000000	86007000000	86007000000															
-	        Realized Gain/Loss on Investments, Revenue	472000000	184000000	72000000	10000000	7553000000	1410000000	-22155000000	71123000000	40905000000	77576000000	77576000000															
-	        Gains/Loss on Derivatives, Revenue	1963000000	2608000000	506000000	974000000	751000000	718000000	-300000000	1484000000	-159000000	966000000	966000000															
-	        Interest Income, Revenue	6106000000	6408000000	6484000000	6867000000	6180000000	6536000000	7678000000	9240000000	8092000000	7465000000	7465000000															
-	        Other Investment Income, Revenue	990000000	3881000000	3503000000	9363000000																						
-	    Rental Income, Revenue					2553000000	2452000000	5732000000	5856000000	5209000000	5988000000	5988000000															
-	    Other Revenue	1.18387E+11	1.32385E+11	1.42881E+11	1.52435E+11	1.57357E+11	1.66578E+11	1.72594E+11	1.73699E+11	1.63334E+11	1.87111E+11	1.87111E+11															
-	Total Expenses	-1.40227E+11	-1.53354E+11	-1.66594E+11	-1.75997E+11	-1.89751E+11	-2.18223E+11	-2.21381E+11	-2.24527E+11	-2.30563E+11	-2.4295E+11	-2.4295E+11																												
-	    Reported Normalized and Operating Income/Expense Supplemental Section																										
-	        Total Revenue as Reported, Supplemental	1.62463E+11	1.8215E+11	1.94699E+11	2.10943E+11	2.15114E+11	2.39933E+11	2.47837E+11	2.54616E+11	2.4551E+11	2.76094E+11	2.76094E+11															
-	        Reported Effective Tax Rate				0.16	0.14	0.07	-0.08	0.2	0.22	0.19	0.19															
-	Basic EPS	8977	11850	12092	14656	14645	27326	2446	49828	26668	59460	59460															
-	    Basic EPS from Continuing Operations	8977	11850	12092	14656	14645	27326	2446	49828	26668	59460	59460															
-	Diluted EPS	8975.82	11849.51	12086.01	14656	14645	27325.54	2444.36	49649.93	26200.81	58563.84	58563.84															
-	    Diluted EPS from Continuing Operations	8975.82	11849.51	12086.01	14656	14645	27325.54	2444.36	49649.93	26200.81	58563.84	58563.84															
-	Basic Weighted Average Shares Outstanding	1651294	1643613	1643456	1643183	1643826	1644615	1643795	1633946	1594469	1510180	1510180															
-	Diluted Weighted Average Shares Outstanding	1651549	1643613	1644215	1643183	1643826	1644615	1645008	1639821	1622889	1533284	1533284															
-	Basic EPS	5.98	7.9	8.06	9.77	9.76	18.22	1.63	33.22	17.78	39.64	39.64															
-	Diluted EPS	5.98	7.9	8.06	9.77	9.76	18.22	1.63	33.22	17.78	39.64	39.64															
-	Basic WASO	2476939762	2465418267	2465182767	2464773268	2465737767	2466921267	2465691267	2450917775	2391702304	2265268867	2265268867															
-	Diluted WASO	2476939762	2465418267	2465182767	2464773268	2465737767	2466921267	2465691267	2450917775	2391702304	2265268867	2265268867															
-	Fiscal year ends in Dec 31 | USD 																										
-											total																
-	GOOGL_income-statement_Quarterly_As_Originally_Reported	Q3 2019	Q4 2019	Q1 2020	Q2 2020	Q3 2020	Q4 2020	Q1 2021	Q2 2021	Q3 2021	Q4 2021	TTM															
-	Gross Profit	22931000000	25055000000	22177000000	19744000000	25056000000	30818000000	31211000000	35653000000	37497000000	42337000000	1.46698E+11															
-	    Total Revenue	40499000000	46075000000	41159000000	38297000000	46173000000	56898000000	55314000000	61880000000	65118000000	75325000000	2.57637E+11															
-	        Business Revenue	34071000000	64133000000	41159000000	38297000000	46173000000	56898000000	55314000000	61880000000	65118000000	75325000000	2.57637E+11															
-	        Other Revenue	6428000000																									
-	    Cost of Revenue	-17568000000	-21020000000	-18982000000	-18553000000	-21117000000	-26080000000	-24103000000	-26227000000	-27621000000	-32988000000	-1.10939E+11															
-	        Cost of Goods and Services			-18982000000								-1.10939E+11															
-	Operating Income/Expenses	-13754000000	-15789000000	-14200000000	-13361000000	-13843000000	-15167000000	-14774000000	-16292000000	-16466000000	-20452000000	-67984000000															
-	    Selling, General and Administrative Expenses	-7200000000	-8567000000	-7380000000	-6486000000	-6987000000	-8145000000	-7289000000	-8617000000	-8772000000	-11744000000	-36422000000															
-	        General and Administrative Expenses	-2591000000	-2829000000	-2880000000	-2585000000	-2756000000	-2831000000	-2773000000	-3341000000	-3256000000	-4140000000	-13510000000															
-	        Selling and Marketing Expenses	-4609000000	-5738000000	-4500000000	-3901000000	-4231000000	-5314000000	-4516000000	-5276000000	-5516000000	-7604000000	-22912000000															
-	    Research and Development Expenses	-6554000000	-7222000000	-6820000000	-6875000000	-6856000000	-7022000000	-7485000000	-7675000000	-7694000000	-8708000000	-31562000000															
-	Total Operating Profit/Loss	9177000000	9266000000	7977000000	6383000000	11213000000	15651000000	16437000000	19361000000	21031000000	21885000000	78714000000															
-	Non-Operating Income/Expenses, Total	-549000000	1438000000	-220000000	1894000000	2146000000	3038000000	4846000000	2624000000	2033000000	2517000000	12020000000															
-	    Total Net Finance Income/Expense	608000000	604000000	565000000	420000000	412000000	333000000	269000000	313000000	310000000	261000000	1153000000															
-	        Net Interest Income/Expense	608000000	604000000	565000000	420000000	412000000	333000000	269000000	313000000	310000000	261000000	1153000000															
-	            Interest Expense Net of Capitalized Interest	-23000000	-17000000	-21000000	-13000000	-48000000	-53000000	-76000000	-76000000	-77000000	-117000000	-346000000															
-	            Interest Income	631000000	621000000	586000000	433000000	460000000	386000000	345000000	389000000	387000000	378000000	1499000000															
-	    Net Investment Income	-1452000000	899000000	-809000000	1696000000	1957000000	3530000000	4869000000	2924000000	2207000000	2364000000	12364000000															
-	        Gain/Loss on Investments and Other Financial Instruments	-1479000000	399000000	-802000000	1842000000	2015000000	3262000000	4751000000	2883000000	2158000000	2478000000	12270000000															
-	        Income from Associates, Joint Ventures and Other Participating Interests	-14000000	460000000	74000000	-54000000	26000000	355000000	5000000	92000000	188000000	49000000	334000000															
-	        Gain/Loss on Foreign Exchange	41000000	40000000	-81000000	-92000000	-84000000	-87000000	113000000	-51000000	-139000000	-163000000	-240000000															
-	    Irregular Income/Expenses	0	0	0	0	0	0				0	0															
-	        Other Irregular Income/Expenses	0	0	0	0	0	0				0	0															
-	    Other Income/Expense, Non-Operating	295000000	-65000000	24000000	-222000000	-223000000	-825000000	-292000000	-613000000	-484000000	-108000000	-1497000000															
-	Pretax Income	8628000000	10704000000	7757000000	8277000000	13359000000	18689000000	21283000000	21985000000	23064000000	24402000000	90734000000															
-	Provision for Income Tax	-1560000000	-33000000	-921000000	-1318000000	-2112000000	-3462000000	-3353000000	-3460000000	-4128000000	-3760000000	-14701000000															
-	Net Income from Continuing Operations	7068000000	10671000000	6836000000	6959000000	11247000000	15227000000	17930000000	18525000000	18936000000	20642000000	76033000000															
-	Net Income after Extraordinary Items and Discontinued Operations	7068000000	10671000000	6836000000	6959000000	11247000000	15227000000	17930000000	18525000000	18936000000	20642000000	76033000000															
-	Net Income after Non-Controlling/Minority Interests	7068000000	10671000000	6836000000	6959000000	11247000000	15227000000	17930000000	18525000000	18936000000	20642000000	76033000000															
-	Net Income Available to Common Stockholders	7068000000	10671000000	6836000000	6959000000	11247000000	15227000000	17930000000	18525000000	18936000000	20642000000	76033000000															
-	Diluted Net Income Available to Common Stockholders	7068000000	10671000000	6836000000	6959000000	11247000000	15227000000	17930000000	18525000000	18936000000	20642000000	76033000000															
-	Income Statement Supplemental Section																										
-	    Reported Normalized and Operating Income/Expense Supplemental Section																										
-	        Total Revenue as Reported, Supplemental	40499000000	46075000000	41159000000	38297000000	46173000000	56898000000	55314000000	61880000000	65118000000	75325000000	2.57637E+11															
-	        Total Operating Profit/Loss as Reported, Supplemental	9177000000	9266000000	7977000000	6383000000	11213000000	15651000000	16437000000	19361000000	21031000000	21885000000	78714000000															
-	        Reported Effective Tax Rate	0.181		0	0.159	0.158		0.158	0.157	0.179		0.162															
-	        Reported Normalized Income			6836000000																							
-	        Reported Normalized Operating Profit			7977000000																							
-	Other Adjustments to Net Income Available to Common Stockholders																										
-	Discontinued Operations																										
-	Basic EPS	10.2	15.49	9.96	10.21	16.55	22.54	26.63	27.69	28.44	31.15	113.88															
-	    Basic EPS from Continuing Operations	10.2	15.47	9.96	10.21	16.55	22.46	26.63	27.69	28.44	31.12	113.88															
-	    Basic EPS from Discontinued Operations																										
-	Diluted EPS	10.12	15.35	9.87	10.13	16.4	22.3	26.29	27.26	27.99	30.69	112.2															
-	    Diluted EPS from Continuing Operations	10	15	10	10	16	22	26	27	28	31	112															
-	    Diluted EPS from Discontinued Operations																										
-	Basic Weighted Average Shares Outstanding	692741000	688804000	686465000	681768000	679449000	675581000	673220000	668958000	665758000	662664000	667650000															
-	Diluted Weighted Average Shares Outstanding	698199000	695193000	692267000	687024000	685851000	682969000	682071000	679612000	676519000	672493000	677674000															
-	Reported Normalized Diluted EPS			9.87																							
-	Basic EPS	10	15	10	10	17	23	27	28	28	31	114															
-	Diluted EPS	10	15	10	10	16	22	26	27	28	31	112															
-	Basic WASO	692741000	688804000	686465000	681768000	679449000	675581000	673220000	668958000	665758000	662664000	667650000
-Skip to content
Search or jump to…
Pull requests
Issues
Marketplace
Explore
 
@zakwarlord7 
Your account has been flagged.
Because of that, your profile is hidden from the public. If you believe this is a mistake, contact support to have your account status reviewed.
zakwarlord7
/
bitcore.sig-Bitore.sigs
Public
generated from zakwarlord7/libanki
Code
Issues
Pull requests
Actions
Projects
Wiki
Security
Insights
Settings
Comparing changes
Choose two branches to see what’s changed or to start a new pull request. If you need to, you can also .
  
There isn’t anything to compare.
master and trunk are entirely different commit histories.

Showing  with 16,900 additions and 0 deletions.
 122  
.github/workflows/package.yml
@@ -0,0 +1,122 @@
# This workflow will build and push a new container image to Alibaba Cloud Container Registry (ACR),
# and then will deploy it to Alibaba Cloud Container Service for Kubernetes (ACK), when there is a push to the "master" branch.
#
# To use this workflow, you will need to complete the following set-up steps:
#
# 1. Create an ACR repository to store your container images. 
#    You can use ACR EE instance for more security and better performance.
#    For instructions see https://www.alibabacloud.com/help/doc-detail/142168.htm
#
# 2. Create an ACK cluster to run your containerized application.
#    You can use ACK Pro cluster for more security and better performance.
#    For instructions see https://www.alibabacloud.com/help/doc-detail/95108.htm
#
# 3. Store your AccessKey pair in GitHub Actions secrets named `ACCESS_KEY_ID` and `ACCESS_KEY_SECRET`.
#    For instructions on setting up secrets see: https://developer.github.com/actions/managing-workflows/storing-secrets/
#
# 4. Change the values for the REGION_ID, REGISTRY, NAMESPACE, IMAGE, ACK_CLUSTER_ID, and ACK_DEPLOYMENT_NAME. 
#

name: Build and Deploy to ACK

on:
  push:
    branches: [ "master" ]

# Environment variables available to all jobs and steps in this workflow.
env:
  REGION_ID: cn-hangzhou
  REGISTRY: registry.cn-hangzhou.aliyuncs.com
  NAMESPACE: namespace
  IMAGE: repo
  TAG: ${{ github.sha }}
  ACK_CLUSTER_ID: clusterID
  ACK_DEPLOYMENT_NAME: nginx-deployment

  ACR_EE_REGISTRY: myregistry.cn-hangzhou.cr.aliyuncs.com
  ACR_EE_INSTANCE_ID: instanceID
  ACR_EE_NAMESPACE: namespace
  ACR_EE_IMAGE: repo
  ACR_EE_TAG: ${{ github.sha }}

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    # 1.1 Login to ACR   
    - name: Login to ACR with the AccessKey pair
      uses: aliyun/acr-login@v1
      with:
        region-id: "${{ env.REGION_ID }}"
        access-key-id: "${{ secrets.ACCESS_KEY_ID }}"
        access-key-secret: "${{ secrets.ACCESS_KEY_SECRET }}"

    # 1.2 Buid and push image to ACR   
    - name: Build and push image to ACR  
      run: |
        docker build --tag "$REGISTRY/$NAMESPACE/$IMAGE:$TAG" .  
        docker push "$REGISTRY/$NAMESPACE/$IMAGE:$TAG"   
 
    # 1.3 Scan image in ACR   
    - name: Scan image in ACR
      uses: aliyun/acr-scan@v1
      with:
        region-id: "${{ env.REGION_ID }}"
        access-key-id: "${{ secrets.ACCESS_KEY_ID }}"
        access-key-secret: "${{ secrets.ACCESS_KEY_SECRET }}"
        repository: "${{ env.NAMESPACE }}/${{ env.IMAGE }}"
        tag: "${{ env.TAG }}"

    # 2.1 (Optional) Login to ACR EE          
    - uses: actions/checkout@v3
    - name: Login to ACR EE with the AccessKey pair
      uses: aliyun/acr-login@v1
      with:
        login-server: "https://${{ env.ACR_EE_REGISTRY }}"
        region-id: "${{ env.REGION_ID }}"
        access-key-id: "${{ secrets.ACCESS_KEY_ID }}"
        access-key-secret: "${{ secrets.ACCESS_KEY_SECRET }}"
        instance-id: "${{ env.ACR_EE_INSTANCE_ID }}"

    # 2.2 (Optional) Build and push image ACR EE          
    - name: Build and push image to ACR EE  
      run: |
        docker build -t "$ACR_EE_REGISTRY/$ACR_EE_NAMESPACE/$ACR_EE_IMAGE:$TAG" .
        docker push "$ACR_EE_REGISTRY/$ACR_EE_NAMESPACE/$ACR_EE_IMAGE:$TAG"
    # 2.3 (Optional) Scan image in ACR EE          
    - name: Scan image in ACR EE
      uses: aliyun/acr-scan@v1
      with:
        region-id: "${{ env.REGION_ID }}"
        access-key-id: "${{ secrets.ACCESS_KEY_ID }}"
        access-key-secret: "${{ secrets.ACCESS_KEY_SECRET }}"
        instance-id: "${{ env.ACR_EE_INSTANCE_ID }}"
        repository: "${{ env.ACR_EE_NAMESPACE}}/${{ env.ACR_EE_IMAGE }}"
        tag: "${{ env.ACR_EE_TAG }}"

    # 3.1 Set ACK context         
    - name: Set K8s context
      uses: aliyun/ack-set-context@v1
      with:
        access-key-id: "${{ secrets.ACCESS_KEY_ID }}"
        access-key-secret: "${{ secrets.ACCESS_KEY_SECRET }}"
        cluster-id: "${{ env.ACK_CLUSTER_ID }}"

    # 3.2 Deploy the image to the ACK cluster
    - name: Set up Kustomize
      run: |-
        curl -s "https://raw.githubusercontent.com/kubernetes-sigs/kustomize/master/hack/install_kustomize.sh"  | bash /dev/stdin 3.8.6
    - name: Deploy
      run: |-
        ./kustomize edit set image REGISTRY/NAMESPACE/IMAGE:TAG=$REGISTRY/$NAMESPACE/$IMAGE:$TAG
        ./kustomize build . | kubectl apply -f -
        kubectl rollout status deployment/$ACK_DEPLOYMENT_NAME
        kubectl get services -o wide
 36  
.github/workflows/python-package-conda.yml
@@ -0,0 +1,36 @@
name: Python Package using Conda

on: [push]

jobs:
  build-linux:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 5

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: 3.10
    - name: Add conda to system path
      run: |
        # $CONDA is an environment variable pointing to the root of the miniconda directory
        echo $CONDA/bin >> $GITHUB_PATH
    - name: Install dependencies
      run: |
        conda env update --file environment.yml --name base
    - name: Lint with flake8
      run: |
        conda install flake8
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        conda install pytest
        pytest
# libanki :
# wet boew :
 7  
.gitignore
@@ -0,0 +1,7 @@
*.pyc
*~
*.mo
*\#
.*.swp
samples
unihan.db
 688  
COPYING
Large diffs are not rendered by default.

 5,091  
ChangeLog.old
@@ -0,0 +1,5091 @@
changeset:   794:7f344e1ac094
tag:         tip
user:        Damien Elmes <hg@repose.cx>
date:        Sat Sep 27 02:20:35 2008 +0900
description:
rebuild priorities on server too after sync

changeset:   793:8d66489049d1
user:        Damien Elmes <hg@repose.cx>
date:        Wed Sep 24 19:51:03 2008 +0900
description:
simplify algo in media, support foreign chars in sync

changeset:   792:747601f9084f
user:        Damien Elmes <hg@repose.cx>
date:        Tue Sep 23 03:21:35 2008 +0900
description:
update german translations

changeset:   791:6455da654ada
user:        Damien Elmes <hg@repose.cx>
date:        Tue Sep 23 03:12:57 2008 +0900
description:
rollback earlier failed card behaviour - needs more thought

changeset:   790:3f3b36a19b14
user:        Damien Elmes <hg@repose.cx>
date:        Tue Sep 23 02:55:06 2008 +0900
description:
update delay handling of older cards

changeset:   789:dc401f352309
user:        Damien Elmes <hg@repose.cx>
date:        Tue Sep 23 02:29:52 2008 +0900
description:
don't touch latex cache files when clearing media dir

changeset:   788:d41a997c82b3
user:        Damien Elmes <hg@repose.cx>
date:        Tue Sep 23 02:25:38 2008 +0900
description:
improve media tagging, add untagging

changeset:   787:b8bdcfdfc62e
user:        Damien Elmes <hg@repose.cx>
date:        Tue Sep 23 02:13:05 2008 +0900
description:
fix typo in stats

changeset:   786:330eeaffcedc
user:        Damien Elmes <hg@repose.cx>
date:        Mon Sep 22 19:19:19 2008 +0900
description:
bump version number

changeset:   785:7aa37d460ffa
user:        Damien Elmes <hg@repose.cx>
date:        Mon Sep 22 19:17:57 2008 +0900
description:
on failure of card in learning state, don't allow 7-9 & ignore delay

changeset:   784:1a0ae8c0fd75
user:        Damien Elmes <hg@repose.cx>
date:        Mon Sep 15 16:20:04 2008 +0900
description:
include timestamp in getDecks() sync msg

changeset:   783:e4b103adfcee
user:        Damien Elmes <hg@repose.cx>
date:        Mon Sep 22 17:07:21 2008 +0900
description:
update translations, make some extra fields translatable

changeset:   782:e1f8f469a2d4
user:        Damien Elmes <hg@repose.cx>
date:        Mon Sep 22 15:58:27 2008 +0900
description:
update translations, add media tests

changeset:   781:bea16d75308c
user:        Damien Elmes <hg@repose.cx>
date:        Mon Sep 22 15:35:44 2008 +0900
description:
add default priority tags

changeset:   780:1b6195fa184f
user:        Damien Elmes <hg@repose.cx>
date:        Mon Sep 22 04:02:47 2008 +0900
description:
avoid bumping card mod times, as upgrade happens both sides

changeset:   779:cd0b3d65ebae
user:        Damien Elmes <hg@repose.cx>
date:        Mon Sep 22 03:37:37 2008 +0900
description:
restore sync url

changeset:   778:9558de1cbce3
user:        Damien Elmes <hg@repose.cx>
date:        Mon Sep 22 03:36:15 2008 +0900
description:
updates to media syncing, db handling, make sync control easier

changeset:   777:f25fb49ea76a
user:        Damien Elmes <hg@repose.cx>
date:        Sun Sep 21 19:32:11 2008 +0900
description:
refactor media code, bugfixes

changeset:   776:1044f2d83a37
user:        Damien Elmes <hg@repose.cx>
date:        Sat Sep 20 03:55:48 2008 +0900
description:
speed up 'add missing cards'

changeset:   775:605f97bea2e9
user:        Damien Elmes <hg@repose.cx>
date:        Sat Sep 20 03:50:01 2008 +0900
description:
implement media syncing, making syncing easier, refactor string ids, more
- support optional syncing of media
- generate string ids with ids2str
- use random ids for media (this will error if user adds same file on both
sides w/o syncing)
- avoid rebuilding media dir twice for those who aren't running the latest
version
- fix bugs with media rebuild code
- add prepareSync() to handle half the syncing which doesn't change

changeset:   774:de980b3d67c9
user:        Damien Elmes <hg@repose.cx>
date:        Fri Sep 19 14:03:17 2008 +0900
description:
media: keep use count, ignore dirs, track deletions by filename

changeset:   773:dec7f440bda1
user:        Damien Elmes <hg@repose.cx>
date:        Wed Sep 17 20:22:19 2008 +0900
description:
fix problem upgrading decks on case sensitive filesystems

changeset:   772:de1503bf9a60
user:        Damien Elmes <hg@repose.cx>
date:        Wed Sep 17 17:45:59 2008 +0900
description:
new stats

changeset:   771:eb086fba0d33
user:        Damien Elmes <hg@repose.cx>
date:        Wed Sep 17 00:48:54 2008 +0900
description:
fixes to media upgrading
- use random dir name for backups
- catch more than one media reference per field
- avoid two checksums
- support same media in multiple fields
- ignore dot files

changeset:   770:d11f66084bbc
user:        Damien Elmes <hg@repose.cx>
date:        Tue Sep 16 12:51:09 2008 +0900
description:
cards default to new, rebuild types on checkdb, fix importing new

changeset:   769:a69f2aeae74b
user:        Damien Elmes <hg@repose.cx>
date:        Mon Sep 15 05:11:47 2008 +0900
description:
bump version number

changeset:   768:90440fcb1702
user:        Damien Elmes <hg@repose.cx>
date:        Mon Sep 15 05:11:23 2008 +0900
description:
catch img uses, not just audio uses

changeset:   767:bf971ef03af9
user:        Damien Elmes <hg@repose.cx>
date:        Mon Sep 15 02:15:13 2008 +0900
description:
fix for previous dailyStats fix

changeset:   766:607ed6876ee4
user:        Damien Elmes <hg@repose.cx>
date:        Mon Sep 15 02:06:25 2008 +0900
description:
only build 'newCountLeftToday' if building queue

changeset:   765:0bc83189a028
user:        Damien Elmes <hg@repose.cx>
date:        Mon Sep 15 01:16:38 2008 +0900
description:
fix div by zero error

changeset:   764:30f16e91c869
user:        Damien Elmes <hg@repose.cx>
date:        Mon Sep 15 01:08:12 2008 +0900
description:
enable upgrade

changeset:   763:77bdb561bcdb
user:        Damien Elmes <hg@repose.cx>
date:        Mon Sep 15 01:00:13 2008 +0900
description:
bump version

changeset:   762:7068d1cb2ad5
user:        Damien Elmes <hg@repose.cx>
date:        Mon Sep 15 00:48:56 2008 +0900
description:
revert importing changes

changeset:   761:f7ad4f6130dd
user:        Damien Elmes <hg@repose.cx>
date:        Mon Sep 15 00:36:25 2008 +0900
description:
support adding tags to cards, update chinese tests

changeset:   760:71fbab934ae2
user:        Damien Elmes <hg@repose.cx>
date:        Mon Sep 15 00:25:31 2008 +0900
description:
new unihan db

changeset:   759:c5ccbd1927f6
user:        Damien Elmes <hg@repose.cx>
date:        Mon Sep 15 00:25:16 2008 +0900
description:
fix save_unihan to support multiple readings

changeset:   758:b8f797202f95
user:        Damien Elmes <hg@repose.cx>
date:        Sun Sep 14 23:19:29 2008 +0900
description:
check average factor on startup, set new cards to average factor

changeset:   757:5b5c9b7830fe
user:        Damien Elmes <hg@repose.cx>
date:        Sun Sep 14 22:21:05 2008 +0900
description:
update translations

changeset:   756:be99b4ba4a28
user:        Damien Elmes <hg@repose.cx>
date:        Sun Sep 14 22:19:58 2008 +0900
description:
improve timer

changeset:   755:cdcee481960e
user:        Damien Elmes <hg@repose.cx>
date:        Sun Sep 14 20:28:27 2008 +0900
description:
fix bug in unihan gen, use real pinyin readings thanks to patch by daniel chai

changeset:   754:3f5f57d21fe0
user:        Damien Elmes <hg@repose.cx>
date:        Sun Sep 14 19:48:54 2008 +0900
description:
don't stop timer when calling thinkingTime()

changeset:   753:40b99029d15f
user:        Damien Elmes <hg@repose.cx>
date:        Sun Sep 14 16:14:19 2008 +0900
description:
improve media upgrade, backup all files

changeset:   752:5204c80a9a50
user:        Damien Elmes <hg@repose.cx>
date:        Sun Sep 14 15:19:20 2008 +0900
description:
new media support, scheduling changes
- media support moved into separate module
- checksum files on add, and rename them to checksummed version
- tidy up new card scheduling routines
- define newCountLeftToday, and use it in scheduling
- limit new card count to max new cards per day
- when using 'distribute new cards', calculate eta based on new+old, not one
or the other
- remove distractedTime/reps support - it's not useful
- add routine to check media dir for dangling links
- store media descriptions in new table

changeset:   751:a39c3a8fa613
user:        Damien Elmes <hg@repose.cx>
date:        Wed Sep 10 13:32:22 2008 +0900
description:
fix statement call in fixIntegrity()

changeset:   750:ea41a60e9bfb
user:        Damien Elmes <hg@repose.cx>
date:        Wed Sep 10 00:05:45 2008 +0900
description:
change order of version bump on version 0 upgrade

changeset:   749:c989e349c6c7
user:        Damien Elmes <hg@repose.cx>
date:        Wed Sep 10 00:03:12 2008 +0900
description:
add views and indices on check integrity. should fix some upgrade bugs

changeset:   748:5ef19bdc5dc1
user:        Damien Elmes <hg@repose.cx>
date:        Mon Sep 08 23:43:34 2008 +0900
description:
only rebuild types on upgrade, optimise syncing
- since low & very high priority cards aren't put in a different queue
anymore, there's no need to rebuild their types on sync. this saves about 5
seconds on the iphone on a deck of 4000 cards
- furthermore, we can avoid rebuilding the priorities of cards that weren't
transferred in the sync. this saves another 5 seconds
- and we can take the minimum of lastSync rather than setting to zero, to
avoid sending the whole summary. need to check to make sure this won't cause
problems

changeset:   747:a52a2a8d5102
user:        Damien Elmes <hg@repose.cx>
date:        Sun Sep 07 00:05:58 2008 +0900
description:
update spanish translations

changeset:   746:3d24c220cf3c
user:        Damien Elmes <hg@repose.cx>
date:        Sat Sep 06 23:50:26 2008 +0900
description:
bump version number

changeset:   745:1b3ddc8a0d57
user:        Damien Elmes <hg@repose.cx>
date:        Sat Sep 06 22:29:09 2008 +0900
description:
put distribute cards first

changeset:   744:68e39d789164
user:        Damien Elmes <hg@repose.cx>
date:        Sat Sep 06 22:26:38 2008 +0900
description:
remove 'new cards first' option

changeset:   743:b2124055af6c
user:        Damien Elmes <hg@repose.cx>
date:        Sat Sep 06 21:54:26 2008 +0900
description:
fix bug in getCardIds

changeset:   742:8b2a0ad58993
user:        Damien Elmes <hg@repose.cx>
date:        Sat Sep 06 21:42:38 2008 +0900
description:
don't force a check - it'll cause problems with syncing

changeset:   741:9d0dd086b846
user:        Damien Elmes <hg@repose.cx>
date:        Sat Sep 06 21:29:24 2008 +0900
description:
new card handling, multiple schedulers, integrity improvs, more
- three different scheduling choices - default spreads new cards out
throughout reviews
- limit number of new cards per day to 20 by default
- refactor getCardIds() so that new card handling is implementable. slightly
slower, but only an issue for the website, not desktop clients
- don't change queue for very high priority and low priority
- show number of new cards due next day on finish

changeset:   740:dee624693448
user:        Damien Elmes <hg@repose.cx>
date:        Wed Sep 03 15:22:59 2008 +0900
description:
translate days/cards in graphs

changeset:   739:55ee54b34790
user:        Damien Elmes <hg@repose.cx>
date:        Wed Sep 03 04:35:18 2008 +0900
description:
bump version number

changeset:   738:a07944b55ff5
user:        Damien Elmes <hg@repose.cx>
date:        Wed Sep 03 04:04:32 2008 +0900
description:
checkdb: regenerate question/answer cache, and mark all cards/facts/models mod

changeset:   737:c6fbfb44d925
user:        Damien Elmes <hg@repose.cx>
date:        Wed Sep 03 03:47:15 2008 +0900
description:
don't forget deletions when checking db

changeset:   736:fba4ad426675
user:        Damien Elmes <hg@repose.cx>
date:        Wed Sep 03 03:17:34 2008 +0900
description:
add german updates from [Bananeweizen at gmx dot de]

changeset:   735:14b62b62df80
user:        Damien Elmes <hg@repose.cx>
date:        Wed Sep 03 03:14:00 2008 +0900
description:
fix some problems with the exporting code
- upgrade fact spacing to use the cards table
- set new card fields like relativeDelay
- set due to creation time

changeset:   734:00a0a191a2a0
user:        Damien Elmes <hg@repose.cx>
date:        Wed Sep 03 01:07:10 2008 +0900
description:
ignore deleted objects on import, fix html & forget deletions on checkdb

changeset:   733:56fc2a350a49
user:        Damien Elmes <hg@repose.cx>
date:        Tue Sep 02 16:15:07 2008 +0900
description:
add tidyHTML to utils, start work on additions to checkDB

changeset:   732:e577dce1ca01
user:        Damien Elmes <hg@repose.cx>
date:        Mon Sep 01 20:06:43 2008 +0900
description:
limit combinedDue to 1

changeset:   731:00be0271bfa5
user:        Damien Elmes <hg@repose.cx>
date:        Mon Sep 01 19:41:41 2008 +0900
description:
bump version number

changeset:   730:ab282e5bfee0
user:        Damien Elmes <hg@repose.cx>
date:        Mon Sep 01 17:34:26 2008 +0900
description:
fix initial spacing setting high spacing values

changeset:   729:294cc15863b6
user:        Damien Elmes <hg@repose.cx>
date:        Sun Aug 31 22:56:06 2008 +0900
description:
update spanish translations

changeset:   728:487e131cb90e
user:        Damien Elmes <hg@repose.cx>
date:        Sun Aug 31 22:50:02 2008 +0900
description:
bump version number

changeset:   727:309a3b96f57f
user:        Damien Elmes <hg@repose.cx>
date:        Sun Aug 31 22:42:40 2008 +0900
description:
update graphs code to use new db layout

changeset:   726:6ae2b8dfa397
user:        Damien Elmes <hg@repose.cx>
date:        Sun Aug 31 22:37:33 2008 +0900
description:
set cards to not due when answering - they'll be updated later

changeset:   725:aa2188746766
user:        Damien Elmes <hg@repose.cx>
date:        Sun Aug 31 21:27:24 2008 +0900
description:
update relativeDelay for all cards, not just recently expired ones

changeset:   724:02fea17b9d22
user:        Damien Elmes <hg@repose.cx>
date:        Sun Aug 31 17:33:09 2008 +0900
description:
if card is suspended, set isDue = 0
- thanks to Nathanael Law for the report

changeset:   723:5410d31cfadc
user:        Damien Elmes <hg@repose.cx>
date:        Sun Aug 31 17:23:10 2008 +0900
description:
add support for changing order of card models and field models
- thanks to Nathanael Law for the patch
- updated patch to mark facts/models modified so changes sync

changeset:   722:a8b75ac64b1e
user:        Damien Elmes <hg@repose.cx>
date:        Sun Aug 31 15:27:03 2008 +0900
description:
set new interval to 0.001, not 1

changeset:   721:fe91fa7e876e
parent:      717:9748f6c99a40
parent:      720:c3c16d61c5fd
user:        Damien Elmes <hg@repose.cx>
date:        Sun Aug 31 15:15:32 2008 +0900
description:
merge

changeset:   720:c3c16d61c5fd
parent:      719:a0178186c744
parent:      654:c55cd3992387
user:        Damien Elmes <hg@repose.cx>
date:        Sun Aug 31 15:08:33 2008 +0900
description:
merge

changeset:   719:a0178186c744
parent:      718:a83de27a1d93
parent:      716:87f9ae70fea1
user:        Damien Elmes <hg@repose.cx>
date:        Sun Aug 31 15:08:22 2008 +0900
description:
merge

changeset:   718:a83de27a1d93
parent:      714:d10138a2f9f5
parent:      653:4a530339560c
user:        Damien Elmes <hg@repose.cx>
date:        Sun Aug 31 15:07:53 2008 +0900
description:
merge

changeset:   717:9748f6c99a40
parent:      715:ebb00029c503
parent:      716:87f9ae70fea1
user:        Damien Elmes <hg@repose.cx>
date:        Sun Aug 31 15:15:20 2008 +0900
description:
merge

changeset:   716:87f9ae70fea1
parent:      711:c9c5e73e233f
user:        Damien Elmes <hg@repose.cx>
date:        Thu Aug 28 19:39:00 2008 +0900
description:
always choose oldest model when merging

changeset:   715:ebb00029c503
parent:      714:d10138a2f9f5
parent:      654:c55cd3992387
user:        Damien Elmes <hg@repose.cx>
date:        Sun Aug 31 15:14:33 2008 +0900
description:
merge

changeset:   714:d10138a2f9f5
user:        Damien Elmes <hg@repose.cx>
date:        Fri Aug 29 21:09:41 2008 +0900
description:
bump version number

changeset:   713:78fba5eca19e
user:        Damien Elmes <hg@repose.cx>
date:        Fri Aug 29 20:06:51 2008 +0900
description:
drop indices only if exist, don't check folder is writeable

changeset:   712:1d5578fc859e
user:        Damien Elmes <hg@repose.cx>
date:        Fri Aug 29 19:26:41 2008 +0900
description:
remove obsolote indices, use priority index

changeset:   711:c9c5e73e233f
user:        Damien Elmes <hg@repose.cx>
date:        Thu Aug 28 17:58:38 2008 +0900
description:
fix media dir file size check

changeset:   710:af42a3f9fb5a
user:        Damien Elmes <hg@repose.cx>
date:        Thu Aug 28 17:44:17 2008 +0900
description:
fix bug setting current model, add model merging support

changeset:   709:84f9dfcc25fa
user:        Damien Elmes <hg@repose.cx>
date:        Thu Aug 28 16:10:29 2008 +0900
description:
fix mature/young card counts (ignore priorities)

changeset:   708:ead7f8877468
user:        Damien Elmes <hg@repose.cx>
date:        Thu Aug 28 16:07:04 2008 +0900
description:
fix seenCardCount()/newCardCount() to ignore priorities

changeset:   707:996de202997e
user:        Damien Elmes <hg@repose.cx>
date:        Wed Aug 27 04:04:11 2008 +0900
description:
if no earliest time, tell user to add new cards

changeset:   706:0aa73467b953
user:        Damien Elmes <hg@repose.cx>
date:        Wed Aug 27 02:49:58 2008 +0900
description:
catch cards with no card model too

changeset:   705:7a5f77987b42
user:        Damien Elmes <hg@repose.cx>
date:        Tue Aug 26 23:18:59 2008 +0900
description:
make fixIntegrity() syncable, add more checks

changeset:   704:7cd31348d5d6
user:        Damien Elmes <hg@repose.cx>
date:        Tue Aug 26 12:42:01 2008 +0900
description:
update lastInterval/due/factor

changeset:   703:027099bf01ef
user:        Damien Elmes <hg@repose.cx>
date:        Mon Aug 25 19:06:28 2008 +0900
description:
encode string as utf-8 before sending to latex (fix win32)

changeset:   702:222fee895606
user:        Damien Elmes <hg@repose.cx>
date:        Mon Aug 25 17:52:49 2008 +0900
description:
bump version

changeset:   701:beae5d21dcff
user:        Damien Elmes <hg@repose.cx>
date:        Mon Aug 25 15:03:45 2008 +0900
description:
since we're randomizing field ids, delete local fields before syncing

changeset:   700:9be61e41abc6
user:        Damien Elmes <hg@repose.cx>
date:        Mon Aug 25 14:15:26 2008 +0900
description:
fix bug adding cards with priorities

changeset:   699:26c2fd9803b3
user:        Damien Elmes <hg@repose.cx>
date:        Mon Aug 25 01:52:10 2008 +0900
description:
catch interrupted system calls on osx (fix latex)

changeset:   698:b00e8943896e
user:        Damien Elmes <hg@repose.cx>
date:        Mon Aug 25 00:59:32 2008 +0900
description:
bump version number

changeset:   697:72877d4c65ac
user:        Damien Elmes <hg@repose.cx>
date:        Sun Aug 24 23:49:28 2008 +0900
description:
fix for old python

changeset:   696:1dbfe6cf704f
user:        Damien Elmes <hg@repose.cx>
date:        Sun Aug 24 23:46:24 2008 +0900
description:
catch error when latex not available

changeset:   695:849dd0cb1e66
user:        Damien Elmes <hg@repose.cx>
date:        Sun Aug 24 20:34:05 2008 +0900
description:
check missing fields, reset isDue on check, force random field ids

changeset:   694:a92453fe34fa
user:        Damien Elmes <hg@repose.cx>
date:        Sun Aug 24 16:08:46 2008 +0900
description:
add fns to check deck integrity and optimize. backup before upgrade

changeset:   693:40d7c642effe
user:        Damien Elmes <hg@repose.cx>
date:        Sun Aug 24 15:12:56 2008 +0900
description:
flush before deleting

changeset:   692:2ef84a67a27f
user:        Damien Elmes <hg@repose.cx>
date:        Sun Aug 24 14:20:18 2008 +0900
description:
rebuild all due cards on upgrade

changeset:   691:1cc8b894488c
user:        Damien Elmes <hg@repose.cx>
date:        Sat Aug 23 13:24:35 2008 +0900
description:
fix typo

changeset:   690:f1ad96b4ccdf
user:        Damien Elmes <hg@repose.cx>
date:        Sat Aug 23 13:20:45 2008 +0900
description:
same for single priority

changeset:   689:447e0ef9f5a2
user:        Damien Elmes <hg@repose.cx>
date:        Sat Aug 23 13:20:17 2008 +0900
description:
don't mark card modified when updating priorities

changeset:   688:c07dc999a451
user:        Damien Elmes <hg@repose.cx>
date:        Sat Aug 23 13:01:07 2008 +0900
description:
fix for suspending cards

changeset:   687:a1730621b2fa
user:        Damien Elmes <hg@repose.cx>
date:        Sat Aug 23 05:52:13 2008 +0900
description:
in latex code keep win32 code win32 only

changeset:   686:5351ab8ffe26
user:        Damien Elmes <hg@repose.cx>
date:        Sat Aug 23 05:45:09 2008 +0900
description:
create media dir in latex

changeset:   685:abdfdb8d8259
user:        Damien Elmes <hg@repose.cx>
date:        Fri Aug 22 18:36:31 2008 +0900
description:
bump version

changeset:   684:d8e21f20ea13
user:        Damien Elmes <hg@repose.cx>
date:        Fri Aug 22 18:23:12 2008 +0900
description:
ease=0 -> interval=1, ensure relativeDelay is defined properly for vhp cards

changeset:   683:210ac919afba
user:        Damien Elmes <hg@repose.cx>
date:        Fri Aug 22 17:22:46 2008 +0900
description:
rebuild type on updatePriority() too

changeset:   682:0743d48a5f6a
user:        Damien Elmes <hg@repose.cx>
date:        Fri Aug 22 17:17:27 2008 +0900
description:
rebuild types when priorities change

changeset:   681:562e0b7121e2
user:        Damien Elmes <hg@repose.cx>
date:        Fri Aug 22 17:09:17 2008 +0900
description:
switch priority direction on new cards, fix indexes, upgrade deck

changeset:   680:630332d5b52e
user:        Damien Elmes <hg@repose.cx>
date:        Fri Aug 22 17:08:05 2008 +0900
description:
card.toDB(): calculate relative delay based on new interval, not existing

changeset:   679:47b11a72d93e
user:        Damien Elmes <hg@repose.cx>
date:        Fri Aug 22 13:52:30 2008 +0900
description:
encode texpath in file system encoding before calling latex

changeset:   678:8b7e242c5c2c
user:        Damien Elmes <hg@repose.cx>
date:        Fri Aug 22 04:10:36 2008 +0900
description:
make latex python 2.4 compatible

changeset:   677:6e5256cca4ba
user:        Damien Elmes <hg@repose.cx>
date:        Fri Aug 22 03:38:11 2008 +0900
description:
update translations

changeset:   676:90385ecde4a2
user:        Damien Elmes <hg@repose.cx>
date:        Fri Aug 22 03:37:36 2008 +0900
description:
revert to new sync proto

changeset:   675:cdff208f7750
user:        Damien Elmes <hg@repose.cx>
date:        Fri Aug 22 03:25:31 2008 +0900
description:
hide dos box on win32, use file system encoding on latex file

changeset:   674:98c6d7176e58
user:        Damien Elmes <hg@repose.cx>
date:        Fri Aug 22 03:01:39 2008 +0900
description:
use subprocess for latex generation, check cached image files better

changeset:   673:b1e5281cc468
user:        Damien Elmes <hg@repose.cx>
date:        Fri Aug 22 02:11:45 2008 +0900
description:
catch latex/dvipng error messages

changeset:   672:9d9a66c4cc4c
user:        Damien Elmes <hg@repose.cx>
date:        Fri Aug 22 01:27:43 2008 +0900
description:
add uniqueness check for media dir

changeset:   671:d8412e943854
user:        Damien Elmes <hg@repose.cx>
date:        Fri Aug 22 00:39:01 2008 +0900
description:
update  kanji stats for libanki

changeset:   670:3279d36b3873
user:        Damien Elmes <hg@repose.cx>
date:        Thu Aug 21 16:49:56 2008 +0900
description:
remove trailing <p> from finished msg

changeset:   669:4194bf5ab584
user:        Damien Elmes <hg@repose.cx>
date:        Thu Aug 21 03:02:05 2008 +0900
description:
add old sync code back in until ready to release

changeset:   668:15057e5bfe96
user:        Damien Elmes <hg@repose.cx>
date:        Thu Aug 21 02:57:57 2008 +0900
description:
when rounding, round to point

changeset:   667:e3eecc872bd9
user:        Damien Elmes <hg@repose.cx>
date:        Wed Aug 20 23:51:42 2008 +0900
description:
fix resetCard(), add deck finished msg

changeset:   666:d10fe7cf68db
user:        Damien Elmes <hg@repose.cx>
date:        Wed Aug 20 22:33:42 2008 +0900
description:
increase number of backups, allow new deck directory to be customized

changeset:   665:0944063a48a9
user:        Damien Elmes <hg@repose.cx>
date:        Wed Aug 20 15:23:11 2008 +0900
description:
put preSyncRefresh() in correct place

changeset:   664:8de167986624
user:        Damien Elmes <hg@repose.cx>
date:        Tue Aug 19 00:40:21 2008 +0900
description:
use native mac audio

changeset:   663:5f3c43b8e09e
user:        Damien Elmes <hg@repose.cx>
date:        Tue Aug 19 00:36:33 2008 +0900
description:
make sure to rebuild priorities for client after sync

changeset:   662:a11e5e138913
user:        Damien Elmes <hg@repose.cx>
date:        Mon Aug 18 17:39:36 2008 +0900
description:
catch missing files when queueing

changeset:   661:4c84f8f41e29
user:        Damien Elmes <hg@repose.cx>
date:        Mon Aug 18 14:56:52 2008 +0900
description:
avoid division by zero in markExpiredCardsDue()

changeset:   660:7909069b4b98
user:        Damien Elmes <hg@repose.cx>
date:        Mon Aug 18 14:34:58 2008 +0900
description:
fix previous change

changeset:   659:4a9cebb03bbb
user:        Damien Elmes <hg@repose.cx>
date:        Mon Aug 18 14:12:11 2008 +0900
description:
no need to update _dailyStats, bundle daily stats without orm

changeset:   658:0c41b35558b8
user:        Damien Elmes <hg@repose.cx>
date:        Mon Aug 18 14:03:57 2008 +0900
description:
update stats pre-sync

changeset:   657:af0319d44b8d
user:        Damien Elmes <hg@repose.cx>
date:        Fri Aug 15 21:11:28 2008 +0900
description:
make upgrade more robust, fix sync path

changeset:   656:a7525fc35edd
user:        Damien Elmes <hg@repose.cx>
date:        Fri Aug 15 17:20:23 2008 +0900
description:
typo in getCardIds(), don't sync new deck values yet

changeset:   655:701156cd121f
parent:      651:5d4b6f4cfeef
user:        Damien Elmes <hg@repose.cx>
date:        Fri Aug 15 16:36:48 2008 +0900
description:
set _countsDirty on open, add getCards(), update updateAllPriorities()

changeset:   654:c55cd3992387
parent:      651:5d4b6f4cfeef
parent:      653:4a530339560c
user:        Damien Elmes <hg@repose.cx>
date:        Thu Aug 14 15:48:30 2008 +0900
description:
merge

changeset:   653:4a530339560c
user:        Damien Elmes <hg@repose.cx>
date:        Thu Aug 14 15:45:39 2008 +0900
description:
don't send version

changeset:   652:f772a8c41ed8
parent:      643:577fc8703e3e
user:        Damien Elmes <hg@repose.cx>
date:        Thu Aug 14 15:34:23 2008 +0900
description:
use an explicit table name to avoid problems accessing old decks

changeset:   651:5d4b6f4cfeef
user:        Damien Elmes <hg@repose.cx>
date:        Thu Aug 14 15:43:59 2008 +0900
description:
don't send version number, as it's handled locally

changeset:   650:19bb0dfba67f
user:        Damien Elmes <hg@repose.cx>
date:        Thu Aug 14 15:21:17 2008 +0900
description:
remove debugging

changeset:   649:03b8972f5bc7
user:        Damien Elmes <hg@repose.cx>
date:        Thu Aug 14 15:04:50 2008 +0900
description:
when rolling back the deck, make sure to clear the session

changeset:   648:0959736b0b6f
user:        Damien Elmes <hg@repose.cx>
date:        Thu Aug 14 13:49:51 2008 +0900
description:
add final review support, cardsDueBy(), check due + 1 due to integer precision

changeset:   647:14ee60a8146c
user:        Damien Elmes <hg@repose.cx>
date:        Wed Aug 06 14:35:09 2008 +0900
description:
refactor failed card handling

changeset:   646:0a3f138ce999
user:        Damien Elmes <hg@repose.cx>
date:        Sun Aug 03 16:08:55 2008 +0900
description:
update function names

changeset:   645:3e8f51d39c5c
user:        Damien Elmes <hg@repose.cx>
date:        Sun Aug 03 15:54:20 2008 +0900
description:
refactor stats code, counts, getCard

changeset:   644:8de7f216a2eb
parent:      642:e1198518d82f
parent:      643:577fc8703e3e
user:        Damien Elmes <hg@repose.cx>
date:        Sun Jul 27 20:15:35 2008 +0900
description:
merge with stable

changeset:   643:577fc8703e3e
parent:      638:d9a10b14042f
user:        Damien Elmes <hg@repose.cx>
date:        Sun Jul 27 20:14:56 2008 +0900
description:
add temporary hack to prevent obscure problem with web interface

changeset:   642:e1198518d82f
user:        Damien Elmes <hg@repose.cx>
date:        Sun Jul 27 15:54:57 2008 +0900
description:
more sql queue work. update stats and syncing too

changeset:   641:3f7c2ec8f9af
user:        Damien Elmes <hg@repose.cx>
date:        Mon Jul 21 01:24:19 2008 +0900
description:
update stats code for sql only version

changeset:   640:4bedac110b09
user:        Damien Elmes <hg@repose.cx>
date:        Sun Jul 20 16:15:52 2008 +0900
description:
further enhancements to scheduling algo, remove old code

changeset:   639:54f572ab7574
user:        Damien Elmes <hg@repose.cx>
date:        Fri Jul 18 23:03:15 2008 +0900
description:
new scheduling algorithm, getCard/answerCard->non-orm, upgrade deck to v1
- queue implemented using standard sql statements and indexes
- flush() removed from statement() in db.py
- rewrite getCard() and answerCard() to support pure sql
- move index definitions into deck code, and update all at once
- upgrade deck to v1, use new file format, add relativeDelay/isDue

changeset:   638:d9a10b14042f
user:        Damien Elmes <hg@repose.cx>
date:        Sat Jul 12 14:03:49 2008 +0900
description:
change spacing method

changeset:   637:0a4493ceba9a
user:        Damien Elmes <hg@repose.cx>
date:        Mon Jul 07 23:46:37 2008 +0900
description:
bump version number

changeset:   636:0dd97215713f
user:        Damien Elmes <hg@repose.cx>
date:        Mon Jul 07 23:29:24 2008 +0900
description:
update korean translations

changeset:   635:666a61a1005d
user:        Damien Elmes <hg@repose.cx>
date:        Sun Jul 06 17:56:37 2008 +0900
description:
bump version number

changeset:   634:41c8719dea8f
user:        Damien Elmes <hg@repose.cx>
date:        Mon Jun 30 13:27:17 2008 +0900
description:
don't run psyco in sync tests

changeset:   633:76bfad36edeb
user:        Damien Elmes <hg@repose.cx>
date:        Mon Jun 30 12:39:56 2008 +0900
description:
1 days -> 1 day

changeset:   632:d42cbcdb9ca0
user:        Damien Elmes <hg@repose.cx>
date:        Mon Jun 23 18:30:44 2008 +0900
description:
analyze DB on open to fix slow query bug

changeset:   631:0a207d41bdde
user:        Damien Elmes <hg@repose.cx>
date:        Mon Jun 23 17:59:01 2008 +0900
description:
always check spacing, even if failed

changeset:   630:3e72d2bb72cd
user:        Damien Elmes <hg@repose.cx>
date:        Thu Jun 12 13:14:59 2008 +0900
description:
remove hashbangs from scripts

changeset:   629:5adc70f26434
user:        Damien Elmes <hg@repose.cx>
date:        Mon Jun 09 12:59:15 2008 +0900
description:
use small size latex and support utf8
patch from ancechu on the mnemosyne forums

changeset:   628:d16b7864fb51
user:        Damien Elmes <hg@repose.cx>
date:        Sun Jun 08 20:06:48 2008 +0900
description:
add more allowed characters, change pysqlite order

changeset:   627:24f7f67ec3be
user:        Damien Elmes <hg@repose.cx>
date:        Sat May 24 15:51:43 2008 +0900
description:
updated korean translations

changeset:   626:27621df9a3bf
user:        Damien Elmes <hg@repose.cx>
date:        Sat May 24 15:29:24 2008 +0900
description:
bump version number

changeset:   625:a421ba21ad3b
user:        Damien Elmes <hg@repose.cx>
date:        Sat May 24 13:06:35 2008 +0900
description:
fix problem with plural forms

changeset:   624:abfe8cc9e157
user:        Damien Elmes <hg@repose.cx>
date:        Sat May 24 13:01:11 2008 +0900
description:
add Korean translation from Jin Eundeok

changeset:   623:d7dd97ccaec9
user:        Damien Elmes <hg@repose.cx>
date:        Wed May 21 16:11:27 2008 +0900
description:
update valid deck chars

changeset:   622:ce2ca629c3ab
user:        Damien Elmes <hg@repose.cx>
date:        Mon May 19 20:13:16 2008 +0900
description:
don't assume the thread-local variables have been initialized in other threads

changeset:   621:3f2424f85055
user:        Damien Elmes <hg@repose.cx>
date:        Mon May 19 20:08:08 2008 +0900
description:
make language handling thread-local

changeset:   620:274acd4864a3
user:        Damien Elmes <hg@repose.cx>
date:        Mon May 19 18:31:20 2008 +0900
description:
strip bad characters from sync name

changeset:   619:1aafaf051652
user:        Damien Elmes <hg@repose.cx>
date:        Mon May 19 13:11:10 2008 +0900
description:
open unihan db session on each reading request, to work in threaded apps

changeset:   618:552a9a5c2b66
user:        Damien Elmes <hg@repose.cx>
date:        Sun May 18 19:43:19 2008 +0900
description:
add missing file from previous commit

changeset:   617:a114cda5b4fa
user:        Damien Elmes <hg@repose.cx>
date:        Sun May 18 19:34:44 2008 +0900
description:
add cuecard importer from chris aakre

changeset:   616:51fd2d028f19
user:        Damien Elmes <hg@repose.cx>
date:        Sun May 18 16:23:24 2008 +0900
description:
add strip latex support

changeset:   615:e616d09f0347
user:        Damien Elmes <hg@repose.cx>
date:        Sun May 18 15:22:06 2008 +0900
description:
calculate start of date based on gmtime, not local time

changeset:   614:6506d6a30683
user:        Damien Elmes <hg@repose.cx>
date:        Sun May 18 15:07:53 2008 +0900
description:
setup.py: gplv3->gplv3

changeset:   613:e521fe622380
user:        Damien Elmes <hg@repose.cx>
date:        Mon Apr 07 17:28:45 2008 +0900
description:
don't accidently create models as we try to delete them

changeset:   612:358abd1adcf0
user:        Damien Elmes <hg@repose.cx>
date:        Thu Apr 03 12:42:53 2008 +0900
description:
use different cutoff in final drill, bump version

changeset:   611:317d90474379
user:        Damien Elmes <hg@repose.cx>
date:        Wed Apr 02 22:39:29 2008 +0900
description:
bump version number

changeset:   610:6b2b0dbfa5d4
user:        Damien Elmes <hg@repose.cx>
date:        Tue Apr 01 12:29:05 2008 +0900
description:
don't throw away failed cards if not due yet, add collapsedFailedCards()

changeset:   609:fafbd0f3017c
user:        Damien Elmes <hg@repose.cx>
date:        Mon Mar 31 11:16:57 2008 +0900
description:
set cwd to tmpdir when generating latex

changeset:   608:bae31e9e2016
user:        Damien Elmes <hg@repose.cx>
date:        Mon Mar 31 11:12:00 2008 +0900
description:
define mature cards as currentInterval >= 21, fix cardState()

changeset:   607:33b75850cc13
user:        Damien Elmes <hg@repose.cx>
date:        Mon Mar 31 10:47:11 2008 +0900
description:
when adding spaced cards back on future queue, make sure to convert to future item

changeset:   606:08d922f58e7a
user:        Damien Elmes <hg@repose.cx>
date:        Mon Mar 24 15:56:55 2008 +0900
description:
fix path separator

changeset:   605:73eb316d6a38
user:        Damien Elmes <hg@repose.cx>
date:        Mon Mar 24 04:14:47 2008 +0900
description:
try to load graphs twice (fixes graph bug on unicode names on win32)

changeset:   604:f64adfd3f64e
user:        Damien Elmes <hg@repose.cx>
date:        Mon Mar 24 03:26:39 2008 +0900
description:
bump version number

changeset:   603:0fb38c00c31b
user:        Damien Elmes <hg@repose.cx>
date:        Mon Mar 24 02:44:43 2008 +0900
description:
enforce priority order suspended -> high -> med -> low -> norm

changeset:   602:5e235ccdcc85
user:        Damien Elmes <hg@repose.cx>
date:        Mon Mar 24 02:26:45 2008 +0900
description:
commit() manually on export, remove redundant flush in anki03 and deck

changeset:   601:e03056c908c7
user:        Damien Elmes <hg@repose.cx>
date:        Wed Mar 19 15:20:21 2008 +0900
description:
gpl2 -> gpl3

changeset:   600:a8e67b62d6e6
user:        Damien Elmes <hg@repose.cx>
date:        Wed Mar 19 15:18:21 2008 +0900
description:
add /usr/texbin on osx

changeset:   599:16d967dcf64b
user:        Damien Elmes <hg@repose.cx>
date:        Wed Mar 19 15:15:16 2008 +0900
description:
support copying media dir on saveas

changeset:   598:3aba7dd81593
user:        Damien Elmes <hg@repose.cx>
date:        Wed Mar 19 12:00:23 2008 +0900
description:
in refresh(), flush any changes then reload changes after session attach

changeset:   597:ec65c140f655
user:        Damien Elmes <hg@repose.cx>
date:        Sat Mar 15 13:07:20 2008 +0900
description:
catch database is locked as well as table is locked

changeset:   596:d1a64da72c7d
user:        Damien Elmes <hg@repose.cx>
date:        Wed Mar 12 13:26:36 2008 +0900
description:
remove debug statement

changeset:   595:a8905a6cb733
user:        Damien Elmes <hg@repose.cx>
date:        Wed Mar 12 13:25:36 2008 +0900
description:
remove rebuild deck on finish code, since spacing is no longer an issue

changeset:   594:6383725e5fcd
user:        Damien Elmes <hg@repose.cx>
date:        Wed Mar 12 13:24:22 2008 +0900
description:
only update spacing if > than before, set default spacing of 10%

changeset:   593:7bbc82d1b84c
user:        Damien Elmes <hg@repose.cx>
date:        Sun Mar 09 10:30:06 2008 +0900
description:
check to see if earliesttime is valid

changeset:   592:73ca94c12b43
user:        Damien Elmes <hg@repose.cx>
date:        Sun Mar 09 03:09:55 2008 +0900
description:
typo

changeset:   591:114c9307d70e
user:        Damien Elmes <hg@repose.cx>
date:        Sun Mar 09 03:09:36 2008 +0900
description:
rebuild queue if cards are due

changeset:   590:a79ae9c52011
user:        Damien Elmes <hg@repose.cx>
date:        Sun Mar 09 02:59:18 2008 +0900
description:
ver=0.9.5.4

changeset:   589:af29531578b7
user:        Damien Elmes <hg@repose.cx>
date:        Sun Mar 09 02:44:33 2008 +0900
description:
ignore deleted cards/models/etc when importing

changeset:   588:380b73a48552
user:        Damien Elmes <hg@repose.cx>
date:        Sun Mar 09 01:21:33 2008 +0900
description:
remove incomplete dutch translation

changeset:   587:abd56386612f
user:        Damien Elmes <hg@repose.cx>
date:        Sat Mar 08 02:34:37 2008 +0900
description:
fix export field order

changeset:   586:e87a0eb0215e
user:        Damien Elmes <hg@repose.cx>
date:        Sat Mar 08 02:27:26 2008 +0900
description:
don't apply distinct to field values on fact export

changeset:   585:62a49cc767d2
user:        Damien Elmes <hg@repose.cx>
date:        Sat Mar 08 02:01:03 2008 +0900
description:
genID in normal import, too

changeset:   584:87a748693258
user:        Damien Elmes <hg@repose.cx>
date:        Sat Mar 08 01:59:54 2008 +0900
description:
genID() on anki03 import

changeset:   583:ca7b58b3ee04
user:        Damien Elmes <hg@repose.cx>
date:        Sat Mar 08 00:35:40 2008 +0900
description:
correctly handle failed cards not due yet in final review & failed cards count

changeset:   582:3fc290930148
user:        Damien Elmes <hg@repose.cx>
date:        Fri Mar 07 23:57:53 2008 +0900
description:
put tex file in tmp dir too

changeset:   581:166e30a6fa56
user:        Damien Elmes <hg@repose.cx>
date:        Tue Mar 04 00:08:49 2008 +0900
description:
typo

changeset:   580:b492ced5d846
user:        Damien Elmes <hg@repose.cx>
date:        Tue Mar 04 00:07:57 2008 +0900
description:
update pendingFailed/etc

changeset:   579:523f4063003a
user:        Damien Elmes <hg@repose.cx>
date:        Mon Mar 03 23:48:34 2008 +0900
description:
include modified in props, get by oldest modified for final review too

changeset:   578:3dc73bf9e57a
user:        Damien Elmes <hg@repose.cx>
date:        Mon Mar 03 23:27:38 2008 +0900
description:
if->elif

changeset:   577:ce3c685f27db
user:        Damien Elmes <hg@repose.cx>
date:        Mon Mar 03 23:12:01 2008 +0900
description:
failed cards -> failed queue

changeset:   576:ab762131e1db
user:        Damien Elmes <hg@repose.cx>
date:        Mon Mar 03 22:46:47 2008 +0900
description:
ver=0.9.5.3

changeset:   575:3dff276a3146
user:        Damien Elmes <hg@repose.cx>
date:        Mon Mar 03 22:45:12 2008 +0900
description:
update ES translation

changeset:   574:4bdaff4f8fdc
user:        Damien Elmes <hg@repose.cx>
date:        Mon Mar 03 20:01:21 2008 +0900
description:
refactor scheduling code to address some more problems & fix many problems
- build queue from a single sql call with type identifier instead of four
separate views. this greatly reduces the complexity of the sql statements and
removes the possibility of a card appearing in more than one queue
- store all failed cards in the failed cards queue, regardless of due time.
this reduces the complexity of the above and some other parts of the code
- when pulling items from the failed queue due to maxFailed reached, get the
oldest modified item instead of oldest due. this ensures that cards are
removed in the order they were added and it's not possible for a '0' answer to
be placed in front of all '1' answers.
- don't apply spacing to failed cards on either fetch or add operations
- catch only locking errors when opening a deck; re-raise non-locking errors
- catch locking errors on open as well as lock operations

changeset:   573:f9b0f65540ad
user:        Damien Elmes <hg@repose.cx>
date:        Fri Feb 29 15:07:49 2008 +0900
description:
remove card cache and flush changes to db instead

changeset:   572:0216b0bf690d
user:        Damien Elmes <hg@repose.cx>
date:        Fri Feb 29 02:05:46 2008 +0900
description:
bump version number

changeset:   571:1f138784d8da
user:        Damien Elmes <hg@repose.cx>
date:        Fri Feb 29 02:01:37 2008 +0900
description:
address possible off-by-one in failed/future distinction

changeset:   570:edaa11cd4969
user:        Damien Elmes <hg@repose.cx>
date:        Fri Feb 29 00:32:46 2008 +0900
description:
when calculating earliest due, factor in collapseTime

changeset:   569:62ceaca5da85
user:        Damien Elmes <hg@repose.cx>
date:        Fri Feb 29 00:26:42 2008 +0900
description:
filter tags for facts too on export

changeset:   568:b092c2b4a44e
user:        Damien Elmes <hg@repose.cx>
date:        Fri Feb 29 00:02:50 2008 +0900
description:
update french translations, bump version number

changeset:   567:dba74965ea8a
user:        Damien Elmes <hg@repose.cx>
date:        Thu Feb 28 23:30:18 2008 +0900
description:
make sure to update lastCardId, and keep cache of cards

changeset:   566:515ab9e71d5b
user:        Damien Elmes <hg@repose.cx>
date:        Thu Feb 28 05:48:02 2008 +0900
description:
encode backup dir too before generating backup path

changeset:   565:4d45506e825c
user:        Damien Elmes <hg@repose.cx>
date:        Thu Feb 28 03:40:17 2008 +0900
description:
add interrupted system call workaround

changeset:   564:528144c8861e
user:        Damien Elmes <hg@repose.cx>
date:        Thu Feb 28 03:28:15 2008 +0900
description:
bump version number

changeset:   563:cf9f25c19e7d
user:        Damien Elmes <hg@repose.cx>
date:        Thu Feb 28 03:26:07 2008 +0900
description:
fix addFact properly

changeset:   562:4dd909b79cff
user:        Damien Elmes <hg@repose.cx>
date:        Thu Feb 28 03:13:01 2008 +0900
description:
fix deck unit tests

changeset:   561:e67f8d23ece9
user:        Damien Elmes <hg@repose.cx>
date:        Thu Feb 28 03:08:59 2008 +0900
description:
save or update fact when adding

changeset:   560:1f76f7d8aa2a
user:        Damien Elmes <hg@repose.cx>
date:        Thu Feb 28 01:47:23 2008 +0900
description:
remove target deck before saveas

changeset:   559:d68d668561ad
user:        Damien Elmes <hg@repose.cx>
date:        Thu Feb 28 01:45:26 2008 +0900
description:
remove debug statement

changeset:   558:b7ad9d9501fd
user:        Damien Elmes <hg@repose.cx>
date:        Thu Feb 28 01:36:42 2008 +0900
description:
saveas support

changeset:   557:997d2acce31a
user:        Damien Elmes <hg@repose.cx>
date:        Thu Feb 28 00:29:13 2008 +0900
description:
kakasi: preserve newlines when editing (catch <br />)

changeset:   556:c5d42e49521a
user:        Damien Elmes <hg@repose.cx>
date:        Thu Feb 28 00:18:52 2008 +0900
description:
reset spacing on export, set mod time

changeset:   555:948b50693325
user:        Damien Elmes <hg@repose.cx>
date:        Thu Feb 28 00:16:33 2008 +0900
description:
when resetting cards, reset spacing too, and set modtime

changeset:   554:30c0b7f61fda
user:        Damien Elmes <hg@repose.cx>
date:        Thu Feb 28 00:01:18 2008 +0900
description:
fix put spaced cards in correct queue, pull failed cards from future

changeset:   553:b5b3a7410f31
user:        Damien Elmes <hg@repose.cx>
date:        Thu Feb 28 00:00:37 2008 +0900
description:
add first answered to card stats

changeset:   552:a2cf6fd896a0
user:        Damien Elmes <hg@repose.cx>
date:        Tue Feb 26 17:44:49 2008 +0900
description:
failed -> not failed, add resetCards support

changeset:   551:a56b18dd983a
user:        Damien Elmes <hg@repose.cx>
date:        Tue Feb 26 16:46:41 2008 +0900
description:
fix eta for new cards

changeset:   550:954568afa53d
user:        Damien Elmes <hg@repose.cx>
date:        Mon Feb 25 17:16:46 2008 +0900
description:
add delete empty models support

changeset:   549:e6f6a5160173
user:        Damien Elmes <hg@repose.cx>
date:        Mon Feb 25 16:47:04 2008 +0900
description:
update translations

changeset:   548:e8ab6027a118
user:        Damien Elmes <hg@repose.cx>
date:        Mon Feb 25 16:15:43 2008 +0900
description:
support adding tags to anki10, set mod on anki10

changeset:   547:3f2b1b17cfe2
user:        Damien Elmes <hg@repose.cx>
date:        Mon Feb 25 15:28:36 2008 +0900
description:
update all cards with the current card model id, not all card models ids

changeset:   546:8f362e457134
user:        Damien Elmes <hg@repose.cx>
date:        Mon Feb 25 14:01:59 2008 +0900
description:
set default factor=2.5 on export

changeset:   545:7d627396ae19
user:        Damien Elmes <hg@repose.cx>
date:        Sun Feb 24 22:22:46 2008 +0900
description:
don't collect low priority cards if they are failed

changeset:   544:94a60c418ec5
user:        Damien Elmes <hg@repose.cx>
date:        Sat Feb 23 19:56:51 2008 +0900
description:
if all cards are failed, make sure spacing is at least delay0/delay1

changeset:   543:a9d488cecde1
user:        Damien Elmes <hg@repose.cx>
date:        Sat Feb 23 19:04:06 2008 +0900
description:
fix low priority

changeset:   542:69fb21c53b18
user:        Damien Elmes <hg@repose.cx>
date:        Sat Feb 23 18:45:46 2008 +0900
description:
since sqlite doesn't have subsecond accuracy, add one to future queue

changeset:   541:236ec293ac76
user:        Damien Elmes <hg@repose.cx>
date:        Sat Feb 23 18:05:33 2008 +0900
description:
update translations

changeset:   540:c5d1d46e092a
user:        Damien Elmes <hg@repose.cx>
date:        Sat Feb 23 18:02:55 2008 +0900
description:
put high priority new cards in rev queue too, fix getstats to understand

changeset:   539:a503ff0fb920
user:        Damien Elmes <hg@repose.cx>
date:        Sat Feb 23 15:53:14 2008 +0900
description:
add more debugging info

changeset:   538:697a6aa6eec2
user:        Damien Elmes <hg@repose.cx>
date:        Sat Feb 23 15:35:58 2008 +0900
description:
don't take out transaction in object_session, close deck on export

changeset:   537:7cec96fa045e
user:        Damien Elmes <hg@repose.cx>
date:        Sat Feb 23 14:20:32 2008 +0900
description:
always open a session, whether we're locking or not

changeset:   536:a48e8869d944
user:        Damien Elmes <hg@repose.cx>
date:        Sat Feb 23 14:04:34 2008 +0900
description:
change transaction handling

changeset:   535:6391564d0a59
user:        Damien Elmes <hg@repose.cx>
date:        Fri Feb 22 23:55:58 2008 +0900
description:
include created in items

changeset:   534:0ae8a9276a60
user:        Damien Elmes <hg@repose.cx>
date:        Fri Feb 22 22:37:17 2008 +0900
description:
sort 'deck order' new cards by created, not due

changeset:   533:54bb37136335
user:        Damien Elmes <hg@repose.cx>
date:        Fri Feb 22 22:31:34 2008 +0900
description:
add time to due delay before comparison

changeset:   532:977950ea60b5
user:        Damien Elmes <hg@repose.cx>
date:        Fri Feb 22 22:18:42 2008 +0900
description:
take out a write lock after every save

changeset:   531:cb5fb49ff027
user:        Damien Elmes <hg@repose.cx>
date:        Fri Feb 22 22:00:35 2008 +0900
description:
update firstAnswered on answer

changeset:   530:6b6cb6032d24
user:        Damien Elmes <hg@repose.cx>
date:        Fri Feb 22 04:38:37 2008 +0900
description:
scheduling changes to address a few bugs
- store only soon due cards in the failed queue. other cards go into the
future queue
- addExpiredItem() chooses future or failed as necessary
- remove failedDueSoon() as the length of the failed queue will suffice now
- include failed, non-due cards in future queue
- only use max(card.due, facts.spaceUntil) on a different card, instead of
indiscriminately
- log non-due cards showing up in queue

changeset:   529:8beac072db96
user:        Damien Elmes <hg@repose.cx>
date:        Fri Feb 22 02:47:37 2008 +0900
description:
don't recount ease2 in total

changeset:   528:6ec2e64f543a
user:        Damien Elmes <hg@repose.cx>
date:        Fri Feb 22 01:45:52 2008 +0900
description:
fix stats mislayout, and debugging info temporarily

changeset:   527:9f6634c55f74
user:        Damien Elmes <hg@repose.cx>
date:        Thu Feb 21 23:28:56 2008 +0900
description:
output dvipng text to log file, too

changeset:   526:6efe614e5783
user:        Damien Elmes <hg@repose.cx>
date:        Thu Feb 21 00:59:32 2008 +0900
description:
treat spaced cards as not due in graphs

changeset:   525:7032963c45e3
user:        Damien Elmes <hg@repose.cx>
date:        Wed Feb 20 21:39:01 2008 +0900
description:
bump version number

changeset:   524:1ed1bf270ec0
user:        Damien Elmes <hg@repose.cx>
date:        Wed Feb 20 21:36:35 2008 +0900
description:
fix win32 dying on utime

changeset:   523:9aebd3f33208
user:        Damien Elmes <hg@repose.cx>
date:        Wed Feb 20 21:34:43 2008 +0900
description:
importing: set mod, inc timestamp on every card, set reps in mnemosyne import

changeset:   522:111a89dc1a7d
user:        Damien Elmes <hg@repose.cx>
date:        Wed Feb 20 20:57:40 2008 +0900
description:
add back accidently removed spacedCardCount()

changeset:   521:9b7ea500e6d6
user:        Damien Elmes <hg@repose.cx>
date:        Wed Feb 20 19:52:15 2008 +0900
description:
flush before checking earliest, updated sql pending counts, off by 1, space hack

changeset:   520:1a51d20d0c67
user:        Damien Elmes <hg@repose.cx>
date:        Wed Feb 20 18:21:21 2008 +0900
description:
future queue shouldn't order by ordinal

changeset:   519:09b7354d9054
user:        Damien Elmes <hg@repose.cx>
date:        Wed Feb 20 18:06:36 2008 +0900
description:
fix case sensitivity problems with priorities/tags

changeset:   518:4786ab9c7d92
user:        Damien Elmes <hg@repose.cx>
date:        Wed Feb 20 18:05:02 2008 +0900
description:
fix 8 hours->10 minutes (again), report keyerror on missing field in fact

changeset:   517:cd2445e7315a
user:        Damien Elmes <hg@repose.cx>
date:        Wed Feb 20 02:08:11 2008 +0900
description:
always use heap for acq, order by id on random, fix priorities

changeset:   516:3cdad305b8c6
user:        Damien Elmes <hg@repose.cx>
date:        Tue Feb 19 01:46:34 2008 +0900
description:
make sure failed/successive reflects currentCard

changeset:   515:7b3852e8467d
user:        Damien Elmes <hg@repose.cx>
date:        Tue Feb 19 01:39:15 2008 +0900
description:
typo

changeset:   514:45d61ec90048
user:        Damien Elmes <hg@repose.cx>
date:        Tue Feb 19 01:29:16 2008 +0900
description:
insert and sort instead

changeset:   513:e45ead4b23e8
user:        Damien Elmes <hg@repose.cx>
date:        Tue Feb 19 01:27:57 2008 +0900
description:
ensure random new cards show in order

changeset:   512:97e6d8c6db61
user:        Damien Elmes <hg@repose.cx>
date:        Tue Feb 19 00:27:56 2008 +0900
description:
fetch all cards into revision queue, not earliest ordinal

changeset:   511:9ff150cf14b1
user:        Damien Elmes <hg@repose.cx>
date:        Mon Feb 18 23:59:28 2008 +0900
description:
support mnemosyne version 2 decks

changeset:   510:33141dcabac4
user:        Damien Elmes <hg@repose.cx>
date:        Mon Feb 18 20:15:25 2008 +0900
description:
add failed/successive

changeset:   509:7b784852048e
user:        Damien Elmes <hg@repose.cx>
date:        Mon Feb 18 17:00:54 2008 +0900
description:
ease2 = yes

changeset:   508:ccf03fd550f8
user:        Damien Elmes <hg@repose.cx>
date:        Sun Feb 17 21:38:51 2008 +0900
description:
calculate nextDue based on old state

changeset:   507:07b4a2308008
user:        Damien Elmes <hg@repose.cx>
date:        Sun Feb 17 21:31:40 2008 +0900
description:
>= not > in failedCardMax, fix thinko in seen fact repression

changeset:   506:2c53ed770cc3
user:        Damien Elmes <hg@repose.cx>
date:        Sun Feb 17 04:32:13 2008 +0900
description:
calculate nextDue with old state

changeset:   505:6260e8d0b8c8
user:        Damien Elmes <hg@repose.cx>
date:        Sun Feb 17 02:25:30 2008 +0900
description:
fix win32 backup problem, syncing deleting everything

changeset:   504:51f78cb0a6c9
user:        Damien Elmes <hg@repose.cx>
date:        Sun Feb 17 01:25:20 2008 +0900
description:
ensure priorities and suspended are case-insensitive

changeset:   503:7c9f6826d07a
user:        Damien Elmes <hg@repose.cx>
date:        Sat Feb 16 23:24:20 2008 +0900
description:
bump version number

changeset:   502:673df6435b3d
user:        Damien Elmes <hg@repose.cx>
date:        Sat Feb 16 23:14:15 2008 +0900
description:
ensure utf8 is passed to sqlite, don't show suspended in sql card counts

changeset:   501:ab2eb6518847
user:        Damien Elmes <hg@repose.cx>
date:        Sat Feb 16 21:55:01 2008 +0900
description:
fix encoding issues

changeset:   500:c77088668277
user:        Damien Elmes <hg@repose.cx>
date:        Sat Feb 16 04:47:27 2008 +0900
description:
update translations

changeset:   499:0190a25e8116
user:        Damien Elmes <hg@repose.cx>
date:        Sat Feb 16 04:40:56 2008 +0900
description:
update version number, sync URL

changeset:   498:aa0c093177a7
user:        Damien Elmes <hg@repose.cx>
date:        Sat Feb 16 04:38:22 2008 +0900
description:
don't decrement on failed cards, failedDueSoon, fix suspended&acqCards

changeset:   497:804b745cb613
user:        Damien Elmes <hg@repose.cx>
date:        Fri Feb 15 23:58:19 2008 +0900
description:
do spaced check on all queues, not just future

changeset:   496:b85b94f522aa
user:        Damien Elmes <hg@repose.cx>
date:        Fri Feb 15 15:07:08 2008 +0900
description:
fix old stats when not in final review

changeset:   495:d941ef5c2568
user:        Damien Elmes <hg@repose.cx>
date:        Thu Feb 14 01:36:31 2008 +0900
description:
add some docs to __init__

changeset:   494:9b1b2e078d3b
user:        Damien Elmes <hg@repose.cx>
date:        Thu Feb 14 01:21:31 2008 +0900
description:
update stats to reflect factor, update lastFactor on answer

changeset:   493:721fa0fa5e23
user:        Damien Elmes <hg@repose.cx>
date:        Thu Feb 14 01:09:24 2008 +0900
description:
add last factor to card, factor&last to history

changeset:   492:f5f140bcf875
user:        Damien Elmes <hg@repose.cx>
date:        Wed Feb 13 23:44:23 2008 +0900
description:
test for sqlite

changeset:   491:86f46df15879
user:        Damien Elmes <hg@repose.cx>
date:        Wed Feb 13 23:28:28 2008 +0900
description:
improve simplejson version check

changeset:   490:35b9b7175062
user:        Damien Elmes <hg@repose.cx>
date:        Wed Feb 13 22:58:41 2008 +0900
description:
fix delete card tags

changeset:   489:659435efb87c
user:        Damien Elmes <hg@repose.cx>
date:        Wed Feb 13 22:58:27 2008 +0900
description:
fix add card tags

changeset:   488:d5a0287d0c34
user:        Damien Elmes <hg@repose.cx>
date:        Wed Feb 13 22:02:17 2008 +0900
description:
remove echo=false

changeset:   487:d4bc57e5080a
user:        Damien Elmes <hg@repose.cx>
date:        Wed Feb 13 21:55:33 2008 +0900
description:
another attempt

changeset:   486:e7f5fe8e3a83
user:        Damien Elmes <hg@repose.cx>
date:        Wed Feb 13 21:42:58 2008 +0900
description:
print deck error to stderr

changeset:   485:e1d29d5e0ef2
user:        Damien Elmes <hg@repose.cx>
date:        Wed Feb 13 21:28:26 2008 +0900
description:
another attempt at unicodetext compat

changeset:   484:f4c4c2248244
user:        Damien Elmes <hg@repose.cx>
date:        Wed Feb 13 16:35:30 2008 +0900
description:
import text

changeset:   483:a54a25860f08
user:        Damien Elmes <hg@repose.cx>
date:        Wed Feb 13 02:39:56 2008 +0900
description:
don't do anything if no cards to update on card model change

changeset:   482:59d58a57f176
user:        Damien Elmes <hg@repose.cx>
date:        Wed Feb 13 02:39:06 2008 +0900
description:
refactor sql renderqa into cardmodel, add q/a update on card model change

changeset:   481:73716aab572a
user:        Damien Elmes <hg@repose.cx>
date:        Wed Feb 13 01:48:15 2008 +0900
description:
bugfixes in priorities, syncing, and saving & oldCardCount
- ensure simplejson 1.7 or more
- only update card priorities if changed, and set mod time
- make oldCardCount report all non-new cards
- don't set modified on save, should already be modified
- remove reference to json2
- only update cards on fact change if textChanged=True
- flush card and field models on add, to ensure subsequent delete works
- lastSync = 0 if not same on server and client
- bulk delete of facts and cards in sync
- fix createDeck command in sync

changeset:   480:d8d15968be41
user:        Damien Elmes <hg@repose.cx>
date:        Mon Feb 11 23:47:59 2008 +0900
description:
fix field order, add initial spacing

changeset:   479:064f2ff34327
user:        Damien Elmes <hg@repose.cx>
date:        Mon Feb 11 18:13:14 2008 +0900
description:
limit final review to collapseTime, bump version number

changeset:   478:b9dcd6f217f1
user:        Damien Elmes <hg@repose.cx>
date:        Mon Feb 11 17:56:40 2008 +0900
description:
add new card spacing attr for later, rebuild queue on empty, add fuzz to spacing

changeset:   477:bffa023c72e1
user:        Damien Elmes <hg@repose.cx>
date:        Mon Feb 11 15:30:46 2008 +0900
description:
preserve model created/mod, use same cmodel/fmodel id, preserve modtime on upgrade

changeset:   476:e180bf592812
user:        Damien Elmes <hg@repose.cx>
date:        Mon Feb 11 14:58:11 2008 +0900
description:
add model test

changeset:   475:89025cabb354
user:        Damien Elmes <hg@repose.cx>
date:        Mon Feb 11 14:56:47 2008 +0900
description:
pending card count when queue not built, getstats uses currentcard, sync fix

changeset:   474:18f6e364e443
user:        Damien Elmes <hg@repose.cx>
date:        Fri Feb 08 21:03:23 2008 +0900
description:
add close method, add optional backup/locking, make anki03 import safer

changeset:   473:28108e81b9c8
user:        Damien Elmes <hg@repose.cx>
date:        Wed Feb 06 23:19:25 2008 +0900
description:
move to unique identifiers, use simplejson, remove unique name checks

changeset:   472:2f864d898a9c
user:        Damien Elmes <hg@repose.cx>
date:        Mon Feb 04 19:07:46 2008 +0900
description:
bump version number

changeset:   471:6beca934d4e1
user:        Damien Elmes <hg@repose.cx>
date:        Mon Feb 04 17:45:35 2008 +0900
description:
dispose of engine on failure (fix win32 bug)

changeset:   470:fd2dea923ea1
user:        Damien Elmes <hg@repose.cx>
date:        Mon Feb 04 17:32:48 2008 +0900
description:
fix excessive /, only add views if necessary, lock db, typo

changeset:   469:911cfe0f3bd4
user:        Damien Elmes <hg@repose.cx>
date:        Mon Feb 04 16:56:15 2008 +0900
description:
move new deck path into separate routine

changeset:   468:7334806dfa95
user:        Damien Elmes <hg@repose.cx>
date:        Mon Feb 04 16:52:43 2008 +0900
description:
reimplement backup support, use mtime instead of diff

changeset:   467:6d8a803a1098
user:        Damien Elmes <hg@repose.cx>
date:        Mon Feb 04 15:20:52 2008 +0900
description:
index factId on cards table, add numeric attr in field model

changeset:   466:71d87d9ff488
user:        Damien Elmes <hg@repose.cx>
date:        Mon Feb 04 13:14:20 2008 +0900
description:
handle case where min or avg is None

changeset:   465:f57e4be7a78d
user:        Damien Elmes <hg@repose.cx>
date:        Mon Feb 04 11:30:21 2008 +0900
description:
add spaced card count

changeset:   464:4d2fcc3d168c
user:        Damien Elmes <hg@repose.cx>
date:        Mon Feb 04 11:26:50 2008 +0900
description:
fix typo

changeset:   463:22fe19136e06
user:        Damien Elmes <hg@repose.cx>
date:        Mon Feb 04 11:16:48 2008 +0900
description:
relative spacing

changeset:   462:7f6ec59d2dc7
user:        Damien Elmes <hg@repose.cx>
date:        Sun Feb 03 14:38:48 2008 +0900
description:
speed up model deletion

changeset:   461:ab7b909ccc67
user:        Damien Elmes <hg@repose.cx>
date:        Sun Feb 03 02:49:09 2008 +0900
description:
fix unit tests updating test files

changeset:   460:7199bba3220c
user:        Damien Elmes <hg@repose.cx>
date:        Sun Feb 03 02:35:10 2008 +0900
description:
fix invalid numbers in importing

changeset:   459:80e403561c46
user:        Damien Elmes <hg@repose.cx>
date:        Sun Feb 03 02:28:36 2008 +0900
description:
add all updated files

changeset:   458:e659844c57ab
user:        Damien Elmes <hg@repose.cx>
date:        Sun Feb 03 02:23:39 2008 +0900
description:
support field count greater than models when importing, fix bugs

changeset:   457:574c48bbdda3
user:        Damien Elmes <hg@repose.cx>
date:        Sun Feb 03 01:44:34 2008 +0900
description:
ensure we add empty fields too

changeset:   456:2c87169fe867
user:        Damien Elmes <hg@repose.cx>
date:        Sun Feb 03 00:53:59 2008 +0900
description:
anki10 import support

changeset:   455:89ff10c2dcc6
user:        Damien Elmes <hg@repose.cx>
date:        Sun Feb 03 00:17:19 2008 +0900
description:
change select order, add index to field model and value

changeset:   454:a2b67f3dbac9
user:        Damien Elmes <hg@repose.cx>
date:        Sun Feb 03 00:16:03 2008 +0900
description:
fix uniqueness check looking at other fields

changeset:   453:83bdeeb05b90
user:        Damien Elmes <hg@repose.cx>
date:        Sat Feb 02 22:47:48 2008 +0900
description:
csv/mnemosyne/anki03 importers working

changeset:   452:996c42126688
user:        Damien Elmes <hg@repose.cx>
date:        Fri Feb 01 20:01:28 2008 +0900
description:
fix graphs on empty, media dir, locked db, remove factorChange

changeset:   451:fd5d0dd0ecac
user:        Damien Elmes <hg@repose.cx>
date:        Fri Feb 01 15:55:06 2008 +0900
description:
more scheduling tweaks, fix q/a bug

changeset:   450:a7a162b15bfc
user:        Damien Elmes <hg@repose.cx>
date:        Fri Feb 01 14:50:13 2008 +0900
description:
change scheduling algo, fix sql bug

changeset:   449:9ba84487d601
user:        Damien Elmes <hg@repose.cx>
date:        Thu Jan 31 23:57:17 2008 +0900
description:
newcardplacement -> newcardorder

changeset:   448:156b41a3a1cb
user:        Damien Elmes <hg@repose.cx>
date:        Thu Jan 31 23:30:18 2008 +0900
description:
show kanji stats only for seen cards

changeset:   447:3277f9ea9574
user:        Damien Elmes <hg@repose.cx>
date:        Thu Jan 31 23:21:25 2008 +0900
description:
reorganise importing

changeset:   446:739a127bc72a
user:        Damien Elmes <hg@repose.cx>
date:        Thu Jan 31 23:21:12 2008 +0900
description:
only save if modified, and after saving ensure lastLoaded = modified

changeset:   445:ccf18729eb2f
user:        Damien Elmes <hg@repose.cx>
date:        Wed Jan 30 15:29:23 2008 +0900
description:
UnicodeText compat fix, fix broken statement()

changeset:   444:86628769a647
user:        Damien Elmes <hg@repose.cx>
date:        Wed Jan 30 14:59:20 2008 +0900
description:
add export tags support

changeset:   443:7156e0b1243b
user:        Damien Elmes <hg@repose.cx>
date:        Wed Jan 30 14:38:43 2008 +0900
description:
count facts in export, fix html formatting & kakasi bug

changeset:   442:6495344038d3
user:        Damien Elmes <hg@repose.cx>
date:        Wed Jan 30 03:29:04 2008 +0900
description:
fix stats reporting wrong remaining number

changeset:   441:407b7177336b
user:        Damien Elmes <hg@repose.cx>
date:        Wed Jan 30 02:04:06 2008 +0900
description:
finish bulk tag update routines

changeset:   440:d16f8c4205c0
user:        Damien Elmes <hg@repose.cx>
date:        Wed Jan 30 01:32:32 2008 +0900
description:
add bulk card/fact delete, start of tags, make rebuild optional

changeset:   439:c883b0fbf4bd
user:        Damien Elmes <hg@repose.cx>
date:        Tue Jan 29 01:53:54 2008 +0900
description:
cache question/answer in card, finish exporting (much faster)

changeset:   438:97c1168e0f8e
user:        Damien Elmes <hg@repose.cx>
date:        Mon Jan 28 23:49:47 2008 +0900
description:
fix sqlalchemy depreciation, implement card export

changeset:   437:3f060c6ae690
user:        Damien Elmes <hg@repose.cx>
date:        Mon Jan 28 19:50:07 2008 +0900
description:
export anki support

changeset:   436:021d5b32d76b
user:        Damien Elmes <hg@repose.cx>
date:        Mon Jan 28 03:05:02 2008 +0900
description:
fix oldcardcount/newcardcount, stats on new deck

changeset:   435:8bb62308395b
user:        Damien Elmes <hg@repose.cx>
date:        Mon Jan 28 02:38:47 2008 +0900
description:
fix required/unique on import, fix unit test other->basic

changeset:   434:708512162d38
user:        Damien Elmes <hg@repose.cx>
date:        Mon Jan 28 01:48:28 2008 +0900
description:
convert chinese pickle support to db

changeset:   433:3e2a7d96b470
user:        Damien Elmes <hg@repose.cx>
date:        Mon Jan 28 01:37:59 2008 +0900
description:
add tests, chinese (move to db)

changeset:   432:ff11bf6084f0
user:        Damien Elmes <hg@repose.cx>
date:        Mon Jan 28 01:37:29 2008 +0900
description:
cleanup cards.py

changeset:   431:3b12714f6ade
user:        Damien Elmes <hg@repose.cx>
date:        Mon Jan 28 01:08:43 2008 +0900
description:
remote sync implemented

changeset:   430:4a2f588ea119
user:        Damien Elmes <hg@repose.cx>
date:        Mon Jan 28 00:16:12 2008 +0900
description:
add alignment back

changeset:   429:00ce16b7bb8c
user:        Damien Elmes <hg@repose.cx>
date:        Sun Jan 27 23:03:13 2008 +0900
description:
fix latex

changeset:   428:6815007aa990
user:        Damien Elmes <hg@repose.cx>
date:        Sun Jan 27 20:55:54 2008 +0900
description:
be sure to flush deletion and update deck when deleting models

changeset:   427:02853198c573
user:        Damien Elmes <hg@repose.cx>
date:        Sat Jan 26 18:08:05 2008 +0900
description:
fix matplotlib error, remove references to fields on delete, fix unique bug

changeset:   426:2e8356b7b8ed
user:        Damien Elmes <hg@repose.cx>
date:        Fri Jan 25 20:10:28 2008 +0900
description:
revamp tag utils

changeset:   425:7ca343a58e65
user:        Damien Elmes <hg@repose.cx>
date:        Fri Jan 25 01:11:20 2008 +0900
description:
add missing sync cases, add/delete/ fieldmodels/cardmodels, enable lastSync

changeset:   424:472dde78f1d0
user:        Damien Elmes <hg@repose.cx>
date:        Tue Jan 22 23:52:05 2008 +0900
description:
facts implemented in pure sql

changeset:   423:8abe57b723bf
user:        Damien Elmes <hg@repose.cx>
date:        Tue Jan 22 23:30:23 2008 +0900
description:
convert card syncing to pure sql

changeset:   422:821cb86e23a3
user:        Damien Elmes <hg@repose.cx>
date:        Tue Jan 22 01:36:21 2008 +0900
description:
implemented card/fact syncing - see notes
- lastSync = 0 for now, needs more thinking
- cards/facts syncing very slow due to orm overhead, needs to be rewriten in
pure sql

changeset:   421:5bf940a20645
user:        Damien Elmes <hg@repose.cx>
date:        Mon Jan 21 15:22:24 2008 +0900
description:
half of syncing implemented, various changes to facts/etc for syncing
- only send ids changed later than lastSync
- bundle information into a payload to decrease latency
- factor latex into sourcecode (insecure in deck)
- implement history tracking
- uniquify field/model/cardmodel/fieldmodel ids

changeset:   420:b63ad96e01aa
user:        Damien Elmes <hg@repose.cx>
date:        Fri Jan 18 20:22:20 2008 +0900
description:
update czech translation, refactor

changeset:   419:57a17dddcb19
user:        Damien Elmes <hg@repose.cx>
date:        Thu Jan 17 21:45:41 2008 +0900
description:
after 3 days, add more delay at half speed

changeset:   418:a83d8d225dff
user:        Damien Elmes <hg@repose.cx>
date:        Thu Jan 17 01:33:32 2008 +0900
description:
we can skip the factId sort

changeset:   417:d9b57fbafc58
user:        Damien Elmes <hg@repose.cx>
date:        Thu Jan 17 01:19:32 2008 +0900
description:
ordinals, features, unicode
- store card model order in cards
- get the first available card in order, to ensure cards are shown in time
- do it in python, as it's about 3-4x faster than the equivalent sql
- decorators -> features
- add tests for features and stdmodels
- add unicode wrappers for various data that may not be unicode
- only add first card in a set in addCardToQueue()

changeset:   416:51b85f619590
user:        Damien Elmes <hg@repose.cx>
date:        Wed Jan 16 19:24:14 2008 +0900
description:
factor sql expressions into views, fix remaining stdmodels

changeset:   415:f702768fa05f
user:        Damien Elmes <hg@repose.cx>
date:        Tue Jan 15 01:24:25 2008 +0900
description:
fix graphs

changeset:   414:241fc522b9ba
user:        Damien Elmes <hg@repose.cx>
date:        Tue Jan 15 00:50:36 2008 +0900
description:
implement remaining stats, fix deck.created in import, add deck predicates

changeset:   413:52dffc6d4d41
user:        Damien Elmes <hg@repose.cx>
date:        Mon Jan 14 18:17:54 2008 +0900
description:
fix bug in distracted time calculation

changeset:   412:86d266baa213
user:        Damien Elmes <hg@repose.cx>
date:        Mon Jan 14 18:06:05 2008 +0900
description:
priority queue scheduling, implemented stats generation

changeset:   411:512e30710a77
user:        Damien Elmes <hg@repose.cx>
date:        Sun Jan 13 17:01:27 2008 +0900
description:
max new cards feature, refactor getCards()

changeset:   410:881ecf95a7e8
user:        Damien Elmes <hg@repose.cx>
date:        Thu Jan 10 11:39:45 2008 +0900
description:
track fact/card/deck modtime

changeset:   409:8b764de79c57
user:        Damien Elmes <hg@repose.cx>
date:        Thu Jan 10 10:48:36 2008 +0900
description:
deleting cards/facts

changeset:   408:7fb0cdb42a59
user:        Damien Elmes <hg@repose.cx>
date:        Thu Jan 10 09:06:26 2008 +0900
description:
work on scheduling

changeset:   407:95dce2fd08f3
user:        Damien Elmes <hg@repose.cx>
date:        Mon Jan 07 14:36:26 2008 +0900
description:
initial work on sql backend

changeset:   406:7a9bd84316df
user:        Damien Elmes <hg@repose.cx>
date:        Fri Jan 04 00:53:47 2008 +0900
description:
add hack for cardIsNew() and old clients

changeset:   405:8db50f3515d1
user:        Damien Elmes <hg@repose.cx>
date:        Thu Jan 03 23:08:10 2008 +0900
description:
remove ineffective auto priority update code

changeset:   404:01bac1c9867f
user:        Damien Elmes <hg@repose.cx>
date:        Thu Jan 03 22:10:42 2008 +0900
description:
store total separately

changeset:   403:ffbfd576c3f0
user:        Damien Elmes <hg@repose.cx>
date:        Thu Jan 03 05:03:54 2008 +0900
description:
bump version number

changeset:   402:b3432c758826
user:        Damien Elmes <hg@repose.cx>
date:        Thu Jan 03 05:02:10 2008 +0900
description:
don't dirty cards when changing priority

changeset:   401:8eb4d13a6ea8
user:        Damien Elmes <hg@repose.cx>
date:        Thu Jan 03 02:52:14 2008 +0900
description:
update priority in sched, but only if deck is assigned

changeset:   400:c03dee6ab5b9
user:        Damien Elmes <hg@repose.cx>
date:        Thu Jan 03 02:42:17 2008 +0900
description:
upgrade scheduler, and then deck

changeset:   399:a45146c88c67
user:        Damien Elmes <hg@repose.cx>
date:        Thu Jan 03 02:15:50 2008 +0900
description:
bump version number

changeset:   398:b11217f19d93
user:        Damien Elmes <hg@repose.cx>
date:        Wed Jan 02 21:42:08 2008 +0900
description:
add czech translation

changeset:   397:07c36434a501
user:        Damien Elmes <hg@repose.cx>
date:        Wed Jan 02 21:23:01 2008 +0900
description:
repose.cx -> ichi2.net

changeset:   396:d990980bd410
user:        Damien Elmes <hg@repose.cx>
date:        Mon Dec 31 18:56:50 2007 +0900
description:
change tag priority handling, double speed of getcards()

changeset:   395:7d4965319532
user:        Damien Elmes <hg@repose.cx>
date:        Fri Dec 28 07:20:29 2007 +0900
description:
report 8 hours not 10 minutes if necessary

changeset:   394:d92e3dda8637
user:        Damien Elmes <hg@repose.cx>
date:        Thu Dec 27 18:18:42 2007 +0900
description:
kill kakasi path on ppc

changeset:   393:51634574a50b
user:        Damien Elmes <hg@repose.cx>
date:        Thu Dec 27 18:16:50 2007 +0900
description:
look in a different location for unihan.pickle on mac

changeset:   392:cb165be012ad
user:        Damien Elmes <hg@repose.cx>
date:        Thu Dec 27 16:13:05 2007 +0900
description:
add new properties to sync

changeset:   391:5a36d3042797
user:        Damien Elmes <hg@repose.cx>
date:        Thu Dec 27 15:55:17 2007 +0900
description:
change delay2 to 8 hours, fix logic reversal

changeset:   390:68631c8e6da6
user:        Damien Elmes <hg@repose.cx>
date:        Thu Dec 27 15:44:44 2007 +0900
description:
if failed to create media dir (due to read only), return none

changeset:   389:79f13bd847c4
user:        Damien Elmes <hg@repose.cx>
date:        Thu Dec 27 15:32:15 2007 +0900
description:
configurable collapse time

changeset:   388:9f5514ca9f59
user:        Damien Elmes <hg@repose.cx>
date:        Thu Dec 27 15:27:52 2007 +0900
description:
add separate ease1 delay for mature cards

changeset:   387:8e6f9afbfb0b
user:        Damien Elmes <hg@repose.cx>
date:        Wed Dec 26 02:35:03 2007 +0900
description:
don't strip html from kakasi (allow multi-line furigana)

changeset:   386:08f6e556af4c
user:        Damien Elmes <hg@repose.cx>
date:        Tue Dec 25 23:45:04 2007 +0900
description:
update 'a short time' jp translation

changeset:   385:82181513047d
user:        Damien Elmes <hg@repose.cx>
date:        Tue Dec 25 22:56:02 2007 +0900
description:
update jp translations

changeset:   384:7e2552ceb812
user:        Damien Elmes <hg@repose.cx>
date:        Tue Dec 25 04:48:12 2007 +0900
description:
fix all the unit tests broken by the move to a single card 'other' model

changeset:   383:2fd4209bcbc2
user:        Damien Elmes <hg@repose.cx>
date:        Sat Dec 22 17:39:40 2007 +0900
description:
add 'tags' to list of available fields to display

changeset:   382:fc82511d9ba2
user:        Damien Elmes <hg@repose.cx>
date:        Sat Dec 22 05:37:28 2007 +0900
description:
fix pending# calculation for final drill

changeset:   381:74596ce9f43d
user:        Damien Elmes <hg@repose.cx>
date:        Sat Dec 22 05:22:11 2007 +0900
description:
change wording of ease 0/1 when in final drill

changeset:   380:801e3783cbe3
user:        Damien Elmes <hg@repose.cx>
date:        Sat Dec 22 05:12:36 2007 +0900
description:
add support for 'final review' instead of making people wait 10 minutes

changeset:   379:f621b76e0218
user:        Damien Elmes <hg@repose.cx>
date:        Sat Dec 22 03:59:46 2007 +0900
description:
make 'other' default to only front->back, remove unnecessary standard models

changeset:   378:ca51a4ed83fb
user:        Damien Elmes <hg@repose.cx>
date:        Sat Dec 22 02:47:00 2007 +0900
description:
simplify insertion order to random/append, don't sort new cards

changeset:   377:e4a6fd9dc58c
user:        Damien Elmes <hg@repose.cx>
date:        Sat Dec 22 02:18:20 2007 +0900
description:
remove redundant repositioning code

changeset:   376:6dc270145078
user:        Damien Elmes <hg@repose.cx>
date:        Sat Dec 22 02:05:15 2007 +0900
description:
update heisig link in stdmodels

changeset:   375:9bc6c376d88e
user:        Damien Elmes <hg@repose.cx>
date:        Sat Dec 22 01:34:36 2007 +0900
description:
send deleted cards in summary, fix syncing problems related to deletion

changeset:   374:ce502f16b31b
user:        Damien Elmes <hg@repose.cx>
date:        Fri Dec 21 23:02:39 2007 +0900
description:
don't touch original deck when exporting as .anki (fix export bug)

changeset:   373:8c7b78bf3ee1
user:        Damien Elmes <hg@repose.cx>
date:        Fri Dec 21 22:42:15 2007 +0900
description:
use 3.1 format for months, full path to custom json

changeset:   372:c29bf4d7ca02
user:        Damien Elmes <hg@repose.cx>
date:        Tue Nov 13 18:28:04 2007 +0900
description:
add support for 'medium priority'

changeset:   371:a4270575763a
user:        Damien Elmes <hg@repose.cx>
date:        Mon Nov 12 16:18:08 2007 +0900
description:
add latex support

changeset:   370:3824f1270bce
user:        Damien Elmes <hg@repose.cx>
date:        Mon Nov 12 14:37:25 2007 +0900
description:
report delay0/1 instead of subsequent interval in nextIntervalStr()

changeset:   369:5dea85b15a5d
user:        Damien Elmes <hg@repose.cx>
date:        Mon Nov 12 13:42:20 2007 +0900
description:
tweak deck stats definitions

changeset:   368:1cb413b81471
user:        Damien Elmes <hg@repose.cx>
date:        Mon Nov 12 13:35:40 2007 +0900
description:
fix font/color problem for elements with space, remove debug statement

changeset:   367:fe8943934270
user:        Damien Elmes <hg@repose.cx>
date:        Mon Nov 12 13:24:57 2007 +0900
description:
8-12hr hardInterval, support months, non day interval pairs

changeset:   366:39cdf33dcc6d
user:        Damien Elmes <hg@repose.cx>
date:        Mon Nov 12 12:00:33 2007 +0900
description:
set nextTime to lastTime in makeDue() to ensure same priority

changeset:   365:56aaf97fcfdb
user:        Damien Elmes <hg@repose.cx>
date:        Wed Oct 31 13:35:05 2007 +0900
description:
update french translations, fix some translation bugs

changeset:   364:0f0cea8f35e6
user:        Damien Elmes <hg@repose.cx>
date:        Sat Oct 20 03:18:19 2007 +0900
description:
use a relative delay instead of partitioning young/mature

changeset:   363:58fa58aa3c55
user:        Damien Elmes <hg@repose.cx>
date:        Sat Oct 20 01:09:25 2007 +0900
description:
experimental scheduling order

changeset:   362:4ca091d8de4a
user:        Damien Elmes <hg@repose.cx>
date:        Mon Sep 24 16:04:06 2007 +0900
description:
allow longs in json sync

changeset:   361:5088b5186091
user:        Damien Elmes <hg@repose.cx>
date:        Fri Sep 07 22:42:49 2007 +0900
description:
update translations, add more french work from laurent steffan

changeset:   360:221cfff61e91
user:        Damien Elmes <hg@repose.cx>
date:        Fri Sep 07 22:40:35 2007 +0900
description:
add tag indicating dupe field when importing

changeset:   359:01f4097dc1b5
user:        Damien Elmes <hg@repose.cx>
date:        Fri Sep 07 22:23:45 2007 +0900
description:
bump version number

changeset:   358:0aa83bdb1217
user:        Damien Elmes <hg@repose.cx>
date:        Fri Sep 07 21:46:19 2007 +0900
description:
update heisig deck's link to koohii

changeset:   357:047d3802f109
user:        Damien Elmes <hg@repose.cx>
date:        Fri Sep 07 21:45:05 2007 +0900
description:
make sure to give the deck an abspath when loading

changeset:   356:b050ae539dc7
user:        Damien Elmes <hg@repose.cx>
date:        Fri Sep 07 20:57:39 2007 +0900
description:
typo in importing, catch sound playing errors

changeset:   355:269d7357bacf
user:        Damien Elmes <hg@repose.cx>
date:        Thu Sep 06 05:08:07 2007 +0900
description:
add anki v.3 support

changeset:   354:7af926127391
user:        Damien Elmes <hg@repose.cx>
date:        Thu Sep 06 04:00:44 2007 +0900
description:
add final newline

changeset:   353:dd2165b06a36
user:        Damien Elmes <hg@repose.cx>
date:        Thu Sep 06 03:44:27 2007 +0900
description:
polish exporting

changeset:   352:42ee46f2b201
user:        Damien Elmes <hg@repose.cx>
date:        Thu Sep 06 00:56:52 2007 +0900
description:
catch socket errors in sync

changeset:   351:6b36b8d35f15
user:        Damien Elmes <hg@repose.cx>
date:        Thu Sep 06 00:09:46 2007 +0900
description:
write to a temp file when saving

changeset:   350:7e15eae29926
user:        Damien Elmes <hg@repose.cx>
date:        Wed Sep 05 23:51:57 2007 +0900
description:
don't have to worry about cross-device links as we're saving to the config dir

changeset:   349:66bc87cfe523
user:        Damien Elmes <hg@repose.cx>
date:        Wed Sep 05 23:42:22 2007 +0900
description:
don't rename, copy media files (as the old deck should remain valid)

changeset:   348:76522ca69016
user:        Damien Elmes <hg@repose.cx>
date:        Wed Sep 05 22:39:46 2007 +0900
description:
rename media dir on save

changeset:   347:b9b47b806cb6
user:        Damien Elmes <hg@repose.cx>
date:        Wed Sep 05 21:26:46 2007 +0900
description:
don't try and create media dir if no path set

changeset:   346:5e9125d08f32
user:        Damien Elmes <hg@repose.cx>
date:        Tue Aug 28 20:29:28 2007 +0900
description:
preliminary exporting support

changeset:   345:de191312e9bc
user:        Damien Elmes <hg@repose.cx>
date:        Tue Aug 28 03:34:03 2007 +0900
description:
ignore suspended cards when generating graphs

changeset:   344:77ae56436668
user:        Damien Elmes <hg@repose.cx>
date:        Mon Aug 27 13:05:52 2007 +0900
description:
import mnemosyne stats properly

changeset:   343:18164de78cde
user:        Damien Elmes <hg@repose.cx>
date:        Sat Aug 25 04:40:16 2007 +0900
description:
bump version

changeset:   342:402d229a13ba
user:        Damien Elmes <hg@repose.cx>
date:        Fri Aug 24 22:28:07 2007 +0900
description:
add data for 0 days too (fixes due graph and cumulative graph)

changeset:   341:fbd08aaf2a71
user:        Damien Elmes <hg@repose.cx>
date:        Fri Aug 24 22:23:06 2007 +0900
description:
pygame expects bytestrings for a path, not unicode

changeset:   340:d704cbd8188d
user:        Damien Elmes <hg@repose.cx>
date:        Thu Aug 23 22:55:10 2007 +0900
description:
bump version number

changeset:   339:90d50e5c7ee9
user:        Damien Elmes <hg@repose.cx>
date:        Thu Aug 23 22:52:47 2007 +0900
description:
create correct media dir if file is .fc too

changeset:   338:416c63dd91d5
user:        Damien Elmes <hg@repose.cx>
date:        Thu Aug 23 02:45:46 2007 +0900
description:
import mnemosyne categories, change sound tags

changeset:   337:75078a7bce21
user:        Damien Elmes <hg@repose.cx>
date:        Thu Aug 23 02:11:17 2007 +0900
description:
update translations, add dutch

changeset:   336:8df1e9b1970b
user:        Damien Elmes <hg@repose.cx>
date:        Thu Aug 23 00:07:52 2007 +0900
description:
add optional backup when loading

changeset:   335:63c0d62ebc7d
user:        Damien Elmes <hg@repose.cx>
date:        Thu Aug 23 00:01:43 2007 +0900
description:
open the files in binary when checking backups (stupid windows)

changeset:   334:af46ee8f7a7b
user:        Damien Elmes <hg@repose.cx>
date:        Wed Aug 22 23:41:15 2007 +0900
description:
fix typo

changeset:   333:0cd4dfa7bf5a
user:        Damien Elmes <hg@repose.cx>
date:        Wed Aug 22 23:40:39 2007 +0900
description:
add warning about pygame

changeset:   332:16adc1d6f27b
user:        Damien Elmes <hg@repose.cx>
date:        Wed Aug 22 23:40:24 2007 +0900
description:
don't play if not available

changeset:   331:f906b9a96b6b
user:        Damien Elmes <hg@repose.cx>
date:        Wed Aug 22 23:25:11 2007 +0900
description:
add sound support

changeset:   330:b225c9302681
user:        Damien Elmes <hg@repose.cx>
date:        Wed Aug 22 20:59:51 2007 +0900
description:
media support

changeset:   329:e02897454dcb
user:        Damien Elmes <hg@repose.cx>
date:        Wed Aug 22 18:19:49 2007 +0900
description:
only use production by default in english model

changeset:   328:1af88008a56f
user:        Damien Elmes <hg@repose.cx>
date:        Mon Aug 20 13:14:35 2007 +0900
description:
don't take max(3) if less than 3 days

changeset:   327:b7ee2b5485b3
user:        Damien Elmes <hg@repose.cx>
date:        Mon Aug 20 13:11:01 2007 +0900
description:
update scheduling estimate to reflect new delay handling

changeset:   326:171967dc58fe
user:        Damien Elmes <hg@repose.cx>
date:        Sat Aug 18 14:30:36 2007 +0900
description:
round days

changeset:   325:f8c1c42f6bcb
user:        Damien Elmes <hg@repose.cx>
date:        Sat Aug 18 01:20:39 2007 +0900
description:
use proper locale names instead of shorthand

changeset:   324:19cae311245a
user:        Damien Elmes <hg@repose.cx>
date:        Sat Aug 18 00:35:40 2007 +0900
description:
handle 0 day_s_ and plural forms for cards in initial state

changeset:   323:61ce0aceee04
user:        Damien Elmes <hg@repose.cx>
date:        Fri Aug 17 23:59:03 2007 +0900
description:
return unknown if no cards are pending

changeset:   322:1ba04daeb598
user:        Damien Elmes <hg@repose.cx>
date:        Fri Aug 17 23:49:20 2007 +0900
description:
remove filter, do it a different way

changeset:   321:d82c13cdd265
user:        Damien Elmes <hg@repose.cx>
date:        Fri Aug 17 22:57:35 2007 +0900
description:
add filter support for getcard

changeset:   320:927d8d784f24
user:        Damien Elmes <hg@repose.cx>
date:        Fri Aug 17 22:11:18 2007 +0900
description:
detect and remove unicode marker

changeset:   319:7c470a3ba224
user:        Damien Elmes <hg@repose.cx>
date:        Fri Aug 17 21:50:12 2007 +0900
description:
reset pending if counts go below 0

changeset:   318:6091e5a9f1a4
user:        Damien Elmes <hg@repose.cx>
date:        Fri Aug 17 20:30:02 2007 +0900
description:
allow up to 3 days delay before halving

changeset:   317:ace3a6db338b
user:        Damien Elmes <hg@repose.cx>
date:        Fri Aug 17 20:28:57 2007 +0900
description:
halve delay boost for cards in initial state

changeset:   316:68ea6eff400d
user:        Damien Elmes <hg@repose.cx>
date:        Fri Aug 17 20:27:44 2007 +0900
description:
ease 2 levels down one, adjust factors as well

changeset:   315:1f45fdda5488
user:        Damien Elmes <hg@repose.cx>
date:        Thu Aug 16 03:37:25 2007 +0900
description:
fix stats

changeset:   314:a39af7438d8f
user:        Damien Elmes <hg@repose.cx>
date:        Wed Aug 15 03:22:01 2007 +0900
description:
fix win32 path

changeset:   313:786ba09d0c14
user:        Damien Elmes <hg@repose.cx>
date:        Wed Aug 15 02:41:51 2007 +0900
description:
put kakasi search in support/japanese

changeset:   312:9d0b3ea8bb88
user:        Damien Elmes <hg@repose.cx>
date:        Wed Aug 15 00:06:26 2007 +0900
description:
spanish translations change

changeset:   311:41552532fa85
user:        Damien Elmes <hg@repose.cx>
date:        Tue Aug 14 23:22:20 2007 +0900
description:
tweak a buggy fuzzy match

changeset:   310:4df5234d6b07
user:        Damien Elmes <hg@repose.cx>
date:        Tue Aug 14 23:18:11 2007 +0900
description:
add spanish support

changeset:   309:322c11a7fdba
user:        Damien Elmes <hg@repose.cx>
date:        Tue Aug 14 23:16:24 2007 +0900
description:
add spanish translation

changeset:   308:0062da597de7
user:        Damien Elmes <hg@repose.cx>
date:        Tue Aug 14 23:11:48 2007 +0900
description:
compare using only id, not modified, cope with missing card links on del

changeset:   307:34507c39cef3
user:        Damien Elmes <hg@repose.cx>
date:        Tue Aug 14 04:46:55 2007 +0900
description:
add de translation

changeset:   306:e23f6671b396
user:        Damien Elmes <hg@repose.cx>
date:        Tue Aug 14 00:24:16 2007 +0900
description:
add french translation

changeset:   305:b5e16bf218d1
user:        Damien Elmes <hg@repose.cx>
date:        Mon Aug 13 19:34:00 2007 +0900
description:
accept multiple tags when adding/removing

changeset:   304:c302b44ea197
user:        Damien Elmes <hg@repose.cx>
date:        Mon Aug 13 10:52:29 2007 +0900
description:
bundle locale files in egg

changeset:   303:68e18840d5ee
user:        Damien Elmes <hg@repose.cx>
date:        Mon Aug 13 07:24:39 2007 +0900
description:
fix plural handling, more translation updates

changeset:   302:dfd61a2a3b2d
user:        Damien Elmes <hg@repose.cx>
date:        Mon Aug 13 06:17:40 2007 +0900
description:
give libanki the same version number, so that they can be matched together

changeset:   301:17a1c50cffce
user:        Damien Elmes <hg@repose.cx>
date:        Mon Aug 13 05:29:42 2007 +0900
description:
move json2 into correct place, update setup.py

changeset:   300:3ccbd5ecf622
user:        Damien Elmes <hg@repose.cx>
date:        Sun Aug 12 22:37:04 2007 +0900
description:
locale tweaks

changeset:   299:1d5b59c76a7d
user:        Damien Elmes <hg@repose.cx>
date:        Sun Aug 12 05:40:27 2007 +0900
description:
strip html in chinese, too

changeset:   298:29f277a46175
user:        Damien Elmes <hg@repose.cx>
date:        Sun Aug 12 05:39:21 2007 +0900
description:
strip html in kakasi

changeset:   297:ad410a6a03f6
user:        Damien Elmes <hg@repose.cx>
date:        Sun Aug 12 03:50:17 2007 +0900
description:
don't escape html when rendering card model, since we do that on add

changeset:   296:58ac3c478d57
user:        Damien Elmes <hg@repose.cx>
date:        Sun Aug 12 01:28:14 2007 +0900
description:
backup on load, too

changeset:   295:1db906069868
user:        Damien Elmes <hg@repose.cx>
date:        Sat Aug 11 02:38:23 2007 +0900
description:
quote fonts

changeset:   294:b58970d35289
user:        Damien Elmes <hg@repose.cx>
date:        Fri Aug 10 21:25:26 2007 +0900
description:
look for locale in alternate location (fixes win32 build)

changeset:   293:1a089a863627
user:        Damien Elmes <hg@repose.cx>
date:        Fri Aug 10 20:22:45 2007 +0900
description:
add/del tag, resetcard/makedue, updatehistory changes

changeset:   292:36e1ab8c001b
user:        Damien Elmes <hg@repose.cx>
date:        Fri Aug 10 19:12:50 2007 +0900
description:
earliestTime shouldn't include suspended cards, add spaced check

changeset:   291:084e94fc9fe7
user:        Damien Elmes <hg@repose.cx>
date:        Fri Aug 10 16:41:02 2007 +0900
description:
update the pending number every 10 cards at worst

changeset:   290:44af96eafc88
user:        Damien Elmes <hg@repose.cx>
date:        Fri Aug 10 16:32:26 2007 +0900
description:
don't kill empty fields in import

changeset:   289:0dc9bc7771b2
user:        Damien Elmes <hg@repose.cx>
date:        Fri Aug 10 14:14:57 2007 +0900
description:
fix multiple inheritence bug & comparison of facts

changeset:   288:0361a855ee17
user:        Damien Elmes <hg@repose.cx>
date:        Fri Aug 10 12:03:34 2007 +0900
description:
don't delete facts either

changeset:   287:7be29f8c82d0
user:        Damien Elmes <hg@repose.cx>
date:        Fri Aug 10 11:49:58 2007 +0900
description:
facts -> deck.facts

changeset:   286:83b765a5c338
user:        Damien Elmes <hg@repose.cx>
date:        Fri Aug 10 11:47:14 2007 +0900
description:
when removing a model, don't delete cards/facts - that will be done later

changeset:   285:e36c86704289
user:        Damien Elmes <hg@repose.cx>
date:        Fri Aug 10 00:16:26 2007 +0900
description:
fix translation switching, add a few translations

changeset:   284:a4b5c5064681
user:        Damien Elmes <hg@repose.cx>
date:        Thu Aug 09 04:22:09 2007 +0900
description:
new sync url

changeset:   283:9ef404d1b071
user:        Damien Elmes <hg@repose.cx>
date:        Thu Aug 09 03:26:44 2007 +0900
description:
change max # of backups to 15

changeset:   282:e24075724d1c
user:        Damien Elmes <hg@repose.cx>
date:        Thu Aug 09 03:10:20 2007 +0900
description:
library version -> 0.3

changeset:   281:d03d0b1101f9
user:        Damien Elmes <hg@repose.cx>
date:        Thu Aug 09 03:06:36 2007 +0900
description:
don't make the 'meaning' part unique if it's a one-way deck

changeset:   280:db6dcf2afaf7
user:        Damien Elmes <hg@repose.cx>
date:        Wed Aug 08 19:50:43 2007 +0900
description:
sched stats: mark failed cards in the old category, not the new

changeset:   279:f7fc7372bae4
user:        Damien Elmes <hg@repose.cx>
date:        Wed Aug 08 19:46:03 2007 +0900
description:
if autosingle, rebuild list with enforced order in importing; ratio=1.7

changeset:   278:cf0e7ad95610
user:        Damien Elmes <hg@repose.cx>
date:        Tue Aug 07 11:05:48 2007 +0900
description:
intern strings when decoding from json

changeset:   277:83f202d5edce
user:        Damien Elmes <hg@repose.cx>
date:        Tue Aug 07 09:39:26 2007 +0900
description:
stop deck from doubling size on sync (don't coerce keys to unicode)

changeset:   276:a3c49e99b509
user:        Damien Elmes <hg@repose.cx>
date:        Mon Aug 06 16:53:57 2007 +0900
description:
if cards < 2, don't change order

changeset:   275:329b0ae99d1d
user:        Damien Elmes <hg@repose.cx>
date:        Mon Aug 06 07:34:04 2007 +0900
description:
only show pending cards (non spaced-waiting), and 1.1 = plural

changeset:   274:93a3a9f71ccc
user:        Damien Elmes <hg@repose.cx>
date:        Sun Aug 05 03:01:27 2007 +0900
description:
uniquify fields list

changeset:   273:8e87ff0b222e
user:        Damien Elmes <hg@repose.cx>
date:        Sun Aug 05 02:40:26 2007 +0900
description:
don't attempt grouping on a single card model, allFields, fmtTimeSpan

changeset:   272:98827f17ded6
user:        Damien Elmes <hg@repose.cx>
date:        Sat Aug 04 20:51:37 2007 +0900
description:
if no japanese text (and no english text), default to english

changeset:   271:e733e0603bef
user:        Damien Elmes <hg@repose.cx>
date:        Sat Aug 04 15:08:13 2007 +0900
description:
include time info in getstats, refactor fmttimediff, allow points

changeset:   270:9ffaff6ed530
user:        Damien Elmes <hg@repose.cx>
date:        Sat Aug 04 04:01:17 2007 +0900
description:
handle py2exe when looking for unihan

changeset:   269:0d065b819bf7
user:        Damien Elmes <hg@repose.cx>
date:        Sat Aug 04 03:31:32 2007 +0900
description:
convert japanese font names in linux too

changeset:   268:0068328bbc98
parent:      266:1da58c791cbd
parent:      267:b32498ba63ef
user:        Damien Elmes <hg@repose.cx>
date:        Sat Aug 04 03:17:10 2007 +0900
description:
merge with other computer

changeset:   267:b32498ba63ef
parent:      265:241131ae4230
user:        Damien Elmes <hg@repose.cx>
date:        Sat Aug 04 02:06:41 2007 +0900
description:
pass family verbatim if no platform names found

changeset:   266:1da58c791cbd
user:        Damien Elmes <hg@repose.cx>
date:        Sat Aug 04 03:14:54 2007 +0900
description:
support mandarin and cantonese

changeset:   265:241131ae4230
user:        Damien Elmes <hg@repose.cx>
date:        Sat Aug 04 01:52:25 2007 +0900
description:
make standard models use canonical names

changeset:   264:def6e4393656
user:        Damien Elmes <hg@repose.cx>
date:        Sat Aug 04 01:45:03 2007 +0900
description:
integrate font canonicalization with css generation, support html

changeset:   263:f01502ee1c8b
user:        Damien Elmes <hg@repose.cx>
date:        Sat Aug 04 01:18:48 2007 +0900
description:
generate substitution list

changeset:   262:5fae82f760fe
user:        Damien Elmes <hg@repose.cx>
date:        Sat Aug 04 01:09:35 2007 +0900
description:
add font canonicalization

changeset:   261:4fdf114d761a
user:        Damien Elmes <hg@repose.cx>
date:        Sat Aug 04 00:09:51 2007 +0900
description:
change kanji/hiragana/misc split method. should be a lot more accurate

changeset:   260:72186e2a05a2
user:        Damien Elmes <hg@repose.cx>
date:        Fri Aug 03 23:44:29 2007 +0900
description:
change japanese text detection algo

changeset:   259:2bafcdd7d327
user:        Damien Elmes <hg@repose.cx>
date:        Fri Aug 03 23:33:26 2007 +0900
description:
importing: guess single/multiple, behave more predictably regarding new cards

changeset:   258:432edd7fe290
user:        Damien Elmes <hg@repose.cx>
date:        Thu Aug 02 04:48:29 2007 +0900
description:
update sample decks for new format

changeset:   257:9976607ee619
user:        Damien Elmes <hg@repose.cx>
date:        Thu Aug 02 04:03:00 2007 +0900
description:
fix a number of syncing bugs, use ids not names

changeset:   256:cdb1656069bc
user:        Damien Elmes <hg@repose.cx>
date:        Wed Aug 01 23:31:15 2007 +0900
description:
refactor into idobj/list, fix syncing on win32

changeset:   255:601175f26251
user:        Damien Elmes <hg@repose.cx>
date:        Wed Aug 01 17:29:43 2007 +0900
description:
fix some unit tests

changeset:   254:5c70723b63f2
user:        Damien Elmes <hg@repose.cx>
date:        Wed Aug 01 12:29:42 2007 +0900
description:
enforce unicode in save/load, update sync url

changeset:   253:f71181fbd8b3
user:        Damien Elmes <hg@repose.cx>
date:        Wed Aug 01 11:12:32 2007 +0900
description:
preserve fact lastTags when importing

changeset:   252:09555fed796e
user:        Damien Elmes <hg@repose.cx>
date:        Wed Aug 01 11:02:34 2007 +0900
description:
include _ in cardmodels, fix reference to activatedCards in importing

changeset:   251:e5b854ea295d
user:        Damien Elmes <hg@repose.cx>
date:        Wed Aug 01 10:40:43 2007 +0900
description:
update sample decks for new format, remove some debugging code

changeset:   250:4547a364e78b
user:        Damien Elmes <hg@repose.cx>
date:        Wed Aug 01 08:50:34 2007 +0900
description:
factor models into separate class, track deletions, fix syncing

changeset:   249:89be41543132
user:        Damien Elmes <hg@repose.cx>
date:        Wed Aug 01 08:27:54 2007 +0900
description:
decode user dir using file system encoding first

changeset:   248:631f045a10f2
user:        Damien Elmes <hg@repose.cx>
date:        Tue Jul 31 06:57:48 2007 +0900
description:
don't update stats until after the card is scheduled (fixes new cards bug)

changeset:   247:00fb7c13502b
user:        Damien Elmes <hg@repose.cx>
date:        Tue Jul 31 05:31:07 2007 +0900
description:
set files r/w before trying to remove them, update model syncnames

changeset:   246:b0f4fb55e2d6
user:        Damien Elmes <hg@repose.cx>
date:        Tue Jul 31 05:17:31 2007 +0900
description:
add jlpt sample decks again

changeset:   245:3833b58982af
user:        Damien Elmes <hg@repose.cx>
date:        Tue Jul 31 04:25:40 2007 +0900
description:
don't validate incoming facts when syncing

changeset:   244:50688fef7f05
user:        Damien Elmes <hg@repose.cx>
date:        Tue Jul 31 04:17:19 2007 +0900
description:
bug in compat changes, change sync url

changeset:   243:e6b894b2bd82
user:        Damien Elmes <hg@repose.cx>
date:        Tue Jul 31 03:41:36 2007 +0900
description:
more compat code

changeset:   242:154711f215d8
parent:      240:91c12216c2df
parent:      241:2ac34639bc08
user:        Damien Elmes <hg@repose.cx>
date:        Tue Jul 31 02:22:21 2007 +0900
description:
merge

changeset:   241:2ac34639bc08
parent:      234:29ea58becfde
user:        Damien Elmes <hg@repose.cx>
date:        Mon Jul 30 23:58:25 2007 +0900
description:
encode the backup dir as unicode

changeset:   240:91c12216c2df
user:        Damien Elmes <hg@repose.cx>
date:        Tue Jul 31 02:19:28 2007 +0900
description:
make the old deck error a little nicer

changeset:   239:2d6fa28f3080
user:        Damien Elmes <hg@repose.cx>
date:        Tue Jul 31 02:10:04 2007 +0900
description:
update sample decks

changeset:   238:8786582a13f9
user:        Damien Elmes <hg@repose.cx>
date:        Tue Jul 31 02:04:53 2007 +0900
description:
keep track of the last fact tags used when adding

changeset:   237:498d00566d67
user:        Damien Elmes <hg@repose.cx>
date:        Tue Jul 31 01:51:24 2007 +0900
description:
don't use disabled card models when importing

changeset:   236:0e5c2236a41e
user:        Damien Elmes <hg@repose.cx>
date:        Tue Jul 31 01:30:47 2007 +0900
description:
set the model to none if no models are available

changeset:   235:c1b9f468a183
user:        Damien Elmes <hg@repose.cx>
date:        Tue Jul 31 00:53:55 2007 +0900
description:
fix a bug in syncing models

changeset:   234:29ea58becfde
user:        Damien Elmes <hg@repose.cx>
date:        Mon Jul 30 23:20:02 2007 +0900
description:
fix syncing of cardmodels, sync facts metadata too

changeset:   233:04084a0a7dea
user:        Damien Elmes <hg@repose.cx>
date:        Sun Jul 29 15:12:33 2007 +0900
description:
update some translations

changeset:   232:99c78b9f034b
user:        Damien Elmes <hg@repose.cx>
date:        Sun Jul 29 14:42:03 2007 +0900
description:
give cardmodels and fields an id

changeset:   231:97dbc780c65a
user:        Damien Elmes <hg@repose.cx>
date:        Sat Jul 28 16:09:53 2007 +0900
description:
correctly (don't) escape closing tags

changeset:   230:ea63caae51fa
user:        Damien Elmes <hg@repose.cx>
date:        Sat Jul 28 02:01:20 2007 +0900
description:
capitalize samples

changeset:   229:55042d8edd2f
user:        Damien Elmes <hg@repose.cx>
date:        Sat Jul 28 00:55:21 2007 +0900
description:
sync: diffs, don't update local time, conditional update, no syncName/name

changeset:   228:35c866e7b50a
user:        Damien Elmes <hg@repose.cx>
date:        Fri Jul 27 21:18:36 2007 +0900
description:
remove name properties from sample decks

changeset:   227:acb500e68435
user:        Damien Elmes <hg@repose.cx>
date:        Fri Jul 27 21:14:29 2007 +0900
description:
remove reduntant 'name' field in deck, use filename instead

changeset:   226:8b7c9e3a613a
user:        Damien Elmes <hg@repose.cx>
date:        Fri Jul 27 19:21:20 2007 +0900
description:
add required fields to card model for later

changeset:   225:2aa9dbb1c461
user:        Damien Elmes <hg@repose.cx>
date:        Fri Jul 27 04:23:02 2007 +0900
description:
remove min 1 day restriction

changeset:   224:3e63913f3705
user:        Damien Elmes <hg@repose.cx>
date:        Fri Jul 27 03:01:46 2007 +0900
description:
only escape on html

changeset:   223:8725632baf35
user:        Damien Elmes <hg@repose.cx>
date:        Thu Jul 26 05:37:11 2007 +0900
description:
don't assume globalstats exists, handle refs to anki.Deck

changeset:   222:56e52010a122
user:        Damien Elmes <hg@repose.cx>
date:        Thu Jul 26 04:58:41 2007 +0900
description:
network sync working

changeset:   221:7a15ae305f8c
user:        Damien Elmes <hg@repose.cx>
date:        Wed Jul 25 23:24:12 2007 +0900
description:
update sample decks

changeset:   220:bd1d20410180
user:        Damien Elmes <hg@repose.cx>
date:        Wed Jul 25 22:36:40 2007 +0900
description:
use field tags for defining which fields kakasi should operate on

changeset:   219:be500ace46a0
user:        Damien Elmes <hg@repose.cx>
date:        Wed Jul 25 12:11:36 2007 +0900
description:
remove debugging

changeset:   218:affe383805d0
user:        Damien Elmes <hg@repose.cx>
date:        Wed Jul 25 11:40:21 2007 +0900
description:
nextTime takes max of card/spacing, detect order of card when missing hiragana

changeset:   217:362f694db9e9
user:        Damien Elmes <hg@repose.cx>
date:        Tue Jul 24 04:05:27 2007 +0900
description:
remove debugging code

changeset:   216:bd28eddee8c2
user:        Damien Elmes <hg@repose.cx>
date:        Tue Jul 24 04:02:02 2007 +0900
description:
hackish escaping of html

changeset:   215:a9a0b47a43a6
user:        Damien Elmes <hg@repose.cx>
date:        Tue Jul 24 01:49:13 2007 +0900
description:
fix bug in deleting fact on last card, guess en/ja when importing

changeset:   214:54f2319774ed
user:        Damien Elmes <hg@repose.cx>
date:        Tue Jul 24 00:18:12 2007 +0900
description:
simple->other in model names

changeset:   213:5639e36cef42
user:        Damien Elmes <hg@repose.cx>
date:        Mon Jul 23 23:43:05 2007 +0900
description:
don't uniqify when importing, since that's o(n2). just tag

changeset:   212:d8db8a7b090e
user:        Damien Elmes <hg@repose.cx>
date:        Mon Jul 23 23:35:18 2007 +0900
description:
record delay in lastInterval, don't let missing fields prevent import

changeset:   211:29aa042a9f74
user:        Damien Elmes <hg@repose.cx>
date:        Mon Jul 23 23:22:51 2007 +0900
description:
plural only on 1, not 0

changeset:   210:2f1471b58112
user:        Damien Elmes <hg@repose.cx>
date:        Mon Jul 23 23:16:26 2007 +0900
description:
convert \n to <br> on print html, check pending when 0

changeset:   209:20e66e556ce3
user:        Damien Elmes <hg@repose.cx>
date:        Mon Jul 23 11:50:00 2007 +0900
description:
make sure to update card models & unique/required when renaming a field

changeset:   208:6af8399334d3
user:        Damien Elmes <hg@repose.cx>
date:        Mon Jul 23 11:08:54 2007 +0900
description:
catch incomplete model formats

changeset:   207:c85b59f20e33
user:        Damien Elmes <hg@repose.cx>
date:        Mon Jul 23 01:12:06 2007 +0900
description:
remove : from backup paths because windows is stupid

changeset:   206:34e76d7a05b8
user:        Damien Elmes <hg@repose.cx>
date:        Mon Jul 23 00:28:37 2007 +0900
description:
more backup fixes

changeset:   205:d4b87b277f42
user:        Damien Elmes <hg@repose.cx>
date:        Mon Jul 23 00:22:17 2007 +0900
description:
bug in text field generation

changeset:   204:cd0384f4b113
user:        Damien Elmes <hg@repose.cx>
date:        Mon Jul 23 00:19:10 2007 +0900
description:
backup bugs

changeset:   203:749677a48442
user:        Damien Elmes <hg@repose.cx>
date:        Mon Jul 23 00:11:48 2007 +0900
description:
make heisig number required

changeset:   202:f63a0722efcf
user:        Damien Elmes <hg@repose.cx>
date:        Sun Jul 22 23:47:07 2007 +0900
description:
move samples to .anki format

changeset:   201:4d75012163d9
user:        Damien Elmes <hg@repose.cx>
date:        Sun Jul 22 23:29:43 2007 +0900
description:
disable emacs support for now

changeset:   200:5dc9ef2699bd
user:        Damien Elmes <hg@repose.cx>
date:        Sun Jul 22 21:20:22 2007 +0900
description:
add russian example

changeset:   199:86220210b75a
user:        Damien Elmes <hg@repose.cx>
date:        Sun Jul 22 20:49:45 2007 +0900
description:
add heisig sample deck

changeset:   198:c7745f756869
user:        Damien Elmes <hg@repose.cx>
date:        Sun Jul 22 20:46:20 2007 +0900
description:
add heisig sample deck

changeset:   197:d8a6fe897168
user:        Damien Elmes <hg@repose.cx>
date:        Sun Jul 22 20:13:47 2007 +0900
description:
repositioning support, text question formats, add edit/last card for later

changeset:   196:c82e5eaf7446
user:        Damien Elmes <hg@repose.cx>
date:        Sun Jul 22 03:35:07 2007 +0900
description:
misc tweaks&bugfixes: heisig, pending, qformat

changeset:   195:1125c447b2d1
user:        Damien Elmes <hg@repose.cx>
date:        Sun Jul 22 02:02:31 2007 +0900
description:
multi-way model syncing, use local ids for server, not server's

changeset:   194:3101e6529378
user:        Damien Elmes <hg@repose.cx>
date:        Sun Jul 22 00:38:22 2007 +0900
description:
finish card/fact syncing

changeset:   193:cc04ec32fffc
user:        Damien Elmes <hg@repose.cx>
date:        Sat Jul 21 21:52:35 2007 +0900
description:
syncing models implemented, bug in setModified, bug in sched(class variables)

changeset:   192:e29f1efd37b7
user:        Damien Elmes <hg@repose.cx>
date:        Sat Jul 21 02:55:29 2007 +0900
description:
postponed->suspended

changeset:   191:ac0ef2b43ac1
user:        Damien Elmes <hg@repose.cx>
date:        Sat Jul 21 01:20:20 2007 +0900
description:
postponing, case insensitive tags, field uniqueness fix

changeset:   190:96aa1b8b9ac7
user:        Damien Elmes <hg@repose.cx>
date:        Fri Jul 20 21:20:36 2007 +0900
description:
add priorities in sched, refactor scheduling, tags, fix html bug

changeset:   189:cf9a933c6449
user:        Damien Elmes <hg@repose.cx>
date:        Fri Jul 20 13:58:19 2007 +0900
description:
card models prevent the same fact from being seen in succession, fix stats

changeset:   188:e3010a8da9be
user:        Damien Elmes <hg@repose.cx>
date:        Fri Jul 20 12:49:59 2007 +0900
description:
add priority definitions, support left/right alignment

changeset:   187:9fe0ef29addd
user:        Damien Elmes <hg@repose.cx>
date:        Thu Jul 19 04:07:42 2007 +0900
description:
start work on syncing, remove some obsolete files, ensure identical modtime

changeset:   186:d89c9c919ccb
user:        Damien Elmes <hg@repose.cx>
date:        Thu Jul 19 00:28:55 2007 +0900
description:
new, more robust saving/backup code

changeset:   185:8862d5c849ed
user:        Damien Elmes <hg@repose.cx>
date:        Wed Jul 18 23:12:38 2007 +0900
description:
improve modification handling, more refactoring

changeset:   184:f1244e6be152
user:        Damien Elmes <hg@repose.cx>
date:        Wed Jul 18 19:14:28 2007 +0900
description:
refactor: fields in fact as dict, modified notify parent, more models

changeset:   183:9c6cca3a4fd2
user:        Damien Elmes <hg@repose.cx>
date:        Tue Jul 17 18:36:27 2007 +0900
description:
another attempt at an old fc bug

changeset:   182:e746c76030dc
user:        Damien Elmes <hg@repose.cx>
date:        Tue Jul 17 00:04:23 2007 +0900
description:
set mac font, catch hiragana = () on import

changeset:   181:1d6ebb352b9c
user:        Damien Elmes <hg@repose.cx>
date:        Sun Jul 15 04:41:26 2007 +0900
description:
default to platform specific font

changeset:   180:81c65df62634
user:        Damien Elmes <hg@repose.cx>
date:        Sun Jul 15 04:03:43 2007 +0900
description:
allow card models to define the question in the answer

changeset:   179:21fe78af3d93
user:        Damien Elmes <hg@repose.cx>
date:        Sun Jul 15 03:33:27 2007 +0900
description:
refactor getStats(), update card stats report

changeset:   178:4c1637edc64b
user:        Damien Elmes <hg@repose.cx>
date:        Sun Jul 15 02:55:29 2007 +0900
description:
record history when answering cards

changeset:   177:655a417fda8d
user:        Damien Elmes <hg@repose.cx>
date:        Sun Jul 15 02:25:55 2007 +0900
description:
update stats: track per day, and per card

changeset:   176:0353df9f0e24
user:        Damien Elmes <hg@repose.cx>
date:        Sat Jul 14 15:55:44 2007 +0900
description:
make show all readings when something's ambiguous

changeset:   175:04e88ddf54fe
user:        Damien Elmes <hg@repose.cx>
date:        Sat Jul 14 14:03:02 2007 +0900
description:
fix bug in sched refactor, bug in kanji check if there's a newline

changeset:   174:9db4df9713eb
user:        Damien Elmes <hg@repose.cx>
date:        Sat Jul 14 13:38:38 2007 +0900
description:
remove todo, the bug tracker covers it better

changeset:   173:e0c55744c437
user:        Damien Elmes <hg@repose.cx>
date:        Sat Jul 14 13:35:11 2007 +0900
description:
revert to gpl 2+, as we're waiting on qt

changeset:   172:a468511a39dc
user:        Damien Elmes <hg@repose.cx>
date:        Sat Jul 14 13:31:39 2007 +0900
description:
shuffle around some code in sched, remove the scheduling exception class

changeset:   171:5153f1f1952c
user:        Damien Elmes <hg@repose.cx>
date:        Fri Jul 13 17:15:23 2007 +0900
description:
unify fact errors, refactor validation

changeset:   170:8540466d93bc
user:        Damien Elmes <hg@repose.cx>
date:        Thu Jul 12 03:10:13 2007 +0900
description:
add routine to fetch all tags in use, change ensureUnique, add isInvalid

changeset:   169:162c126fdd69
user:        Damien Elmes <hg@repose.cx>
date:        Wed Jul 11 22:20:59 2007 +0900
description:
remove facts when all associated cards have been deleted

changeset:   168:04b71b867c20
user:        Damien Elmes <hg@repose.cx>
date:        Wed Jul 11 11:52:59 2007 +0900
description:
"" shouldn't match non-existent fields

changeset:   167:eec8f66543b8
user:        Damien Elmes <hg@repose.cx>
date:        Wed Jul 11 11:41:50 2007 +0900
description:
properly report empty fields even in html mode

changeset:   166:0ab5d3bfb46f
user:        Damien Elmes <hg@repose.cx>
date:        Wed Jul 11 11:31:11 2007 +0900
description:
don't add identical reading even if there's a newline in expression

changeset:   165:1ee5e5f42480
user:        Damien Elmes <hg@repose.cx>
date:        Tue Jul 10 23:24:46 2007 +0900
description:
fix kakasi bug, integrate properly, make both front and back unique in simple

changeset:   164:7c216a5290b6
user:        Damien Elmes <hg@repose.cx>
date:        Tue Jul 10 16:40:10 2007 +0900
description:
default to arial/20 for card editing

changeset:   163:aa3135d44e87
user:        Damien Elmes <hg@repose.cx>
date:        Mon Jul 09 23:16:27 2007 +0900
description:
fix a bug in importing code if a unique field is not mapped

changeset:   162:8172d937f3b0
user:        Damien Elmes <hg@repose.cx>
date:        Sat Jul 07 17:27:40 2007 +0900
description:
html+text q/a, uppercase some tags, update colours in models, use css, add .ru

changeset:   161:4720d8b2e383
user:        Damien Elmes <hg@repose.cx>
date:        Thu Jul 05 02:08:15 2007 +0900
description:
fix two graph bugs, change importing list, tests

changeset:   160:fb410454176e
user:        Damien Elmes <hg@repose.cx>
date:        Thu Jul 05 00:07:16 2007 +0900
description:
use html to separate fields by default

changeset:   159:d3ec18287695
user:        Damien Elmes <hg@repose.cx>
date:        Mon Jul 02 19:17:11 2007 +0900
description:
fix kakasi bug, update stats/graphs, work on decorators, add deck properties, more

changeset:   158:d39f70c24eda
user:        Damien Elmes <hg@repose.cx>
date:        Sun Jul 01 05:56:58 2007 +0900
description:
start work on decorators, tidy up models

changeset:   157:7cbfe8deb03d
user:        Damien Elmes <hg@repose.cx>
date:        Sun Jul 01 04:33:51 2007 +0900
description:
ensure a current model on deletion, fix bug, make delays customizable

changeset:   156:d214d7568bda
user:        Damien Elmes <hg@repose.cx>
date:        Sun Jul 01 02:41:18 2007 +0900
description:
routines to fetch models/fields by name, improve importing, more

changeset:   155:541a83f4408d
user:        Damien Elmes <hg@repose.cx>
date:        Sat Jun 30 06:03:26 2007 +0900
description:
add support for importing old fc .pending files, fix text import

changeset:   154:35177c144190
user:        Damien Elmes <hg@repose.cx>
date:        Sat Jun 30 05:18:17 2007 +0900
description:
move to gpl3, update headers and COPYING

changeset:   153:57ee89add903
user:        Damien Elmes <hg@repose.cx>
date:        Sat Jun 30 05:13:35 2007 +0900
description:
mostly finished importing

changeset:   152:2271bf6557de
user:        Damien Elmes <hg@repose.cx>
date:        Thu Jun 28 04:43:29 2007 +0900
description:
model & importing changes
- models now just use a single class
- cards can be disabled and enabled using cards[] from allcards[]
- improve ankiv2 importing, start work on importing classes

changeset:   151:1bf90a06af5e
user:        Damien Elmes <hg@repose.cx>
date:        Mon Jun 25 02:28:05 2007 +0900
description:
fields should use 'description', not 'info'

changeset:   150:e2c22d2b51fa
user:        Damien Elmes <hg@repose.cx>
date:        Sun Jun 24 03:48:56 2007 +0900
description:
add tag parsing

changeset:   149:ea1f1a805bd9
user:        Damien Elmes <hg@repose.cx>
date:        Sun Jun 24 03:40:24 2007 +0900
description:
allow ease 2 other than 1 day

changeset:   148:9657b0443164
user:        Damien Elmes <hg@repose.cx>
date:        Sun Jun 24 01:22:12 2007 +0900
description:
add deck name/description/syncing target

changeset:   147:cc473a00f280
user:        Damien Elmes <hg@repose.cx>
date:        Sat Jun 23 02:40:34 2007 +0900
description:
importing old anki decks mostly working

changeset:   146:900d9b946e12
user:        Damien Elmes <hg@repose.cx>
date:        Thu Jun 21 05:45:19 2007 +0900
description:
manager->scheduler, refactor parts of deck, more tests

changeset:   145:8f5bf703cb7d
user:        Damien Elmes <hg@repose.cx>
date:        Thu Jun 21 03:30:47 2007 +0900
description:
more work on facts/errors, change __init__.py, start on deck

changeset:   144:b55b9283b1d4
user:        Damien Elmes <hg@repose.cx>
date:        Thu Jun 21 01:34:56 2007 +0900
description:
i18n with gettext, refactor utils, remove egg info

changeset:   143:82249912b66e
user:        Damien Elmes <hg@repose.cx>
date:        Wed Jun 20 23:52:31 2007 +0900
description:
retire sm5.py and fc compat code

changeset:   142:0e93e02d9092
user:        Damien Elmes <hg@repose.cx>
date:        Wed Jun 20 23:50:27 2007 +0900
description:
pluralise modules, add more tests, fact code

changeset:   141:54f0a36b3348
user:        Damien Elmes <hg@repose.cx>
date:        Tue Jun 19 18:44:40 2007 +0900
description:
strip old sync code

changeset:   140:5629a1e8bc12
user:        Damien Elmes <hg@repose.cx>
date:        Tue Jun 19 18:44:09 2007 +0900
description:
start changes to deck.py, rename lastModified to modified

changeset:   139:d720504e31c0
user:        Damien Elmes <hg@repose.cx>
date:        Tue Jun 19 04:10:41 2007 +0900
description:
more testcases, bugfixes

changeset:   138:857a88ac45c4
user:        Damien Elmes <hg@repose.cx>
date:        Tue Jun 19 02:09:34 2007 +0900
description:
very beginnings of new card/deck model

changeset:   137:aa5a3268b901
user:        Damien Elmes <hg@repose.cx>
date:        Sat Jun 16 22:34:40 2007 +0900
description:
add test case for syncing bug

changeset:   136:092477f5243e
user:        Damien Elmes <hg@repose.cx>
date:        Tue Jun 12 12:24:44 2007 +0900
description:
fix references to errors that were broken in the refactor

changeset:   135:37c672ef614f
user:        Damien Elmes <hg@repose.cx>
date:        Sat Jun 09 19:50:26 2007 +0900
description:
add cumulative due graph, remove guide bars at 180+ days

changeset:   134:71ef9355c144
user:        Damien Elmes <hg@repose.cx>
date:        Sat Jun 09 19:23:53 2007 +0900
description:
base graphs on the start of the day, not the current time

changeset:   133:7a1269ff66c8
user:        Damien Elmes <hg@repose.cx>
date:        Sat Jun 09 18:27:36 2007 +0900
description:
add tests for special chars

changeset:   132:95b88334e11f
user:        Damien Elmes <hg@repose.cx>
date:        Sat Jun 09 18:24:34 2007 +0900
description:
allow :: in card definitions, as it's no longer required by the sync protocol

changeset:   131:1131f08a06b3
user:        Damien Elmes <hg@repose.cx>
date:        Sat Jun 09 18:22:36 2007 +0900
description:
upgrade sync protocol, rename controller methods, more
- use json instead of building our own protocol
- define the server logic in sync.py instead of in the web code
- include json2.py, which is a modified version of json.py that supports utf-8
- Controller.newDeck() -> Controller.Deck(), etc
- add unit tests for syncing
- change card repr format

changeset:   130:359982e7b9a5
user:        Damien Elmes <hg@repose.cx>
date:        Sat Jun 09 04:58:38 2007 +0900
description:
add mnemosyne import support

changeset:   129:bad5bb9fd2a2
user:        Damien Elmes <hg@repose.cx>
date:        Sat Jun 09 03:45:30 2007 +0900
description:
allow control over reverse gen/randomizing when importing text

changeset:   128:da56fc31d7b0
user:        Damien Elmes <hg@repose.cx>
date:        Sat Jun 09 02:55:32 2007 +0900
description:
allow choice of append/random in text import

changeset:   127:5ec4ed09cbce
user:        Damien Elmes <hg@repose.cx>
date:        Thu Jun 07 02:00:28 2007 +0900
description:
remove timeout (syncing is threaded now, and it fixes a osx bug)

changeset:   126:1526f7369672
user:        Damien Elmes <hg@repose.cx>
date:        Wed Jun 06 15:31:22 2007 +0900
description:
fix 3+4 deck (had furigana in questions)

changeset:   125:6f7da75f7f6a
user:        Damien Elmes <hg@repose.cx>
date:        Sat Jun 02 08:44:30 2007 +0900
description:
fix firstAnswered syncing problem

changeset:   124:5a7e5bed1787
user:        Damien Elmes <hg@repose.cx>
date:        Fri Jun 01 23:42:33 2007 +0900
description:
replace unicode ~ with ascii

changeset:   123:f9368a648531
user:        Damien Elmes <hg@repose.cx>
date:        Fri Jun 01 22:44:45 2007 +0900
description:
append cards when importing - don't shuffle

changeset:   122:024e589e22f8
user:        Damien Elmes <hg@repose.cx>
date:        Thu May 24 00:57:02 2007 +0900
description:
fix bug with duplicates caused by the same kanji used twice in a card

changeset:   121:8c6df176b34d
user:        Damien Elmes <hg@repose.cx>
date:        Thu May 24 00:10:24 2007 +0900
description:
add a grid

changeset:   120:e7133425e4fd
user:        Damien Elmes <hg@repose.cx>
date:        Wed May 23 23:58:52 2007 +0900
description:
add eases graph

changeset:   119:88d3066be6c5
user:        Damien Elmes <hg@repose.cx>
date:        Tue May 22 03:24:15 2007 +0900
description:
implement iroiro's kanji stats

changeset:   118:0b65cc61335e
user:        Damien Elmes <hg@repose.cx>
date:        Mon May 21 10:02:28 2007 +0900
description:
make that minutes, not days

changeset:   117:17dfdf49e740
user:        Damien Elmes <hg@repose.cx>
date:        Mon May 21 10:01:02 2007 +0900
description:
set last interval = 10 minutes when card is wrong

changeset:   116:192e631ac341
user:        Damien Elmes <hg@repose.cx>
date:        Mon May 21 06:05:20 2007 +0900
description:
fix bug w/ firstAnswered + syncing

changeset:   115:ac6ece2f2228
user:        Damien Elmes <hg@repose.cx>
date:        Sun May 20 12:48:19 2007 +0900
description:
reduce ease 1 by double the reciprocal

changeset:   114:3862661c41ab
user:        Damien Elmes <hg@repose.cx>
date:        Sun May 20 01:14:48 2007 +0900
description:
check for existing firstAnswered (due to sync, etc)

changeset:   113:b924786ffd1a
user:        Damien Elmes <hg@repose.cx>
date:        Sun May 20 01:07:04 2007 +0900
description:
fix bug with firstAnswered

changeset:   112:608d244c0e90
user:        Damien Elmes <hg@repose.cx>
date:        Sun May 20 00:47:56 2007 +0900
description:
easy interval to 7-9

changeset:   111:d4b3f0b60f26
user:        Damien Elmes <hg@repose.cx>
date:        Sun May 20 00:47:14 2007 +0900
description:
mid interval to 3-5

changeset:   110:287513b6da37
user:        Damien Elmes <hg@repose.cx>
date:        Sat May 19 23:49:24 2007 +0900
description:
remove rogue print statement

changeset:   109:694b1710e3b2
user:        Damien Elmes <hg@repose.cx>
date:        Sat May 19 22:04:13 2007 +0900
description:
enforce ylim difference of 1

changeset:   108:f899bc0a15ca
user:        Damien Elmes <hg@repose.cx>
date:        Sat May 19 21:46:50 2007 +0900
description:
fix bug in upgrading decks

changeset:   107:08490dc2fde3
user:        Damien Elmes <hg@repose.cx>
date:        Sat May 19 21:02:42 2007 +0900
description:
1 hours -> 1 hour

changeset:   106:a9c25fdfe93e
user:        Damien Elmes <hg@repose.cx>
date:        Sat May 19 20:55:46 2007 +0900
description:
add firstAnswered attribute

changeset:   105:7da604081893
user:        Damien Elmes <hg@repose.cx>
date:        Fri May 18 21:30:34 2007 +0900
description:
apply only half delay to ease 3 when card is new

changeset:   104:1da0cdc058c7
user:        Damien Elmes <hg@repose.cx>
date:        Fri May 18 20:53:24 2007 +0900
description:
display a date range for cards in the initial state

changeset:   103:6fb3acd2381b
user:        Damien Elmes <hg@repose.cx>
date:        Thu May 17 03:45:51 2007 +0900
description:
don't apply delay factor to new cards in nextTimeStr()

changeset:   102:f8e7de875cf6
user:        Damien Elmes <hg@repose.cx>
date:        Wed May 16 23:03:24 2007 +0900
description:
remove redundant 'jouyou' (fixes display on osx)

changeset:   101:57bb6a5ac01b
user:        Damien Elmes <hg@repose.cx>
date:        Wed May 16 22:47:08 2007 +0900
description:
don't import pylab

changeset:   100:8b4b7d3ca8aa
user:        Damien Elmes <hg@repose.cx>
date:        Wed May 16 04:03:38 2007 +0900
description:
never apply a negative delay
(this is not a problem usually - only useful in testing)

changeset:   99:94484f221a49
user:        Damien Elmes <hg@repose.cx>
date:        Wed May 16 04:02:06 2007 +0900
description:
don't depend on card having a deviation attribute

changeset:   98:1cfe2b1f9dfb
user:        Damien Elmes <hg@repose.cx>
date:        Tue May 15 04:42:55 2007 +0900
description:
fix call to fmtTimeSpan

changeset:   97:17c426fbc2fe
user:        Damien Elmes <hg@repose.cx>
date:        Tue May 15 03:50:07 2007 +0900
description:
don't show the last interval if it hasn't been updated yet

changeset:   96:954a3a150ec1
user:        Damien Elmes <hg@repose.cx>
date:        Tue May 15 02:40:47 2007 +0900
description:
make importing code give more information on failures

changeset:   95:275e78c98747
user:        Damien Elmes <hg@repose.cx>
date:        Tue May 15 01:36:47 2007 +0900
description:
conditionally import pkg_resources
this allows anki to load even if setuptools is not available.

changeset:   94:80eff21fadc1
user:        Damien Elmes <hg@repose.cx>
date:        Tue May 15 00:42:53 2007 +0900
description:
days with 0 in the graphs should plot as 0

changeset:   93:fae9e7f25e5f
user:        Damien Elmes <hg@repose.cx>
date:        Tue May 15 00:29:24 2007 +0900
description:
add missing lang.py, disable bars at 1-5 years

changeset:   92:e4b8b9e57e7d
user:        Damien Elmes <hg@repose.cx>
date:        Mon May 14 23:42:22 2007 +0900
description:
fix problem with setLang() due to refactor

changeset:   91:a13cdb8a6f7c
user:        Damien Elmes <hg@repose.cx>
date:        Mon May 14 10:47:06 2007 +0900
description:
by default, don't pad time strings

changeset:   90:4bbe3d4d2a20
user:        Damien Elmes <hg@repose.cx>
date:        Mon May 14 10:39:32 2007 +0900
description:
only use delay factor if ease > 2

changeset:   89:ad840a50cfc4
user:        Damien Elmes <hg@repose.cx>
date:        Mon May 14 00:43:35 2007 +0900
description:
show young/initial state in card stats

changeset:   88:031312e80d70
parent:      86:4673020de790
parent:      87:e01d0c85749e
user:        Damien Elmes <hg@repose.cx>
date:        Sun May 13 23:28:02 2007 +0900
description:
merge with other computer

changeset:   87:e01d0c85749e
parent:      78:ba2db11330fc
user:        Damien Elmes <hg@repose.cx>
date:        Sun May 13 21:50:57 2007 +0900
description:
don't check for same answer, only question

changeset:   86:4673020de790
user:        Damien Elmes <hg@repose.cx>
date:        Sun May 13 23:04:10 2007 +0900
description:
finish dds's refactoring

changeset:   85:6dd7d05c99a0
parent:      78:ba2db11330fc
parent:      84:8ca19a3caba7
user:        Damien Elmes <hg@repose.cx>
date:        Sun May 13 20:51:14 2007 +0900
description:
merge changes from dds

changeset:   84:8ca19a3caba7
user:        David Smith <davidsmith@acm.org>
date:        Sun May 06 03:26:17 2007 +0900
description:
Update file formatting

changeset:   83:c3d540d7b881
user:        David Smith <davidsmith@acm.org>
date:        Sun May 06 03:08:24 2007 +0900
description:
Update file formatting

changeset:   82:c562ade159c0
user:        David Smith <davidsmith@acm.org>
date:        Sun May 06 02:21:01 2007 +0900
description:
Initial refactoring away from putting everything in __init__.py

changeset:   81:adf8acf41015
user:        David Smith <davidsmith@acm.org>
date:        Sun May 06 02:20:34 2007 +0900
description:
Move samples into anki directory so they can be handled as data

changeset:   80:f5a0c4d03d62
user:        David Smith <davidsmith@acm.org>
date:        Sun May 06 02:19:59 2007 +0900
description:
Include anki egg-info

changeset:   79:5ef15f6eebc4
parent:      65:2052d232cd13
user:        David Smith <davidsmith@acm.org>
date:        Sun May 06 02:19:44 2007 +0900
description:
Use anki package name instead of libanki

changeset:   78:ba2db11330fc
user:        Damien Elmes <hg@repose.cx>
date:        Sun May 13 05:44:22 2007 +0900
description:
when adding a card, set lastInterval to startInterval

changeset:   77:8aa4903582eb
user:        Damien Elmes <hg@repose.cx>
date:        Sun May 13 05:08:24 2007 +0900
description:
add card stats

changeset:   76:7d44927efc93
user:        Damien Elmes <hg@repose.cx>
date:        Sun May 13 03:28:25 2007 +0900
description:
add cardIsInInitialState(), use lastFactor in cardIsYoung if properly defined

changeset:   75:56e9f0634f4d
user:        Damien Elmes <hg@repose.cx>
date:        Sun May 13 03:04:23 2007 +0900
description:
bugfixes re young cards, lastInterval
- cardIsYoung() now is true if the current interval < easyInterval[0], which
means that the retention ratio may drop a little, but the terminolgy is
clearer now. perhaps in the future we can use a different category other than
"young".
- fix problems with lastInterval - wasn't being set for new cards, was being
set to a string when syncing

changeset:   74:7e5c97355236
user:        Damien Elmes <hg@repose.cx>
date:        Sun May 13 02:24:47 2007 +0900
description:
hack for cardIsYoung() (will use lastInterval instead in the future)

changeset:   73:6f574edc6013
user:        Damien Elmes <hg@repose.cx>
date:        Sun May 13 02:18:57 2007 +0900
description:
spread ease3/4 young cards out over 3 days

changeset:   72:23f550604fa4
user:        Damien Elmes <hg@repose.cx>
date:        Sun May 13 01:38:07 2007 +0900
description:
check for lastCardRetrieved conditionally

changeset:   71:53b34cc2669e
user:        Damien Elmes <hg@repose.cx>
date:        Fri May 11 01:39:31 2007 +0900
description:
don't pass deviation to scheduleCard()

changeset:   70:9647fc661acf
user:        Damien Elmes <hg@repose.cx>
date:        Fri May 11 01:37:29 2007 +0900
description:
store deviation in card instead of making calling library deal with it

changeset:   69:d3f2c758ac29
user:        Damien Elmes <hg@repose.cx>
date:        Fri May 11 00:33:01 2007 +0900
description:
add generator and getCards() for fetching multiple pending cards

changeset:   68:f2226684c7d2
user:        Damien Elmes <hg@repose.cx>
date:        Mon May 07 17:10:09 2007 +0900
description:
update factor after rescheduling, allow deviation in nextIntervalStr

changeset:   67:1a44539c2b5d
user:        Damien Elmes <hg@repose.cx>
date:        Mon May 07 16:51:59 2007 +0900
description:
allow the calling library to pass in the deviation

changeset:   66:2005d36d9dc5
user:        Damien Elmes <hg@repose.cx>
date:        Sun May 06 23:42:39 2007 +0900
description:
when syncing, reset only the pending info, not session performance

changeset:   65:2052d232cd13
user:        Damien Elmes <hg@repose.cx>
date:        Fri May 04 05:29:03 2007 +0900
description:
don't update modified time on cards when upgrading

changeset:   64:6e48ce323968
user:        Damien Elmes <hg@repose.cx>
date:        Fri May 04 02:56:12 2007 +0900
description:
update emacs version for latest stats

changeset:   63:76b4db221b22
user:        Damien Elmes <hg@repose.cx>
date:        Fri May 04 02:50:39 2007 +0900
description:
pave way for checking lastInterval instead of interval to determine young
cards (upgrade deck version)

changeset:   62:c0bb2e142bb3
user:        Damien Elmes <hg@repose.cx>
date:        Fri May 04 02:31:14 2007 +0900
description:
make stats more accurately report 1/4/8

changeset:   61:572de05ef44c
user:        Damien Elmes <hg@repose.cx>
date:        Fri May 04 02:29:57 2007 +0900
description:
cards less than 16 days are treated as young

changeset:   60:c5040f15f846
user:        Damien Elmes <hg@repose.cx>
date:        Thu May 03 10:27:48 2007 +0900
description:
fix typo in jlpt 3 and 4

changeset:   59:d96c9e914cc4
user:        Damien Elmes <hg@repose.cx>
date:        Wed May 02 21:36:09 2007 +0900
description:
refactor interval stats

changeset:   58:2a0b417ae524
user:        Damien Elmes <hg@repose.cx>
date:        Wed May 02 20:23:59 2007 +0900
description:
revert to indiscriminate reduction of pending cards again

changeset:   57:8c4aa3c5b6d6
user:        Damien Elmes <hg@repose.cx>
date:        Wed May 02 19:28:13 2007 +0900
description:
fix missing furigana in jlpt3 deck

changeset:   56:d715861a6e6d
user:        Damien Elmes <hg@repose.cx>
date:        Wed May 02 18:41:01 2007 +0900
description:
bump up libanki version number

changeset:   55:5b5dce44a670
user:        Damien Elmes <hg@repose.cx>
date:        Wed May 02 18:36:42 2007 +0900
description:
remove upgrading message

changeset:   54:ae135de7aa0d
user:        Damien Elmes <hg@repose.cx>
date:        Wed May 02 18:33:50 2007 +0900
description:
more stat fixes, add 'cards added' graph

changeset:   53:a80da6c747ca
user:        Damien Elmes <hg@repose.cx>
date:        Wed May 02 18:16:17 2007 +0900
description:
a few tweaks to stats output, change graph colours

changeset:   52:28348c6f854f
user:        Damien Elmes <hg@repose.cx>
date:        Wed May 02 18:03:52 2007 +0900
description:
a number of scheduling and stats changes
- add cardIsYoung() and make young cards more explicit
- don't deviate young cards, the interval is too small.
- ease 2 on mature cards repeats same time as last time
- ease 2 doesn't change card factor
- ease 1 reduces factor by 1 step, not 2
- don't discriminately reduce pending for incorrect cards
  (reverses previous decision - needs more work to be clear
  to the user)
- improve getStats() - return comprehensive short names for
  both session and global statistics
- store correct/incorrect for global and session, divided
  into three categories: new, young and mature cards
- questions taking more than 60 seconds to answer don't
  change the estimated time (the user probably walked away)
- divide ease stats into new, young, old too
- upgrade the deck to version 2, necessary for stats changes.
  any deck retention numbers will be lost as they're not reliable.
- update statistics to take advantage of the new categories (missing ease
  stats for now - work in progress)

changeset:   51:37bf2c17387f
user:        Damien Elmes <hg@repose.cx>
date:        Wed May 02 06:17:38 2007 +0900
description:
don't use assert to run a command, it gets optimised away.
need to improve that handling more.

changeset:   50:87280bd54075
user:        Damien Elmes <hg@repose.cx>
date:        Wed May 02 02:57:50 2007 +0900
description:
export global answered/correct & pending old/new in stats

changeset:   49:8749f1646de3
user:        Damien Elmes <hg@repose.cx>
date:        Mon Apr 30 23:01:53 2007 +0900
description:
apply half the delay factor to new cards at ease 3

changeset:   48:8ca677ddcc28
user:        Damien Elmes <hg@repose.cx>
date:        Mon Apr 30 22:54:53 2007 +0900
description:
show total cards in stats

changeset:   47:8cf0d0d2971f
user:        Damien Elmes <hg@repose.cx>
date:        Mon Apr 30 21:58:12 2007 +0900
description:
make sure the time module is available

changeset:   46:fe5ef6663b13
user:        Damien Elmes <hg@repose.cx>
date:        Mon Apr 30 20:48:02 2007 +0900
description:
more deck stat format changes

changeset:   45:90275bb7766b
user:        Damien Elmes <hg@repose.cx>
date:        Mon Apr 30 20:40:56 2007 +0900
description:
more stats, reset creation time when importing cards

changeset:   44:e89d2153e94f
user:        Damien Elmes <hg@repose.cx>
date:        Sun Apr 29 17:40:38 2007 +0900
description:
fix an error in furigana for 'karai' in the sample decks

changeset:   43:d6e0269febbd
user:        Damien Elmes <hg@repose.cx>
date:        Sun Apr 29 04:19:26 2007 +0900
description:
capitalize jinmeiyou in kanjistats

changeset:   42:096652813b9b
user:        Damien Elmes <hg@repose.cx>
date:        Sat Apr 28 00:43:35 2007 +0900
description:
add x axis label in graphs

changeset:   41:1870732f2c64
user:        Damien Elmes <hg@repose.cx>
date:        Fri Apr 27 01:11:29 2007 +0900
description:
fix definition in jlpt2 deck

changeset:   40:4261fdfb6e98
user:        Damien Elmes <hg@repose.cx>
date:        Fri Apr 27 01:09:37 2007 +0900
description:
append a final newline when exporting text, add ExportFileError exception

changeset:   39:9095ae2ef085
user:        Damien Elmes <hg@repose.cx>
date:        Thu Apr 26 04:44:58 2007 +0900
description:
improve sample files, add export support, fix graphs
- add jlpt 2-4 exerpts derived from my own decks
- add a tool to derive jlpt vocab from a jlpt deck and personal deck
- add export to anki (clean) deck, export to text
- render fill graphs down to the bottom of the graph
- don't allow graphs with insufficient info to be generated

changeset:   38:906efae0a582
user:        Damien Elmes <hg@repose.cx>
date:        Wed Apr 25 09:13:52 2007 +0900
description:
add missing 'card is new' check in scheduling

changeset:   37:6b859b82f7da
user:        Damien Elmes <hg@repose.cx>
date:        Wed Apr 25 06:42:27 2007 +0900
description:
add graphs file

changeset:   36:bae57f08f58d
user:        Damien Elmes <hg@repose.cx>
date:        Wed Apr 25 06:12:22 2007 +0900
description:
set matlab path for frozen, factor into separate file for lazy load

changeset:   35:5a220e427dd0
user:        Damien Elmes <hg@repose.cx>
date:        Wed Apr 25 04:43:52 2007 +0900
description:
apply delay to non-new cards in initial state, too

changeset:   34:f7f7005ef9fc
user:        Damien Elmes <hg@repose.cx>
date:        Wed Apr 25 04:33:36 2007 +0900
description:
use anki's version number in setup.py

changeset:   33:3aa6712b8615
user:        Damien Elmes <hg@repose.cx>
date:        Wed Apr 25 03:58:13 2007 +0900
description:
add graph generation

changeset:   32:96017e5c4f27
user:        Damien Elmes <hg@repose.cx>
date:        Wed Apr 25 03:03:46 2007 +0900
description:
don't deviate initial ease 4 negatively

changeset:   31:b1d9ae79b167
user:        David Smith <davidsmith@acm.org>
date:        Mon Apr 23 14:44:55 2007 +0900
description:
Include forgotten files

changeset:   30:92f914e17ae2
user:        David Smith <davidsmith@acm.org>
date:        Mon Apr 23 02:08:33 2007 +0900
description:
Make the utils into a setup-tools command entrypoint

changeset:   29:1b3d0de96681
user:        David Smith <davidsmith@acm.org>
date:        Mon Apr 23 02:08:10 2007 +0900
description:
Add setup.py

changeset:   28:7174f94a73ed
user:        Damien Elmes <hg@repose.cx>
date:        Sun Apr 22 03:26:37 2007 +0900
description:
add exception for non-utf8 imports

changeset:   27:d565a91a0159
user:        Damien Elmes <hg@repose.cx>
date:        Sun Apr 22 01:52:45 2007 +0900
description:
add support for importing anki decks and text files

changeset:   26:da32a4e405e3
user:        Damien Elmes <hg@repose.cx>
date:        Fri Apr 20 17:16:12 2007 +0900
description:
don't factor in delay on new cards

changeset:   25:b24d8fc1f3ce
user:        Damien Elmes <hg@repose.cx>
date:        Fri Apr 20 15:58:36 2007 +0900
description:
properly report an empty response from the server when syncing

changeset:   24:32771814f083
user:        Damien Elmes <hg@repose.cx>
date:        Fri Apr 20 06:55:20 2007 +0900
description:
add missing kanji stats

changeset:   23:72e015d83b4a
user:        Damien Elmes <hg@repose.cx>
date:        Wed Apr 18 19:21:16 2007 +0900
description:
fix pending cards bug, integrate lac's kanji stats

changeset:   22:a2fea56e5482
user:        Damien Elmes <hg@repose.cx>
date:        Wed Apr 18 07:46:42 2007 +0900
description:
update stats after card change (fixes pending: 1 bug)

changeset:   21:43918a2d67ba
user:        Damien Elmes <hg@repose.cx>
date:        Wed Apr 18 04:30:09 2007 +0900
description:
cards answered latest than scheduled are scheduled further in the future

changeset:   20:8ae96c675b7d
user:        Damien Elmes <hg@repose.cx>
date:        Tue Apr 17 12:32:31 2007 +0900
description:
add a string report for kanji

changeset:   19:931c573b3788
user:        Damien Elmes <hg@repose.cx>
date:        Mon Apr 16 23:57:51 2007 +0900
description:
fix bug in kanjistats

changeset:   18:5fbed8c50d94
user:        Damien Elmes <hg@repose.cx>
date:        Mon Apr 16 23:38:07 2007 +0900
description:
tweaks to stats html

changeset:   17:f706357905ac
user:        Damien Elmes <hg@repose.cx>
date:        Mon Apr 16 23:26:33 2007 +0900
description:
add deck stats (from ankiqt), return matching card in hasQuestion()

changeset:   16:5aa76d905ea2
user:        Damien Elmes <hg@repose.cx>
date:        Wed Apr 11 17:39:24 2007 +0900
description:
refactor pending cards into new/old, other changes
- ensure old cards are shown first, even if new cards were randomly placed
earlier
- separate pending into pendingOld and pendingNew
- remove formatTimeDiff from the scheduling code and place it in __init__.py
- reduce pendingOld even if a card was wrong

changeset:   15:2f24abf50f2d
user:        Damien Elmes <hg@repose.cx>
date:        Mon Apr 09 15:48:10 2007 +0900
description:
bump factorFour up, create easeStats on new deck, show time in seconds too

changeset:   14:ce95db97d442
user:        Damien Elmes <hg@repose.cx>
date:        Sat Apr 07 17:12:28 2007 +0900
description:
track each ease answer the user gives (could be useful in the future)

changeset:   13:deb2889ad180
user:        Damien Elmes <hg@repose.cx>
date:        Sat Apr 07 17:07:05 2007 +0900
description:
display modified cards first, fix bug in addCard, send client version
- previous seen cards are shown before new ones
- fixed an infinite loop when adding a card with the same question as a
previously renamed card
- send the protocol & client version when syncing

changeset:   12:79c9239d1c8f
user:        Damien Elmes <hg@repose.cx>
date:        Thu Apr 05 02:47:22 2007 +0900
description:
import sm5 to ensure it's included in the windows exe

changeset:   11:b70e087578f5
user:        Damien Elmes <hg@repose.cx>
date:        Wed Apr 04 22:53:23 2007 +0900
description:
track estimated time to deck finish

changeset:   10:01e18aedb3f9
user:        Damien Elmes <hg@repose.cx>
date:        Wed Apr 04 19:46:56 2007 +0900
description:
deviate interval when card is in initial state, too

changeset:   9:9717eeae72c6
user:        Damien Elmes <hg@repose.cx>
date:        Wed Apr 04 19:41:59 2007 +0900
description:
more scheduling updates
- newly added cards now give you a choice of 1, 4 and 8 days
- until past the first 8 days, the card will be treated as new
- give easy cards an extra 1.2x boost (5 years in 8-9 iters)
- make ease=3 factor a little higher, increase factor each time
- limit card scheduling to 5 years by default
- add a 'years' output for when cards reach over a year

changeset:   8:9337a39a4460
user:        Damien Elmes <hg@repose.cx>
date:        Tue Apr 03 18:03:26 2007 +0900
description:
handle old sm5 decks too when renaming to anki

changeset:   7:5f443860ed27
user:        Damien Elmes <hg@repose.cx>
date:        Tue Apr 03 04:26:20 2007 +0900
description:
rename fc to anki (pt 2)

changeset:   6:aa0f404497c1
user:        Damien Elmes <hg@repose.cx>
date:        Tue Apr 03 03:48:52 2007 +0900
description:
rename fc to anki

changeset:   5:beda7105baea
user:        Damien Elmes <hg@repose.cx>
date:        Sat Mar 31 16:25:01 2007 +0900
description:
remove decimal point from scheduling output (apparently it's confusing)

changeset:   4:32077af83c04
user:        Damien Elmes <hg@repose.cx>
date:        Sat Mar 31 16:18:22 2007 +0900
description:
make ease=3 exactly between 2 & 4

changeset:   3:c876b1f3427e
user:        Damien Elmes <hg@repose.cx>
date:        Tue Mar 27 14:04:22 2007 +0900
description:
update emacs interface to work with sched, add brief docs

changeset:   2:3c53e48d26bd
user:        Damien Elmes <hg@repose.cx>
date:        Sun Mar 25 13:59:45 2007 -0700
description:
if syncing causes local deck changes, mark the deck modified

changeset:   1:7f2ce5c599cd
user:        Damien Elmes <hg@repose.cx>
date:        Sun Mar 25 13:53:04 2007 -0700
description:
add version number, strip more emacs import code, add warning about sm5 being obsolete

changeset:   0:344b29e2e1e8
user:        Damien Elmes <hg@repose.cx>
date:        Fri Mar 23 10:31:36 2007 -0700
description:
import from bzr, see ChangeLog.old

------------------------------------------------------------
revno: 3
committer: Damien Elmes <bzr@ichi2.net>
branch nick: fc
timestamp: Thu 2007-03-22 09:19:27 -0700
message:
  support appending to end of deck, add samples, temporary hack for saving
------------------------------------------------------------
revno: 2
committer: Damien Elmes <bzr@ichi2.net>
branch nick: fc
timestamp: Thu 2007-03-22 08:37:20 -0700
message:
  update sync & upgrade code, set deckVersion on creation
  - syncing now sends a protocol and client version on checkAuth
  - don't touch lastModified when converting to the fc scheduler
  - when correcting for sm5 mischeduling, do so idempotently
  - make sure to convert new fc card attributes to float/int
------------------------------------------------------------
revno: 1
committer: Damien Elmes <bzr@ichi2.net>
branch nick: fc
timestamp: Tue 2007-03-20 11:47:51 -0700
message:
  import from darcs (see ChangeLog.old for previous history)
------------------------------------------------------------
Tue Mar 20 11:27:51 PDT 2007  fc@ichi2.net
  * move to new scheduling algorithm, add lang updates, etc

  The new scheduling algorithm is more conservative than sm5, and fixes a number
  of problems with cards being scheduled too far into the future. The factor
  matrix has been removed in favour of per-card factor modification. Each card
  starts at factor=1.5, with factorChange=0.05. Easy cards are increased by
  factorChange, difficult cards are reduced by it. In the future factorChange
  could be modified to speed up ease adjustments.

  The new algorithm has five ease levels when answering a card, instead of the
  earlier 6.

  - track totalCount, correctCount and succesivelyCorrect in cards for future
    statistics
  - apply deviation just before scheduling, so we don't confuse the user
  - add quasi-i18n support via setLang to set format of fc string output
  - add deckFormat and deckVersion to ease future upgrades
  - fc.sched is now the default algorithm and doesn't require makeDefault()
  - remove emacs deck conversion support (it was a hack)
  - move emacs support and utilities into separate directories
  - add GPL boilerplates & COPYING

Fri Mar  9 05:19:26 PST 2007  fc@ichi2.net
  * add a command to reset pending cards without updating statistics

Fri Feb 23 23:32:30 PST 2007  fc@ichi2.net
  * correct previous matrixsize patch

Thu Feb 22 23:17:45 PST 2007  fc@ichi2.net
  * ensure count and ease are bounded to the matrix size

Wed Jan 24 09:40:22 PST 2007  LaC
  * LaC lazy launch of kakasi
  - kakasi is launched only when first used
  - simpler availability check

Wed Jan 24 08:04:40 PST 2007  LaC
  * LaC shared kakasi
  - use a single instance of kakasi, instead of launching it anew on every
    keystroke; this makes the "add cards" dialog more responsive, at least on
    my system

Mon Jan  8 19:20:16 PST 2007  fc@ichi2.net
  * display approximate time to next appearance

Sat Dec 23 08:31:18 PST 2006  fc@ichi2.net
  * find kakasi on mac

Tue Dec 12 00:53:13 PST 2006  fc@ichi2.net
  * fix negative numbers in status report

Tue Dec 12 00:51:09 PST 2006  fc@ichi2.net
  * improve backup/support old style format/provide deckCon

Thu Dec  7 06:33:23 PST 2006  fc@ichi2.net
  * handle deleted-and-readded cards and empty furigana

Thu Dec  7 06:08:31 PST 2006  fc@ichi2.net
  * add backup support

Thu Dec  7 02:13:06 PST 2006  fc@ichi2.net
  * if furigana is explictly provided, don't try invoke kakasi. no kana
    generation

Thu Dec  7 01:19:53 PST 2006  fc@ichi2.net
  * use the :80 url for syncing

Wed Dec  6 21:29:18 PST 2006  fc@ichi2.net
  * implement add cards

Wed Nov 29 20:30:19 PST 2006  fc@ichi2.net
  * emacs support, big refactor

Fri Nov 17 06:42:21 PST 2006  fc@ichi2.net
  * add more deck creation support, various other things

Wed Nov 15 10:37:30 PST 2006  fc@ichi2.net
  * sync support w/ server working

Tue Nov 14 10:31:25 PST 2006  fc@ichi2.net
  * add deck editing and more

Mon Nov 13 08:52:05 PST 2006  fc@ichi2.net
  * add server support, syncing, etc

Fri Nov 10 09:10:28 PST 2006  fc@ichi2.net
  * misc patches

Mon Oct 23 04:01:20 PDT 2006  fc@ichi2.net
  * new interface seems okay for now

Mon Oct 23 00:55:37 PDT 2006  fc@ichi2.net
  * add missing files

Mon Oct 23 00:55:00 PDT 2006  fc@ichi2.net
  * move out fc_web, reorganise structure

Sat Oct 21 16:57:31 PDT 2006  fc@ichi2.net
  * add all new files from 3am commit

Sat Oct 21 03:36:03 PDT 2006  fc@ichi2.net
  * 3:30am commit

Fri Oct 20 21:08:19 PDT 2006  fc@ichi2.net
  * add pylons dir

Fri Oct 20 21:06:10 PDT 2006  fc@ichi2.net
  * initial import
 58  
anki/__init__.py
@@ -0,0 +1,58 @@
# -*- coding: utf-8 -*-
# Copyright: Damien Elmes <anki@ichi2.net>
# License: GNU GPL, version 3 or later; http://www.gnu.org/copyleft/gpl.html

"""\
Anki (libanki)
====================
Open a deck:
    deck = anki.DeckStorage.Deck(path)
Get a card:
    card = deck.getCard()
    if not card:
        # deck is finished
Show the card:
    print card.question, card.answer
Answer the card:
    deck.answerCard(card, ease)
Edit the card:
    fields = card.fact.model.fieldModels
    for field in fields:
        card.fact[field.name] = "newvalue"
    card.fact.setModified(textChanged=True)
    deck.setModified()
Get all cards via ORM (slow):
    from anki.cards import Card
    cards = deck.s.query(Card).all()
Get all q/a/ids via SQL (fast):
    cards = deck.s.all("select id, question, answer from cards")
Save & close:
    deck.save()
    deck.close()
"""
__docformat__ = 'restructuredtext'

try:
    __import__('pkg_resources').declare_namespace(__name__)
except ImportError:
    pass

version = "0.9.9.8.6"

from anki.deck import DeckStorage
 289  
anki/cards.py
@@ -0,0 +1,289 @@
# -*- coding: utf-8 -*-
# Copyright: Damien Elmes <anki@ichi2.net>
# License: GNU GPL, version 3 or later; http://www.gnu.org/copyleft/gpl.html

"""\
Cards
====================
"""
__docformat__ = 'restructuredtext'

import time, sys, math, random
from anki.db import *
from anki.models import CardModel, Model, FieldModel, formatQA
from anki.facts import Fact, factsTable, Field
from anki.utils import parseTags, findTag, stripHTML, genID, hexifyID

# Cards
##########################################################################

cardsTable = Table(
    'cards', metadata,
    Column('id', Integer, primary_key=True),
    Column('factId', Integer, ForeignKey("facts.id"), nullable=False),
    Column('cardModelId', Integer, ForeignKey("cardModels.id"), nullable=False),
    Column('created', Float, nullable=False, default=time.time),
    Column('modified', Float, nullable=False, default=time.time),
    Column('tags', UnicodeText, nullable=False, default=u""),
    Column('ordinal', Integer, nullable=False),
    # cached - changed on fact update
    Column('question', UnicodeText, nullable=False, default=u""),
    Column('answer', UnicodeText, nullable=False, default=u""),
    # default to 'normal' priority;
    # this is indexed in deck.py as we need to create a reverse index
    Column('priority', Integer, nullable=False, default=2),
    Column('interval', Float, nullable=False, default=0),
    Column('lastInterval', Float, nullable=False, default=0),
    Column('due', Float, nullable=False, default=time.time),
    Column('lastDue', Float, nullable=False, default=0),
    Column('factor', Float, nullable=False, default=2.5),
    Column('lastFactor', Float, nullable=False, default=2.5),
    Column('firstAnswered', Float, nullable=False, default=0),
    # stats
    Column('reps', Integer, nullable=False, default=0),
    Column('successive', Integer, nullable=False, default=0),
    Column('averageTime', Float, nullable=False, default=0),
    Column('reviewTime', Float, nullable=False, default=0),
    Column('youngEase0', Integer, nullable=False, default=0),
    Column('youngEase1', Integer, nullable=False, default=0),
    Column('youngEase2', Integer, nullable=False, default=0),
    Column('youngEase3', Integer, nullable=False, default=0),
    Column('youngEase4', Integer, nullable=False, default=0),
    Column('matureEase0', Integer, nullable=False, default=0),
    Column('matureEase1', Integer, nullable=False, default=0),
    Column('matureEase2', Integer, nullable=False, default=0),
    Column('matureEase3', Integer, nullable=False, default=0),
    Column('matureEase4', Integer, nullable=False, default=0),
    # this duplicates the above data, because there's no way to map imported
    # data to the above
    Column('yesCount', Integer, nullable=False, default=0),
    Column('noCount', Integer, nullable=False, default=0),
    # caching
    Column('spaceUntil', Float, nullable=False, default=0),
    Column('relativeDelay', Float, nullable=False, default=0), # obsolete
    Column('isDue', Boolean, nullable=False, default=0),
    Column('type', Integer, nullable=False, default=2),
    Column('combinedDue', Integer, nullable=False, default=0))

class Card(object):
    "A card."

    def __init__(self, fact=None, cardModel=None, created=None):
        self.tags = u""
        self.id = genID()
        # new cards start as new & due
        self.type = 2
        self.isDue = True
        self.timerStarted = False
        self.timerStopped = False
        self.modified = time.time()
        if created:
            self.created = created
            self.due = created
        else:
            self.due = self.modified
        self.combinedDue = self.due
        if fact:
            self.fact = fact
        if cardModel:
            self.cardModel = cardModel
            # for non-orm use
            self.cardModelId = cardModel.id
            self.ordinal = cardModel.ordinal
            d = {}
            for f in self.fact.model.fieldModels:
                d[f.name] = (f.id, self.fact[f.name])
            qa = formatQA(None, fact.modelId, d, self.splitTags(), cardModel)
            self.question = qa['question']
            self.answer = qa['answer']

    def setModified(self):
        self.modified = time.time()

    def startTimer(self):
        self.timerStarted = time.time()

    def stopTimer(self):
        self.timerStopped = time.time()

    def thinkingTime(self):
        return (self.timerStopped or time.time()) - self.timerStarted

    def totalTime(self):
        return time.time() - self.timerStarted

    def genFuzz(self):
        "Generate a random offset to spread intervals."
        self.fuzz = random.uniform(0.95, 1.05)

    def htmlQuestion(self, type="question", align=True):
        div = '''<div class="card%s" id="cm%s%s">%s</div>''' % (
            type[0], type[0], hexifyID(self.cardModelId),
            getattr(self, type))
        # add outer div & alignment (with tables due to qt's html handling)
        if not align:
            return div
        attr = type + 'Align'
        if getattr(self.cardModel, attr) == 0:
            align = "center"
        elif getattr(self.cardModel, attr) == 1:
            align = "left"
        else:
            align = "right"
        return (("<center><table width=95%%><tr><td align=%s>" % align) +
                div + "</td></tr></table></center>")

    def htmlAnswer(self, align=True):
        return self.htmlQuestion(type="answer", align=align)

    def updateStats(self, ease, state):
        self.reps += 1
        if ease > 1:
            self.successive += 1
        else:
            self.successive = 0
        delay = self.totalTime()
        # ignore any times over 60 seconds
        if delay < 60:
            self.reviewTime += delay
            if self.averageTime:
                self.averageTime = (self.averageTime + delay) / 2.0
            else:
                self.averageTime = delay
        # we don't track first answer for cards
        if state == "new":
            state = "young"
        # update ease and yes/no count
        attr = state + "Ease%d" % ease
        setattr(self, attr, getattr(self, attr) + 1)
        if ease < 2:
            self.noCount += 1
        else:
            self.yesCount += 1
        if not self.firstAnswered:
            self.firstAnswered = time.time()
        self.setModified()

    def splitTags(self):
        return (self.fact.tags, self.fact.model.tags, self.cardModel.name)

    def allTags(self):
        "Non-canonified string of all tags."
        return (self.fact.tags + "," +
                self.fact.model.tags)

    def hasTag(self, tag):
        return findTag(tag, parseTags(self.allTags()))

    def fromDB(self, s, id):
        r = s.first("""select
id, factId, cardModelId, created, modified, tags, ordinal, question, answer,
priority, interval, lastInterval, due, lastDue, factor,
lastFactor, firstAnswered, reps, successive, averageTime, reviewTime,
youngEase0, youngEase1, youngEase2, youngEase3, youngEase4,
matureEase0, matureEase1, matureEase2, matureEase3, matureEase4,
yesCount, noCount, spaceUntil, isDue, type, combinedDue
from cards where id = :id""", id=id)
        if not r:
            return
        (self.id,
         self.factId,
         self.cardModelId,
         self.created,
         self.modified,
         self.tags,
         self.ordinal,
         self.question,
         self.answer,
         self.priority,
         self.interval,
         self.lastInterval,
         self.due,
         self.lastDue,
         self.factor,
         self.lastFactor,
         self.firstAnswered,
         self.reps,
         self.successive,
         self.averageTime,
         self.reviewTime,
         self.youngEase0,
         self.youngEase1,
         self.youngEase2,
         self.youngEase3,
         self.youngEase4,
         self.matureEase0,
         self.matureEase1,
         self.matureEase2,
         self.matureEase3,
         self.matureEase4,
         self.yesCount,
         self.noCount,
         self.spaceUntil,
         self.isDue,
         self.type,
         self.combinedDue) = r
        return True

    def toDB(self, s):
        "Write card to DB. Note that isDue assumes card is not spaced."
        if self.reps == 0:
            self.type = 2
        elif self.successive:
            self.type = 1
        else:
            self.type = 0
        s.execute("""update cards set
modified=:modified,
tags=:tags,
interval=:interval,
lastInterval=:lastInterval,
due=:due,
lastDue=:lastDue,
factor=:factor,
lastFactor=:lastFactor,
firstAnswered=:firstAnswered,
reps=:reps,
successive=:successive,
averageTime=:averageTime,
reviewTime=:reviewTime,
youngEase0=:youngEase0,
youngEase1=:youngEase1,
youngEase2=:youngEase2,
youngEase3=:youngEase3,
youngEase4=:youngEase4,
matureEase0=:matureEase0,
matureEase1=:matureEase1,
matureEase2=:matureEase2,
matureEase3=:matureEase3,
matureEase4=:matureEase4,
yesCount=:yesCount,
noCount=:noCount,
spaceUntil = :spaceUntil,
isDue = :isDue,
type = :type,
combinedDue = max(:spaceUntil, :due),
relativeDelay = 0,
priority = :priority
where id=:id""", self.__dict__)

mapper(Card, cardsTable, properties={
    'cardModel': relation(CardModel),
    'fact': relation(Fact, backref="cards", primaryjoin=
                     cardsTable.c.factId == factsTable.c.id),
    })

mapper(Fact, factsTable, properties={
    'model': relation(Model),
    'fields': relation(Field, backref="fact", order_by=Field.ordinal),
    })


# Card deletions
##########################################################################

cardsDeletedTable = Table(
    'cardsDeleted', metadata,
    Column('cardId', Integer, ForeignKey("cards.id"),
           nullable=False),
    Column('deletedTime', Float, nullable=False))
 149  
anki/db.py
@@ -0,0 +1,149 @@
# -*- coding: utf-8 -*-
# Copyright: Damien Elmes <anki@ichi2.net>
# License: GNU GPL, version 3 or later; http://www.gnu.org/copyleft/gpl.html

"""\
DB tools
====================
SessionHelper is a wrapper for the standard sqlalchemy session, which provides
some convenience routines, and manages transactions itself.
object_session() is a replacement for the standard object_session(), which
provides the features of SessionHelper, and avoids taking out another
transaction.
"""
__docformat__ = 'restructuredtext'

try:
    from pysqlite2 import dbapi2 as sqlite
except ImportError:
    try:
        from sqlite3 import dbapi2 as sqlite
    except:
        raise "Please install pysqlite2 or python2.5"

from sqlalchemy import (Table, Integer, Float, Column, MetaData,
                        ForeignKey, Boolean, String, Date,
                        UniqueConstraint, Index, PrimaryKeyConstraint)
from sqlalchemy import create_engine
from sqlalchemy.orm import mapper, sessionmaker as _sessionmaker, relation, backref, \
     object_session as _object_session, class_mapper
from sqlalchemy.sql import select, text, and_
from sqlalchemy.exceptions import DBAPIError, OperationalError
from sqlalchemy.pool import NullPool
import sqlalchemy

# some users are still on 0.4.x..
import warnings
warnings.filterwarnings('ignore', 'Use session.add()')
warnings.filterwarnings('ignore', 'Use session.expunge_all()')

# sqlalchemy didn't handle the move to unicodetext nicely
try:
    from sqlalchemy import UnicodeText
except ImportError:
    from sqlalchemy import Unicode
    UnicodeText = Unicode

from anki.hooks import runHook

# shared metadata
metadata = MetaData()

# this class assumes the provided session is called with transactional=False
class SessionHelper(object):
    "Add some convenience routines to a session."

    def __init__(self, session, lock=False, transaction=True):
        self._session = session
        self._lock = lock
        self._transaction = transaction
        if self._transaction:
            self._session.begin()
        if self._lock:
            self._lockDB()
        self._seen = True

    def save(self, obj):
        # compat
        if sqlalchemy.__version__.startswith("0.4."):
            self._session.save(obj)
        else:
            self._session.add(obj)

    def clear(self):
        # compat
        if sqlalchemy.__version__.startswith("0.4."):
            self._session.clear()
        else:
            self._session.expunge_all()

    def update(self, obj):
        # compat
        if sqlalchemy.__version__.startswith("0.4."):
            self._session.update(obj)
        else:
            self._session.add(obj)

    def execute(self, *a, **ka):
        x = self._session.execute(*a, **ka)
        runHook("dbFinished")
        return x

    def __getattr__(self, k):
        return getattr(self.__dict__['_session'], k)

    def scalar(self, sql, **args):
        return self.execute(text(sql), args).scalar()

    def all(self, sql, **args):
        return self.execute(text(sql), args).fetchall()

    def first(self, sql, **args):
        c = self.execute(text(sql), args)
        r = c.fetchone()
        c.close()
        return r

    def column0(self, sql, **args):
        return [x[0] for x in self.execute(text(sql), args).fetchall()]

    def statement(self, sql, **kwargs):
        "Execute a statement without returning any results. Flush first."
        return self.execute(text(sql), kwargs)

    def statements(self, sql, data):
        "Execute a statement across data. Flush first."
        return self.execute(text(sql), data)

    def __repr__(self):
        return repr(self._session)

    def commit(self):
        self._session.commit()
        if self._transaction:
            self._session.begin()
        if self._lock:
            self._lockDB()

    def _lockDB(self):
        "Take out a write lock."
        self._session.execute(text("update decks set modified=modified"))

def object_session(*args):
    s = _object_session(*args)
    if s:
        return SessionHelper(s, transaction=False)
    return None

def sessionmaker(*args, **kwargs):
    if sqlalchemy.__version__ < "0.5":
        if 'autocommit' in kwargs:
            kwargs['transactional'] = not kwargs['autocommit']
            del kwargs['autocommit']
    else:
        if 'transactional' in kwargs:
            kwargs['autocommit'] = not kwargs['transactional']
            del kwargs['transactional']
    return _sessionmaker(*args, **kwargs)
 3,446  
anki/deck.py
Large diffs are not rendered by default.

 49  
anki/errors.py
@@ -0,0 +1,49 @@
# -*- coding: utf-8 -*-
# Copyright: Damien Elmes <anki@ichi2.net>
# License: GNU GPL, version 3 or later; http://www.gnu.org/copyleft/gpl.html

"""\
Errors
==============================
"""
__docformat__ = 'restructuredtext'

class Error(Exception):
    def __init__(self, message="", **data):
        self.data = data
        self._message = message
    def __str__(self):
        m = self._message
        if self.data:
            m += ": %s" % repr(self.data)
        return m

class DeckAccessError(Error):
    pass

class ImportFileError(Error):
    "Unable to load file to import from."
    pass

class ImportFormatError(Error):
    "Unable to determine pattern in text file."
    pass

class ImportEncodingError(Error):
    "The file was not in utf-8."
    pass

class ExportFileError(Error):
    "Unable to save file."
    pass

class SyncError(Error):
    "A problem occurred during syncing."
    pass

# facts, models
class FactInvalidError(Error):
    """A fact was invalid/not unique according to the model.
'field' defines the problem field.
'type' defines the type of error ('fieldEmpty', 'fieldNotUnique')"""
    pass
 270  
anki/exporting.py
@@ -0,0 +1,270 @@
# -*- coding: utf-8 -*-
# Copyright: Damien Elmes <anki@ichi2.net>
# License: GNU GPL, version 3 or later; http://www.gnu.org/copyleft/gpl.html

"""\
Exporting support
==============================
"""
__docformat__ = 'restructuredtext'

import itertools, time, re, os
from operator import itemgetter
from anki import DeckStorage
from anki.cards import Card
from anki.sync import SyncClient, SyncServer, copyLocalMedia
from anki.lang import _
from anki.utils import findTag, parseTags, stripHTML, ids2str
from anki.tags import tagIds
from anki.db import *

class Exporter(object):
    def __init__(self, deck):
        self.deck = deck
        self.limitTags = []
        self.limitCardIds = []

    def exportInto(self, path):
        self._escapeCount = 0
        file = open(path, "wb")
        self.doExport(file)
        file.close()

    def escapeText(self, text, removeFields=False):
        "Escape newlines and tabs, and strip Anki HTML."
        from BeautifulSoup import BeautifulSoup as BS
        text = text.replace("\n", "<br>")
        text = text.replace("\t", " " * 8)
        if removeFields:
            # beautifulsoup is slow
            self._escapeCount += 1
            if self._escapeCount % 100 == 0:
                self.deck.updateProgress()
            s = BS(text)
            all = s('span', {'class': re.compile("fm.*")})
            for e in all:
                e.replaceWith("".join([unicode(x) for x in e.contents]))
            text = unicode(s)
        return text

    def cardIds(self):
        "Return all cards, limited by tags or provided ids."
        if self.limitCardIds:
            return self.limitCardIds
        if not self.limitTags:
            cards = self.deck.s.column0("select id from cards")
        else:
            d = tagIds(self.deck.s, self.limitTags, create=False)
            cards = self.deck.s.column0(
                "select cardId from cardTags where tagid in %s" %
                ids2str(d.values()))
        self.count = len(cards)
        return cards

class AnkiExporter(Exporter):

    key = _("Anki Deck (*.anki)")
    ext = ".anki"

    def __init__(self, deck):
        Exporter.__init__(self, deck)
        self.includeSchedulingInfo = False
        self.includeMedia = True

    def exportInto(self, path):
        n = 3
        if not self.includeSchedulingInfo:
            n += 1
        self.deck.startProgress(n)
        self.deck.updateProgress(_("Exporting..."))
        try:
            os.unlink(path)
        except (IOError, OSError):
            pass
        self.newDeck = DeckStorage.Deck(path)
        client = SyncClient(self.deck)
        server = SyncServer(self.newDeck)
        server._mediaSupported = self.includeMedia
        client.setServer(server)
        client.localTime = self.deck.modified
        client.remoteTime = 0
        self.deck.s.flush()
        # set up a custom change list and sync
        lsum = self.localSummary()
        rsum = server.summary(0)
        self.deck.updateProgress()
        payload = client.genPayload((lsum, rsum))
        self.deck.updateProgress()
        res = server.applyPayload(payload)
        if not self.includeSchedulingInfo:
            self.deck.updateProgress()
            self.newDeck.s.statement("""
delete from reviewHistory""")
            self.newDeck.s.statement("""
update cards set
interval = 0,
lastInterval = 0,
due = created,
lastDue = 0,
factor = 2.5,
firstAnswered = 0,
reps = 0,
successive = 0,
averageTime = 0,
reviewTime = 0,
youngEase0 = 0,
youngEase1 = 0,
youngEase2 = 0,
youngEase3 = 0,
youngEase4 = 0,
matureEase0 = 0,
matureEase1 = 0,
matureEase2 = 0,
matureEase3 = 0,
matureEase4 = 0,
yesCount = 0,
noCount = 0,
spaceUntil = 0,
isDue = 1,
type = 2,
combinedDue = created,
modified = :now
""", now=time.time())
            self.newDeck.s.statement("""
delete from stats""")
        # media
        copyLocalMedia(client.deck, server.deck)
        # need to save manually
        self.newDeck.rebuildCounts()
        self.newDeck.updateAllPriorities()
        self.exportedCards = self.newDeck.cardCount
        self.newDeck.utcOffset = -1
        self.newDeck.s.commit()
        self.newDeck.close()
        self.deck.finishProgress()

    def localSummary(self):
        cardIds = self.cardIds()
        cStrIds = ids2str(cardIds)
        cards = self.deck.s.all("""
select id, modified from cards
where id in %s""" % cStrIds)
        facts = self.deck.s.all("""
select facts.id, facts.modified from cards, facts where
facts.id = cards.factId and
cards.id in %s""" % cStrIds)
        models = self.deck.s.all("""
select models.id, models.modified from models, facts where
facts.modelId = models.id and
facts.id in %s""" % ids2str([f[0] for f in facts]))
        media = self.deck.s.all("""
select id, created from media""")
        return {
            # cards
            "cards": cards,
            "delcards": [],
            # facts
            "facts": facts,
            "delfacts": [],
            # models
            "models": models,
            "delmodels": [],
            # media
            "media": media,
            "delmedia": [],
            }

class TextCardExporter(Exporter):

    key = _("Text files (*.txt)")
    ext = ".txt"

    def __init__(self, deck):
        Exporter.__init__(self, deck)
        self.includeTags = False

    def doExport(self, file):
        ids = self.cardIds()
        strids = ids2str(ids)
        self.deck.startProgress((len(ids) + 1) / 50)
        self.deck.updateProgress(_("Exporting..."))
        cards = self.deck.s.all("""
select cards.question, cards.answer, cards.id from cards
where cards.id in %s
order by cards.created""" % strids)
        self.deck.updateProgress()
        if self.includeTags:
            self.cardTags = dict(self.deck.s.all("""
select cards.id, facts.tags from cards, facts
where cards.factId = facts.id
and cards.id in %s
order by cards.created""" % strids))
        out = u"\n".join(["%s\t%s%s" % (
            self.escapeText(c[0], removeFields=True),
            self.escapeText(c[1], removeFields=True),
            self.tags(c[2]))
                          for c in cards])
        if out:
            out += "\n"
        file.write(out.encode("utf-8"))
        self.deck.finishProgress()

    def tags(self, id):
        if self.includeTags:
            return "\t" + ", ".join(parseTags(self.cardTags[id]))
        return ""

class TextFactExporter(Exporter):

    key = _("Text files (*.txt)")
    ext = ".txt"

    def __init__(self, deck):
        Exporter.__init__(self, deck)
        self.includeTags = False

    def doExport(self, file):
        cardIds = self.cardIds()
        self.deck.startProgress()
        self.deck.updateProgress(_("Exporting..."))
        facts = self.deck.s.all("""
select factId, value, facts.created from facts, fields
where
facts.id in
(select distinct factId from cards
where cards.id in %s)
and facts.id = fields.factId
order by factId, ordinal""" % ids2str(cardIds))
        txt = ""
        self.deck.updateProgress()
        if self.includeTags:
            self.factTags = dict(self.deck.s.all(
                "select id, tags from facts where id in %s" %
                ids2str([fact[0] for fact in facts])))
        groups = itertools.groupby(facts, itemgetter(0))
        groups = [[x for x in y[1]] for y in groups]
        groups = [(group[0][2],
                   "\t".join([self.escapeText(x[1]) for x in group]) +
                   self.tags(group[0][0]))
                  for group in groups]
        self.deck.updateProgress()
        groups.sort(key=itemgetter(0))
        out = [ret[1] for ret in groups]
        self.count = len(out)
        out = "\n".join(out)
        file.write(out.encode("utf-8"))
        self.deck.finishProgress()

    def tags(self, id):
        if self.includeTags:
            return "\t" + self.factTags[id]
        return ""

# Export modules
##########################################################################

def exporters():
    return (
        (_("Anki Deck (*.anki)"), AnkiExporter),
        (_("Cards in tab-separated text file (*.txt)"), TextCardExporter),
        (_("Facts in tab-separated text file (*.txt)"), TextFactExporter))
 151  
anki/facts.py
@@ -0,0 +1,151 @@
# -*- coding: utf-8 -*-
# Copyright: Damien Elmes <anki@ichi2.net>
# License: GNU GPL, version 3 or later; http://www.gnu.org/copyleft/gpl.html

"""\
Facts
========
"""
__docformat__ = 'restructuredtext'

import time
from anki.db import *
from anki.errors import *
from anki.models import Model, FieldModel, fieldModelsTable, formatQA
from anki.utils import genID
from anki.hooks import runHook

# Fields in a fact
##########################################################################

fieldsTable = Table(
    'fields', metadata,
    Column('id', Integer, primary_key=True),
    Column('factId', Integer, ForeignKey("facts.id"), nullable=False),
    Column('fieldModelId', Integer, ForeignKey("fieldModels.id"),
           nullable=False),
    Column('ordinal', Integer, nullable=False),
    Column('value', UnicodeText, nullable=False))

class Field(object):
    "A field in a fact."

    def __init__(self, fieldModel=None):
        if fieldModel:
            self.fieldModel = fieldModel
            self.ordinal = fieldModel.ordinal
        self.value = u""
        self.id = genID()

    def getName(self):
        return self.fieldModel.name
    name = property(getName)

mapper(Field, fieldsTable, properties={
    'fieldModel': relation(FieldModel)
    })

# Facts: a set of fields and a model
##########################################################################
# mapped in cards.py

factsTable = Table(
    'facts', metadata,
    Column('id', Integer, primary_key=True),
    Column('modelId', Integer, ForeignKey("models.id"), nullable=False),
    Column('created', Float, nullable=False, default=time.time),
    Column('modified', Float, nullable=False, default=time.time),
    Column('tags', UnicodeText, nullable=False, default=u""),
    # the following two fields are obsolete and now stored in cards table
    Column('spaceUntil', Float, nullable=False, default=0),
    Column('lastCardId', Integer, ForeignKey(
    "cards.id", use_alter=True, name="lastCardIdfk")))

class Fact(object):
    "A single fact. Fields exposed as dict interface."

    def __init__(self, model=None):
        self.model = model
        self.id = genID()
        if model:
            for fm in model.fieldModels:
                self.fields.append(Field(fm))
        self.new = True

    def isNew(self):
        return getattr(self, 'new', False)

    def keys(self):
        return [field.name for field in self.fields]

    def values(self):
        return [field.value for field in self.fields]

    def __getitem__(self, key):
        try:
            return [f.value for f in self.fields if f.name == key][0]
        except IndexError:
            raise KeyError(key)

    def __setitem__(self, key, value):
        try:
            [f for f in self.fields if f.name == key][0].value = value
        except IndexError:
            raise KeyError

    def get(self, key, default):
        try:
            return self[key]
        except (IndexError, KeyError):
            return default

    def assertValid(self):
        "Raise an error if required fields are empty."
        for field in self.fields:
            if not self.fieldValid(field):
                raise FactInvalidError(type="fieldEmpty",
                                       field=field.name)

    def fieldValid(self, field):
        return not (field.fieldModel.required and not field.value.strip())

    def assertUnique(self, s):
        "Raise an error if duplicate fields are found."
        for field in self.fields:
            if not self.fieldUnique(field, s):
                raise FactInvalidError(type="fieldNotUnique",
                                       field=field.name)

    def fieldUnique(self, field, s):
        if not field.fieldModel.unique:
            return True
        req = ("select value from fields "
               "where fieldModelId = :fmid and value = :val")
        if field.id:
            req += " and id != %s" % field.id
        return not s.scalar(req, val=field.value, fmid=field.fieldModel.id)

    def focusLost(self, field):
        runHook('fact.focusLost', self, field)

    def setModified(self, textChanged=False):
        "Mark modified and update cards."
        self.modified = time.time()
        if textChanged:
            d = {}
            for f in self.model.fieldModels:
                d[f.name] = (f.id, self[f.name])
            for card in self.cards:
                qa = formatQA(None, self.modelId, d, card.splitTags(), card.cardModel)
                card.question = qa['question']
                card.answer = qa['answer']
                card.setModified()

# Fact deletions
##########################################################################

factsDeletedTable = Table(
    'factsDeleted', metadata,
    Column('factId', Integer, ForeignKey("facts.id"),
           nullable=False),
    Column('deletedTime', Float, nullable=False))
 55  
anki/fonts.py
@@ -0,0 +1,55 @@
# -*- coding: utf-8 -*-
# Copyright: Damien Elmes <anki@ichi2.net>
# License: GNU GPL, version 3 or later; http://www.gnu.org/copyleft/gpl.html

"""\
Fonts - mapping to/from platform-specific fonts
==============================================================
"""

import sys

# set this to 'all', to get all fonts in a list
policy="platform"

mapping = [
    [u"Mincho", u"MS Mincho", "win32"],
    [u"Mincho", u"ＭＳ 明朝", "win32"],
    [u"Mincho", u"ヒラギノ明朝 Pro W3", "mac"],
    [u"Mincho", u"Kochi Mincho", "linux"],
    [u"Mincho", u"東風明朝", "linux"],
    ]

def platform():
    if sys.platform == "win32":
        return "win32"
    elif sys.platform.startswith("darwin"):
        return "mac"
    else:
        return "linux"

def toCanonicalFont(family):
    "Turn a platform-specific family into a canonical one."
    for (s, p, type) in mapping:
        if family == p:
            return s
    return family

def toPlatformFont(family):
    "Turn a canonical font into a platform-specific one."
    if policy == "all":
        return allFonts(family)
    ltype = platform()
    for (s, p, type) in mapping:
        if family == s and type == ltype:
            return p
    return family

def substitutions():
    "Return a tuple mapping canonical fonts to platform ones."
    type = platform()
    return [(s, p) for (s, p, t) in mapping if t == type]

def allFonts(family):
    ret = ", ".join([p for (s, p, t) in mapping if s == family])
    return ret or family
 346  
anki/graphs.py
@@ -0,0 +1,346 @@
# -*- coding: utf-8 -*-
# Copyright: Damien Elmes <anki@ichi2.net>
# License: GNU GPL, version 3 or later; http://www.gnu.org/copyleft/gpl.html

"""\
Graphs of deck statistics
==============================
"""
__docformat__ = 'restructuredtext'

import os, sys, time
import anki.stats
from anki.lang import _

import datetime

#colours for graphs
dueYoungC = "#ffb380"
dueMatureC = "#ff5555"
dueCumulC = "#ff8080"

reviewNewC = "#80b3ff"
reviewYoungC = "#5555ff"
reviewMatureC = "#0f5aff"
reviewTimeC = "#0fcaff"

easesNewC = "#80b3ff"
easesYoungC = "#5555ff"
easesMatureC = "#0f5aff"

addedC = "#b3ff80"
firstC = "#b380ff"
intervC = "#80e5ff"

# support frozen distribs
if sys.platform.startswith("darwin"):
    try:
        del os.environ['MATPLOTLIBDATA']
    except:
        pass
elif getattr(sys, "frozen", None):
    os.environ['MATPLOTLIBDATA'] = os.path.dirname(sys.argv[0])

try:
    from matplotlib.figure import Figure
except UnicodeEncodeError:
    # haven't tracked down the cause of this yet, but reloading fixes it
    try:
        from matplotlib.figure import Figure
    except ImportError:
        pass
except ImportError:
    pass

def graphsAvailable():
    return 'matplotlib' in sys.modules

class DeckGraphs(object):

    def __init__(self, deck, width=8, height=3, dpi=75):
        self.deck = deck
        self.stats = None
        self.width = width
        self.height = height
        self.dpi = dpi

    def calcStats (self):
        if not self.stats:
            days = {}
            daysYoung = {}
            daysMature =  {}
            months = {}
            next = {}
            lowestInDay = 0
            midnightOffset = time.timezone - self.deck.utcOffset
            now = list(time.localtime(time.time()))
            now[3] = 23; now[4] = 59
            self.endOfDay = time.mktime(now) - midnightOffset
            t = time.time()
            young = self.deck.s.all("""
select interval, combinedDue
from cards where priority in (1,2,3,4) and
type in (0, 1) and interval <= 21""")
            mature = self.deck.s.all("""
select interval, combinedDue
from cards where type = 1 and priority in (1,2,3,4) and interval > 21""")

            for (src, dest) in [(young, daysYoung),
                                (mature, daysMature)]:
                for (interval, due) in src:
                    day=int(round(interval))
                    days[day] = days.get(day, 0) + 1
                    indays = int(((due - self.endOfDay) / 86400.0) + 1)
                    next[indays] = next.get(indays, 0) + 1 # type-agnostic stats
                    dest[indays] = dest.get(indays, 0) + 1 # type-specific stats
                    if indays < lowestInDay:
                        lowestInDay = indays
            self.stats = {}
            self.stats['next'] = next
            self.stats['days'] = days
            self.stats['daysByType'] = {'young': daysYoung,
                                        'mature': daysMature}
            self.stats['months'] = months
            self.stats['lowestInDay'] = lowestInDay

            dayReps = self.deck.s.all("""
select day,
       matureEase0+matureEase1+matureEase2+matureEase3+matureEase4 as matureReps,
       reps-(newEase0+newEase1+newEase2+newEase3+newEase4) as combinedYoungReps,
       reps as combinedNewReps
from stats
where type = 1""")

            dayTimes = self.deck.s.all("""
select day, reviewTime as reviewTime
from stats
where type = 1""")

            todaydt = datetime.datetime(*list(time.localtime(time.time())[:3]))
            for dest, source in [("dayRepsNew", "combinedNewReps"),
                                 ("dayRepsYoung", "combinedYoungReps"),
                                 ("dayRepsMature", "matureReps")]:
                self.stats[dest] = dict(
                    map(lambda dr: (-(todaydt -datetime.datetime(
                    *(int(x)for x in dr["day"].split("-")))).days, dr[source]), dayReps))

            self.stats['dayTimes'] = dict(
                map(lambda dr: (-(todaydt -datetime.datetime(
                *(int(x)for x in dr["day"].split("-")))).days, dr["reviewTime"]/60.0), dayTimes))

    def nextDue(self, days=30):
        self.calcStats()
        fig = Figure(figsize=(self.width, self.height), dpi=self.dpi)
        graph = fig.add_subplot(111)
        dayslists = [self.stats['next'], self.stats['daysByType']['mature']]

        for dayslist in dayslists:
            self.addMissing(dayslist, self.stats['lowestInDay'], days)

        argl = []

        for dayslist in dayslists:
            dl = [x for x in dayslist.items() if x[0] <= days]
            argl.extend(list(self.unzip(dl)))

        self.filledGraph(graph, days, [dueYoungC, dueMatureC], *argl)

        cheat = fig.add_subplot(111)
        b1 = cheat.bar(0, 0, color = dueYoungC)
        b2 = cheat.bar(1, 0, color = dueMatureC)

        cheat.legend([b1, b2], [
            "Young",
            "Mature"], loc='upper right')

        graph.set_xlim(xmin=self.stats['lowestInDay'], xmax=days)
        return fig

    def workDone(self, days=30):
        self.calcStats()

        for type in ["dayRepsNew", "dayRepsYoung", "dayRepsMature"]:
            self.addMissing(self.stats[type], -days, 0)

        fig = Figure(figsize=(self.width, self.height), dpi=self.dpi)
        graph = fig.add_subplot(111)

        args = sum((self.unzip(self.stats[type].items(), limit=days, reverseLimit=True) for type in ["dayRepsMature", "dayRepsYoung", "dayRepsNew"][::-1]), [])

        self.filledGraph(graph, days, [reviewNewC, reviewYoungC, reviewMatureC], *args)

        cheat = fig.add_subplot(111)
        b1 = cheat.bar(-3, 0, color = reviewNewC)
        b2 = cheat.bar(-4, 0, color = reviewYoungC)
        b3 = cheat.bar(-5, 0, color = reviewMatureC)

        cheat.legend([b1, b2, b3], [
            "New",
            "Young",
            "Mature"], loc='upper left')

        graph.set_xlim(xmin=-days, xmax=0)
        graph.set_ylim(ymax=max(max(a for a in args[1::2])) + 10)

        return fig

    def timeSpent(self, days=30):
        self.calcStats()
        fig = Figure(figsize=(self.width, self.height), dpi=self.dpi)
        times = self.stats['dayTimes']
        self.addMissing(times, -days, 0)
        times = self.unzip([(day,y) for (day,y) in times.items()
                            if day + days >= 0])
        graph = fig.add_subplot(111)
        self.filledGraph(graph, days, reviewTimeC, *times)
        graph.set_xlim(xmin=-days, xmax=0)
        graph.set_ylim(ymax=max(a for a in times[1]) + 0.1)
        return fig

    def cumulativeDue(self, days=30):
        self.calcStats()
        fig = Figure(figsize=(self.width, self.height), dpi=self.dpi)
        graph = fig.add_subplot(111)
        dl = [x for x in self.stats['next'].items() if x[0] <= days]
        (x, y) = self.unzip(dl)
        count=0
        y = list(y)
        for i in range(len(x)):
            count = count + y[i]
            if i == 0:
                continue
            y[i] = count
            if x[i] > days:
                break
        x = list(x); x.append(99999)
        y.append(count)
        self.filledGraph(graph, days, dueCumulC, x, y)
        graph.set_xlim(xmin=self.stats['lowestInDay'], xmax=days)
        graph.set_ylim(ymax=graph.get_ylim()[1]+10)
        return fig

    def intervalPeriod(self, days=30):
        self.calcStats()
        fig = Figure(figsize=(self.width, self.height), dpi=self.dpi)
        ints = self.stats['days']
        self.addMissing(ints, 0, days)
        intervals = self.unzip(ints.items(), limit=days)
        graph = fig.add_subplot(111)
        self.filledGraph(graph, days, intervC, *intervals)
        graph.set_xlim(xmin=0, xmax=days)
        return fig

    def addedRecently(self, numdays=30, attr='created'):
        self.calcStats()
        days = {}
        fig = Figure(figsize=(self.width, self.height), dpi=self.dpi)
        limit = self.endOfDay - (numdays + 1) * 86400
        res = self.deck.s.column0("select %s from cards where %s >= %f" %
                                  (attr, attr, limit))
        for r in res:
            d = int((r - self.endOfDay) / 86400.0)
            days[d] = days.get(d, 0) + 1
        self.addMissing(days, -numdays, 0)
        graph = fig.add_subplot(111)
        intervals = self.unzip(days.items())
        if attr == 'created':
            colour = addedC
        else:
            colour = firstC
        self.filledGraph(graph, numdays, colour, *intervals)
        graph.set_xlim(xmin=-numdays, xmax=0)
        return fig

    def addMissing(self, dic, min, max):
        for i in range(min, max+1):
            if not i in dic:
                dic[i] = 0

    def unzip(self, tuples, fillFix=True, limit=None, reverseLimit=False):
        tuples.sort(cmp=lambda x,y: cmp(x[0], y[0]))
        if limit:
            if reverseLimit:
                tuples = tuples[-limit - 1:]
            else:
                tuples = tuples[:limit + 1]

        new = zip(*tuples)
        return new

    def filledGraph(self, graph, days, colours=["b"], *args):
        if isinstance(colours, str):
            colours = [colours]
        thick = True
        for triplet in [(args[n], args[n + 1], colours[n / 2]) for n in range(0, len(args), 2)]:
            x = list(triplet[0])
            y = list(triplet[1])
            c = triplet[2]
            lowest = 99999
            highest = -lowest
            for i in range(len(x)):
                if x[i] < lowest:
                    lowest = x[i]
                if x[i] > highest:
                    highest = x[i]
            # ensure the filled area reaches the bottom
            x.insert(0, lowest - 1)
            y.insert(0, 0)
            x.append(highest + 1)
            y.append(0)
            # plot
            lw = 0
            if days < 180:
                lw += 1
            if thick:
                lw += 1
            if days > 360:
                lw = 0
            graph.fill(x, y, c, lw = lw)
            thick = False

        graph.grid(True)
        graph.set_ylim(ymin=0, ymax=max(2, graph.get_ylim()[1]))

    def easeBars(self):
        fig = Figure(figsize=(3, 3), dpi=self.dpi)
        graph = fig.add_subplot(111)
        types = ("new", "young", "mature")
        enum = 5
        offset = 0
        arrsize = 16
        arr = [0] * arrsize
        n = 0
        colours = [easesNewC, easesYoungC, easesMatureC]
        bars = []
        gs = anki.stats.globalStats(self.deck)
        for type in types:
            total = (getattr(gs, type + "Ease0") +
                     getattr(gs, type + "Ease1") +
                     getattr(gs, type + "Ease2") +
                     getattr(gs, type + "Ease3") +
                     getattr(gs, type + "Ease4"))
            setattr(gs, type + "Ease1", getattr(gs, type + "Ease0") +
                    getattr(gs, type + "Ease1"))
            setattr(gs, type + "Ease0", -1)
            for e in range(1, enum):
                try:
                    arr[e+offset] = (getattr(gs, type + "Ease%d" % e)
                                     / float(total)) * 100 + 1
                except ZeroDivisionError:
                    arr[e+offset] = 0
            bars.append(graph.bar(range(arrsize), arr, width=1.0,
                                  color=colours[n], align='center'))
            arr = [0] * arrsize
            offset += 5
            n += 1
        x = ([""] + [str(n) for n in range(1, enum)]) * 3
        graph.legend([p[0] for p in bars], ("New",
                                            "Young",
                                            "Mature"),
                     'upper left')
        graph.set_ylim(ymax=100)
        graph.set_xlim(xmax=15)
        graph.set_xticks(range(arrsize))
        graph.set_xticklabels(x)
        graph.grid(True)
        return fig
 75  
anki/history.py
@@ -0,0 +1,75 @@
# -*- coding: utf-8 -*-
# Copyright: Damien Elmes <anki@ichi2.net>
# License: GNU GPL, version 3 or later; http://www.gnu.org/copyleft/gpl.html

"""\
History - keeping a record of all reviews
==========================================
If users run 'check db', duplicate records will be inserted into the DB - I
really should have used the time stamp as the key. You can remove them by
keeping the lowest id for any given timestamp.
"""

__docformat__ = 'restructuredtext'

import time
from anki.db import *

reviewHistoryTable = Table(
    'reviewHistory', metadata,
    Column('cardId', Integer, nullable=False),
    Column('time', Float, nullable=False, default=time.time),
    Column('lastInterval', Float, nullable=False),
    Column('nextInterval', Float, nullable=False),
    Column('ease', Integer, nullable=False),
    Column('delay', Float, nullable=False),
    Column('lastFactor', Float, nullable=False),
    Column('nextFactor', Float, nullable=False),
    Column('reps', Float, nullable=False),
    Column('thinkingTime', Float, nullable=False),
    Column('yesCount', Float, nullable=False),
    Column('noCount', Float, nullable=False),
    PrimaryKeyConstraint("cardId", "time"))

class CardHistoryEntry(object):
    "Create after rescheduling card."

    def __init__(self, card=None, ease=None, delay=None):
        if not card:
            return
        self.cardId = card.id
        self.lastInterval = card.lastInterval
        self.nextInterval = card.interval
        self.lastFactor = card.lastFactor
        self.nextFactor = card.factor
        self.reps = card.reps
        self.yesCount = card.yesCount
        self.noCount = card.noCount
        self.ease = ease
        self.delay = delay
        self.thinkingTime = card.thinkingTime()

    def writeSQL(self, s):
        s.statement("""
insert into reviewHistory
(cardId, lastInterval, nextInterval, ease, delay, lastFactor,
nextFactor, reps, thinkingTime, yesCount, noCount, time)
values (
:cardId, :lastInterval, :nextInterval, :ease, :delay,
:lastFactor, :nextFactor, :reps, :thinkingTime, :yesCount, :noCount,
:time)""",
                    cardId=self.cardId,
                    lastInterval=self.lastInterval,
                    nextInterval=self.nextInterval,
                    ease=self.ease,
                    delay=self.delay,
                    lastFactor=self.lastFactor,
                    nextFactor=self.nextFactor,
                    reps=self.reps,
                    thinkingTime=self.thinkingTime,
                    yesCount=self.yesCount,
                    noCount=self.noCount,
                    time=time.time())

mapper(CardHistoryEntry, reviewHistoryTable)
 62  
anki/hooks.py
@@ -0,0 +1,62 @@
# -*- coding: utf-8 -*-
# Copyright: Damien Elmes <anki@ichi2.net>
# License: GNU GPL, version 3 or later; http://www.gnu.org/copyleft/gpl.html

"""\
Hooks - hook management and tools for extending Anki
==============================================================================
To find available hooks, grep for runHook in the source code.
Instrumenting allows you to modify functions that don't have hooks available.
If you call wrap() with pos='around', the original function will not be called
automatically but can be called with _old().
"""

# Hooks
##############################################################################

_hooks = {}

def runHook(hook, *args):
    "Run all functions on hook."
    hook = _hooks.get(hook, None)
    if hook:
        for func in hook:
            func(*args)

def runFilter(hook, arg, *args):
    hook = _hooks.get(hook, None)
    if hook:
        for func in hook:
            arg = func(arg, *args)
    return arg

def addHook(hook, func):
    "Add a function to hook. Ignore if already on hook."
    if not _hooks.get(hook, None):
        _hooks[hook] = []
    if func not in _hooks[hook]:
        _hooks[hook].append(func)

def removeHook(hook, func):
    "Remove a function if is on hook."
    hook = _hooks.get(hook, [])
    if func in hook:
        hook.remove(func)

# Instrumenting
##############################################################################

def wrap(old, new, pos="after"):
    "Override an existing function."
    def repl(*args, **kwargs):
        if pos == "after":
            old(*args, **kwargs)
            return new(*args, **kwargs)
        elif pos == "before":
            new(*args, **kwargs)
            return old(*args, **kwargs)
        else:
            return new(_old=old, *args, **kwargs)
    return repl
 283  
anki/importing/__init__.py
@@ -0,0 +1,283 @@
# -*- coding: utf-8 -*-
# Copyright: Damien Elmes <anki@ichi2.net>
# License: GNU GPL, version 3 or later; http://www.gnu.org/copyleft/gpl.html

"""\
Importing support
==============================
To import, a mapping is created of the form: [FieldModel, ...]. The mapping
may be extended by calling code if a file has more fields. To ignore a
particular FieldModel, replace it with None. A special number 0 donates a tags
field. The same field model should not occur more than once."""

__docformat__ = 'restructuredtext'

import time
from anki.cards import cardsTable
from anki.facts import factsTable, fieldsTable
from anki.lang import _
from anki.utils import genID, canonifyTags
from anki.errors import *
from anki.utils import canonifyTags
from anki.deck import NEW_CARDS_RANDOM

# Base importer
##########################################################################

class ForeignCard(object):
    "An temporary object storing fields and attributes."
    def __init__(self):
        self.fields = []
        self.tags = u""

class Importer(object):

    needMapper = True
    tagDuplicates = False
    multipleCardsAllowed = True
    needDelimiter = False

    def __init__(self, deck, file):
        self.file = file
        self._model = deck.currentModel
        self._mapping = None
        self.log = []
        self.deck = deck
        self.total = 0
        self.tagsToAdd = u""

    def doImport(self):
        "Import."
        random = self.deck.newCardOrder == NEW_CARDS_RANDOM
        num = 7
        if random:
            num += 1
        self.deck.startProgress(num)
        self.deck.updateProgress(_("Importing..."))
        c = self.foreignCards()
        if self.importCards(c):
            self.deck.updateProgress()
            self.deck.updateCardTags(self.cardIds)
            self.deck.updateProgress()
            self.deck.updatePriorities(self.cardIds)
            if random:
                self.deck.updateProgress()
                self.deck.randomizeNewCards(self.cardIds)
        self.deck.finishProgress()
        if c:
            self.deck.setModified()

    def fields(self):
        "The number of fields."
        return 0

    def foreignCards(self):
        "Return a list of foreign cards for importing."
        assert 0

    def resetMapping(self):
        "Reset mapping to default."
        numFields = self.fields()
        m = [f for f in self.model.fieldModels]
        m.append(0)
        rem = max(0, self.fields() - len(m))
        m += [None] * rem
        del m[numFields:]
        self._mapping = m

    def getMapping(self):
        if not self._mapping:
            self.resetMapping()
        return self._mapping

    def setMapping(self, mapping):
        self._mapping = mapping

    mapping = property(getMapping, setMapping)

    def getModel(self):
        return self._model

    def setModel(self, model):
        self._model = model
        # update the mapping for the new model
        self._mapping = None
        self.getMapping()

    model = property(getModel, setModel)

    def importCards(self, cards):
        "Convert each card into a fact, apply attributes and add to deck."
        # ensure all unique and required fields are mapped
        for fm in self.model.fieldModels:
            if fm.required or fm.unique:
                if fm not in self.mapping:
                    raise ImportFormatError(
                        type="missingRequiredUnique",
                        info=_("Missing required/unique field '%(field)s'") %
                        {'field': fm.name})
        active = 0
        for cm in self.model.cardModels:
            if cm.active: active += 1
        if active > 1 and not self.multipleCardsAllowed:
            raise ImportFormatError(type="tooManyCards",
                info=_("""\
The current importer only supports a single active card template. Please disable\
 all but one card template."""))
        # strip invalid cards
        cards = self.stripInvalid(cards)
        cards = self.stripOrTagDupes(cards)
        self.cardIds = []
        if cards:
            self.addCards(cards)
        return cards

    def addCards(self, cards):
        "Add facts in bulk from foreign cards."
        # map tags field to attr
        try:
            idx = self.mapping.index(0)
            for c in cards:
                c.tags += " " + c.fields[idx]
        except ValueError:
            pass
        # add facts
        self.deck.updateProgress()
        factIds = [genID() for n in range(len(cards))]
        def fudgeCreated(d, tmp=[]):
            if not tmp:
                tmp.append(time.time())
            else:
                tmp[0] += 0.00001
            d['created'] = tmp[0]
            return d
        self.deck.s.execute(factsTable.insert(),
            [fudgeCreated({'modelId': self.model.id,
              'tags': canonifyTags(self.tagsToAdd + " " + cards[n].tags),
              'id': factIds[n]}) for n in range(len(cards))])
        self.deck.factCount += len(factIds)
        self.deck.s.execute("""
delete from factsDeleted
where factId in (%s)""" % ",".join([str(s) for s in factIds]))
        # add all the fields
        self.deck.updateProgress()
        for fm in self.model.fieldModels:
            try:
                index = self.mapping.index(fm)
            except ValueError:
                index = None
            data = [{'factId': factIds[m],
                     'fieldModelId': fm.id,
                     'ordinal': fm.ordinal,
                     'id': genID(),
                     'value': (index is not None and
                               cards[m].fields[index] or u"")}
                    for m in range(len(cards))]
            self.deck.s.execute(fieldsTable.insert(),
                                data)
        # and cards
        self.deck.updateProgress()
        now = time.time()
        active = 0
        for cm in self.model.cardModels:
            self._now = now
            if cm.active:
                active += 1
                data = [self.addMeta({
                    'id': genID(),
                    'factId': factIds[m],
                    'cardModelId': cm.id,
                    'ordinal': cm.ordinal,
                    'question': u"",
                    'answer': u"",
                    'type': 2},cards[m]) for m in range(len(cards))]
                self.deck.s.execute(cardsTable.insert(),
                                    data)
        self.deck.updateProgress()
        self.deck.updateCardsFromFactIds(factIds)
        self.deck.cardCount += len(cards) * active
        self.total = len(factIds)

    def addMeta(self, data, card):
        "Add any scheduling metadata to cards"
        if 'fields' in card.__dict__:
            del card.fields
        t = self._now + data['ordinal']
        data['created'] = t
        data['modified'] = t
        data['due'] = t
        self._now += .00001
        data.update(card.__dict__)
        data['tags'] = u""
        self.cardIds.append(data['id'])
        data['combinedDue'] = data['due']
        data['isDue'] = data['combinedDue'] < time.time()
        return data

    def stripInvalid(self, cards):
        return [c for c in cards if self.cardIsValid(c)]

    def cardIsValid(self, card):
        fieldNum = len(card.fields)
        for n in range(len(self.mapping)):
            if self.mapping[n] and self.mapping[n].required:
                if fieldNum <= n or not card.fields[n].strip():
                    self.log.append("Fact is missing field '%s': %s" %
                                    (self.mapping[n].name,
                                     ", ".join(card.fields)))
                    return False
        return True

    def stripOrTagDupes(self, cards):
        # build a cache of items
        self.uniqueCache = {}
        for field in self.mapping:
            if field and field.unique:
                self.uniqueCache[field.id] = self.getUniqueCache(field)
        return [c for c in cards if self.cardIsUnique(c)]

    def getUniqueCache(self, field):
        "Return a dict with all fields, to test for uniqueness."
        return dict(self.deck.s.all(
            "select value, 1 from fields where fieldModelId = :fmid",
            fmid=field.id))

    def cardIsUnique(self, card):
        fieldsAsTags = []
        for n in range(len(self.mapping)):
            if self.mapping[n] and self.mapping[n].unique:
                if card.fields[n] in self.uniqueCache[self.mapping[n].id]:
                    if not self.tagDuplicates:
                        self.log.append("Fact has duplicate '%s': %s" %
                                        (self.mapping[n].name,
                                         ", ".join(card.fields)))
                        return False
                    fieldsAsTags.append(self.mapping[n].name.replace(" ", "-"))
                else:
                    self.uniqueCache[self.mapping[n].id][card.fields[n]] = 1
        if fieldsAsTags:
            card.tags += u" Duplicate:" + (
                "+".join(fieldsAsTags))
            card.tags = canonifyTags(card.tags)
        return True

# Export modules
##########################################################################

from anki.importing.csvfile import TextImporter
from anki.importing.anki10 import Anki10Importer
from anki.importing.mnemosyne10 import Mnemosyne10Importer
from anki.importing.wcu import WCUImporter
from anki.importing.supermemo_xml import SupermemoXmlImporter
from anki.importing.dingsbums import DingsBumsImporter

Importers = [
    (_("Text separated by tabs or semicolons (*)"), TextImporter),
    (_("Anki Deck (*.anki)"), Anki10Importer),
    (_("Mnemosyne Deck (*.mem)"), Mnemosyne10Importer),
    (_("CueCard Deck (*.wcu)"), WCUImporter),
    (_("Supermemo XML export (*.xml)"), SupermemoXmlImporter),
    # Hack: should be "DingsBums?!" but QT appears to take offence at the punctuation
    (_("DingsBums Deck (*.xml)"), DingsBumsImporter),
    ]
 89  
anki/importing/anki10.py
@@ -0,0 +1,89 @@
# -*- coding: utf-8 -*-
# Copyright: Damien Elmes <anki@ichi2.net>
# License: GNU GPL, version 3 or later; http://www.gnu.org/copyleft/gpl.html

"""\
Importing Anki 0.9+ decks
==========================
"""
__docformat__ = 'restructuredtext'

from anki import DeckStorage
from anki.importing import Importer
from anki.sync import SyncClient, SyncServer, copyLocalMedia
from anki.lang import _
from anki.utils import ids2str
from anki.deck import NEW_CARDS_RANDOM
import time

class Anki10Importer(Importer):

    needMapper = False

    def doImport(self):
        "Import."
        random = self.deck.newCardOrder == NEW_CARDS_RANDOM
        num = 4
        if random:
            num += 1
        self.deck.startProgress(num)
        self.deck.updateProgress(_("Importing..."))
        src = DeckStorage.Deck(self.file, backup=False)
        client = SyncClient(self.deck)
        server = SyncServer(src)
        client.setServer(server)
        # if there is a conflict, sync local -> src
        client.localTime = self.deck.modified
        client.remoteTime = 0
        src.s.execute("update facts set modified = 1")
        src.s.execute("update models set modified = 1")
        src.s.execute("update cards set modified = 1")
        src.s.execute("update media set created = 1")
        self.deck.s.flush()
        # set up a custom change list and sync
        lsum = client.summary(0)
        self._clearDeleted(lsum)
        rsum = server.summary(0)
        self._clearDeleted(rsum)
        payload = client.genPayload((lsum, rsum))
        # no need to add anything to src
        payload['added-models'] = []
        payload['added-cards'] = []
        payload['added-facts'] = {'facts': [], 'fields': []}
        assert payload['deleted-facts'] == []
        assert payload['deleted-cards'] == []
        assert payload['deleted-models'] == []
        self.deck.updateProgress()
        res = server.applyPayload(payload)
        self.deck.updateProgress()
        client.applyPayloadReply(res)
        copyLocalMedia(server.deck, client.deck)
        # add tags
        self.deck.updateProgress()
        fids = [f[0] for f in res['added-facts']['facts']]
        self.deck.addTags(fids, self.tagsToAdd)
        # mark import material as newly added
        self.deck.s.statement(
            "update cards set modified = :t where id in %s" %
            ids2str([x[0] for x in res['added-cards']]), t=time.time())
        self.deck.s.statement(
            "update facts set modified = :t where id in %s" %
            ids2str([x[0] for x in res['added-facts']['facts']]), t=time.time())
        self.deck.s.statement(
            "update models set modified = :t where id in %s" %
            ids2str([x['id'] for x in res['added-models']]), t=time.time())
        # update total and refresh
        self.total = len(res['added-facts']['facts'])
        src.s.rollback()
        src.engine.dispose()
        # randomize?
        if random:
            self.deck.updateProgress()
            self.deck.randomizeNewCards([x[0] for x in res['added-cards']])
        self.deck.flushMod()
        self.deck.finishProgress()

    def _clearDeleted(self, sum):
        sum['delcards'] = []
        sum['delfacts'] = []
        sum['delmodels'] = []
 132  
anki/importing/csvfile.py
@@ -0,0 +1,132 @@
# -*- coding: utf-8 -*-
# Copyright: Damien Elmes <anki@ichi2.net>
# License: GNU GPL, version 3 or later; http://www.gnu.org/copyleft/gpl.html

"""\
Importing CSV/TSV files
========================
"""
__docformat__ = 'restructuredtext'

import codecs, csv, re
from anki.importing import Importer, ForeignCard
from anki.lang import _
from anki.errors import *
from anki.utils import tidyHTML

class TextImporter(Importer):

    needDelimiter = True
    patterns = ("\t", ";")

    def __init__(self, *args):
        Importer.__init__(self, *args)
        self.lines = None
        self.fileobj = None
        self.delimiter = None

    def foreignCards(self):
        self.sniff()
        # process all lines
        log = []
        cards = []
        lineNum = 0
        ignored = 0
        if self.delimiter:
            reader = csv.reader(self.data, delimiter=self.delimiter)
        else:
            reader = csv.reader(self.data, self.dialect)
        for row in reader:
            try:
                row = [unicode(x, "utf-8") for x in row]
            except UnicodeDecodeError, e:
                raise ImportFormatError(
                    type="encodingError",
                    info=_("The file was not in UTF8 format."))
            if len(row) != self.numFields:
                log.append(_(
                    "'%(row)s' had %(num1)d fields, "
                    "expected %(num2)d") % {
                    "row": u" ".join(row),
                    "num1": len(row),
                    "num2": self.numFields,
                    })
                ignored += 1
                continue
            card = self.cardFromFields(row)
            cards.append(card)
        self.log = log
        self.ignored = ignored
        self.fileobj.close()
        return cards

    def sniff(self):
        "Parse the top line and determine the pattern and number of fields."
        # load & look for the right pattern
        self.cacheFile()

    def cacheFile(self):
        "Read file into self.lines if not already there."
        if not self.fileobj:
            self.openFile()

    def openFile(self):
        self.dialect = None
        self.fileobj = open(self.file, "rbU")
        self.data = self.fileobj.read()
        self.data = re.sub("^ *#.*", "", self.data)
        self.data = [x for x in self.data.split("\n") if x]
        if self.data:
            self.updateDelimiter()
        if not self.dialect and not self.delimiter:
            raise ImportFormatError(
                type="encodingError",
                info=_("Couldn't determine format of file."))

    def updateDelimiter(self):
        def err():
            raise ImportFormatError(
                type="encodingError",
                info=_("File is not encoded in UTF-8."))
        self.dialect = None
        sniffer = csv.Sniffer()
        delims = [',', '\t', ';', ':']
        if not self.delimiter:
            try:
                self.dialect = sniffer.sniff("\n".join(self.data[:10]),
                                             delims)
            except:
                try:
                    self.dialect = sniffer.sniff(self.data[0], delims)
                except:
                    pass
        if self.dialect:
            try:
                reader = csv.reader(self.data, self.dialect)
            except:
                err()
        else:
            if not self.delimiter:
                if "\t" in self.data[0]:
                    self.delimiter = "\t"
                elif ";" in self.data[0]:
                    self.delimiter = ";"
                elif "," in self.data[0]:
                    self.delimiter = ","
                else:
                    self.delimiter = " "
            reader = csv.reader(self.data, delimiter=self.delimiter)
        try:
            self.numFields = len(reader.next())
        except:
            err()

    def fields(self):
        "Number of fields."
        self.sniff()
        return self.numFields

    def cardFromFields(self, fields):
        card = ForeignCard()
        card.fields.extend([x.strip() for x in fields])
        return card
 224  
anki/importing/dingsbums.py
@@ -0,0 +1,224 @@
# -*- coding: utf-8 -*-
# Copyright: rick@vanosten.net
# License: GNU GPL, version 3 or later; http://www.gnu.org/copyleft/gpl.html

"""\
Importing DingsBums?! decks (see dingsbums.vanosten.net)
========================================================
GENERAL:
* DingsBums?! files are xml with relational content.
* DingsBums?!'s data format is more relational than Anki's. Therefore some of the relations are denormalized.
* A stack in DingsBums?! is a deck in Anki
* An entry type in DingsBums?! is a model in Anki
* An entry type attribute in DingsBums?! is a field in Anki
* An entry type attribute item in DingsBums?! does not exist in Anki. It is just the contents of a field denormalized.
* There is not concept of units and categories in Anki.
* An entry in DingsBums?! is basically a fact in Anki
* There are no cards in DingsBums?!
* There is a special plugin in Anki for Pinyin. Therefore syllable settings from DingsBums?! are ignored.
* The locale settings in DingsBums?! have never been active and are therefore ignored.
* All statistics will get lost - i.e. no historic informaiton about progress will be migrated to Anki.
* The DingsBums?! stack needs to end with *.xml in order to be recognizable in Anki import.
* The learning levels from DingsBums?! are not taken into account because they do not really match spaced repetition.
DESIGN OF MAPPING FROM DingsBums?! TO Anki
*
* The contents of units and categories are transferred as tags to Anki: unit/category label + "_" + unit/category name.
* If unit/category name has space, then it is replaced by "_"
* The fields "base", "target", explanation", example", "pronounciation" and "relation" are created as fields in Anki
* The fields are only created and used in Anki, if they were visible in DingsBums?!, i.e. < 3:
VISIBILITY_ALWAYS = 0;
VISIBILITY_QUERY = 1;
VISIBILITY_SOLUTION = 2;
VISIBILITY_NEVER = 3;
* The name of the fields in Anki is taken from the labels defined in the stack properties
* The description field of Anki is not used/displayed. Therefore there is not much sense to transfer the contents of title, author, notes, copyright and license.
* The visibility options in DingsBums?! are used as hints to make cards in Anki:
    + Two card templates are made for each model and then applied to each fact when importing.
    + "Forward": Base -> "Question", target -> "Answer"; if "always", then part of question; if "solution" or "part of query" then part of answer
    + "Reverse": Target -> "Answer", base -> "Question"
    + Unit and category are not shown, as they are tags and there is no possibility to distinguish between visibility settings in this case.
CHANGES MADE TO LIBANKI:
* Added libanki/anki/import/dingsbums.py
* Added DingsBumsImporter to importers at end of file libanki/anki/import/__init__.py
* Added libanki/tests/importing/dingsbums.xml
* Added method test_dingsbums() to libanki/anki/tests/test_importing.py
"""

from anki.importing import Importer
from anki import DeckStorage
from anki.facts import Fact
from anki.models import FieldModel
from anki.models import CardModel
from anki.models import Model
from anki.lang import _

from xml.sax import make_parser
from xml.sax.handler import ContentHandler
import sys

class DingsBumsHandler(ContentHandler):

    def __init__(self, deck):
        self.eid = "0"
        self.attributeItems = {}
        self.unitCategories = {}
        self.attributes = {}
        self.currentContent = ""
        self.labels = {}
        self.labels["pro"] = u"Pronunciation" # the user cannot change this label and therefore not in xml-file
        self.labels["rel"] = u"Relation"
        self.visibility = {}
        self.models = {}
        self.typeAttributes = {} # mapping of entry type and attribute name (e.g. "ET8_A1", "ET8_A2", ...)
        self.deck = deck
        self.f = None # the current fact
        self.countFacts = 0

    def startElement(self, name, attrs):
        """Implements SAX interface"""
        if name in ["etai", "unit", "category"]:
            self.eid = attrs["eid"]
        elif "eta" == name:
            self.attributes[attrs["eid"]] = attrs["n"]
        elif "entrytype" == name:
            self.createModel(attrs)
        elif "e" == name:
            self.createFact(attrs)

    def endElement(self, name):
        """Implements SAX interface"""
        if "vocabulary" == name:
            self.deck.updateProgress()
        elif name.endswith("label"):
            self.labels[name.replace("label", "")] = self.currentContent
        elif name.startswith("vis"):
            self.visibility[name.replace("vis", "")] = self.currentContent
        elif "etai" == name:
            self.attributeItems[self.eid] = self.currentContent
        elif "etattributes" == name:
            self.deck.updateProgress()
        elif "entrytypes" == name:
            self.deck.updateProgress()
        elif "name" == name:
            self.unitCategories[self.eid] = self.prepareTag(self.currentContent)
        elif "units" == name:
            self.deck.updateProgress()
        elif "categories" == name:
            self.deck.updateProgress()
        elif "entries" == name:
            self.deck.updateProgress()
        elif "e" == name:
            self.deck.addFact(self.f)
            self.countFacts += 1
        # there is a not logical mapping between the tags for fields and names in VocabInfo
        # See net.vanosten.dings.consts.Constants.XML_*
        elif "o" == name:
            self.f.__setitem__(self.labels["b"], self.currentContent)
        elif "d" == name:
            self.f.__setitem__(self.labels["t"], self.currentContent)
        elif "ep" == name:
            self.f.__setitem__(self.labels["exp"], self.currentContent)
        elif "ea" == name:
            self.f.__setitem__(self.labels["ex"], self.currentContent)
        elif "p" == name:
            self.f.__setitem__(self.labels["pro"], self.currentContent)
        elif "r" == name:
            self.f.__setitem__(self.labels["rel"], self.currentContent)

    def characters(self, content):
        """Implements SAX interface"""
        self.currentContent = content.strip()

    def createModel(self, attrs):
        """Makes a new Anki (fact) model from an entry type.
        The card models are made each time from scratch in order that evt. model specific fields (attributes) can make part."""
        m = Model(attrs["n"])
        # field model for standard fields
        m.addFieldModel(FieldModel(self.labels["b"], True, False)) #there is no uniqueness check in DingsBums?!
        m.addFieldModel(FieldModel(self.labels["t"], True, False))
        for aField in ["exp", "ex", "pro", "rel"]:
            if self.visibility[aField] in "012":
                m.addFieldModel(FieldModel(self.labels[aField], False, False))
        # field models for attributes
        for attr in ["a1", "a2" "a3", "a4"]:
            if attr in attrs.keys():
                m.addFieldModel(FieldModel(self.attributes[attrs[attr]], False, False))
                self.typeAttributes[attrs["eid"] + "_" + attr] = self.attributes[attrs[attr]]

        # card model for front
        frontStrings = ["%(" + self.labels["b"] + ")s"]
        backStrings = ["%(" + self.labels["t"] + ")s"]
        for aField in ["exp", "ex", "pro", "rel"]:
            if self.visibility[aField] in "01":
                frontStrings.append("%(" + self.labels[aField] + ")s")
            if self.visibility[aField] in "02":
                backStrings.append("%(" + self.labels[aField] + ")s")
        m.addCardModel(CardModel(u'Forward', "<br>".join(frontStrings), "<br>".join(backStrings)))
        # card model for back
        m.addCardModel(CardModel(u'Reverse', unicode("%(" + self.labels["t"] + ")s"), unicode("%(" + self.labels["b"] + ")s")))
        # tags is just the name without spaces
        m.tags = self.prepareTag(m.name)

        # link
        self.models[attrs["eid"]] = m
        self.deck.addModel(m)

    def createFact(self, attrs):
        """Makes a new Anki fact from an entry."""
        model = self.models[attrs["et"]]
        self.f = Fact(model)
        # process attributes
        for attr in ["a1", "a2" "a3", "a4"]:
            if attr in attrs.keys():
                self.f.__setitem__(self.typeAttributes[attrs["et"] + "_" + attr], self.attributeItems[attrs[attr]])
        # process tags. Unit, Category plus entry type name
        tagString = unicode(self.unitCategories[attrs["u"]] + " " + self.unitCategories[attrs["c"]] + " " + model.tags)
        self.f.tags = tagString

    def prepareTag(self, stringWithSpace):
        parts = stringWithSpace.split()
        return "_".join(parts)

class DingsBumsImporter(Importer):
    needMapper = False # needs to overwrite default in Importer - otherwise Mapping dialog is shown in GUI

    def __init__(self, deck, file):
        Importer.__init__(self, deck, file)
        self.deck = deck
        self.file = file
        self.total = 0

    def doImport(self):
        """Totally overrides the method in Importer"""
        num = 7 # the number of updates to progress bar (see references in method endElement in DingsBumsHandler
        self.deck.startProgress(num)
        self.deck.updateProgress(_("Importing..."))

        # parse the DingsBums?! xml file
        handler = DingsBumsHandler(self.deck)
        saxparser = make_parser(  )
        saxparser.setContentHandler(handler)
        saxparser.parse(self.file)
        self.total = handler.countFacts
        self.deck.finishProgress()
        self.deck.setModified()

if __name__ == '__main__':
    print "Starting ..."

    # for testing you can start it standalone. Use an argument to specify the file to import
    filename = str(sys.argv[1])

    mydeck = DeckStorage.Deck()
    i = DingsBumsImporter(mydeck, filename)
    i.doImport()
    assert 7 == i.total
    mydeck.s.close()

    print "... Finished"
    sys.exit(1)
 78  
anki/importing/mnemosyne10.py
@@ -0,0 +1,78 @@
# -*- coding: utf-8 -*-
# Copyright: Damien Elmes <anki@ichi2.net>
# License: GNU GPL, version 3 or later; http://www.gnu.org/copyleft/gpl.html

"""\
Importing Mnemosyne 1.0 decks
==============================
"""
__docformat__ = 'restructuredtext'

import sys, pickle, time, re
from anki.importing import Importer, ForeignCard
from anki.errors import *

class Mnemosyne10Importer(Importer):

    multipleCardsAllowed = False

    def foreignCards(self):
        # empty objects so we can load the native mnemosyne file
        class MnemosyneModule(object):
            class StartTime:
                pass
            class Category:
                pass
            class Item:
                pass
        for module in ('mnemosyne',
                       'mnemosyne.core',
                       'mnemosyne.core.mnemosyne_core'):
            sys.modules[module] = MnemosyneModule()
        try:
            file = open(self.file, "rb")
        except (IOError, OSError), e:
            raise ImportFormatError(type="systemError",
                                    info=str(e))
        header = file.readline().strip()
        # read the structure in
        try:
            struct = pickle.load(file)
        except (EOFError, KeyError):
            raise ImportFormatError(type="invalidFile")
        startTime = struct[0].time
        daysPassed = (time.time() - startTime) / 86400.0
        # gather cards
        cards = []
        for item in struct[2]:
            card = ForeignCard()
            card.fields.append(self.fudgeText(item.q))
            card.fields.append(self.fudgeText(item.a))
            # scheduling data
            card.interval = item.next_rep - item.last_rep
            secDelta = (item.next_rep - daysPassed) * 86400.0
            card.due = card.nextTime = time.time() + secDelta
            card.factor = item.easiness
            # for some reason mnemosyne starts cards off on 1 instead of 0
            card.successive = max(
                (item.acq_reps_since_lapse + item.ret_reps_since_lapse -1), 0)
            card.yesCount = max((item.acq_reps + item.ret_reps) - 1, 0)
            card.noCount = item.lapses
            card.reps = card.yesCount + card.noCount
            if item.cat.name != u"<default>":
                card.tags = item.cat.name.replace(" ", "_")
            if card.reps:
                card.type = 1
            cards.append(card)
        return cards

    def fields(self):
        return 2

    def fudgeText(self, text):
        text = text.replace("\n", "<br>")
        text = re.sub('<sound src="(.*?)">', '[sound:\\1]', text)
        text = re.sub('<(/?latex)>', '[\\1]', text)
        text = re.sub('<(/?\$)>', '[\\1]', text)
        text = re.sub('<(/?\$\$)>', '[\\1]', text)
        return text
 491  
anki/importing/supermemo_xml.py
Large diffs are not rendered by default.

 57  
anki/importing/wcu.py
@@ -0,0 +1,57 @@
# -*- coding: utf-8 -*-
# Author Chris Aakre <caaakre@gmail.com>
# License: GNU GPL, version 3 or later; http://www.gnu.org/copyleft/gpl.html

"""\
Importing WCU files
====================
"""
__docformat__ = 'restructuredtext'

import codecs
from anki.importing import Importer, ForeignCard
from anki.lang import _
from anki.errors import *

class WCUImporter(Importer):
    def __init__(self, *args):
        Importer.__init__(self, *args)
        self.lines = None
        self.numFields=int(2)

    def foreignCards(self):
        from xml.dom import minidom, Node
        cards = []
        f = None
        try:
            f = codecs.open(self.file, encoding="utf-8")
        except:
            raise ImportFormatError(type="encodingError", info=_("The file was not in UTF8 format."))
        f.close()
        def wcuwalk(parent, cards, level=0):
                for node in parent.childNodes:
                    if node.nodeType == Node.ELEMENT_NODE:
                        myCard=ForeignCard()
                        if node.attributes.has_key("QuestionPicture"):
                            question = [unicode('<img src="'+node.attributes.get("QuestionPicture").nodeValue+'"><br/>'+node.attributes.get("Question").nodeValue)]
                        else:
                            question = [unicode(node.attributes.get("Question").nodeValue)]
                        if node.attributes.has_key("AnswerPicture"):
                            answer = [unicode('<img src="'+node.attributes.get("AnswerPicture").nodeValue+'"><br/>'+node.attributes.get("Answer").nodeValue)]
                        else:
                            answer = [unicode(node.attributes.get("Answer").nodeValue)]
                        myCard.fields.extend(question)
                        myCard.fields.extend(answer)
                        cards.append(myCard)
                        wcuwalk(node, cards, level+1)

        def importwcu(file):
            wcuwalk(minidom.parse(file).documentElement,cards)
        importwcu(self.file)
        return cards

    def fields(self):
        return self.numFields

    def setNumFields(self):
        self.numFields = int(2)
 59  
anki/lang.py
@@ -0,0 +1,59 @@
# -*- coding: utf-8 -*-
# Copyright: Damien Elmes <anki@ichi2.net>
# License: GNU GPL, version 3 or later; http://www.gnu.org/copyleft/gpl.html

"""\
Internationalisation
=====================
"""
__docformat__ = 'restructuredtext'

import os, sys
import gettext
import threading

threadLocal = threading.local()

# global defaults
currentLang = None
currentTranslation = None

def localTranslation():
    "Return the translation local to this thread, or the default."
    if getattr(threadLocal, 'currentTranslation', None):
        return threadLocal.currentTranslation
    else:
        return currentTranslation

def _(str):
    return localTranslation().ugettext(str)

def ngettext(single, plural, n):
    return localTranslation().ungettext(single, plural, n)

def setLang(lang, local=True):
    base = os.path.dirname(os.path.abspath(__file__))
    localeDir = os.path.join(base, "locale")
    if not os.path.exists(localeDir):
        localeDir = os.path.join(
            os.path.dirname(sys.argv[0]), "locale")
    trans = gettext.translation('libanki', localeDir,
                                languages=[lang],
                                fallback=True)
    if local:
        threadLocal.currentLang = lang
        threadLocal.currentTranslation = trans
    else:
        global currentLang, currentTranslation
        currentLang = lang
        currentTranslation = trans

def getLang():
    "Return the language local to this thread, or the default."
    if getattr(threadLocal, 'currentLang', None):
        return threadLocal.currentLang
    else:
        return currentLang

if not currentTranslation:
    setLang("en_US", local=False)
 162  
anki/latex.py
@@ -0,0 +1,162 @@
# -*- coding: utf-8 -*-
# Copyright: Damien Elmes <anki@ichi2.net>
# License: GNU GPL, version 3 or later; http://www.gnu.org/copyleft/gpl.html

"""\
Latex support
==============================
"""
__docformat__ = 'restructuredtext'

import re, tempfile, os, sys, subprocess, stat, time, shutil
from anki.utils import genID, checksum
from htmlentitydefs import entitydefs

latexPreamble = ("\\documentclass[12pt]{article}\n"
                 "\\special{papersize=3in,5in}"
                 "\\usepackage[utf8]{inputenc}"
                 "\\pagestyle{empty}\n"
                 "\\begin{document}")
latexPostamble = "\\end{document}"
latexDviPngCmd = ["dvipng", "-D", "200", "-T", "tight"]

regexps = {
    "standard": re.compile(r"\[latex\](.+?)\[/latex\]", re.DOTALL | re.IGNORECASE),
    "expression": re.compile(r"\[\$\](.+?)\[/\$\]", re.DOTALL | re.IGNORECASE),
    "math": re.compile(r"\[\$\$\](.+?)\[/\$\$\]", re.DOTALL | re.IGNORECASE),
    }

tmpdir = tempfile.mkdtemp(prefix="anki")

# add standard tex install location to osx
if sys.platform == "darwin":
    os.environ['PATH'] += ":/usr/texbin"

def renderLatex(deck, text, build=True):
    "Convert TEXT with embedded latex tags to image links."
    for match in regexps['standard'].finditer(text):
        text = text.replace(match.group(), imgLink(deck, match.group(1),
                                                   build))
    for match in regexps['expression'].finditer(text):
        text = text.replace(match.group(), imgLink(
            deck, "$" + match.group(1) + "$", build))
    for match in regexps['math'].finditer(text):
        text = text.replace(match.group(), imgLink(
            deck,
            "\\begin{displaymath}" + match.group(1) + "\\end{displaymath}",
            build))
    return text

def stripLatex(text):
    for match in regexps['standard'].finditer(text):
        text = text.replace(match.group(), "")
    for match in regexps['expression'].finditer(text):
        text = text.replace(match.group(), "")
    for match in regexps['math'].finditer(text):
        text = text.replace(match.group(), "")
    return text

def call(argv, wait=True, **kwargs):
    try:
        o = subprocess.Popen(argv, **kwargs)
    except OSError:
        # command not found
        return -1
    if wait:
        while 1:
            try:
                ret = o.wait()
            except OSError:
                # interrupted system call
                continue
            break
    else:
        ret = 0
    return ret

def latexImgFile(deck, latexCode):
    key = checksum(latexCode)
    return "latex-%s.png" % key

def mungeLatex(latex):
    "Convert entities, fix newlines, and convert to utf8."
    for match in re.compile("&([a-z]+);", re.IGNORECASE).finditer(latex):
        if match.group(1) in entitydefs:
            latex = latex.replace(match.group(), entitydefs[match.group(1)])
    latex = re.sub("<br( /)?>", "\n", latex)
    latex = latex.encode("utf-8")
    return latex

def deleteAllLatexImages(deck):
    mdir = deck.mediaDir()
    if not mdir:
        return
    deck.startProgress()
    for c, f in enumerate(os.listdir(mdir)):
        if f.startswith("latex-"):
            os.unlink(os.path.join(mdir, f))
        if c % 100 == 0:
            deck.updateProgress()
    deck.finishProgress()

def cacheAllLatexImages(deck):
    deck.startProgress()
    fields = deck.s.column0("select value from fields")
    for c, field in enumerate(fields):
        if c % 10 == 0:
            deck.updateProgress()
        renderLatex(deck, field)
    deck.finishProgress()

def buildImg(deck, latex):
    log = open(os.path.join(tmpdir, "latex_log.txt"), "w+")
    texpath = os.path.join(tmpdir, "tmp.tex")
    texfile = file(texpath, "w")
    texfile.write(latexPreamble + "\n")
    texfile.write(latex + "\n")
    texfile.write(latexPostamble + "\n")
    texfile.close()
    texpath = texpath.encode(sys.getfilesystemencoding())
    # make sure we have a valid mediaDir
    deck.mediaDir(create=True)
    oldcwd = os.getcwd()
    if sys.platform == "win32":
        si = subprocess.STARTUPINFO()
        si.dwFlags |= subprocess.STARTF_USESHOWWINDOW
    else:
        si = None
    try:
        os.chdir(tmpdir)
        errmsg = _("Error executing %s.\n") + _(
            "A log file is available here:\n%s") % tmpdir
        if call(["latex", "-interaction=nonstopmode",
                 texpath], stdout=log, stderr=log, startupinfo=si):
            return (False, errmsg % "latex")
        if call(latexDviPngCmd + ["tmp.dvi", "-o", "tmp.png"],
                stdout=log, stderr=log, startupinfo=si):
            return (False, errmsg % "dvipng")
        # add to media
        target = latexImgFile(deck, latex)
        shutil.copy2("tmp.png", os.path.join(deck.mediaDir(), target))
        return (True, target)
    finally:
        os.chdir(oldcwd)

def imageForLatex(deck, latex, build=True):
    "Return an image that represents 'latex', building if necessary."
    imageFile = latexImgFile(deck, latex)
    ok = True
    if build and (not imageFile or not os.path.exists(imageFile)):
        (ok, imageFile) = buildImg(deck, latex)
    if not ok:
        return (False, imageFile)
    return (True, imageFile)

def imgLink(deck, latex, build=True):
    "Parse LATEX and return a HTML image representing the output."
    latex = mungeLatex(latex)
    (ok, img) = imageForLatex(deck, latex, build)
    if ok:
        return '<img src="%s">' % img
    else:
        return img
 297  
anki/media.py
@@ -0,0 +1,297 @@
# -*- coding: utf-8 -*-
# Copyright: Damien Elmes <anki@ichi2.net>
# License: GNU GPL, version 3 or later; http://www.gnu.org/copyleft/gpl.html

"""\
Media support
====================
"""
__docformat__ = 'restructuredtext'

import os, stat, time, shutil, re, sys, urllib2
from anki.db import *
from anki.facts import Fact
from anki.utils import addTags, genID, ids2str, checksum
from anki.lang import _

regexps = (("(\[sound:([^]]+)\])",
            "[sound:%s]"),
           ("(<img src=[\"']?([^\"'>]+)[\"']? ?/?>)",
            "<img src=\"%s\">"))

# Tables
##########################################################################

mediaTable = Table(
    'media', metadata,
    Column('id', Integer, primary_key=True, nullable=False),
    Column('filename', UnicodeText, nullable=False),
    Column('size', Integer, nullable=False),
    Column('created', Float, nullable=False),
    Column('originalPath', UnicodeText, nullable=False, default=u""),
    Column('description', UnicodeText, nullable=False, default=u""))

class Media(object):
    pass

mapper(Media, mediaTable)

mediaDeletedTable = Table(
    'mediaDeleted', metadata,
    Column('mediaId', Integer, ForeignKey("cards.id"),
           nullable=False),
    Column('deletedTime', Float, nullable=False))

# Helper functions
##########################################################################

def mediaFilename(path):
    "Return checksum.ext for path"
    new = checksum(open(path, "rb").read())
    ext = os.path.splitext(path)[1].lower()
    return "%s%s" % (new, ext)

def copyToMedia(deck, path):
    """Copy PATH to MEDIADIR, and return new filename.
Update media table. If file already exists, don't copy."""
    origPath = path
    description = os.path.splitext(os.path.basename(path))[0]
    newBase = mediaFilename(path)
    new = os.path.join(deck.mediaDir(create=True), newBase)
    # copy if not existing
    if not os.path.exists(new):
        if new.lower() == path.lower():
            # case insensitive filesystems suck
            os.rename(path, new)
        else:
            shutil.copy2(path, new)
    newSize = os.stat(new)[stat.ST_SIZE]
    if not deck.s.scalar(
        "select 1 from media where filename = :f",
        f=newBase):
        # if the user has modified a hashed file, try to remember the old
        # filename
        old = deck.s.scalar(
            "select originalPath from media where filename = :s",
            s=os.path.basename(origPath))
        if old:
            origPath = old
            description = os.path.splitext(os.path.basename(origPath))[0]
        try:
            path = unicode(path, sys.getfilesystemencoding())
        except TypeError:
            pass
        deck.s.statement("""
insert into media (id, filename, size, created, originalPath,
description)
values (:id, :filename, :size, :created, :originalPath,
:description)""",
                         id=genID(),
                         filename=newBase,
                         size=newSize,
                         created=time.time(),
                         originalPath=origPath,
                         description=description)
    deck.flushMod()
    return newBase

def _modifyFields(deck, fieldsToUpdate, modifiedFacts, dirty):
    factIds = ids2str(modifiedFacts.keys())
    if fieldsToUpdate:
        deck.s.execute("update fields set value = :val where id = :id",
                       fieldsToUpdate)
    deck.s.statement(
        "update facts set modified = :time where id in %s" %
        factIds, time=time.time())
    ids = deck.s.all("""select cards.id, cards.cardModelId, facts.id,
facts.modelId from cards, facts where
cards.factId = facts.id and facts.id in %s"""
                     % factIds)
    deck.updateCardQACache(ids, dirty)
    deck.flushMod()


def mediaRefs(string):
    "Return list of (fullMatch, filename, replacementString)."
    l = []
    for (reg, repl) in regexps:
        for (full, fname) in re.findall(reg, string):
            l.append((full, fname, repl))
    return l

def stripMedia(txt):
    for (reg, x) in regexps:
        txt = re.sub(reg, "", txt)
    return txt

# Rebuilding DB
##########################################################################

def rebuildMediaDir(deck, deleteRefs=False, dirty=True):
    "Delete references to missing files, delete unused files."
    localFiles = {}
    modifiedFacts = {}
    unmodifiedFacts = {}
    renamedFiles = {}
    existingFiles = {}
    factsMissingMedia = {}
    updateFields = []
    usedFiles = {}
    unusedFileCount = 0
    missingFileCount = 0
    deck.mediaDir(create=True)
    deck.startProgress(16, 0, _("Check Media DB"))
    # rename all files to checksum versions, note non-renamed ones
    deck.updateProgress(_("Checksum files..."))
    files = os.listdir(unicode(deck.mediaDir()))
    mod = len(files) / 10
    for c, oldBase in enumerate(files):
        if mod and not c % mod:
            deck.updateProgress()
        if oldBase.startswith("latex-"):
            continue
        oldPath = os.path.join(deck.mediaDir(), oldBase)
        if oldBase.startswith("."):
            continue
        if os.path.isdir(oldPath):
            continue
        newBase = copyToMedia(deck, oldPath)
        if oldBase.lower() == newBase.lower():
            existingFiles[oldBase] = 1
        else:
            renamedFiles[oldBase] = newBase
    deck.updateProgress(value=10)
    # now look through all fields, and update references to files
    deck.updateProgress(_("Scan fields..."))
    for (id, fid, val) in deck.s.all(
        "select id, factId, value from fields"):
        oldval = val
        for (full, fname, repl) in mediaRefs(val):
            if fname in renamedFiles:
                # renamed
                newBase = renamedFiles[fname]
                val = re.sub(re.escape(full), repl % newBase, val)
                usedFiles[newBase] = 1
            elif fname in existingFiles:
                # used & current
                usedFiles[fname] = 1
            else:
                # missing
                missingFileCount += 1
                if deleteRefs:
                    val = re.sub(re.escape(full), "", val)
                else:
                    factsMissingMedia[fid] = 1
        if val != oldval:
            updateFields.append({'id': id, 'val': val})
            modifiedFacts[fid] = 1
        else:
            if fid not in factsMissingMedia:
                unmodifiedFacts[fid] = 1
    # update modified fields
    deck.updateProgress(_("Modify fields..."))
    if modifiedFacts:
        _modifyFields(deck, updateFields, modifiedFacts, dirty)
    # fix tags
    deck.updateProgress(_("Update tags..."))
    if dirty:
        deck.deleteTags(unmodifiedFacts.keys(), _("MediaMissing"))
        if deleteRefs:
            deck.deleteTags(modifiedFacts.keys(), _("MediaMissing"))
        else:
            deck.addTags(factsMissingMedia.keys(), _("MediaMissing"))
    # build cache of db records
    deck.updateProgress(_("Delete unused files..."))
    mediaIds = dict(deck.s.all("select filename, id from media"))
    # look through the media dir for any unused files, and delete
    for f in os.listdir(unicode(deck.mediaDir())):
        if f.startswith("."):
            continue
        if f.startswith("latex-"):
            continue
        path = os.path.join(deck.mediaDir(), f)
        if os.path.isdir(path):
            shutil.rmtree(path)
            continue
        if f in usedFiles:
            del mediaIds[f]
        else:
            os.unlink(path)
            unusedFileCount += 1
    deck.updateProgress(_("Delete stale references..."))
    for (fname, id) in mediaIds.items():
        # maybe delete from db
        if id:
            deck.s.statement("delete from media where id = :id", id=id)
            deck.s.statement("""
insert into mediaDeleted (mediaId, deletedTime)
values (:id, strftime('%s', 'now'))""", id=id)
    # update deck and save
    deck.flushMod()
    deck.save()
    deck.finishProgress()
    return missingFileCount, unusedFileCount - len(renamedFiles)

# Download missing
##########################################################################

def downloadMissing(deck):
    from anki.latex import renderLatex
    urls = dict(
        deck.s.all("select id, features from models where features != ''"))
    if not urls:
        return None
    mdir = deck.mediaDir(create=True)
    os.chdir(mdir)
    deck.startProgress()
    missing = {}
    for (id, fid, val, mid) in deck.s.all("""
select fields.id, factId, value, modelId from fields, facts
where facts.id = fields.factId"""):
        # add latex tags
        val = renderLatex(deck, val, False)
        for (full, fname, repl) in mediaRefs(val):
            if not os.path.exists(os.path.join(mdir, fname)) and mid in urls:
                missing[fname] = mid
    success = 0
    for c, file in enumerate(missing.keys()):
        deck.updateProgress(label=_("Downloading %(a)d of %(b)d...") % {
            'a': c,
            'b': len(missing),
            })
        try:
            data = urllib2.urlopen(urls[missing[file]] + file).read()
            open(file, "wb").write(data)
            success += 1
        except:
            pass
    deck.finishProgress()
    return len(missing), success

# Export original files
##########################################################################

def exportOriginalFiles(deck):
    deck.startProgress()
    origDir = deck.mediaDir(create=True)
    newDir = origDir.replace(".media", ".originals")
    try:
        os.mkdir(newDir)
    except (IOError, OSError):
        pass
    cnt = 0
    for row in deck.s.all("select filename, originalPath from media"):
        (fname, path) = row
        base = os.path.basename(path)
        if base == fname:
            continue
        cnt += 1
        deck.updateProgress(label="Exporting %s" % base)
        old = os.path.join(origDir, fname)
        new = os.path.join(newDir, base)
        if os.path.exists(new):
            new = re.sub("(.*)(\..*?)$", "\\1-%s\\2" %
                         os.path.splitext(fname)[0], new)
        shutil.copy2(old, new)
    deck.finishProgress()
    return cnt
 217  
anki/models.py
@@ -0,0 +1,217 @@
# -*- coding: utf-8 -*-
# Copyright: Damien Elmes <anki@ichi2.net>
# License: GNU GPL, version 3 or later; http://www.gnu.org/copyleft/gpl.html

"""\
Model - define the way in which facts are added and shown
==========================================================
- Field models
- Card models
- Models
"""

import time
from sqlalchemy.ext.orderinglist import ordering_list
from anki.db import *
from anki.utils import genID, canonifyTags
from anki.fonts import toPlatformFont
from anki.utils import parseTags, hexifyID, checksum, stripHTML
from anki.lang import _
from anki.hooks import runFilter
from copy import copy

def alignmentLabels():
    return {
        0: _("Center"),
        1: _("Left"),
        2: _("Right"),
        }

# Field models
##########################################################################

fieldModelsTable = Table(
    'fieldModels', metadata,
    Column('id', Integer, primary_key=True),
    Column('ordinal', Integer, nullable=False),
    Column('modelId', Integer, ForeignKey('models.id'), nullable=False),
    Column('name', UnicodeText, nullable=False),
    Column('description', UnicodeText, nullable=False, default=u""), # obsolete
    # reused as RTL marker
    Column('features', UnicodeText, nullable=False, default=u""),
    Column('required', Boolean, nullable=False, default=True),
    Column('unique', Boolean, nullable=False, default=True), # sqlite keyword
    Column('numeric', Boolean, nullable=False, default=False),
    # display
    Column('quizFontFamily', UnicodeText),
    Column('quizFontSize', Integer),
    Column('quizFontColour', String(7)),
    Column('editFontFamily', UnicodeText),
    Column('editFontSize', Integer, default=20))

class FieldModel(object):
    "The definition of one field in a fact."

    def __init__(self, name=u"", required=True, unique=True):
        self.name = name
        self.required = required
        self.unique = unique
        self.id = genID()

    def copy(self):
        new = FieldModel()
        for p in class_mapper(FieldModel).iterate_properties:
            setattr(new, p.key, getattr(self, p.key))
        new.id = genID()
        new.model = None
        return new

mapper(FieldModel, fieldModelsTable)

# Card models
##########################################################################

cardModelsTable = Table(
    'cardModels', metadata,
    Column('id', Integer, primary_key=True),
    Column('ordinal', Integer, nullable=False),
    Column('modelId', Integer, ForeignKey('models.id'), nullable=False),
    Column('name', UnicodeText, nullable=False),
    Column('description', UnicodeText, nullable=False, default=u""), # obsolete
    Column('active', Boolean, nullable=False, default=True),
    # formats: question/answer/last(not used)
    Column('qformat', UnicodeText, nullable=False),
    Column('aformat', UnicodeText, nullable=False),
    Column('lformat', UnicodeText),
    # question/answer editor format (not used yet)
    Column('qedformat', UnicodeText),
    Column('aedformat', UnicodeText),
    Column('questionInAnswer', Boolean, nullable=False, default=False),
    # display
    Column('questionFontFamily', UnicodeText, default=u"Arial"),
    Column('questionFontSize', Integer, default=20),
    Column('questionFontColour', String(7), default=u"#000000"),
    Column('questionAlign', Integer, default=0),
    Column('answerFontFamily', UnicodeText, default=u"Arial"),
    Column('answerFontSize', Integer, default=20),
    Column('answerFontColour', String(7), default=u"#000000"),
    Column('answerAlign', Integer, default=0),
    # not used
    Column('lastFontFamily', UnicodeText, default=u"Arial"),
    Column('lastFontSize', Integer, default=20),
    # used as background colour
    Column('lastFontColour', String(7), default=u"#FFFFFF"),
    Column('editQuestionFontFamily', UnicodeText, default=None),
    Column('editQuestionFontSize', Integer, default=None),
    Column('editAnswerFontFamily', UnicodeText, default=None),
    Column('editAnswerFontSize', Integer, default=None),
    # empty answer
    Column('allowEmptyAnswer', Boolean, nullable=False, default=True),
    Column('typeAnswer', UnicodeText, nullable=False, default=u""))

class CardModel(object):
    """Represents how to generate the front and back of a card."""
    def __init__(self, name=u"", qformat=u"q", aformat=u"a", active=True):
        self.name = name
        self.qformat = qformat
        self.aformat = aformat
        self.active = active
        self.id = genID()

    def copy(self):
        new = CardModel()
        for p in class_mapper(CardModel).iterate_properties:
            setattr(new, p.key, getattr(self, p.key))
        new.id = genID()
        new.model = None
        return new

mapper(CardModel, cardModelsTable)

def formatQA(cid, mid, fact, tags, cm):
    "Return a dict of {id, question, answer}"
    d = {'id': cid}
    fields = {}
    for (k, v) in fact.items():
        fields["text:"+k] = stripHTML(v[1])
        if v[1]:
            fields[k] = '<span class="fm%s">%s</span>' % (
                hexifyID(v[0]), v[1])
        else:
            fields[k] = u""
    fields['tags'] = tags[0]
    fields['Tags'] = tags[0]
    fields['modelTags'] = tags[1]
    fields['cardModel'] = tags[2]
    # render q & a
    ret = []
    for (type, format) in (("question", cm.qformat),
                           ("answer", cm.aformat)):
        try:
            html = format % fields
        except (KeyError, TypeError, ValueError):
            html = _("[invalid question/answer format]")
        d[type] = runFilter("formatQA", html, type, cid, mid, fact, tags, cm)
    return d

# Model table
##########################################################################

modelsTable = Table(
    'models', metadata,
    Column('id', Integer, primary_key=True),
    Column('deckId', Integer, ForeignKey("decks.id", use_alter=True, name="deckIdfk")),
    Column('created', Float, nullable=False, default=time.time),
    Column('modified', Float, nullable=False, default=time.time),
    Column('tags', UnicodeText, nullable=False, default=u""),
    Column('name', UnicodeText, nullable=False),
    Column('description', UnicodeText, nullable=False, default=u""), # obsolete
    Column('features', UnicodeText, nullable=False, default=u""), # used as mediaURL
    Column('spacing', Float, nullable=False, default=0.1),
    Column('initialSpacing', Float, nullable=False, default=60),
    Column('source', Integer, nullable=False, default=0))

class Model(object):
    "Defines the way a fact behaves, what fields it can contain, etc."
    def __init__(self, name=u""):
        self.name = name
        self.id = genID()

    def setModified(self):
        self.modified = time.time()

    def addFieldModel(self, field):
        "Add a field model."
        self.fieldModels.append(field)
        s = object_session(self)
        if s:
            s.flush()

    def addCardModel(self, card):
        "Add a card model."
        self.cardModels.append(card)
        s = object_session(self)
        if s:
            s.flush()

mapper(Model, modelsTable, properties={
    'fieldModels': relation(FieldModel, backref='model',
                             collection_class=ordering_list('ordinal'),
                             order_by=[fieldModelsTable.c.ordinal],
                            cascade="all, delete-orphan"),
    'cardModels': relation(CardModel, backref='model',
                           collection_class=ordering_list('ordinal'),
                           order_by=[cardModelsTable.c.ordinal],
                           cascade="all, delete-orphan"),
       })

# Model deletions
##########################################################################

modelsDeletedTable = Table(
    'modelsDeleted', metadata,
    Column('modelId', Integer, ForeignKey("models.id"),
           nullable=False),
    Column('deletedTime', Float, nullable=False))
 339  
anki/sound.py
@@ -0,0 +1,339 @@
# -*- coding: utf-8 -*-
# Copyright: Damien Elmes <anki@ichi2.net>
# License: GNU GPL, version 3 or later; http://www.gnu.org/copyleft/gpl.html

"""\
Sound support
==============================
"""
__docformat__ = 'restructuredtext'

import re, sys, threading, time, subprocess, os, signal, atexit, errno
from anki.hooks import addHook, runHook

# Shared utils
##########################################################################

def playFromText(text):
    for match in re.findall("\[sound:(.*?)\]", text):
        play(match)

def stripSounds(text):
    return re.sub("\[sound:.*?\]", "", text)

def hasSound(text):
    return re.search("\[sound:.*?\]", text) is not None

##########################################################################

# the amount of noise to cancel
NOISE_AMOUNT = "0.1"
# the amount of amplification
NORM_AMOUNT = "-3"
# the amount of bass
BASS_AMOUNT = "+0"
# the amount to fade at end
FADE_AMOUNT = "0.25"

noiseProfile = ""

processingSrc = "tmp.wav"
processingDst = "tmp.mp3"
processingChain = []
tmpFiles = ["tmp2.wav", "tmp3.wav"]

cmd = ["sox", processingSrc, "tmp2.wav"]
processingChain = [
    None, # placeholder
    ["sox", "tmp2.wav", "tmp3.wav", "norm", NORM_AMOUNT,
     "bass", BASS_AMOUNT, "fade", FADE_AMOUNT, "0"],
    ["lame", "tmp3.wav", processingDst, "--noreplaygain", "--quiet"],
    ]

# don't show box on windows
if sys.platform == "win32":
    si = subprocess.STARTUPINFO()
    si.dwFlags |= subprocess.STARTF_USESHOWWINDOW
else:
    si = None

if sys.platform.startswith("darwin"):
    # make sure lame, which is installed in /usr/local/bin, is in the path
    os.environ['PATH'] += ":" + "/usr/local/bin"
    dir = os.path.dirname(os.path.abspath(__file__))
    dir = os.path.abspath(dir + "/../../../..")
    os.environ['PATH'] += ":" + dir + "/audio"

def retryWait(proc):
    # osx throws interrupted system call errors frequently
    while 1:
        try:
            return proc.wait()
        except OSError:
            continue

# Noise profiles
##########################################################################

def checkForNoiseProfile():
    global processingChain
    if sys.platform.startswith("darwin"):
        # not currently supported
        processingChain = [
            ["lame", "tmp.wav", "tmp.mp3", "--noreplaygain", "--quiet"]]
    else:
        cmd = ["sox", processingSrc, "tmp2.wav"]
        if os.path.exists(noiseProfile):
            cmd = cmd + ["noisered", noiseProfile, NOISE_AMOUNT]
        processingChain[0] = cmd

def generateNoiseProfile():
    try:
        os.unlink(noiseProfile)
    except OSError:
        pass
    retryWait(subprocess.Popen(
        ["sox", processingSrc, tmpFiles[0], "trim", "1.5", "1.5"],
        startupinfo=si))
    retryWait(subprocess.Popen(["sox", tmpFiles[0], tmpFiles[1],
                                "noiseprof", noiseProfile],
                               startupinfo=si))
    processingChain[0] = ["sox", processingSrc, "tmp2.wav",
                          "noisered", noiseProfile, NOISE_AMOUNT]

# Mplayer settings
##########################################################################

if sys.platform.startswith("win32"):
    mplayerCmd = ["mplayer.exe", "-ao", "win32", "-really-quiet"]
    dir = os.path.dirname(os.path.abspath(sys.argv[0]))
    os.environ['PATH'] += ";" + dir
    os.environ['PATH'] += ";" + dir + "\\..\\dist" # for testing
else:
    mplayerCmd = ["mplayer", "-really-quiet"]

# Mplayer in slave mode
##########################################################################

mplayerQueue = []
mplayerManager = None
mplayerReader = None
mplayerCond = threading.Condition()

class MplayerReader(threading.Thread):
    "Read any debugging info to prevent mplayer from blocking."

    def run(self):
        while 1:
            mplayerCond.acquire()
            mplayerCond.wait()
            mplayerCond.release()
            try:
                mplayerManager.mplayer.stdout.read()
            except:
                pass

class MplayerMonitor(threading.Thread):

    def run(self):
        self.mplayer = None
        while 1:
            mplayerCond.acquire()
            while not mplayerQueue:
                if not mplayerCond:
                    return
                mplayerCond.wait()
            if not self.mplayer:
                self.startProcess()
            if self.mplayer != -1 and self.mplayer.poll() is not None:
                self.mplayer.wait()
                self.startProcess()
            nextClears = False
            while mplayerQueue:
                item = mplayerQueue.pop(0)
                if item is None:
                    nextClears = True
                    continue
                if nextClears:
                    nextClears = False
                    extra = ""
                else:
                    extra = " 1"
                cmd = 'loadfile "%s"%s\n' % (item, extra)
                self.mplayer.stdin.write(cmd)
            mplayerCond.release()

    def startProcess(self):
        try:
            cmd = mplayerCmd + ["-slave", "-idle"]
            self.mplayer = subprocess.Popen(
                cmd, startupinfo=si, stdin=subprocess.PIPE,
                stdout=subprocess.PIPE, stderr=subprocess.STDOUT)
        except OSError:
            mplayerCond.release()
            raise Exception("Audio player not found")

def queueMplayer(path):
    ensureMplayerThreads()
    path = path.encode(sys.getfilesystemencoding())
    mplayerCond.acquire()
    mplayerQueue.append(path)
    mplayerCond.notifyAll()
    mplayerCond.release()
    runHook("soundQueued")

def clearMplayerQueue():
    mplayerCond.acquire()
    mplayerQueue.append(None)
    mplayerCond.release()

def ensureMplayerThreads():
    global mplayerManager, mplayerReader
    if not mplayerManager:
        mplayerManager = MplayerMonitor()
        mplayerManager.daemon = True
        mplayerManager.start()
        mplayerReader = MplayerReader()
        mplayerReader.daemon = True
        mplayerReader.start()
        atexit.register(stopMplayer)

def stopMplayer(restart=False):
    if not mplayerManager:
        return
    mplayerCond.acquire()
    if mplayerManager.mplayer:
        while 1:
            try:
                mplayerManager.mplayer.stdin.write("quit\n")
                break
            except OSError, e:
                if e.errno != errno.EINTR:
                    # osx throws interrupt errors regularly, but we want to
                    # ignore other errors on shutdown
                    break
            except IOError:
                # already closed
                break
            except ValueError:
                # already closed
                break
    if not restart:
        mplayerManager.mplayer = -1
    mplayerCond.notifyAll()
    mplayerCond.release()

def stopMplayerOnce():
    stopMplayer(restart=True)

addHook("deckClosed", stopMplayerOnce)

# PyAudio recording
##########################################################################

try:
    import pyaudio
    import wave

    PYAU_FORMAT = pyaudio.paInt16
    PYAU_CHANNELS = 1
    PYAU_RATE = 44100
    PYAU_INPUT_INDEX = None
except:
    pass

class _Recorder(object):

    def postprocess(self, encode=True):
        self.encode = encode
        for c in processingChain:
            #print c
            if not self.encode and c[0] == 'lame':
                continue
            ret = retryWait(subprocess.Popen(c, startupinfo=si))
            if ret:
                raise Exception(_("""
Error processing audio.
If you're on Linux and don't have sox 14.1+, you
need to disable normalization. See the wiki.
Command was:\n""") + " ".join(c))

class PyAudioThreadedRecorder(threading.Thread):

    def __init__(self):
        threading.Thread.__init__(self)
        self.finish = False

    def run(self):
        chunk = 1024
        try:
            p = pyaudio.PyAudio()
        except NameError:
            raise Exception(
                "Pyaudio not installed (recording not supported on OSX10.3)")
        stream = p.open(format=PYAU_FORMAT,
                        channels=PYAU_CHANNELS,
                        rate=PYAU_RATE,
                        input=True,
                        input_device_index=PYAU_INPUT_INDEX,
                        frames_per_buffer=chunk)
        all = []
        while not self.finish:
            try:
                data = stream.read(chunk)
            except IOError, e:
                if e[1] == pyaudio.paInputOverflowed:
                    data = None
                else:
                    raise
            if data:
                all.append(data)
        stream.close()
        p.terminate()
        data = ''.join(all)
        wf = wave.open(processingSrc, 'wb')
        wf.setnchannels(PYAU_CHANNELS)
        wf.setsampwidth(p.get_sample_size(PYAU_FORMAT))
        wf.setframerate(PYAU_RATE)
        wf.writeframes(data)
        wf.close()

class PyAudioRecorder(_Recorder):

    def __init__(self):
        for t in tmpFiles + [processingSrc, processingDst]:
            try:
                os.unlink(t)
            except OSError:
                pass
        self.encode = False

    def start(self):
        self.thread = PyAudioThreadedRecorder()
        self.thread.start()

    def stop(self):
        self.thread.finish = True
        self.thread.join()

    def file(self):
        if self.encode:
            return processingDst
        else:
            return tmpFiles[1]

# Audio interface
##########################################################################

_player = queueMplayer
_queueEraser = clearMplayerQueue

def play(path):
    _player(path)

def clearAudioQueue():
    _queueEraser()

Recorder = PyAudioRecorder
 573  
anki/stats.py
Large diffs are not rendered by default.

 40  
anki/stdmodels.py
@@ -0,0 +1,40 @@
# -*- coding: utf-8 -*-
# Copyright: Damien Elmes <anki@ichi2.net>
# License: GNU GPL, version 3 or later; http://www.gnu.org/copyleft/gpl.html

"""\
Standard Models.
==============================================================
Plugins can add to the 'models' dict to provide more standard
models.
"""

from anki.models import Model, CardModel, FieldModel
from anki.lang import _

models = {}

def byName(name):
    fn = models.get(name)
    if fn:
        return fn()
    raise ValueError("No such model available!")

def names():
    return models.keys()

# Basic
##########################################################################

def BasicModel():
    m = Model(_('Basic'))
    m.addFieldModel(FieldModel(u'Front', True, True))
    m.addFieldModel(FieldModel(u'Back', False, False))
    m.addCardModel(CardModel(u'Forward', u'%(Front)s', u'%(Back)s'))
    m.addCardModel(CardModel(u'Reverse', u'%(Back)s', u'%(Front)s',
                             active=False))
    m.tags = u"Basic"
    return m

models['Basic'] = BasicModel
 1,171  
anki/sync.py
Large diffs are not rendered by default.

 59  
anki/tags.py
@@ -0,0 +1,59 @@
# -*- coding: utf-8 -*-
# Copyright: Damien Elmes <anki@ichi2.net>
# License: GNU GPL, version 3 or later; http://www.gnu.org/copyleft/gpl.html

"""\
Tags
====================
"""
__docformat__ = 'restructuredtext'


from anki.db import *

#src 0 = fact
#src 1 = model
#src 2 = card model

# Tables
##########################################################################

def initTagTables(s):
    try:
        s.statement("""
create table tags (
id integer not null,
tag text not null collate nocase,
priority integer not null default 2,
primary key(id))""")
        s.statement("""
create table cardTags (
id integer not null,
cardId integer not null,
tagId integer not null,
src integer not null,
primary key(id))""")
    except:
        pass

def tagId(s, tag, create=True):
    "Return ID for tag, creating if necessary."
    id = s.scalar("select id from tags where tag = :tag", tag=tag)
    if id or not create:
        return id
    s.statement("""
insert or ignore into tags
(tag) values (:tag)""", tag=tag)
    return s.scalar("select id from tags where tag = :tag", tag=tag)

def tagIds(s, tags, create=True):
    "Return an ID for all tags, creating if necessary."
    ids = {}
    if create:
        s.statements("insert or ignore into tags (tag) values (:tag)",
                    [{'tag': t} for t in tags])
    tagsD = dict([(x.lower(), y) for (x, y) in s.all("""
select tag, id from tags
where tag in (%s)""" % ",".join([
        "'%s'" % t.replace("'", "''") for t in tags]))])
    return tagsD
 242  
anki/utils.py
@@ -0,0 +1,242 @@
# -*- coding: utf-8 -*-
# Copyright: Damien Elmes <anki@ichi2.net>
# License: GNU GPL, version 3 or later; http://www.gnu.org/copyleft/gpl.html

"""\
Miscellaneous utilities
==============================
"""
__docformat__ = 'restructuredtext'

import re, os, random, time, types

try:
    import hashlib
    md5 = hashlib.md5
except ImportError:
    import md5
    md5 = md5.new

from anki.db import *
from anki.lang import _, ngettext
import locale, sys

if sys.version_info[1] < 5:
    def format_string(a, b):
        return a % b
    locale.format_string = format_string

# Time handling
##############################################################################

timeTable = {
    "years": lambda n: ngettext("%s year", "%s years", n),
    "months": lambda n: ngettext("%s month", "%s months", n),
    "days": lambda n: ngettext("%s day", "%s days", n),
    "hours": lambda n: ngettext("%s hour", "%s hours", n),
    "minutes": lambda n: ngettext("%s minute", "%s minutes", n),
    "seconds": lambda n: ngettext("%s second", "%s seconds", n),
    }

afterTimeTable = {
    "years": lambda n: ngettext("%s year<!--after>", "%s years<!--after>", n),
    "months": lambda n: ngettext("%s month<!--after>", "%s months<!--after>", n),
    "days": lambda n: ngettext("%s day<!--after>", "%s days<!--after>", n),
    "hours": lambda n: ngettext("%s hour<!--after>", "%s hours<!--after>", n),
    "minutes": lambda n: ngettext("%s minute<!--after>", "%s minutes<!--after>", n),
    "seconds": lambda n: ngettext("%s second<!--after>", "%s seconds<!--after>", n),
    }

shortTimeTable = {
    "years": _("%sy"),
    "months": _("%sm"),
    "days": _("%sd"),
    "hours": _("%sh"),
    "minutes": _("%sm"),
    "seconds": _("%ss"),
    }

def fmtTimeSpan(time, pad=0, point=0, short=False, after=False):
    "Return a string representing a time span (eg '2 days')."
    (type, point) = optimalPeriod(time, point)
    time = convertSecondsTo(time, type)
    if short:
        fmt = shortTimeTable[type]
    else:
        if after:
            fmt = afterTimeTable[type](_pluralCount(time, point))
        else:
            fmt = timeTable[type](_pluralCount(time, point))
    timestr = "%(a)d.%(b)df" % {'a': pad, 'b': point}
    return locale.format_string("%" + (fmt % timestr), time)

def optimalPeriod(time, point):
    if abs(time) < 60:
        type = "seconds"
        point -= 1
    elif abs(time) < 3599:
        type = "minutes"
    elif abs(time) < 60 * 60 * 24:
        type = "hours"
    elif abs(time) < 60 * 60 * 24 * 30:
        type = "days"
    elif abs(time) < 60 * 60 * 24 * 365:
        type = "months"
        point += 1
    else:
        type = "years"
        point += 1
    return (type, max(point, 0))

def convertSecondsTo(seconds, type):
    if type == "seconds":
        return seconds
    elif type == "minutes":
        return seconds / 60.0
    elif type == "hours":
        return seconds / 3600.0
    elif type == "days":
        return seconds / 86400.0
    elif type == "months":
        return seconds / 2592000.0
    elif type == "years":
        return seconds / 31536000.0
    assert False

def _pluralCount(time, point):
    if point:
        return 2
    return round(time)

# Locale
##############################################################################

def fmtPercentage(float_value, point=1):
    "Return float with percentage sign"
    fmt = '%' + "0.%(b)df" % {'b': point}
    return locale.format_string(fmt, float_value) + "%"

def fmtFloat(float_value, point=1):
    "Return a string with decimal separator according to current locale"
    fmt = '%' + "0.%(b)df" % {'b': point}
    return locale.format_string(fmt, float_value)

# HTML
##############################################################################

def stripHTML(s):
    s = re.sub("(?s)<style.*?>.*?</style>", "", s)
    s = re.sub("<.*?>", "", s)
    s = s.replace("&lt;", "<")
    s = s.replace("&gt;", ">")
    return s

def tidyHTML(html):
    "Remove cruft like body tags and return just the important part."
    # contents of body - no head or html tags
    html = re.sub(u".*<body.*?>(.*)</body></html>",
                  "\\1", html.replace("\n", u""))
    # strip superfluous Qt formatting
    html = re.sub(u"(?:-qt-table-type: root; )?"
                  "margin-top:\d+px; margin-bottom:\d+px; margin-left:\d+px; "
                  "margin-right:\d+px;(?: -qt-block-indent:0; "
                  "text-indent:0px;)?", u"", html)
    html = re.sub(u"-qt-paragraph-type:empty;", u"", html)
    # strip leading space in style statements, and remove if no contents
    html = re.sub(u'style=" ', u'style="', html)
    html = re.sub(u' style=""', u"", html)
    # convert P tags into SPAN and/or BR
    html = re.sub(u'<p( style=.+?)>(.*?)</p>', u'<span\\1>\\2</span><br>', html)
    html = re.sub(u'<p>(.*?)</p>', u'\\1<br>', html)
    html = re.sub(u'<br>$', u'', html)
    html = re.sub(u"^<table><tr><td style=\"border: none;\">(.*)<br></td></tr></table>$", u"\\1", html)
    return html

# IDs
##############################################################################

def genID(static=[]):
    "Generate a random, unique 64bit ID."
    # 23 bits of randomness, 41 bits of current time
    # random rather than a counter to ensure efficient btree
    t = long(time.time()*1000)
    if not static:
        static.extend([t, {}])
    else:
        if static[0] != t:
            static[0] = t
            static[1] = {}
    while 1:
        rand = random.getrandbits(23)
        if rand not in static[1]:
            static[1][rand] = True
            break
    x = rand << 41 | t
    # turn into a signed long
    if x >= 9223372036854775808L:
        x -= 18446744073709551616L
    return x

def hexifyID(id):
    if id < 0:
        id += 18446744073709551616L
    return "%x" % id

def dehexifyID(id):
    id = int(id, 16)
    if id >= 9223372036854775808L:
        id -= 18446744073709551616L
    return id

def ids2str(ids):
    """Given a list of integers, return a string '(int1,int2,.)'
The caller is responsible for ensuring only integers are provided.
This is safe if you use sqlite primary key columns, which are guaranteed
to be integers."""
    return "(%s)" % ",".join([str(i) for i in ids])

# Tags
##############################################################################

def parseTags(tags):
    "Parse a string and return a list of tags."
    tags = re.split(" |, ?", tags)
    return [t.strip() for t in tags if t.strip()]

def joinTags(tags):
    return u" ".join(tags)

def canonifyTags(tags):
    "Strip leading/trailing/superfluous commas and duplicates."
    return joinTags(sorted(set(parseTags(tags))))

def findTag(tag, tags):
    "True if TAG is in TAGS. Ignore case."
    if not isinstance(tags, types.ListType):
        tags = parseTags(tags)
    return tag.lower() in [t.lower() for t in tags]

def addTags(tagstr, tags):
    "Add tags if they don't exist."
    currentTags = parseTags(tags)
    for tag in parseTags(tagstr):
        if not findTag(tag, currentTags):
            currentTags.append(tag)
    return joinTags(currentTags)

def deleteTags(tagstr, tags):
    "Delete tags if they don't exists."
    currentTags = parseTags(tags)
    for tag in parseTags(tagstr):
        try:
            currentTags.remove(tag)
        except ValueError:
            pass
    return joinTags(currentTags)

# Misc
##############################################################################

def checksum(data):
    return md5(data).hexdigest()
 228  
ez_setup.py
@@ -0,0 +1,228 @@
#!python
"""Bootstrap setuptools installation
If you want to use setuptools in your package's setup.py, just include this
file in the same directory with it, and add this to the top of your setup.py::
    from ez_setup import use_setuptools
    use_setuptools()
If you want to require a specific version of setuptools, set a download
mirror, or use an alternate download directory, you can do so by supplying
the appropriate options to ``use_setuptools()``.
This file can also be run as a script to install or upgrade setuptools.
"""
import sys
DEFAULT_VERSION = "0.6c5"
DEFAULT_URL     = "http://cheeseshop.python.org/packages/%s/s/setuptools/" % sys.version[:3]

md5_data = {
    'setuptools-0.6b1-py2.3.egg': '8822caf901250d848b996b7f25c6e6ca',
    'setuptools-0.6b1-py2.4.egg': 'b79a8a403e4502fbb85ee3f1941735cb',
    'setuptools-0.6b2-py2.3.egg': '5657759d8a6d8fc44070a9d07272d99b',
    'setuptools-0.6b2-py2.4.egg': '4996a8d169d2be661fa32a6e52e4f82a',
    'setuptools-0.6b3-py2.3.egg': 'bb31c0fc7399a63579975cad9f5a0618',
    'setuptools-0.6b3-py2.4.egg': '38a8c6b3d6ecd22247f179f7da669fac',
    'setuptools-0.6b4-py2.3.egg': '62045a24ed4e1ebc77fe039aa4e6f7e5',
    'setuptools-0.6b4-py2.4.egg': '4cb2a185d228dacffb2d17f103b3b1c4',
    'setuptools-0.6c1-py2.3.egg': 'b3f2b5539d65cb7f74ad79127f1a908c',
    'setuptools-0.6c1-py2.4.egg': 'b45adeda0667d2d2ffe14009364f2a4b',
    'setuptools-0.6c2-py2.3.egg': 'f0064bf6aa2b7d0f3ba0b43f20817c27',
    'setuptools-0.6c2-py2.4.egg': '616192eec35f47e8ea16cd6a122b7277',
    'setuptools-0.6c3-py2.3.egg': 'f181fa125dfe85a259c9cd6f1d7b78fa',
    'setuptools-0.6c3-py2.4.egg': 'e0ed74682c998bfb73bf803a50e7b71e',
    'setuptools-0.6c3-py2.5.egg': 'abef16fdd61955514841c7c6bd98965e',
    'setuptools-0.6c4-py2.3.egg': 'b0b9131acab32022bfac7f44c5d7971f',
    'setuptools-0.6c4-py2.4.egg': '2a1f9656d4fbf3c97bf946c0a124e6e2',
    'setuptools-0.6c4-py2.5.egg': '8f5a052e32cdb9c72bcf4b5526f28afc',
    'setuptools-0.6c5-py2.3.egg': 'ee9fd80965da04f2f3e6b3576e9d8167',
    'setuptools-0.6c5-py2.4.egg': 'afe2adf1c01701ee841761f5bcd8aa64',
    'setuptools-0.6c5-py2.5.egg': 'a8d3f61494ccaa8714dfed37bccd3d5d',
}

import sys, os

def _validate_md5(egg_name, data):
    if egg_name in md5_data:
        from md5 import md5
        digest = md5(data).hexdigest()
        if digest != md5_data[egg_name]:
            print >>sys.stderr, (
                "md5 validation of %s failed!  (Possible download problem?)"
                % egg_name
            )
            sys.exit(2)
    return data


def use_setuptools(
    version=DEFAULT_VERSION, download_base=DEFAULT_URL, to_dir=os.curdir,
    download_delay=15
):
    """Automatically find/download setuptools and make it available on sys.path
    `version` should be a valid setuptools version number that is available
    as an egg for download under the `download_base` URL (which should end with
    a '/').  `to_dir` is the directory where setuptools will be downloaded, if
    it is not already available.  If `download_delay` is specified, it should
    be the number of seconds that will be paused before initiating a download,
    should one be required.  If an older version of setuptools is installed,
    this routine will print a message to ``sys.stderr`` and raise SystemExit in
    an attempt to abort the calling script.
    """
    try:
        import setuptools
        if setuptools.__version__ == '0.0.1':
            print >>sys.stderr, (
            "You have an obsolete version of setuptools installed.  Please\n"
            "remove it from your system entirely before rerunning this script."
            )
            sys.exit(2)
    except ImportError:
        egg = download_setuptools(version, download_base, to_dir, download_delay)
        sys.path.insert(0, egg)
        import setuptools; setuptools.bootstrap_install_from = egg

    import pkg_resources
    try:
        pkg_resources.require("setuptools>="+version)

    except pkg_resources.VersionConflict, e:
        # XXX could we install in a subprocess here?
        print >>sys.stderr, (
            "The required version of setuptools (>=%s) is not available, and\n"
            "can't be installed while this script is running. Please install\n"
            " a more recent version first.\n\n(Currently using %r)"
        ) % (version, e.args[0])
        sys.exit(2)

def download_setuptools(
    version=DEFAULT_VERSION, download_base=DEFAULT_URL, to_dir=os.curdir,
    delay = 15
):
    """Download setuptools from a specified location and return its filename
    `version` should be a valid setuptools version number that is available
    as an egg for download under the `download_base` URL (which should end
    with a '/'). `to_dir` is the directory where the egg will be downloaded.
    `delay` is the number of seconds to pause before an actual download attempt.
    """
    import urllib2, shutil
    egg_name = "setuptools-%s-py%s.egg" % (version,sys.version[:3])
    url = download_base + egg_name
    saveto = os.path.join(to_dir, egg_name)
    src = dst = None
    if not os.path.exists(saveto):  # Avoid repeated downloads
        try:
            from distutils import log
            if delay:
                log.warn("""
---------------------------------------------------------------------------
This script requires setuptools version %s to run (even to display
help).  I will attempt to download it for you (from
%s), but
you may need to enable firewall access for this script first.
I will start the download in %d seconds.
(Note: if this machine does not have network access, please obtain the file
   %s
and place it in this directory before rerunning this script.)
---------------------------------------------------------------------------""",
                    version, download_base, delay, url
                ); from time import sleep; sleep(delay)
            log.warn("Downloading %s", url)
            src = urllib2.urlopen(url)
            # Read/write all in one block, so we don't create a corrupt file
            # if the download is interrupted.
            data = _validate_md5(egg_name, src.read())
            dst = open(saveto,"wb"); dst.write(data)
        finally:
            if src: src.close()
            if dst: dst.close()
    return os.path.realpath(saveto)

def main(argv, version=DEFAULT_VERSION):
    """Install or upgrade setuptools and EasyInstall"""

    try:
        import setuptools
    except ImportError:
        egg = None
        try:
            egg = download_setuptools(version, delay=0)
            sys.path.insert(0,egg)
            from setuptools.command.easy_install import main
            return main(list(argv)+[egg])   # we're done here
        finally:
            if egg and os.path.exists(egg):
                os.unlink(egg)
    else:
        if setuptools.__version__ == '0.0.1':
            # tell the user to uninstall obsolete version
            use_setuptools(version)

    req = "setuptools>="+version
    import pkg_resources
    try:
        pkg_resources.require(req)
    except pkg_resources.VersionConflict:
        try:
            from setuptools.command.easy_install import main
        except ImportError:
            from easy_install import main
        main(list(argv)+[download_setuptools(delay=0)])
        sys.exit(0) # try to force an exit
    else:
        if argv:
            from setuptools.command.easy_install import main
            main(argv)
        else:
            print "Setuptools version",version,"or greater has been installed."
            print '(Run "ez_setup.py -U setuptools" to reinstall or upgrade.)'



def update_md5(filenames):
    """Update our built-in md5 registry"""

    import re
    from md5 import md5

    for name in filenames:
        base = os.path.basename(name)
        f = open(name,'rb')
        md5_data[base] = md5(f.read()).hexdigest()
        f.close()

    data = ["    %r: %r,\n" % it for it in md5_data.items()]
    data.sort()
    repl = "".join(data)

    import inspect
    srcfile = inspect.getsourcefile(sys.modules[__name__])
    f = open(srcfile, 'rb'); src = f.read(); f.close()

    match = re.search("\nmd5_data = {\n([^}]+)}", src)
    if not match:
        print >>sys.stderr, "Internal error!"
        sys.exit(2)

    src = src[:match.start(1)] + repl + src[match.end(1):]
    f = open(srcfile,'w')
    f.write(src)
    f.close()


if __name__=='__main__':
    if len(sys.argv)>2 and sys.argv[1]=='--md5update':
        update_md5(sys.argv[2:])
    else:
        main(sys.argv[1:])





 36  
instructions.yml
@@ -0,0 +1,36 @@
from python.read~v :
      - sets-up/rake.io :import octocokit_sets-up :toolbelt :
use_setuptools()
from setuptools import setup, find_packages
import sys, os

import anki

setup(name='bitore.sig',
     kind :kite.yarn :
      version'@v'-"0.4.10.1":,,
      description='An intelligent spaced-repetition memory training library',
      long_description="",
      # Get strings from http://www.python.org/pypi?%3Aaction=list_classifiers
      classifiers=[
    'Intended Audience :: Developers',
    'Intended Audience :: Education',
    'License :: OSI Approved :: GNU General Public License (GPL)',
    'Operating System :: OS Independent',
    'Programming Language :: Python',
    'Topic :: Education',
    'Topic :: Software Development :: Libraries :: Python Modules',
        ],
      keywords='',
     '" author'"' ':' '"ZachryTWood'@'Administrator'@'.it'.git'"','
      author's :e-mail :zachryiixixiiwood@gmail.com :''
      'WebBaseUrl=' ':' '"https://www.bitcore.net/"'":,
      'url='http://ichi2.net/anki/index.html',
      license='GPLv3',
      packages=["anki", "anki.importing"],
      package_data={'anki': ['locale/*/*/*'],},
      include_package_data=True,
      zip_safe=False,
      install_requires=[
        ],
      )
 0  
setup.cfg
Empty file.
 0  
tests/__init__.py
Empty file.
 1  
tests/deck/fake.png
Unable to render rich display

 50  
tests/importing/dingsbums.xml
@@ -0,0 +1,50 @@
<?xml version="1.0" encoding="UTF-8"?>
<vocabulary version="3">
<info><title>Deutsch - Italienisch</title><author>Rick Gruber-Riemer</author><notes>Klett Grund- und Aufbauwortschatz</notes><copyright></copyright><licence></licence><blabel>Deutsch</blabel><tlabel>Italienisch</tlabel><alabel>Attributes</alabel><ulabel>Lektion</ulabel><clabel>Kategori</clabel><olabel>Others</olabel><explabel>Erklärung</explabel><exlabel>Unregelmässig</exlabel><bor>en_US</bor><tor>en_US</tor><aor>en_US</aor><uor>en_US</uor><cor>en_US</cor><expor>en_US</expor><exor>en_US</exor><por>en_US</por><ror>en_US</ror><visa>1</visa><visu>0</visu><viscat>0</viscat><visexp>0</visexp><visex>2</visex><vispro>2</vispro><visrel>2</visrel><syllb>false</syllb><syllt>false</syllt></info>
<etattributes>
<eta eid="ETA4" n="Steigerung" di="ETAI10" lu="20061222 07:56:27 CET"><etai eid="ETAI10" ir="false">Regelmässig</etai><etai eid="ETAI11" ir="false">Unregelmässig</etai></eta>
<eta eid="ETA5" n="Perfekt" di="ETAI12" lu="20070210 13:20:09 CET"><etai eid="ETAI12" ir="false">avere</etai><etai eid="ETAI13" ir="false">essere</etai><etai eid="ETAI14" ir="false">avere oder essere</etai></eta>
<eta eid="ETA1" n="Konjugation" di="ETAI1" lu="20070211 12:35:19 CET"><etai eid="ETAI1" ir="false">-are (regelmässig)</etai><etai eid="ETAI16" ir="false">-ere (regelmässig)</etai><etai eid="ETAI15" ir="false">-ire (regelmässig)</etai><etai eid="ETAI2" ir="false">Unregelmässig</etai></eta>
<eta eid="ETA2" n="Geschlecht" di="ETAI3" lu="20070210 21:08:17 CET"><etai eid="ETAI3" ir="false">il</etai><etai eid="ETAI4" ir="false">la</etai></eta>
<eta eid="ETA3" n="Mehrzahl" di="ETAI6" lu="20070212 10:03:56 CET"><etai eid="ETAI6" ir="false">Regelmässig</etai><etai eid="ETAI7" ir="false">Unregelmässig</etai><etai eid="ETAI8" ir="false">Nur Einzahl</etai><etai eid="ETAI9" ir="false">Nur Mehrzahl</etai></eta>
</etattributes>
<entrytypes>
<entrytype eid="ET8" n="Sätze und Redewendungen" lu="20070310 20:16:30 CET"></entrytype>
<entrytype eid="ET7" n="Slang" lu="20070210 20:58:29 CET"></entrytype>
<entrytype eid="ET4" n="Adjektiv / Adverb" a1="ETA4" lu="20061222 07:58:14 CET"></entrytype>
<entrytype eid="ET3" n="Substantiv" a1="ETA2" a2="ETA3" lu="20061222 07:55:39 CET"></entrytype>
<entrytype eid="ET6" n="Modi di dire" lu="20070210 13:29:14 CET"></entrytype>
<entrytype eid="ET5" n="Konjugation" lu="20070210 13:20:36 CET"></entrytype>
<entrytype eid="ET2" n="Anderes" lu="20061222 07:52:31 CET"></entrytype>
<entrytype eid="ET1" n="Verb" a1="ETA1" a2="ETA5" lu="20061222 07:57:41 CET"></entrytype>
</entrytypes>
<units>
<unit eid="U4" lu="20070217 20:14:02 CET"><name>Rest</name><desc></desc></unit>
<unit eid="U3" lu="20070217 20:03:30 CET"><name>Harenberg Kalender Italienisch 2007</name><desc></desc></unit>
<unit eid="U5" lu="20070310 20:15:52 CET"><name>50. Restaurant, Café, Hotel</name><desc></desc></unit>
<unit eid="U2" lu="20070210 13:31:47 CET"><name>Berlitz Kalender 2005</name><desc></desc></unit>
<unit eid="U1" lu="20061222 07:48:58 CET"><name>A</name><desc></desc></unit>
</units>
<categories>
<category eid="C1" lu="20061222 07:46:40 CET"><name>Default</name><desc></desc></category>
</categories>
<entries>
<e et="ET1" eid="E113" u="U1" c="C1" lv="1" st="true" lu="20070211 14:18:49 CET" ll="19700101 01:00:00 CET" a1="ETAI1" a2="ETAI12"><o>entfernen, beseitigen</o><d>allontanare</d></e>
<e et="ET2" eid="E114" u="U1" c="C1" lv="2" st="true" lu="20070211 14:20:31 CET" ll="19700101 01:00:00 CET"><o>dann; damals, also; früher</o><d>allora</d></e>
<e et="ET3" eid="E112" u="U1" c="C1" lv="3" st="true" lu="20070211 14:17:19 CET" ll="19700101 01:00:00 CET" a1="ETAI3" a2="ETAI6"><o>Schüler, Zögling</o><d>allievo</d></e>
<e et="ET4" eid="E110" u="U1" c="C1" lv="4" st="true" lu="20070211 14:10:56 CET" ll="19700101 01:00:00 CET" a1="ETAI10"><o>lustig, heiter</o><d>allegro</d></e>
<e et="ET6" eid="E8" u="U2" c="C1" lv="5" st="true" lu="20070210 13:31:58 CET" ll="19700101 01:00:00 CET"><o>sich in einer unbequemen Situation befinden</o><d>essere un pesche four d&apos; aqua</d></e>
<e et="ET7" eid="E49" u="U2" c="C1" lv="6" st="true" lu="20070210 20:59:34 CET" ll="19700101 01:00:00 CET"><o>das ist mir egal</o><d>me ne frego</d><ep>Geste: unter dem Kinn mit der Hand vonhinten nach vorne reiben</ep></e>
<e et="ET3" eid="E251" u="U5" c="C1" lv="7" st="true" lu="20070310 20:29:49 CET" ll="19700101 01:00:00 CET" a1="ETAI4" a2="ETAI6"><o>Wirtin</o><d>ostessa</d></e>
</entries>
<stats>
<sset ts="20070310 21:16:36 CET"><sne lv="1">236</sne><sne lv="2">19</sne><sne lv="3">1</sne><sne lv="4">5</sne><sne lv="5">3</sne><sne lv="6">1</sne><sne lv="7">2</sne></sset>
<sset ts="20070217 20:37:22 CET"><sne lv="1">196</sne><sne lv="2">19</sne><sne lv="3">1</sne><sne lv="4">5</sne><sne lv="5">3</sne><sne lv="6">1</sne><sne lv="7">2</sne></sset>
<sset ts="20070212 10:13:05 CET"><sne lv="1">125</sne><sne lv="2">12</sne><sne lv="3">5</sne><sne lv="4">1</sne><sne lv="5">1</sne><sne lv="6">0</sne><sne lv="7">0</sne></sset>
<sset ts="20070228 21:44:04 CET"><sne lv="1">202</sne><sne lv="2">19</sne><sne lv="3">1</sne><sne lv="4">5</sne><sne lv="5">3</sne><sne lv="6">1</sne><sne lv="7">2</sne></sset>
<sset ts="20070217 19:10:49 CET"><sne lv="1">188</sne><sne lv="2">12</sne><sne lv="3">5</sne><sne lv="4">1</sne><sne lv="5">1</sne><sne lv="6">0</sne><sne lv="7">0</sne></sset>
<sset ts="20070211 20:55:08 CET"><sne lv="1">124</sne><sne lv="2">18</sne><sne lv="3">1</sne><sne lv="4">1</sne><sne lv="5">0</sne><sne lv="6">0</sne><sne lv="7">0</sne></sset>
<sset ts="20070217 19:14:04 CET"><sne lv="1">176</sne><sne lv="2">19</sne><sne lv="3">1</sne><sne lv="4">5</sne><sne lv="5">3</sne><sne lv="6">1</sne><sne lv="7">2</sne></sset>
<sset ts="20070211 20:57:10 CET"><sne lv="1">124</sne><sne lv="2">18</sne><sne lv="3">1</sne><sne lv="4">1</sne><sne lv="5">0</sne><sne lv="6">0</sne><sne lv="7">0</sne></sset>
</stats>
</vocabulary>
 89  
tests/importing/supermemo1.xml
@@ -0,0 +1,89 @@
<?xml version="1.0" encoding="UTF-8"?>
<SuperMemoCollection>
  <Count>3572</Count>

  <SuperMemoElement>
    <ID>1</ID>

    <Type>Topic</Type>

    <Content>
      <Question />

      <Answer />
    </Content>

    <SuperMemoElement>
      <ID>40326</ID>

      <Title>aoeu</Title>

      <Type>Topic</Type>

      <SuperMemoElement>
        <ID>40327</ID>

        <Title>1-400</Title>

        <Type>Topic</Type>

        <SuperMemoElement>
          <ID>40615</ID>

          <Title>aoeu</Title>

          <Type>Topic</Type>

          <SuperMemoElement>
            <ID>10247</ID>

            <Type>Item</Type>

            <Content>
              <Question>aoeu</Question>

              <Answer>aoeu</Answer>
            </Content>

            <LearningData>
              <Interval>1844</Interval>

              <Repetitions>7</Repetitions>

              <Lapses>0</Lapses>

              <LastRepetition>19.09.2002</LastRepetition>

              <AFactor>5,701</AFactor>

              <UFactor>2,452</UFactor>
            </LearningData>
          </SuperMemoElement>

        </SuperMemoElement>

        <Type>Topic</Type>

        <Content>
          <Question>aoeu</Question>
          <Answer />
        </Content>

        <LearningData>
          <Interval>0</Interval>

          <Repetitions>0</Repetitions>

          <Lapses>0</Lapses>

          <LastRepetition>04.08.2000</LastRepetition>

          <AFactor>3,000</AFactor>

          <UFactor>0,000</UFactor>
        </LearningData>

      </SuperMemoElement>
    </SuperMemoElement>
  </SuperMemoElement>
</SuperMemoCollection>
 219  
tests/importing/test.mem
@@ -0,0 +1,219 @@
--- Mnemosyne Data Base --- Format Version 1 ---
(lp1
(imnemosyne.core.mnemosyne_core
StartTime
p2
(dp3
S'time'
p4
F1183141800
sba(lp5
(imnemosyne.core.mnemosyne_core
Category
p6
(dp7
S'active'
p8
I01
sS'name'
p9
V<default>
p10
sba(imnemosyne.core.mnemosyne_core
Category
p11
(dp12
S'active'
p13
I01
sS'name'
p14
Vfoo
p15
sba(imnemosyne.core.mnemosyne_core
Category
p16
(dp17
g13
I01
sg14
Vbaz, quux
p18
sbaa(lp19
(imnemosyne.core.mnemosyne_core
Item
p20
(dp21
S'a'
Vbar
p22
sS'last_rep'
p23
L34L
sS'ret_reps'
p24
I0
sS'cat'
p25
g16
sS'q'
Vfoo
p26
sS'grade'
p27
I0
sS'acq_reps'
p28
I1
sS'ret_reps_since_lapse'
p29
I0
sS'easiness'
p30
F2.5
sS'lapses'
p31
I0
sS'acq_reps_since_lapse'
p32
I1
sS'next_rep'
p33
L34L
sS'id'
p34
S'9f401476'
p35
sba(imnemosyne.core.mnemosyne_core
Item
p36
(dp37
S'a'
Vfoo
p38
sg23
L34L
sg24
I0
sg25
g6
sS'q'
Vbar
p39
sg27
I0
sg28
I1
sg29
I0
sg30
F2.5
sg31
I0
sg32
I1
sg33
L34L
sg34
S'a869958d'
p40
sba(imnemosyne.core.mnemosyne_core
Item
p41
(dp42
S'a'
Vquux
p43
sg23
L34L
sg24
I0
sg25
g11
sS'q'
Vbaz
p44
sg27
I5
sg28
I2
sg29
I0
sg30
F2.5
sg31
I0
sg32
I2
sg33
L35L
sg34
S'74651aa3'
p45
sba(imnemosyne.core.mnemosyne_core
Item
p46
(dp47
S'a'
Vbaz
p48
sg23
L34L
sg24
I0
sg25
g6
sS'q'
Vquux
p49
sg27
I0
sg28
I1
sg29
I0
sg30
F2.5
sg31
I0
sg32
I1
sg33
L34L
sg34
S'0bd8f10b'
p50
sba(imnemosyne.core.mnemosyne_core
Item
p51
(dp52
S'a'
Vcard
p53
sg23
L34L
sg24
I0
sg25
g11
sS'q'
Vonesided
p54
sg27
I0
sg28
I1
sg29
I0
sg30
F2.5
sg31
I0
sg32
I1
sg33
L34L
sg34
S'bb503cf1'
p55
sbaa.
 BIN +3.84 KB 
tests/importing/test03.anki
Binary file not shown.
 BIN +31 KB 
tests/importing/test10-2.anki
Binary file not shown.
 BIN +40 KB 
tests/importing/test10-3.anki
Binary file not shown.
 BIN +31 KB 
tests/importing/test10.anki
Binary file not shown.
 11  
tests/importing/text-2fields.txt
@@ -0,0 +1,11 @@
# this is a test file

食べる	to eat
飲む	to drink
テスト	test
to eat	食べる
飲む	to drink
多すぎる	too many	fields
not, enough, fields
遊ぶ	
	to play
 2  
tests/importing/text-tags.txt
@@ -0,0 +1,2 @@
foo	bar	baz,qux
foo2	bar2	baz2
 7  
tests/shared.py
@@ -0,0 +1,7 @@
def assertException(exception, func):
    found = False
    try:
        func()
    except exception:
        found = True
    assert found
 BIN +42 KB 
tests/syncing/media-tests/1.anki
Binary file not shown.
 BIN +545 Bytes 
tests/syncing/media-tests/1.media/834a227f8d0abc4e2193f08138e59885.png
Unable to render rich display

 BIN +580 Bytes 
tests/syncing/media-tests/1.media/c4ad64a7afe9b09602cdf91e18897959.png
Unable to render rich display

 BIN +42 KB 
tests/syncing/media-tests/2.anki
Binary file not shown.
 BIN +644 Bytes 
tests/syncing/media-tests/2.media/22161b29b0c18e068038021f54eee1ee.png
Unable to render rich display

 279  
tests/test_deck.py
@@ -0,0 +1,279 @@
# coding: utf-8

import nose, os, re
from tests.shared import assertException

from anki.errors import *
from anki import DeckStorage
from anki.db import *
from anki.models import FieldModel, Model, CardModel
from anki.stdmodels import BasicModel
from anki.utils import stripHTML

newPath = None
newModified = None

testDir = os.path.dirname(__file__)

## opening/closing

def test_new():
    deck = DeckStorage.Deck()
    assert not deck.path
    assert deck.engine
    assert deck.modified

def test_attachNew():
    global newPath, newModified
    path = "/tmp/test_attachNew.anki"
    try:
        os.unlink(path)
    except OSError:
        pass
    deck = DeckStorage.Deck(path)
    # for attachOld()
    newPath = deck.path
    deck.setVar("pageSize", 4096)
    deck.save()
    newModified = deck.modified
    deck.close()
    del deck

def test_attachOld():
    deck = DeckStorage.Deck(newPath, backup=False)
    assert deck.modified == newModified
    deck.close()

def test_attachReadOnly():
    # non-writeable dir
    assertException(Exception,
                    lambda: DeckStorage.Deck("/attachroot"))
    # reuse tmp file from before, test non-writeable file
    os.chmod(newPath, 0)
    assertException(Exception,
                    lambda: DeckStorage.Deck(newPath))
    os.chmod(newPath, 0666)
    os.unlink(newPath)

def test_saveAs():
    path = "/tmp/test_saveAs.anki"
    try:
        os.unlink(path)
    except OSError:
        pass
    path2 = "/tmp/test_saveAs2.anki"
    try:
        os.unlink(path2)
    except OSError:
        pass
    # start with an in-memory deck
    deck = DeckStorage.Deck()
    deck.addModel(BasicModel())
    # add a card
    f = deck.newFact()
    f['Front'] = u"foo"; f['Back'] = u"bar"
    deck.addFact(f)
    assert deck.cardCount == 1
    # save in new deck
    newDeck = deck.saveAs(path)
    assert newDeck.cardCount == 1
    # delete card
    id = newDeck.s.scalar("select id from cards")
    newDeck.deleteCard(id)
    # save into new deck
    newDeck2 = newDeck.saveAs(path2)
    # new deck should have zero cards
    assert newDeck2.cardCount == 0
    # but old deck should have reverted the unsaved changes
    newDeck = DeckStorage.Deck(path)
    assert newDeck.cardCount == 1
    newDeck.close()

def test_factAddDelete():
    deck = DeckStorage.Deck()
    deck.addModel(BasicModel())
    # set rollback point
    deck.s.commit()
    f = deck.newFact()
    # empty fields
    try:
        deck.addFact(f)
    except Exception, e:
        pass
    assert e.data['type'] == 'fieldEmpty'
    # add a fact
    f['Front'] = u"one"; f['Back'] = u"two"
    f = deck.addFact(f)
    assert len(f.cards) == 1
    deck.rollback()
    # try with two cards
    f = deck.newFact()
    f['Front'] = u"one"; f['Back'] = u"two"
    f.model.cardModels[1].active = True
    f = deck.addFact(f)
    assert len(f.cards) == 2
    # ensure correct order
    c0 = [c for c in f.cards if c.ordinal == 0][0]
    assert re.sub("</?.+?>", "", c0.question) == u"one"
    # now let's make a duplicate
    f2 = deck.newFact()
    f2['Front'] = u"one"; f2['Back'] = u"three"
    try:
        f2 = deck.addFact(f2)
    except Exception, e:
        pass
    assert e.data['type'] == 'fieldNotUnique'
    # try delete the first card
    id1 = f.cards[0].id; id2 = f.cards[1].id
    deck.deleteCard(id1)
    # and the second should clear the fact
    deck.deleteCard(id2)

def test_modelAddDelete():
    deck = DeckStorage.Deck()
    deck.addModel(BasicModel())
    deck.addModel(BasicModel())
    f = deck.newFact()
    f['Front'] = u'1'
    f['Back'] = u'2'
    deck.addFact(f)
    assert deck.cardCount == 1
    deck.deleteModel(deck.currentModel)
    assert deck.cardCount == 0
    deck.s.refresh(deck)

def test_modelCopy():
    deck = DeckStorage.Deck()
    m = BasicModel()
    assert len(m.fieldModels) == 2
    assert len(m.cardModels) == 2
    deck.addModel(m)
    f = deck.newFact()
    f['Front'] = u'1'
    deck.addFact(f)
    m2 = deck.copyModel(m)
    assert m2.name == "Basic copy"
    assert m2.id != m.id
    assert m2.fieldModels[0].id != m.fieldModels[0].id
    assert m2.cardModels[0].id != m.cardModels[0].id
    assert len(m2.fieldModels) == 2
    assert len(m.fieldModels) == 2
    assert len(m2.fieldModels) == len(m.fieldModels)
    assert len(m.cardModels) == 2
    assert len(m2.cardModels) == 2

def test_media():
    deck = DeckStorage.Deck()
    # create a media dir
    deck.mediaDir(create=True)
    # put a file into it
    file = unicode(os.path.join(testDir, "deck/fake.png"))
    deck.addMedia(file)
    # make sure it gets copied on saveas
    path = "/tmp/saveAs2.anki"
    sum = "0bee89b07a248e27c83fc3d5951213c1.png"
    try:
        os.unlink(path)
    except OSError:
        pass
    deck.saveAs(path)
    assert os.path.exists("/tmp/saveAs2.media/%s" % sum)

def test_modelChange():
    deck = DeckStorage.Deck()
    m = Model(u"Japanese")
    m1 = m
    f = FieldModel(u'Expression', True, True)
    m.addFieldModel(f)
    m.addFieldModel(FieldModel(u'Meaning', False, False))
    f = FieldModel(u'Reading', False, False)
    m.addFieldModel(f)
    m.addCardModel(CardModel(u"Recognition",
                             u"%(Expression)s",
                             u"%(Reading)s<br>%(Meaning)s"))
    m.addCardModel(CardModel(u"Recall",
                             u"%(Meaning)s",
                             u"%(Expression)s<br>%(Reading)s",
                             active=False))
    m.tags = u"Japanese"
    m1.cardModels[1].active = True
    deck.addModel(m1)
    f = deck.newFact()
    f['Expression'] = u'e'
    f['Meaning'] = u'm'
    f['Reading'] = u'r'
    f = deck.addFact(f)
    f2 = deck.newFact()
    f2['Expression'] = u'e2'
    f2['Meaning'] = u'm2'
    f2['Reading'] = u'r2'
    deck.addFact(f2)
    m2 = BasicModel()
    m2.cardModels[1].active = True
    deck.addModel(m2)
    # convert to basic
    assert deck.modelUseCount(m1) == 2
    assert deck.modelUseCount(m2) == 0
    assert deck.cardCount == 4
    assert deck.factCount == 2
    fmap = {m1.fieldModels[0]: m2.fieldModels[0],
            m1.fieldModels[1]: None,
            m1.fieldModels[2]: m2.fieldModels[1]}
    cmap = {m1.cardModels[0]: m2.cardModels[0],
            m1.cardModels[1]: None}
    deck.changeModel([f.id], m2, fmap, cmap)
    assert deck.modelUseCount(m1) == 1
    assert deck.modelUseCount(m2) == 1
    assert deck.cardCount == 3
    assert deck.factCount == 2
    (q, a) = deck.s.first("""
select question, answer from cards where factId = :id""",
                          id=f.id)
    assert stripHTML(q) == u"e"
    assert stripHTML(a) == u"r"

def test_findCards():
    deck = DeckStorage.Deck()
    deck.addModel(BasicModel())
    f = deck.newFact()
    f['Front'] = u'dog'
    f['Back'] = u'cat'
    f.tags = u"monkey"
    deck.addFact(f)
    f = deck.newFact()
    f['Front'] = u'goats are fun'
    f['Back'] = u'sheep'
    f.tags = u"sheep goat horse"
    deck.addFact(f)
    f = deck.newFact()
    f['Front'] = u'cat'
    f['Back'] = u'sheep'
    deck.addFact(f)
    assert not deck.findCards("tag:donkey")
    assert len(deck.findCards("tag:sheep")) == 1
    assert len(deck.findCards("tag:sheep tag:goat")) == 1
    assert len(deck.findCards("tag:sheep tag:monkey")) == 0
    assert len(deck.findCards("tag:monkey")) == 1
    assert len(deck.findCards("tag:sheep -tag:monkey")) == 1
    assert len(deck.findCards("-tag:sheep")) == 2
    assert len(deck.findCards("cat")) == 2
    assert len(deck.findCards("cat -dog")) == 1
    assert len(deck.findCards("cat -dog")) == 1
    assert len(deck.findCards("are goats")) == 1
    assert len(deck.findCards('"are goats"')) == 0
    assert len(deck.findCards('"goats are"')) == 1
    # make sure card templates and models match too
    assert len(deck.findCards('tag:basic')) == 3
    assert len(deck.findCards('tag:forward')) == 3
    deck.addModel(BasicModel())
    f = deck.newFact()
    f['Front'] = u'foo'
    f['Back'] = u'bar'
    deck.addFact(f)
    deck.currentModel.cardModels[1].active = True
    f = deck.newFact()
    f['Front'] = u'baz'
    f['Back'] = u'qux'
    c = deck.addFact(f)
    assert len(deck.findCards('tag:forward')) == 5
    assert len(deck.findCards('tag:reverse')) == 1
 62  
tests/test_exporting.py
@@ -0,0 +1,62 @@
# coding: utf-8

import nose, os, tempfile
import anki
from anki import DeckStorage
from anki.exporting import *
from anki.stdmodels import *

deck = None
ds = None
testDir = os.path.dirname(__file__)

def setup1():
    global deck
    deck = DeckStorage.Deck()
    deck.addModel(BasicModel())
    deck.currentModel.cardModels[1].active = True
    f = deck.newFact()
    f['Front'] = u"foo"; f['Back'] = u"bar"; f.tags = u"tag, tag2"
    deck.addFact(f)
    f = deck.newFact()
    f['Front'] = u"baz"; f['Back'] = u"qux"
    deck.addFact(f)

##########################################################################

@nose.with_setup(setup1)
def test_export_anki():
    oldTime = deck.modified
    e = AnkiExporter(deck)
    newname = unicode(tempfile.mkstemp(prefix="ankitest")[1])
    os.unlink(newname)
    e.exportInto(newname)
    assert deck.modified == oldTime
    # connect to new deck
    d2 = DeckStorage.Deck(newname, backup=False)
    assert d2.cardCount == 4
    # try again, limited to a tag
    newname = unicode(tempfile.mkstemp(prefix="ankitest")[1])
    os.unlink(newname)
    e.limitTags = ['tag']
    e.exportInto(newname)
    d2 = DeckStorage.Deck(newname, backup=False)
    assert d2.cardCount == 2

@nose.with_setup(setup1)
def test_export_textcard():
    e = TextCardExporter(deck)
    f = unicode(tempfile.mkstemp(prefix="ankitest")[1])
    os.unlink(f)
    e.exportInto(f)
    e.includeTags = True
    e.exportInto(f)

@nose.with_setup(setup1)
def test_export_textfact():
    e = TextFactExporter(deck)
    f = unicode(tempfile.mkstemp(prefix="ankitest")[1])
    os.unlink(f)
    e.exportInto(f)
    e.includeTags = True
    e.exportInto(f)
 116  
tests/test_importing.py
@@ -0,0 +1,116 @@
# coding: utf-8

import nose, os, shutil
from tests.shared import assertException

from anki.errors import *
from anki import DeckStorage
from anki.importing import anki10, csvfile, mnemosyne10, supermemo_xml, dingsbums
from anki.stdmodels import BasicModel
from anki.facts import Fact
from anki.sync import SyncClient, SyncServer

from anki.db import *

testDir = os.path.dirname(__file__)

def test_csv():
    deck = DeckStorage.Deck()
    deck.addModel(BasicModel())
    file = unicode(os.path.join(testDir, "importing/text-2fields.txt"))
    i = csvfile.TextImporter(deck, file)
    i.doImport()
    # four problems - missing front, dupe front, wrong num of fields
    assert len(i.log) == 4
    assert i.total == 5
    deck.s.close()

def test_csv_tags():
    deck = DeckStorage.Deck()
    deck.addModel(BasicModel())
    file = unicode(os.path.join(testDir, "importing/text-tags.txt"))
    i = csvfile.TextImporter(deck, file)
    i.doImport()
    facts = deck.s.query(Fact).all()
    assert len(facts) == 2
    assert facts[0].tags == "baz qux" or facts[1].tags == "baz qux"
    deck.s.close()

def test_mnemosyne10():
    deck = DeckStorage.Deck()
    deck.addModel(BasicModel())
    file = unicode(os.path.join(testDir, "importing/test.mem"))
    i = mnemosyne10.Mnemosyne10Importer(deck, file)
    i.doImport()
    assert i.total == 5
    deck.s.close()

def test_supermemo_xml_01_unicode():
    deck = DeckStorage.Deck()
    deck.addModel(BasicModel())
    file = unicode(os.path.join(testDir, "importing/supermemo1.xml"))
    i = supermemo_xml.SupermemoXmlImporter(deck, file)
    #i.META.logToStdOutput = True
    i.doImport()
    # only returning top-level elements?
    assert i.total == 1
    deck.s.close()

def test_anki10():
    # though these are not modified, sqlite updates the mtime, so copy to tmp
    # first
    file_ = unicode(os.path.join(testDir, "importing/test10.anki"))
    file = "/tmp/test10.anki"
    shutil.copy(file_, file)
    file2_ = unicode(os.path.join(testDir, "importing/test10-2.anki"))
    file2 = "/tmp/test10-2.anki"
    shutil.copy(file2_, file2)
    deck = DeckStorage.Deck()
    i = anki10.Anki10Importer(deck, file)
    i.doImport()
    assert i.total == 2
    deck.s.rollback()
    deck.close()
    # import a deck into itself - 10-2 is the same as test10, but with one
    # card answered and another deleted. nothing should be synced to client
    deck = DeckStorage.Deck(file, backup=False)
    i = anki10.Anki10Importer(deck, file2)
    i.doImport()
    assert i.total == 0
    deck.s.rollback()

def test_anki10_modtime():
    deck1 = DeckStorage.Deck()
    deck2 = DeckStorage.Deck()
    client = SyncClient(deck1)
    server = SyncServer(deck2)
    client.setServer(server)
    deck1.addModel(BasicModel())
    f = deck1.newFact()
    f['Front'] = u"foo"; f['Back'] = u"bar"
    deck1.addFact(f)
    assert deck1.cardCount == 1
    assert deck2.cardCount == 0
    client.sync()
    assert deck1.cardCount == 1
    assert deck2.cardCount == 1
    file_ = unicode(os.path.join(testDir, "importing/test10-3.anki"))
    file = "/tmp/test10-3.anki"
    shutil.copy(file_, file)
    i = anki10.Anki10Importer(deck1, file)
    i.doImport()
    client.sync()
    assert i.total == 1
    assert deck2.s.scalar("select count(*) from cards") == 2
    assert deck2.s.scalar("select count(*) from facts") == 2
    assert deck2.s.scalar("select count(*) from models") == 2

def test_dingsbums():
    deck = DeckStorage.Deck()
    deck.addModel(BasicModel())
    startNumberOfFacts = deck.factCount
    file = unicode(os.path.join(testDir, "importing/dingsbums.xml"))
    i = dingsbums.DingsBumsImporter(deck, file)
    i.doImport()
    assert 7 == i.total
    deck.s.close()
 330  
tests/test_sync.py
@@ -0,0 +1,330 @@
# coding: utf-8

import nose, os, tempfile, shutil, time
from tests.shared import assertException

from anki.errors import *
from anki import DeckStorage
from anki.db import *
from anki.stdmodels import BasicModel
from anki.sync import SyncClient, SyncServer, HttpSyncServer, HttpSyncServerProxy
from anki.sync import copyLocalMedia
from anki.stats import dailyStats, globalStats
from anki.facts import Fact
from anki.cards import Card
from anki.models import FieldModel
from anki.media import rebuildMediaDir

#import psyco; psyco.profile()

# Local tests
##########################################################################

deck1=None
deck2=None
client=None
server=None

def setup_local(loadDecks=None):
    global deck1, deck2, client, server
    if loadDecks:
        deck1 = DeckStorage.Deck(loadDecks[0], backup=False)
        deck2 = DeckStorage.Deck(loadDecks[1], backup=False)
    else:
        deck1 = DeckStorage.Deck()
        deck1.addModel(BasicModel())
        deck1.currentModel.cardModels[1].active = True
        deck1.newCardOrder = 1
        f = deck1.newFact()
        f['Front'] = u"foo"; f['Back'] = u"bar"; f.tags = u"foo"
        deck1.addFact(f)
        deck2 = DeckStorage.Deck()
        deck2.addModel(BasicModel())
        deck2.currentModel.cardModels[1].active = True
        f = deck2.newFact()
        f['Front'] = u"baz"; f['Back'] = u"qux"; f.tags = u"bar"
        deck2.addFact(f)
        deck2.newCardOrder = 1
    client = SyncClient(deck1)
    server = SyncServer(deck2)
    client.setServer(server)

def teardown():
    pass

@nose.with_setup(setup_local, teardown)
def test_localsync_diffing():
    assert deck1.cardCount == 2
    assert deck2.cardCount == 2
    lsum = client.summary(deck1.lastSync)
    rsum = server.summary(deck1.lastSync)
    result = client.diffSummary(lsum, rsum, 'cards')
    assert len(result[0]) == 2
    assert len(result[1]) == 0
    assert len(result[2]) == 2
    assert len(result[3]) == 0
    result = client.diffSummary(lsum, rsum, 'facts')
    assert len(result[0]) == 1
    assert len(result[1]) == 0
    assert len(result[2]) == 1
    assert len(result[3]) == 0

@nose.with_setup(setup_local, teardown)
def test_localsync_deck():
    # deck two was modified last
    assert deck2.modified > deck1.modified
    d2mod = deck2.modified
    assert deck1.lastSync == 0 and deck2.lastSync == 0
    client.sync()
    assert deck1.modified == deck2.modified
    assert deck1.lastSync == deck1.modified
    assert deck1.lastSync == deck2.lastSync
    # ensure values are being synced
    deck1.lowPriority += u",foo"
    deck1.updateAllPriorities()
    deck1.setModified()
    client.sync()
    assert "foo" in deck2.lowPriority
    assert deck1.modified == deck2.modified
    assert deck1.lastSync == deck2.lastSync
    deck2.description = u"newname"
    deck2.setModified()
    client.sync()
    assert deck1.description == u"newname"
    # the most recent change should take precedence
    deck1.description = u"foo"
    deck1.setModified()
    deck2.description = u"bar"
    deck2.setModified()
    client.sync()
    assert deck1.description == "bar"
    # answer a card to ensure stats & history are copied
    c = deck1.getCard()
    deck1.answerCard(c, 4)
    client.sync()
    assert dailyStats(deck2).reps == 1
    assert globalStats(deck2).reps == 1
    assert deck2.s.scalar("select count(*) from reviewHistory") == 1
    # make sure meta data is synced
    deck1.setVar("foo", 1)
    assert deck1.getInt("foo") == 1
    assert deck2.getInt("foo") is None
    client.sync()
    assert deck1.getInt("foo") == 1
    assert deck2.getInt("foo") == 1

@nose.with_setup(setup_local, teardown)
def test_localsync_models():
    client.sync()
    # add a model
    deck1.addModel(BasicModel())
    assert len(deck1.models) == 3
    assert len(deck2.models) == 2
    client.sync()
    assert len(deck2.models) == 3
    assert deck1.currentModel.id == deck2.currentModel.id
    # delete the recently added model
    deck2.deleteModel(deck2.currentModel)
    assert len(deck2.models) == 2
    client.sync()
    assert len(deck1.models) == 2
    assert deck1.currentModel.id == deck2.currentModel.id
    # make a card model inactive
    assert deck1.currentModel.cardModels[1].active == True
    deck2.currentModel.cardModels[1].active = False
    deck2.currentModel.setModified()
    deck2.setModified()
    client.sync()
    assert deck1.currentModel.cardModels[1].active == False
    # remove a card model
    deck1.deleteCardModel(deck1.currentModel,
                          deck1.currentModel.cardModels[1])
    deck1.currentModel.setModified()
    deck1.setModified()
    assert len(deck1.currentModel.cardModels) == 1
    client.sync()
    assert len(deck2.currentModel.cardModels) == 1
    # add a field
    c = deck1.getCard()
    deck1.addFieldModel(c.fact.model, FieldModel(u"yo"))
    deck1.s.refresh(c.fact)
    assert len(c.fact.fields) == 3
    assert c.fact['yo'] == u""
    client.sync()
    c2 = deck2.s.query(Card).get(c.id)
    deck2.s.refresh(c2.fact)
    assert c2.fact['yo'] == u""
    # remove the field
    assert "yo" in c2.fact.keys()
    deck2.deleteFieldModel(c2.fact.model, c2.fact.model.fieldModels[2])
    deck2.s.refresh(c2.fact)
    assert "yo" not in c2.fact.keys()
    client.sync()
    deck1.s.refresh(c.fact)
    assert "yo" not in c.fact.keys()
    # rename a field
    assert u"Front" in c.fact.keys()
    deck1.renameFieldModel(deck1.currentModel,
                           deck1.currentModel.fieldModels[0],
                           u"Sideways")
    client.sync()
    assert deck2.currentModel.fieldModels[0].name == u"Sideways"

@nose.with_setup(setup_local, teardown)
def test_localsync_factsandcards():
    assert deck1.factCount == 1 and deck1.cardCount == 2
    assert deck2.factCount == 1 and deck2.cardCount == 2
    client.sync()
    assert deck1.factCount == 2 and deck1.cardCount == 4
    assert deck2.factCount == 2 and deck2.cardCount == 4
    # ensure the fact was copied across
    f1 = deck1.s.query(Fact).first()
    f2 = deck1.s.query(Fact).get(f1.id)
    f1['Front'] = u"myfront"
    f1.setModified()
    deck1.setModified()
    client.sync()
    f2 = deck1.s.query(Fact).get(f1.id)
    assert f2['Front'] == u"myfront"
    deck1.rebuildQueue()
    deck2.rebuildQueue()
    c1 = deck1.getCard()
    c2 = deck2.getCard()
    assert c1.id == c2.id

@nose.with_setup(setup_local, teardown)
def test_localsync_threeway():
    # deck1 (client) <-> deck2 (server) <-> deck3 (client)
    deck3 = DeckStorage.Deck()
    client2 = SyncClient(deck3)
    server2 = SyncServer(deck2)
    client2.setServer(server2)
    client.sync()
    client2.sync()
    # add a new question
    f = deck1.newFact()
    f['Front'] = u"a"; f['Back'] = u"b"
    f = deck1.addFact(f)
    card = f.cards[0]
    client.sync()
    assert deck1.cardCount == 6
    assert deck2.cardCount == 6
    # check it propagates from server to deck3
    client2.sync()
    assert deck3.cardCount == 6
    # delete a card on deck1
    deck1.deleteCard(card.id)
    client.sync()
    assert deck1.cardCount == 5
    assert deck2.cardCount == 5
    # make sure the delete is now propagated from the server to deck3
    client2.sync()
    assert deck3.cardCount == 5

def test_localsync_media():
    tmpdir = "/tmp/media-tests"
    try:
        shutil.rmtree(tmpdir)
    except OSError:
        pass
    shutil.copytree(os.path.join(os.getcwd(),
                                 "tests/syncing/media-tests"),
                    tmpdir)
    deck1anki = os.path.join(tmpdir, "1.anki")
    deck2anki = os.path.join(tmpdir, "2.anki")
    deck1media = os.path.join(tmpdir, "1.media")
    deck2media = os.path.join(tmpdir, "2.media")
    setup_local((deck1anki, deck2anki))
    assert len(os.listdir(deck1media)) == 2
    assert len(os.listdir(deck2media)) == 1
    client.sync()
    # metadata should have been copied
    assert deck1.s.scalar("select count(1) from media") == 3
    assert deck2.s.scalar("select count(1) from media") == 3
    # copy local files
    copyLocalMedia(deck1, deck2)
    assert len(os.listdir(deck1media)) == 2
    assert len(os.listdir(deck2media)) == 3
    copyLocalMedia(deck2, deck1)
    assert len(os.listdir(deck1media)) == 3
    assert len(os.listdir(deck2media)) == 3
    # check delete
    os.unlink(os.path.join(deck1media, "22161b29b0c18e068038021f54eee1ee.png"))
    os.system("sync")
    time.sleep(0.2)
    rebuildMediaDir(deck1)
    client.sync()
    assert deck1.s.scalar("select count(1) from media") == 2
    assert deck2.s.scalar("select count(1) from media") == 2

# One way syncing
##########################################################################

@nose.with_setup(setup_local, teardown)
def test_oneway_simple():
    assert deck1.s.scalar("select count(1) from cards") == 2
    assert deck2.s.scalar("select count(1) from cards") == 2
    assert deck1.cardCount == 2
    assert deck2.cardCount == 2
    assert deck1.s.scalar("select id from tags where tag = 'foo'")
    assert not deck1.s.scalar("select id from tags where tag = 'bar'")
    server.deckName = "dummy"
    client.syncOneWay(0)
    assert deck1.s.scalar("select count(1) from cards") == 4
    assert deck2.s.scalar("select count(1) from cards") == 2
    assert deck1.cardCount == 4
    assert deck2.cardCount == 2
    assert deck1.s.scalar("select id from tags where tag = 'foo'")
    assert deck1.s.scalar("select id from tags where tag = 'bar'")
    # should be a noop
    client.syncOneWay(0)

# Remote tests
##########################################################################

# a replacement runCmd which just calls our server directly
def runCmd(action, *args, **kargs):
    #print action, kargs
    return server.unstuff(apply(getattr(server, action), tuple(args) +
                                tuple(kargs.values())))

def setup_remote():
    setup_local()
    global client, server
    proxy = HttpSyncServerProxy("test", "foo")
    client = SyncClient(deck1)
    client.setServer(proxy)
    proxy.deckName = "test"
    proxy.runCmd = runCmd
    server = HttpSyncServer()
    server.deck = deck2
    server.decks = {"test": (deck2.modified, 0)}

@nose.with_setup(setup_remote, teardown)
def test_remotesync_fromserver():
    # deck two was modified last
    assert deck2.modified > deck1.modified
    client.sync()
    assert deck2.modified == deck1.modified
    # test deck vars
    deck1.setVar("foo", 1)
    client.sync()

@nose.with_setup(setup_remote, teardown)
def test_remotesync_toserver():
    deck1.setModified()
    client.sync()
    assert deck2.modified == deck1.modified

# Full sync
##########################################################################

@nose.with_setup(setup_remote, teardown)
def test_formdata():
    global deck1
    (fd, name) = tempfile.mkstemp()
    deck1 = deck1.saveAs(name)
    deck1.setModified()
    client.deck = deck1
    client.prepareSync()
    client.prepareFullSync()
 22  
tests/test_utils.py
@@ -0,0 +1,22 @@
# coding: utf-8

import nose, os
from tests.shared import assertException

from anki.errors import *
from anki.facts import *
from anki import DeckStorage
from anki.utils import *


def test_tags():
    return
#     card = "one, two"
#     fact = "two,three, two"
#     cmodel = "four"

#     print (card+","+fact+","+cmodel)
#     print joinTags(parseTags(card+","+fact+","+cmodel))
#     print sorted(canonifyTags(card+","+fact+","+cmodel))
#     assert (sorted(canonifyTags(card+","+fact+","+cmodel)) ==
#             ['four', 'one', 'three', 'two'])
 8  
tools/tests.sh
@@ -0,0 +1,8 @@
#!/bin/bash

if [ -d 'locale' ]; then
    dir=..
else
    dir=.
fi
(cd $dir && nosetests -vs $@)
 33  
tools/translate.sh
@@ -0,0 +1,33 @@
#!/bin/bash
#
# update translation files
#

if [ ! -d "anki" ]
then
    echo "Please run this from the anki project root directory"
    exit
fi

oldpwd=$(pwd)
cd anki
allPyFiles=libanki.files
echo "Generating translations.."
for i in *.py importing/*.py
do
    echo $i >> $allPyFiles
done

xgettext -s --no-wrap --files-from=$allPyFiles --output=locale/messages.pot
for file in locale/*.po
do
    echo -n $file
    msgmerge -s --no-wrap $file locale/messages.pot > $file.new && mv $file.new $file
    outdir=$(echo $file | \
        perl -pe 's%locale/libanki_(.*)\.po%locale/\1/LC_MESSAGES%')
    outfile="$outdir/libanki.mo"
    mkdir -p $outdir
    msgfmt $file --output-file=$outfile
done
rm $allPyFiles
cd $oldpwdYour federal taxable wages this period are $
+Purchase/Acquisition of Business -1010700000 -1148400000 -1286100000 -1423800000 -1561500000
+TX: NO State Incorne Tax
+Gain/Loss on Investments and Other Financial Instruments -2243490909 -3068572727 -3893654545 -4718736364 -5543818182 -6368900000 -7193981818 -8019063636
+Income from Associates, Joint Ventures and Other Participating Interests 99054545 92609091 86163636 79718182 73272727 66827273 60381818 53936364
+INCOME STATEMENT 61-1767920
+GOOGL_income-statement_Quarterly_As_Originally_Reported TTM Q4 2022 Q3 2022 Q2 2022 Q1 2022 Q4 2021 Q3 2021 Q2 2021
+Cash Flow from Continuing Financing Activities -9287400000 -7674400000 -6061400000 -4448400000 -2835400000
+Diluted EPS from Discontinued Operations
+The U.S. Internal Revenue Code of 1986, as amended, the Treasury Regulations promulgated thereunder, published pronouncements of the Internal Revenue Service, which may be cited or used as precedents, and case law, any of which may be changed at any time with retroactive effect. No opinion is expressed on any matters other than those specifically referred to above.
+Basic WASO 694313546 697258864 700204182 703149500 706094818 709040136 711985455 714930773
+Taxable Marital Status:
+Exemptions/Allowances Single ZACHRY T.
+Diluted EPS -00009 -00015 -00021 -00027 -00033 -00039 -00045 -00051
+Total Work Hrs
+COMPANY PH Y: 650-253-0001
+5324 BRADFORD DR
+ORIGINAL REPORT
+Change in Trade/Accounts Receivable -1122700000 -527600000 67500000 662600000 1257700000
+Purchase/Sale of Other Non-Current Assets, Net -236000000 -368800000 -501600000 -634400000
+Other Non-Cash Items -5340300000 -6249200000 -7158100000 -8067000000 -8975900000
+Amortization, Non-Cash Adjustment 4241600000 4848600000 5455600000 6062600000 6669600000
+Income, Rents, & Royalty
+Other Investing Cash Flow 49209400000 57052800000 64896200000 72739600000 80583000000
+Other Irregular Income/Expenses 00000 00000 00000 00000 00000
+Irregular Income/Expenses 00000 00000 00000 00000 00000
+Total Revenue as Reported, Supplemental -1286309091 -13385163636 -25484018182 -37582872727 -49681727273 -61780581818 -73879436364 -85978290909
+Net Investment Income -2096781818 -2909109091 -3721436364 -4533763636 -5346090909 -6158418182 -6970745455 -7783072727
+Gain/Loss on Foreign Exchange 47654545 66854545 86054545 105254546 124454546 143654546 162854546 182054546
+Cash Flow from Investing Activities -11015999999
+Purchase/Sale of Investments, Net 574500000 1229400000 1884300000 2539200000 3194100000
+Purchase/Sale of Business, Net -384999999
+Basic EPS from Continuing Operations -00009 -00015 -00021 -00027 -00034 -00040 -00046 -00052
+Change in Trade and Other Receivables 2617900000 3718200000 4818500000 5918800000 7019100000
+Investment Income/Loss, Non-Cash Adjustment 3081700000 4150000000 5218300000 6286600000 7354900000
+Stock-Based Compensation, Non-Cash Adjustment -1297700000 -2050400000 -2803100000 -3555800000 -4308500000
+Depreciation and Amortization, Non-Cash Adjustment 3239500000 3241600000 3243700000 3245800000 3247900000
+Taxes, Non-Cash Adjustment 4177700000 4486200000 4794700000 5103200000 5411700000
+Depreciation, Non-Cash Adjustment 3329100000 3376000000 3422900000 3469800000 3516700000
+Gain/Loss on Financial Instruments, Non-Cash Adjustment -4354700000 -4770800000 -5186900000 -5603000000 -6019100000
+[DRAFT FORM OF TAX OPINION]
+Issuance of/Repayments for Debt, Net -199000000 -356000000
+Total Operating Profit/Loss -5818800000 -10077918182 -14337036364 -18596154545 -22855272727 -27114390909 -31373509091 -35632627273
+Cash Flow from Continuing Investing Activities -4919700000 -3706000000 -2492300000 -1278600000 -64900000
+Change in Prepayments and Deposits -388000000 -891600000 -1395200000 -1898800000
+Change in Accrued Expenses -2105200000 -3202000000 -4298800000 -5395600000 -6492400000
+Research and Development Expenses -2088363636 -853500000 381363636 1616227273 2851090909 4085954545 5320818182 6555681818
+PLEASE READ THE IMPORTANT DISCLOSURES BELOW
+FEDERAL RESERVE MASTER SUPPLIER ACCOUNT31000053-052101023COD
+633-44-1725Zachryiixixiiiwood@gmail.com47-2041-654711100061431000053
+PNC BankPNC Bank Business Tax I.D. Number: 633441725
+CIF Department (Online Banking)Checking Account: 47-2041-6547
+P7-PFSC-04-FBusiness Type: Sole Proprietorship/Partnership Corporation
+500 First AvenueALPHABET
+Pittsburgh, PA 15219-31285323 BRADFORD DR
+NON-NEGOTIABLEDALLAS TX 75235 8313
+ZACHRY, TYLER, WOOD
+4/18/2022650-2530-000 469-697-4300
+SIGNATURETime Zone: Eastern Central Mountain Pacific
+Investment Products • Not FDIC Insured • No Bank Guarantee • May Lose Value
+PLEASE READ THE IMPORTANT DISCLOSURES BELOW
+Change in Trade/Accounts Payable -233200000 -394000000 -554800000 -715600000 -876400000
+General and Administrative Expenses -544945455 23200000 591345455 1159490909 1727636364 2295781818 2863927273 3432072727
+Changes in Operating Capital 1068100000 1559600000 2051100000 2542600000 3034100000
+Selling and Marketing Expenses -1007254545 -52145455 902963636 1858072727 2813181818 3768290909 4723400000 5678509091
+Payments for Common Stock -18708100000 -22862000000 -27015900000 -31169800000 -35323700000
+Proceeds from Issuance of Long Term Debt -3407500000 -5307600000 -7207700000 -9107800000 -11007900000
+Other Income/Expense, Non-Operating 263109091 367718182 472327273 576936364 681545455 786154546 890763636 995372727
+ZACHRY T WOOD
+88-1303492
+Statutory BASIS OF PAY: BASIC/DILUTED EPS
+Net Pay 70842743867 70842743867
+Other Revenue
+Non-Operating Income/Expenses, Total -1369181818 -2079000000 -2788818182 -3498636364 -4208454545 -4918272727 -5628090909 -6337909091
+Net Interest Income/Expense 464490909 462390909 460290909 458190909 456090909 453990909 451890909 449790909
+Total Net Finance Income/Expense 464490909 462390909 460290909 458190909 456090909 453990909 451890909 449790909
+Issuance of/Repayments for Long Term Debt, Net -314300000 -348200000 -382100000 -416000000 -449900000
+Net Check 70842743867
+Basic EPS from Discontinued Operations
+MOUNTAIN VIEW, C.A., 94044 Pay Date:
+Medicare Tax
+Change in Other Operating Capital 1553900000 2255600000 2957300000 3659000000 4360700000
+Change in Deferred Assets/Liabilities 3194700000 3626800000 4058900000 4491000000 4923100000
+Change in Trade and Other Payables 3108700000 3453600000 3798500000 4143400000 4488300000
+Selling, General and Administrative Expenses -1552200000 -28945455 1494309091 3017563636 4540818182 6064072727 7587327273 9110581818
+Diluted WASO 698675982 701033009 703390036 705747064 708104091 710461118 712818146 715175173
+1957800000 -9776581818 -21510963636 -33245345455 -44979727273 -56714109091 -68448490909 -80182872727
+Total Revenue as Reported, Supplemental -1286309091 -13385163636 -25484018182 -37582872727 -49681727273 -61780581818 -73879436364 -85978290909
+Diluted EPS from Continuing Operations -00009 -00015 -00021 -00027 -00033 -00039 -00045 -00051
+Change in Cash 00001 -280000000 -570000000 338000000000)
+Sale and Disposal of Property, Plant and Equipment -5040500000 -4683100000 -4325700000 -3968300000
+Interest Income 415836364 392490909 369145455 345800000 322454546 299109091 275763636 252418182
+Issuance of/Payments for Common Stock, Net -10767000000 -10026000000 -9285000000 -8544000000 -7803000000
+Cost of Goods and Services -891927273 4189690909 9271309091 14352927273 19434545455 24516163636 29597781818 34679400000
+Proceeds from Issuance of Common Stock -5806333333 -3360333333 -914333333
+1349355888 2024033776 75698871601 Information
+DALLAS TX 75235-8315
+Sales of Other Non-Current Assets
+Cost of Revenue -891927273 4189690909 9271309091 14352927273 19434545455 24516163636 29597781818 34679400000
+Operating Income/Expenses -3640563636 -882445455 1875672727 4633790909 7391909091 10150027273 12908145455 15666263636
+Fiscal year end September 28th., 2022. | USD
+Cash and Cash Equivalents, Beginning of Period -13098000000 -26353000000 -4989999999
+Other Adjustments to Net Income Available to Common Stockholders
+Federal:
+Gross Pay 75698871601 Important Notes
+Cash Flow from Financing Activities -13997000000 -12740000000
+EMPLOYER IDENTIFICATION NUMBER: 61-1767920
+-1288666667 -885666667 -482666667
+Pretax Income -7187981818 -12156918182 -17125854545 -22094790909 -27063727273 -32032663636 -37001600000 -41970536364
+Reported Normalized and Operating Income/Expense Supplemental Section
+Reported Normalized Operating Profit
+Cash Flow Supplemental Section 181000000000) -146000000000) 110333333 123833333 137333333
+Interest Expense Net of Capitalized Interest 48654545 69900000 91145455 112390909 133636364 154881818 176127273 197372727
+Diluted Net Income Available to Common Stockholders -5492763636 -9591163636 -13689563636 -17787963636 -21886363636 -25984763636 -30083163636 -34181563636
+Net Income Available to Common Stockholders -5492763636 -9591163636 -13689563636 -17787963636 -21886363636 -25984763636 -30083163636 -34181563636
+Net Income after Non-Controlling/Minority Interests -5492763636 -9591163636 -13689563636 -17787963636 -21886363636 -25984763636 -30083163636 -34181563636
+Reported Effective Tax Rate 00001 00000 00000 00000 00000 00000
+Reported Normalized Diluted EPS
+Basic Weighted Average Shares Outstanding 694313546 697258864 700204182 703149500 706094818 709040136 711985455 714930773
+Diluted Weighted Average Shares Outstanding 698675982 701033009 703390036 705747064 708104091 710461118 712818146 715175173
+Deposited to the account Of xxxxxxxx6548
+Purchase of Investments 16018900000 24471400000 32923900000 41376400000 49828900000
+Sale of Investments -64179300000 -79064600000 -93949900000 -108835200000 -123720500000
+ALPHABET
+CHECKING
+31622,6:39 PM
+GOOGL_income-statement_Quarterly_As_Originally_Reported Q4 2022
+Morningstar.com Intraday Fundamental Portfolio View Print Report Print
+Income/Loss before Non-Cash Adjustment 21353400000 21135400000 20917400000 20699400000 20481400000
+Cash Generated from Operating Activities 19636600000 18560200000 17483800000 16407400000 15331000000
+3/6/2022 at 6:37 PM
+Net Cash Flow from Continuing Operating Activities, Indirect 35231800000 36975800000 38719800000 40463800000 42207800000
+Cash and Cash Equivalents, End of Period
+Proceeds from Issuance/Exercising of Stock Options/Warrants -2971300000 -3400800000 -3830300000 -4259800000 -4689300000
+Cash Flow from Operating Activities, Indirect 24934000001 Q3 2022 Q2 2022 Q1 2022 Q4 2021
+Diluted EPS -00009 -00015 -00021 -00027 -00033 -00039 -00045 -00051
+Other Financing Cash Flow
+Total Adjustments for Non-Cash Items 20351200000 21992600000 23634000000 25275400000 26916800000
+Change in Other Current Assets -3290700000 -3779600000 -4268500000 -4757400000 -5246300000
+Depreciation, Amortization and Depletion, Non-Cash Adjustment 4986300000 5327600000 5668900000 6010200000 6351500000
+Change in Payables and Accrued Expenses -3298800000 -4719000000 -6139200000 -7559400000 -8979600000
+Repayments for Long Term Debt -117000000 -660800000 -1204600000 -1748400000 -2292200000
+Income Statement Supplemental Section
+Reported Normalized Income
+Cash and Cash Equivalents, Beginning of Period 25930000001 235000000000) 10384666667 15035166667 19685666667
+Net Income after Extraordinary Items and Discontinued Operations -5492763636 -9591163636 -13689563636 -17787963636 -21886363636 -25984763636 -30083163636 -34181563636
+Net Income from Continuing Operations -5492763636 -9591163636 -13689563636 -17787963636 -21886363636 -25984763636 -30083163636 -34181563636
+Provision for Income Tax 1695218182 2565754545 3436290909 4306827273 5177363636 6047900000 6918436364 7788972727
+Total Operating Profit/Loss as Reported, Supplemental -5818800000 -10077918182 -14337036364 -18596154545 -22855272727 -27114390909 -31373509091 -35632627273
+Based on facts as set forth in. 06551
+Basic EPS -00009 -00015 -00021 -00027 -00034 -00040 -00046 -00052
+ALPHABET INCOME Advice number: 000101
+ALPHABET
+Basic EPS -00009 -00015 -00021 -00027 -00034 -00040 -00046 -00052
+1601 AMPITHEATRE PARKWAY DR Period Ending:
+1601 AMPIHTHEATRE PARKWAY MOUNTAIN VIEW CA 94043 Calendar Year---
+Purchase/Sale and Disposal of Property, Plant and Equipment, Net -6772900000 -6485800000 -6198700000 -5911600000 -5624500000
+Purchase of Property, Plant and Equipment -5218300000 -4949800000 -4681300000 -4412800000 -4144300000
+Effect of Exchange Rate Changes 28459100000 29853400000 31247700000 32642000000 34036300000
+00000 -15109109116 111165509049 50433933761 50951012042 45733930204 40516848368 -84621400136 -96206781973
+00002 Earnings Statement
+05324
+DALLAS
+rate units year to date Other Benefits and
+Pto Balance
+Federal Income Tax
+Social Security Tax
+YOUR BASIC/DILUTED EPS RATE HAS BEEN CHANGED FROM 0.001 TO 112.20 PAR SHARE VALUE
+Due 09/15/2022
+Discontinued Operations -51298890909
+Change in Cash as Reported, Supplemental
+Income Tax Paid, Supplemental -5809000000 -8692000000 -11575000000 -44281654545 -2178236364
+13 Months Ended 6336000001
+Gross Profit -9195472727 -16212709091 -23229945455 -30247181818 -37264418182
+USD in "000'"s 22809500000000 22375000000000 21940500000000 21506000000000 21071500000000
+Repayments for Long Term Debt Dec. 31, 2021 Dec. 31, 2020
+Costs and expenses: 22809500000000 22375000000000 21940500000000 21506000000000 21071500000000
+Cost of revenues 182528 161858
+Research and development 22809500000000 22375000000000 21940500000000 21506000000000 21071500000000
+Sales and marketing 84733 71897
+General and administrative 27574 26019
+European Commission fines 17947 18465
+Total costs and expenses 11053 09552
+Income from operations 00001 01698
+Other income (expense), net 141304 127627
+Income before income taxes 00000 22375000000000 21940500000000 21506000000000 21071500000000 00000 00000
+Provision for income taxes 257637118600 257637118600
+Net income 22677000001 19289000001
+*include interest paid, capital obligation, and underweighting 22677000001 19289000001
+22677000001 19289000001
+Basic net income per share of Class A and B common stock and Class C capital stock (in dollars par share)
+Diluted net income per share of Class A and Class B common stock and Class C capital stock (in dollars par share)
+For Paperwork Reduction Act Notice, see the seperate InstructionsStreet NE Washington, D.C. 20549-1090 RE: Release Nos. 34-92766; IA-5833; File No. S7-10-21, RIN 3235-AN00 Request for Information and Comments on Broker-Dealer and Investment Adviser Digital Engagement Practices, Related Tools and Methods, and Regulatory Considerations and Potential Approaches; Information and Comments on Investment Adviser Use of Technology to Develop and Provide Investment Advice Ladies and Gentlemen: Morningstar welcomes the opportunity to comment on the Securities and Exchange Commission’s (Commission or SEC) Request for Information and Comments on Broker-Dealer and Investment Adviser Digital Engagement Practices, Related Tools and Methods, and Regulatory Considerations and Potential Approaches; Information and Comments on Investment Adviser Use of Technology to Develop and Provide Investment Advice (RFI). 1 Morningstar’s mission is to empower investor success. Morningstar’s Behavioral Insights Team researches savings and investing behavior to help individual investors and their ecosystem avoid common behavioral biases, and has published books and articles on the topic of applying behavioral science to digital platforms. Because we offer an extensive line of products for individual investors, professional financial advisors, and institutional clients, we have a broad view on the RFI and the assessment of market practices associated with the use of digital engagement practices (DEPs). This letter contains: 1) a summary of our views; 2) a description of a Morningstar survey on a nationally representative sample of Americans about their use of trading apps and exposure to DEPs; and 3) detailed answers to selected questions posed in the RFI. We utilize our survey responses to address some of these questions and present specific findings in our answers. The survey consists of two parts: a screener for demographic information, attached as Appendix B, and the complete set of questions about individual experiences and views of DEPs, attached as Appendix C. 1 SEC. 2021. Request for Information and Comments on Broker-Dealer and Investment Adviser Digital Engagement Practices, Related Tools and Methods, and Regulatory Considerations and Potential Approaches; Information and Comments on Investment Adviser Use of Technology to Develop and Provide Investment Advice. https://www.federalregister.gov/documents/2021/09/01/2021-18901/requestfor-information-and-comments-on-broker-dealer-and-investment-adviser-digital-engagement (RFI).
+3/6/2022 at 6:37 PM
+GOOGL_income-statement_Quarterly_As_Originally_Reported
+Cash Flow from Operating Activities, IndirectNet Cash Flow from Continuing Operating Activities, IndirectCash Generated from Operating ActivitiesIncome/Loss before Non-Cash AdjustmentTotal Adjustments for Non-Cash ItemsDepreciation, Amortization and Depletion, Non-Cash AdjustmentDepreciation and Amortization, Non-Cash AdjustmentDepreciation, Non-Cash AdjustmentAmortization, Non-Cash AdjustmentStock-Based Compensation, Non-Cash AdjustmentTaxes, Non-Cash AdjustmentInvestment Income/Loss, Non-Cash AdjustmentGain/Loss on Financial Instruments, Non-Cash AdjustmentOther Non-Cash ItemsChanges in Operating CapitalChange in Trade and Other ReceivablesChange in Trade/Accounts ReceivableChange in Other Current AssetsChange in Payables and Accrued ExpensesChange in Trade and Other PayablesChange in Trade/Accounts PayableChange in Accrued ExpensesChange in Deferred Assets/LiabilitiesChange in Other Operating Capital
+Change in Prepayments and DepositsCash Flow from Investing ActivitiesCash Flow from Continuing Investing Activities
+Purchase/Sale and Disposal of Property, Plant and Equipment, NetPurchase of Property, Plant and EquipmentSale and Disposal of Property, Plant and EquipmentPurchase/Sale of Business, NetPurchase/Acquisition of BusinessPurchase/Sale of Investments, NetPurchase of Investments
+Sale of InvestmentsOther Investing Cash FlowPurchase/Sale of Other Non-Current Assets, NetSales of Other Non-Current AssetsCash Flow from Financing ActivitiesCash Flow from Continuing Financing ActivitiesIssuance of/Payments for Common Stock, NetPayments for Common StockProceeds from Issuance of Common StockIssuance of/Repayments for Debt, NetIssuance of/Repayments for Long Term Debt, NetProceeds from Issuance of Long Term DebtRepayments for Long Term Debt
+Proceeds from Issuance/Exercising of Stock Options/WarrantsOther Financing Cash FlowCash and Cash Equivalents, End of PeriodChange in CashEffect of Exchange Rate ChangesCash and Cash Equivalents, Beginning of PeriodCash Flow Supplemental SectionChange in Cash as Reported, SupplementalIncome Tax Paid, SupplementalZACHRY T WOODCash and Cash Equivalents, Beginning of PeriodDepartment of the TreasuryInternal Revenue Service
+Calendar YearDue: 04/18/2022
+USD in ""000'""sRepayments for Long Term DebtCosts and expenses:Cost of revenuesResearch and developmentSales and marketingGeneral and administrativeEuropean Commission finesTotal costs and expensesIncome from operationsOther income (expense), netIncome before income taxesProvision for income taxesNet income*include interest paid, capital obligation, and underweighting
+Basic net income per share of Class A and B common stock and Class C capital stock (in dollars par share)
+
+
+
+
+
+
+
+
+
+Diluted net income per share of Class A and Class B common stock and Class C capital stock (in dollars par share)*include interest paid, capital obligation, and underweighting
+Basic net income per share of Class A and B common stock and Class C capital stock (in dollars par share)Diluted net income per share of Class A and Class B common stock and Class C capital stock (in dollars par share)
+
+ReplyForward
+


-7711	Department of the Treasury	Calendar Year							Period Ending	9/29/2021																	
-	Internal Revenue Service	Due 04/18/2022		2022 Form 1040-ES Payment Voucher 1					Pay Day	1/30/2022																	
-	MOUNTAIN VIEW, C.A., 94043																										
-	Taxable Marital Status  :																										
-	Exemptions/Allowances :																										
-	Federal :																										
-	TX :  28	rate	70842743866																																
-	Convertible preferred stock, $0.001 par value per share, 100,000 shares authorized; no shares issued and outstanding	0	0		0																						
-	Class A and Class B common stock, and Class C capital stock and additional paid-in capital, $0.001 par value per share: 15,000,000 shares authorized (Class A 9,000,000, Class B 3,000,000, Class C 3,000,000); 688,335 (Class A 299,828, Class B 46,441, Class C 342,066) and 675,222 (Class A 300,730, Class B 45,843, Class C 328,649) shares issued and outstanding	58510	50552		0																						
-	Accumulated other comprehensive income (loss)	633	-1232		0																						
-	Retained earnings	163401	152122		0																						
-	Total stockholders’ equity	222544	201442		0																						
-	Total liabilities and stockholders’ equity	319616	275909		0																						
-	Convertible preferred stock, par value (in dollars per share)	0.001	0.001		0																						
-	Convertible preferred stock, shares authorized (in shares)	100000000	100000000		0																						
-	Convertible preferred stock, shares issued (in shares)	0	0		0																						
-	Convertible preferred stock, shares outstanding (in shares)	0	0		0																						
-	Schedule II: Valuation and Qualifying Accounts (Details) - Allowance for doubtful accounts and sales credits - USD ($) $ in Millions	12 Months Ended			0																						
-		Dec. 31, 2020	Dec. 31, 2019	Dec. 31, 2018	0																						
-	SEC Schedule, 12-09, Movement in Valuation Allowances and Reserves [Roll Forward]				0																						
-	Revenues (Narrative) (Details) - USD ($) $ in Billions	12 Months Ended			0																						
-		Dec. 31, 2020	Dec. 31, 2019		0																						
-	Revenue from Contract with Customer [Abstract]				0																						
-	Deferred revenue		2.3		0																						
-	Revenues recognized	1.8			0																						
-	Transaction price allocated to remaining performance obligations	29.8			0																						
-	Revenue, Remaining Performance Obligation, Expected Timing of Satisfaction, Start Date [Axis]: 2021-01-01				0																						
-	Revenue, Remaining Performance Obligation, Expected Timing of Satisfaction [Line Items]				0																						
-	Expected timing of revenue recognition	24 months			0																						
-	Expected timing of revenue recognition, percent	0.5			0																						
-	Revenue, Remaining Performance Obligation, Expected Timing of Satisfaction, Start Date [Axis]: 2023-01-01				0																						
-	Revenue, Remaining Performance Obligation, Expected Timing of Satisfaction [Line Items]				0																						
-	Expected timing of revenue recognition	 			0																						
-	Expected timing of revenue recognition, percent	0.5			0																						
-	Information about Segments and Geographic Areas (Long-Lived Assets by Geographic Area) (Details) - USD ($) $ in Millions	Dec. 31, 2020	Dec. 31, 2019		0																						
-	Revenues from External Customers and Long-Lived Assets [Line Items]				0																						
-	Long-lived assets	96960	84587		0																						
-	United States				0																						
-	Revenues from External Customers and Long-Lived Assets [Line Items]				0																						
-	Long-lived assets	69315	63102		0																						
-	International				0																						
-	Revenues from External Customers and Long-Lived Assets [Line Items]				0																						
-	Long-lived assets	27645	21485		0																						
-		2016	2017	2018	2019	2020	2021	TTM																			
-		2.23418E+11	2.42061E+11	2.25382E+11	3.27223E+11	2.86256E+11	3.54636E+11	3.54636E+11																			
-		45881000000	60597000000	57418000000	61078000000	63401000000	69478000000	69478000000																			
-		3143000000	3770000000	4415000000	4743000000	5474000000	6052000000	6052000000																			
-	    Net Investment Income, Revenue	9531000000	13081000000	10565000000	17214000000	14484000000	8664000000	-14777000000	81847000000	48838000000	86007000000	86007000000															
-	        Realized Gain/Loss on Investments, Revenue	472000000	184000000	72000000	10000000	7553000000	1410000000	-22155000000	71123000000	40905000000	77576000000	77576000000															
-	        Gains/Loss on Derivatives, Revenue	1963000000	2608000000	506000000	974000000	751000000	718000000	-300000000	1484000000	-159000000	966000000	966000000															
-	        Interest Income, Revenue	6106000000	6408000000	6484000000	6867000000	6180000000	6536000000	7678000000	9240000000	8092000000	7465000000	7465000000															
-	        Other Investment Income, Revenue	990000000	3881000000	3503000000	9363000000																						
-	    Rental Income, Revenue					2553000000	2452000000	5732000000	5856000000	5209000000	5988000000	5988000000															
-	    Other Revenue	1.18387E+11	1.32385E+11	1.42881E+11	1.52435E+11	1.57357E+11	1.66578E+11	1.72594E+11	1.73699E+11	1.63334E+11	1.87111E+11	1.87111E+11															
-	Total Expenses	-1.40227E+11	-1.53354E+11	-1.66594E+11	-1.75997E+11	-1.89751E+11	-2.18223E+11	-2.21381E+11	-2.24527E+11	-2.30563E+11	-2.4295E+11	-2.4295E+11																												
-	    Reported Normalized and Operating Income/Expense Supplemental Section																										
-	        Total Revenue as Reported, Supplemental	1.62463E+11	1.8215E+11	1.94699E+11	2.10943E+11	2.15114E+11	2.39933E+11	2.47837E+11	2.54616E+11	2.4551E+11	2.76094E+11	2.76094E+11															
-	        Reported Effective Tax Rate				0.16	0.14	0.07	-0.08	0.2	0.22	0.19	0.19															
-	Basic EPS	8977	11850	12092	14656	14645	27326	2446	49828	26668	59460	59460															
-	    Basic EPS from Continuing Operations	8977	11850	12092	14656	14645	27326	2446	49828	26668	59460	59460															
-	Diluted EPS	8975.82	11849.51	12086.01	14656	14645	27325.54	2444.36	49649.93	26200.81	58563.84	58563.84															
-	    Diluted EPS from Continuing Operations	8975.82	11849.51	12086.01	14656	14645	27325.54	2444.36	49649.93	26200.81	58563.84	58563.84															
-	Basic Weighted Average Shares Outstanding	1651294	1643613	1643456	1643183	1643826	1644615	1643795	1633946	1594469	1510180	1510180															
-	Diluted Weighted Average Shares Outstanding	1651549	1643613	1644215	1643183	1643826	1644615	1645008	1639821	1622889	1533284	1533284															
-	Basic EPS	5.98	7.9	8.06	9.77	9.76	18.22	1.63	33.22	17.78	39.64	39.64															
-	Diluted EPS	5.98	7.9	8.06	9.77	9.76	18.22	1.63	33.22	17.78	39.64	39.64															
-	Basic WASO	2476939762	2465418267	2465182767	2464773268	2465737767	2466921267	2465691267	2450917775	2391702304	2265268867	2265268867															
-	Diluted WASO	2476939762	2465418267	2465182767	2464773268	2465737767	2466921267	2465691267	2450917775	2391702304	2265268867	2265268867															
-	Fiscal year ends in Dec 31 | USD 																										
-											total																
-	GOOGL_income-statement_Quarterly_As_Originally_Reported	Q3 2019	Q4 2019	Q1 2020	Q2 2020	Q3 2020	Q4 2020	Q1 2021	Q2 2021	Q3 2021	Q4 2021	TTM															
-	Gross Profit	22931000000	25055000000	22177000000	19744000000	25056000000	30818000000	31211000000	35653000000	37497000000	42337000000	1.46698E+11															
-	    Total Revenue	40499000000	46075000000	41159000000	38297000000	46173000000	56898000000	55314000000	61880000000	65118000000	75325000000	2.57637E+11															
-	        Business Revenue	34071000000	64133000000	41159000000	38297000000	46173000000	56898000000	55314000000	61880000000	65118000000	75325000000	2.57637E+11															
-	        Other Revenue	6428000000																									
-	    Cost of Revenue	-17568000000	-21020000000	-18982000000	-18553000000	-21117000000	-26080000000	-24103000000	-26227000000	-27621000000	-32988000000	-1.10939E+11															
-	        Cost of Goods and Services			-18982000000								-1.10939E+11															
-	Operating Income/Expenses	-13754000000	-15789000000	-14200000000	-13361000000	-13843000000	-15167000000	-14774000000	-16292000000	-16466000000	-20452000000	-67984000000															
-	    Selling, General and Administrative Expenses	-7200000000	-8567000000	-7380000000	-6486000000	-6987000000	-8145000000	-7289000000	-8617000000	-8772000000	-11744000000	-36422000000															
-	        General and Administrative Expenses	-2591000000	-2829000000	-2880000000	-2585000000	-2756000000	-2831000000	-2773000000	-3341000000	-3256000000	-4140000000	-13510000000															
-	        Selling and Marketing Expenses	-4609000000	-5738000000	-4500000000	-3901000000	-4231000000	-5314000000	-4516000000	-5276000000	-5516000000	-7604000000	-22912000000															
-	    Research and Development Expenses	-6554000000	-7222000000	-6820000000	-6875000000	-6856000000	-7022000000	-7485000000	-7675000000	-7694000000	-8708000000	-31562000000															
-	Total Operating Profit/Loss	9177000000	9266000000	7977000000	6383000000	11213000000	15651000000	16437000000	19361000000	21031000000	21885000000	78714000000															
-	Non-Operating Income/Expenses, Total	-549000000	1438000000	-220000000	1894000000	2146000000	3038000000	4846000000	2624000000	2033000000	2517000000	12020000000															
-	    Total Net Finance Income/Expense	608000000	604000000	565000000	420000000	412000000	333000000	269000000	313000000	310000000	261000000	1153000000															
-	        Net Interest Income/Expense	608000000	604000000	565000000	420000000	412000000	333000000	269000000	313000000	310000000	261000000	1153000000															
-	            Interest Expense Net of Capitalized Interest	-23000000	-17000000	-21000000	-13000000	-48000000	-53000000	-76000000	-76000000	-77000000	-117000000	-346000000															
-	            Interest Income	631000000	621000000	586000000	433000000	460000000	386000000	345000000	389000000	387000000	378000000	1499000000															
-	    Net Investment Income	-1452000000	899000000	-809000000	1696000000	1957000000	3530000000	4869000000	2924000000	2207000000	2364000000	12364000000															
-	        Gain/Loss on Investments and Other Financial Instruments	-1479000000	399000000	-802000000	1842000000	2015000000	3262000000	4751000000	2883000000	2158000000	2478000000	12270000000															
-	        Income from Associates, Joint Ventures and Other Participating Interests	-14000000	460000000	74000000	-54000000	26000000	355000000	5000000	92000000	188000000	49000000	334000000															
-	        Gain/Loss on Foreign Exchange	41000000	40000000	-81000000	-92000000	-84000000	-87000000	113000000	-51000000	-139000000	-163000000	-240000000															
-	    Irregular Income/Expenses	0	0	0	0	0	0				0	0															
-	        Other Irregular Income/Expenses	0	0	0	0	0	0				0	0															
-	    Other Income/Expense, Non-Operating	295000000	-65000000	24000000	-222000000	-223000000	-825000000	-292000000	-613000000	-484000000	-108000000	-1497000000															
-	Pretax Income	8628000000	10704000000	7757000000	8277000000	13359000000	18689000000	21283000000	21985000000	23064000000	24402000000	90734000000															
-	Provision for Income Tax	-1560000000	-33000000	-921000000	-1318000000	-2112000000	-3462000000	-3353000000	-3460000000	-4128000000	-3760000000	-14701000000															
-	Net Income from Continuing Operations	7068000000	10671000000	6836000000	6959000000	11247000000	15227000000	17930000000	18525000000	18936000000	20642000000	76033000000															
-	Net Income after Extraordinary Items and Discontinued Operations	7068000000	10671000000	6836000000	6959000000	11247000000	15227000000	17930000000	18525000000	18936000000	20642000000	76033000000															
-	Net Income after Non-Controlling/Minority Interests	7068000000	10671000000	6836000000	6959000000	11247000000	15227000000	17930000000	18525000000	18936000000	20642000000	76033000000															
-	Net Income Available to Common Stockholders	7068000000	10671000000	6836000000	6959000000	11247000000	15227000000	17930000000	18525000000	18936000000	20642000000	76033000000															
-	Diluted Net Income Available to Common Stockholders	7068000000	10671000000	6836000000	6959000000	11247000000	15227000000	17930000000	18525000000	18936000000	20642000000	76033000000															
-	Income Statement Supplemental Section																										
-	    Reported Normalized and Operating Income/Expense Supplemental Section																										
-	        Total Revenue as Reported, Supplemental	40499000000	46075000000	41159000000	38297000000	46173000000	56898000000	55314000000	61880000000	65118000000	75325000000	2.57637E+11															
-	        Total Operating Profit/Loss as Reported, Supplemental	9177000000	9266000000	7977000000	6383000000	11213000000	15651000000	16437000000	19361000000	21031000000	21885000000	78714000000															
-	        Reported Effective Tax Rate	0.181		0	0.159	0.158		0.158	0.157	0.179		0.162															
-	        Reported Normalized Income			6836000000																							
-	        Reported Normalized Operating Profit			7977000000																							
-	Other Adjustments to Net Income Available to Common Stockholders																										
-	Discontinued Operations																										
-	Basic EPS	10.2	15.49	9.96	10.21	16.55	22.54	26.63	27.69	28.44	31.15	113.88															
-	    Basic EPS from Continuing Operations	10.2	15.47	9.96	10.21	16.55	22.46	26.63	27.69	28.44	31.12	113.88															
-	    Basic EPS from Discontinued Operations																										
-	Diluted EPS	10.12	15.35	9.87	10.13	16.4	22.3	26.29	27.26	27.99	30.69	112.2															
-	    Diluted EPS from Continuing Operations	10	15	10	10	16	22	26	27	28	31	112															
-	    Diluted EPS from Discontinued Operations																										
-	Basic Weighted Average Shares Outstanding	692741000	688804000	686465000	681768000	679449000	675581000	673220000	668958000	665758000	662664000	667650000															
-	Diluted Weighted Average Shares Outstanding	698199000	695193000	692267000	687024000	685851000	682969000	682071000	679612000	676519000	672493000	677674000															
-	Reported Normalized Diluted EPS			9.87																							
-	Basic EPS	10	15	10	10	17	23	27	28	28	31	114															
-	Diluted EPS	10	15	10	10	16	22	26	27	28	31	112															
-	Basic WASO	692741000	688804000	686465000	681768000	679449000	675581000	673220000	668958000	665758000	662664000	667650000{% endcli %}
## Next steps
You have now created a repository, including a *README* file, and created your first commit on {% data variables.location.product_location %}.
{% webui %}
* You can now clone a {% data variables.product.prodname_dotcom %} repository to create a local copy on your computer. From your local repository you can commit, and create a pull request to update the changes in the upstream repository. For more information, see "[Cloning a repository](/github/creating-cloning-and-archiving-repositories/cloning-a-repository)" and "[Set up Git](/articles/set-up-git)."
{% endwebui %}
* You can find interesting projects and repositories on {% data variables.product.prodname_dotcom %} and make changes to them by creating a fork of the repository. {% data reusables.getting-started.fork-a-repository %}
* {% data reusables.getting-started.being-social %}
* {% data reusables.support.connect-in-the-forum-bootcamp %}noate.gif 

You can’t make changes to subscription settings once they are saved. If you want to change a subscription, for example to change the email address to which the report is sent, or to change the frequency, you need to unsubscribe to the report (see [Unsubscribe to a Custom Report](https://paysimple.com/help/ADP/ps30/7-reports/Unsubscribe_to_a_Custom_Report.htm#XREF_cr_unsub) below) then subscribe again using the new settings.

[Next ›](https://paysimple.com/help/ADP/ps30/7-reports/Unsubscribe_to_a_Custom_Report.htm#XREF_cr_unsub)You will return to the custom reports table, and you will now see the frequency of your subscription in the Subscription field in the table.

subscription_entered.jpg
 

You will receive an email with your report on the next scheduled date.
NOTE: Scheduled reports cannot be programmed for the current date. For example, if today is Monday and I program a report to be emailed weekly on Mondays, I won’t get the first email until Monday of next week.

noate.gif 

You can’t make changes to subscription settings once they are saved. If you want to change a subscription, for example to change the email address to which the report is sent, or to change the frequency, you need to unsubscribe to the report (see [Unsubscribe to a Custom Report](https://paysimple.com/help/ADP/ps30/7-reports/Unsubscribe_to_a_Custom_Report.htm#XREF_cr_unsub) below) then subscribe again using the new settings.

[Next ›](https://paysimple.com/help/ADP/ps30/7-reports/Unsubscribe_to_a_Custom_Report.htm#XREF_cr_unsub)
No file chosen
Attach files by dragging & dropping, selecting or pasting them.
Styling with Markdown is supported
 You’re receiving notifications because you’re watching this repository.
Footer
© 2022 GitHub, Inc.
Footer navigation
Terms
Privacy
Security
Status
Docs
Contact GitHub
Pricing
API
Training
Blog
About
Initial commit · zakwarlord7/bitcore.sig-Bitore.sigs@a453a60
