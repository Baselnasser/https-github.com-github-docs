date: '2022-05-10'
release_candidate: true
deprecated: true
intro: |
  {% note %}
  
  **Примечание.** Если на {% data variables.product.product_location %} выполняется сборка релиз-кандидата, обновление с помощью горячего исправления невозможно. Мы рекомендуем запускать релиз-кандидаты только в тестовых средах.
  
  {% endnote %}
  
  Инструкции по обновлениям см. в статье "[Обновление {% data variables.product.prodname_ghe_server %}](/admin/enterprise-management/updating-the-virtual-machine-and-physical-resources/upgrading-github-enterprise-server)".
sections:
  features:
    - heading: Список исключений IP-адресов для проверочного тестирования после обслуживания
      notes:
        # https://github.com/github/releases/issues/2109
        - |Теперь вы можете настроить список разрешенных IP-адресов, которые могут получить доступ к службам приложений в вашем экземпляре сервера GitHub Enterprise, пока включен режим обслуживания. Администраторы, которые посещают веб-интерфейс экземпляра с разрешенного IP-адреса, могут проверить функциональность экземпляра после обслуживания и до отключения режима обслуживания. Дополнительные сведения см. в статье "[Включение и планирование режима обслуживания](/admin/configuration/configuring-your-enterprise/enabling-and-scheduling-maintenance-mode#validating-changes-in-maintenance-mode-using-the-ip-exception-list)".

|
    - heading: Настраиваемые роли репозитория являются общедоступными
      notes:
        # https://github.com/github/releases/issues/1945
        - |Благодаря настраиваемым ролям репозитория организации теперь получают более детальный контроль над разрешениями на доступ к репозиторию, которые они могут предоставлять пользователям. Дополнительные сведения см. в статье "[Управление настраиваемыми ролями репозитория для организации](/organizations/managing-peoples-access-to-your-organization-with-roles/managing-custom-repository-roles-for-an-organization)".



Настраиваемая роль репозитория создается владельцем организации и доступна во всех репозиториях этой организации. Каждой роли можно присвоить пользовательское имя и описание. Его можно настроить с помощью набора из более чем 40 детальных разрешений. После создания администраторы репозитория могут назначить настраиваемую роль любому пользователю, команде или внешнему участнику совместной работы в своем репозитории.



Пользовательские роли репозитория можно создавать, просматривать, редактировать и удалять с помощью новой вкладки **Роли репозитория** в настройках организации. В организации можно создать не более 3 настраиваемых ролей. 



Настраиваемые роли репозитория также полностью поддерживаются в интерфейсах REST API GitHub Enterprise Server. API организаций можно использовать для перечисления всех настраиваемых ролей репозиториев в организации, а в существующие API для предоставления доступа к репозиториям отдельным лицам и группам теперь добавлена поддержка настраиваемых ролей репозиториев. Дополнительные сведения см. в разделе "[Организации](/rest/reference/orgs#list-custom-repository-roles-in-an-organization)" в документации по REST API.

|
    - heading: Реестр контейнеров GitHub в общедоступной бета-версии 
      notes: 
        # https://github.com/github/releases/issues/2005
         - |Реестр контейнеров GitHub теперь доступен в GitHub Enterprise Server 3.5 в виде общедоступной бета-версии, предоставляя разработчикам возможность публиковать, скачивать контейнеры и управлять ими. Поддержка контейнеров GitHub Packages реализует стандарты OCI для размещения образов Docker. Дополнительные сведения см. в статье "[Реестр контейнеров GitHub](/packages/working-with-a-github-packages-registry/working-with-the-container-registry)".

|
    - heading: Обновления Dependabot являются общедоступными
      notes:
       # https://github.com/github/releases/issues/2089
        - |Версия и обновления системы безопасности Dependabot теперь общедоступны в GitHub Enterprise Server 3.5. Все популярные экосистемы и компоненты, которые работают в репозиториях GitHub.com, теперь можно настроить на вашем экземпляре GitHub Enterprise Server. Для Dependabot на GitHub Enterprise Server требуются GitHub Actions и пул локальных средств выполнения тестов Dependabot, GitHub Connect и Dependabot, включенные администратором. Дополнительные сведения см. в статье "[Настройка обновлений Dependabot](https://docs.github.com/en/enterprise-server@3.5/admin/github-actions/enabling-github-actions-for-github-enterprise-server/setting-up-dependabot-updates)".

|
    - heading: Статистика сервера в общедоступной бета-версии
      notes:
        # https://github.com/github/releases/issues/2183
        - |Теперь вы можете проанализировать, как работает ваша команда, понять ценность, которую вы получаете от GitHub Enterprise Server, и помочь нам улучшить наши продукты, просматривая данные об использовании вашего экземпляра и делясь этими статистическими данными с GitHub. Вы можете использовать свои собственные инструменты для анализа использования с течением времени, скачивая свои данные в файле CSV или JSON или получая доступ к ним с помощью REST API. Список собранных статистических метрик см. в статье "[О статистике сервера](/admin/monitoring-activity-in-your-enterprise/analyzing-how-your-team-works-with-server-statistics/about-server-statistics#server-statistics-data-collected)". Данные статистики сервера не содержат ни личных данных, ни содержимого GitHub, например код, проблемы, комментарии или содержимое запросов на вытягивание.  Чтобы узнать больше о хранении и защите данных статистики сервера, см. статью "[Безопасность GitHub] (https://github.com/security)".  Дополнительные сведения о статистике сервера см. в статье "[Анализ того, как ваша команда работает со статистикой сервера](/admin/monitoring-activity-in-your-enterprise/analyzing-how-your-team-works-with-server-statistics)". Эта функция предоставляется в общедоступной бета-версии.

|
    - heading: Ограничение скорости GitHub Actions теперь можно настроить
      notes:
        # https://github.com/github/releases/issues/2123
        - |Администраторы сайта теперь могут включать и настраивать ограничение скорости для GitHub Actions. По умолчанию ограничение скорости отключено. Если задания рабочего процесса не могут быть немедленно назначены доступному средству выполнения тестов, они будут ждать в очереди, пока средство выполнения не станет доступным. Однако, если нагрузка GitHub Actions постоянно высокая, очередь может создавать резервные копии быстрее, чем она может истощаться, и производительность экземпляра GitHub Enterprise Server может ухудшиться. Чтобы избежать этого, администратор может настроить ограничение скорости. При превышении ограничения скорости дополнительные запуски рабочего процесса немедленно завершатся сбоем вместо помещения в очередь. Как только скорость стабилизируется ниже порогового значения, новые запуски снова могут быть поставлены в очередь. Дополнительные сведения см. в статье "[Настройка ограничений скорости] (/admin/configuration/configuring-your-enterprise/configuring-rate-limits#configuring-rate-limits-for-github-actions)".

|
    - heading: OpenID Connect (OIDC) для безопасного развертывания с помощью GitHub Actions
      notes:
        # https://github.com/github/releases/issues/2066
        - |GitHub Actions в GitHub Enterprise Server теперь поддерживает OIDC для безопасного развертывания в поставщики облачных служб, где используются токены с коротким сроком действия, которые автоматически меняются для каждого развертывания. OIDC обеспечивает следующие функции.



— Единая проверка подлинности между поставщиками облачных служб и GitHub Enterprise Server без необходимости хранения каких-либо долгосрочных облачных секретов в вашем экземпляре

— Администраторы облака могут полагаться на механизмы безопасности конкретного поставщика облачных услуг, чтобы гарантировать, что рабочие процессы GitHub Actions имеют минимальный доступ к облачным ресурсам. Нет дублирования управления секретами между GitHub Enterprise Server и облаком.



Дополнительные сведения см. в статье "[Усиление безопасности развертываний](/actions/deployment/security-hardening-your-deployments)".

|
    - heading: Совместное использование GitHub Actions внутри вашего предприятия является общедоступным
      notes:
        # https://github.com/github/releases/issues/2085
        - |Поддержка GitHub Actions во внутренних репозиториях теперь общедоступна для организаций в вашем экземпляре GitHub Enterprise Server. Вы можете использовать внутреннюю автоматизацию, делясь действиями во внутренних репозиториях. Вы можете управлять настройками репозитория или использовать REST API, чтобы разрешить доступ к рабочим процессам в других репозиториях внутри организации или в любой организации на экземпляре. Дополнительные сведения см. в статье "[Совместное использование действий и рабочих процессов с вашим предприятием](/actions/creating-actions/sharing-actions-and-workflows-with-your-enterprise)", "[Управление настройками GitHub Actions для репозитория](/repositories/managing-your-repositorys-settings-and-features/enabling-features-for-your-repository/managing-github-actions-settings-for-a-repository#allowing-access-to-components-in-an-internal-repository)" и "[Разрешения Actions](/rest/actions/permissions#get-the-level-of-access-for-workflows-outside-of-the-repository)" в документации по REST API.

|
    - heading: Поддержка кэша для GitHub Actions в GitHub Enterprise Server теперь является общедоступной
      notes:
        # https://github.com/github/releases/issues/2110
        - |Теперь вы можете использовать кэширование зависимостей, чтобы ускорить рабочие процессы GitHub Actions. Чтобы кэшировать зависимости для задания, можно включить действие [actions/cache](https://github.com/actions/cache) для создания кэша с уникальным ключом. Вы можете совместно использовать кэши для всех рабочих процессов в одном репозитории. Затем эти рабочие процессы могут восстановить кэш и выполняться быстрее.



Пользователи Actions также могут использовать наши API кэша, чтобы:



- определять политику предприятия для диапазона размеров кэша, разрешенного для каждого репозитория;

- запрашивать использование кэша в каждом репозитории и следить за тем, чтобы общий размер всех кэшей не достигал верхнего предела;

- увеличивать максимальный размер кэша для репозитория в пределах допустимых ограничений предприятия, исходя из требований к кэшу репозитория;

- отслеживать совокупное использование кэша на уровне организации или на уровне предприятия.



Внешнее Хранилище BLOB-объектов, настроенное в вашей корпоративной учетной записи, теперь будет совместно использоваться артефактами рабочего процесса, журналами, а также кэшами. Дополнительные сведения см. в статье "[Кэширование зависимостей для ускорения рабочих процессов](/actions/using-workflows/caching-dependencies-to-speed-up-workflows)".

|
    - heading: "Автоматическая подпись фиксаций, віполненніх в пользовательском веб-интерфейсе"
      notes:
        # https://github.com/github/releases/issues/1963
        - |Теперь вы можете настроить GitHub Enterprise Server для автоматической подписи фиксаций, выполненных в веб-интерфейсе, как, например, при редактировании файла или объединении запроса на вытягивание. Подписанные фиксации повышают уверенность в том, что изменения поступают из надежных источников. Эта функция позволяет параметру защиты ветвей [Требовать подписанные фиксации](/repositories/configuring-branches-and-merges-in-your-repository/defining-the-mergeability-of-pull-requests/about-protected-branches#require-signed-commits ) препятствовать входу неподписанных фиксаций в репозиторий и разрешать вход подписанных фиксаций — даже тех фиксаций, которые выполнены в веб-интерфейсе. Дополнительные сведения см. в статье "[Настройка подписи веб-фиксации](/admin/configuration/configuring-your-enterprise/configuring-web-commit-signing)".

|
    - heading: Синхронизация использования лицензии в любое время
      notes:
        # https://github.com/github/releases/issues/2201
        - |У клиентов, которые автоматически синхронизируют использование лицензий между GitHub Enterprise Server и облаком GitHub Enterprise с помощью подключения GitHub, теперь есть возможность синхронизировать использование лицензий независимо от автоматической еженедельной синхронизации. Эта функциональная возможность также сообщает о состоянии задания синхронизации. Дополнительные сведения см. в статье "[Синхронизация использования лицензии между GitHub Enterprise Server и облаком GitHub Enterprise](/billing/managing-your-license-for-github-enterprise/syncing-license-usage-between-github-enterprise-server-and -github-enterprise-cloud#manually-syncing-license-usage)".

|
    - heading: Многоразовые рабочие процессы для GitHub Actions являются общедоступными
      notes:
        # https://github.com/github/releases/issues/1767
        # https://github.com/github/releases/issues/1950
        # https://github.com/github/releases/issues/2114
          - |Повторно используемые рабочие процессы теперь общедоступны. Повторно используемые рабочие процессы помогают уменьшить дублирование, позволяя повторно использовать весь рабочий процесс, как если бы это было действие. В выпуске общедоступной версии теперь доступен ряд улучшений для сервера GitHub Enterprise. Дополнительные сведения см. в статье "[Повторное использование рабочих процессов](/actions/using-workflows/reusing-workflows)".



- Вы можете использовать выходные данные для передачи данных из повторно используемых рабочих процессов другим заданиям в вызывающем рабочем процессе.

- Вы можете передавать секреты окружения повторно используемым рабочим процессам.

- Журнал аудита содержит информацию о том, какие повторно используемые рабочие процессы используются.

- На повторно используемые рабочие процессы в том же репозитории, что и вызывающий репозиторий, можно ссылаться только по пути и имени файла (PATH/FILENAME). Вызываемый рабочий процесс будет из той же фиксации, что и вызывающий рабочий процесс.

|
    - heading: Локально размещенные средства выполнения тестов для GitHub Actions теперь могут отключать автоматические обновления
      notes:
        # https://github.com/github/releases/issues/2014
        - |Теперь проводится более тщательный контроль того, когда ваши локально размещенные средства выполнения тестов выполняют обновления программного обеспечения. Если вы укажете средству выполнения тестов флаг --disableupdate, оно не будет выполнять попытку выполнить автоматическое обновление программного обеспечения, если доступна более новая версия средства выполнения. Это позволяет вам обновлять локально размещенное средство выполнения тестов по собственному расписанию и особенно удобно, если ваше локально размещенное средство выполнения находится в контейнере.



 Для совместимости со службой GitHub Actions вам потребуется вручную обновить средство выполнения тестов в течение 30 дней с момента появления новой версии средства выполнения.  Инструкции по установке последней версии средства выполнения тестов см. в инструкциях по установке [последней версии в репозитории средства выполнения] (https://github.com/actions/runner/releases).

|
    - heading: Защита локально размещенных средств выполнения тестов для GitHub Actions путем ограничения рабочих процессов
      notes:
        # https://github.com/github/releases/issues/2013
        - |Владельцы организаций теперь могут повысить безопасность рабочих процессов CI/CD в локально размещенных средствах выполнения тестов, выбрав, какие рабочие процессы могут получить доступ к группе средств выполнения. Раньше любой рабочий процесс в репозитории, например маркировщик проблем, мог получить доступ к локально размещенным средствам выполнения тестов, доступным для организации. Дополнительные сведения см. в статье "[Управление доступом к самостоятельно размещенным средствам выполнения тестов с помощью групп](/actions/hosting-your-own-runners/managing-access-to-self-hosted-runners-using-groups#change-what-workflows -can-access-a-runner-group)" и [Блог GitHub](https://github.blog/2022-03-23-github-actions-secure-self-hosted-runners-specific-workflows/).

|
    - heading: Запрет GitHub Actions на одобрение запросов на вытягивание
      notes:
        # https://github.com/github/releases/issues/1959
        - |Теперь вы можете контролировать, могут ли GitHub Actions одобрять запросы на вытягивание. Эта функциональная возможность защищает от использования пользователем GitHub Actions для выполнения требования защиты ветви "Требуемые утверждения" и объединения изменений, которые не были проверены другим пользователем. Чтобы не нарушать существующие рабочие процессы, по умолчанию включен параметр **Allow GitHub Actions reviews to count towards required approval** (Разрешить проверки GitHub Actions для подсчета необходимого утверждения). Владельцы организаций могут отключить эту возможность в настройках GitHub Actions организации. Дополнительные сведения см. в статье "[Отключение или ограничение действий GitHub для вашей организации](/organizations/managing-organization-settings/disabling-or-limiting-github-actions-for-your-organization#preventing-github-actions-from-approving-pull-requests)".

|
    - heading: Повторный запуск неудачных или отдельных заданий GitHub Actions
      notes:
        # https://github.com/github/releases/issues/1503
        - |Теперь вы можете повторно запустить только невыполненные задания или отдельное задание в рабочем процессе GitHub Actions. Дополнительные сведения см. в статье "[Повторное выполнение рабочих процессов и заданий] (/actions/managing-workflow-runs/re-running-workflows-and-jobs)".

|
    - heading: Граф зависимостей поддерживает GitHub Actions
      notes:
        # https://github.com/github/releases/issues/1913
        - |Граф зависимостей теперь обнаруживает файлы YAML для рабочих процессов GitHub Actions. Сервер GitHub Enterprise отобразит файлы рабочего процесса в разделе графа зависимостей вкладки **Аналитика**. Репозитории, которые публикуют действия, также смогут видеть количество репозиториев, которые зависят от этого действия, из элемента управления "Используется" на домашней странице репозитория. Дополнительные сведения см. в статье "[О графе зависимостей](/code-security/supply-chain-security/understanding-your-software-supply-chain/about-the-dependency-graph)".

|
    - heading: Общие сведения о безопасности для предприятий в общедоступной бета-версии
      notes:
        # https://github.com/github/releases/issues/2040
        - |Клиенты GitHub Advanced Security теперь могут просматривать обзор предупреждений безопасности на уровне предприятия. Новая вкладка **Безопасность** на уровне предприятия обеспечивает представление рисков безопасности приложений, ориентированное на репозиторий, а также представление всех предупреждений сканирования секретных данных, ориентированное на предупреждения. Дополнительные сведения см. в статье "[Обзор безопасности](/code-security/security-overview/about-the-security-overview)".

|
    - heading: Представление безопасности для организаций является общедоступным
      notes:
        # https://github.com/github/releases/issues/2096
        - |Обзор предупреждений безопасности на уровне организации теперь является общедоступным. Клиенты GitHub Advanced Security могут использовать обзор безопасности, чтобы просмотреть представление угроз безопасности приложений, ориентированное на репозиторий, или представление сканирования всего кода, ориентированное на предупреждения, Dependabot и предупреждения о сканировании секретов для всех репозиториев в организации. Дополнительные сведения см. в статье "[Обзор безопасности](/code-security/security-overview/about-the-security-overview)".

|
    - heading: Сканирование кода обнаруживает больше проблем с безопасностью и поддерживает новые языковые версии
      notes:
        # https://github.com/github/releases/issues/2097
        - |Сканирование кода теперь обнаруживает большее количество CWE, а сканирование кода CodeQL полностью поддерживает стандартные языковые функции в следующих языковых выпусках.



- C# 10 / .NET 6

- Python 3.10

- Java 17

- TypeScript 4.5



Дополнительные сведения см. в статье [Блог GitHub] (https://github.blog/changelog/2022-02-25-code-scanning-detects-more-security-issues-supports-new-language-versions/).

|
    - heading: Просмотр предупреждений о сканировании кода в организации
      notes:
        # https://github.com/github/releases/issues/1792
        - |Клиенты GitHub Advanced Security теперь могут просматривать предупреждения о сканировании кода на вкладке **Безопасность** организации. Это представление доступно владельцам организаций и членам команд с [ролью диспетчера безопасности](/organizations/managing-people-access-to-your-organization-with-roles/managing-security-managers-in-your-organization). Дополнительные сведения см. в статье "[Обзор безопасности](/code-security/security-overview/about-the-security-overview)".

|
        # https://github.com/github/releases/issues/1763
        - |Теперь пользователи могут получать предупреждения о сканировании кода для организации в вашем экземпляре GitHub Enterprise Server через REST API. Эта новая конечная точка API дополняет существующую [конечную точку для репозиториев](/rest/reference/code-scanning#list-code-scanning-alerts-for-a-repository). Дополнительные сведения см. в разделе [Сканирование кода](/rest/code-scanning) в документации по REST API.

|
    - heading: Секретное сканирование доступно в качестве защиты отправки
      notes:
        # 
        - |GitHub Enterprise Server теперь может блокировать любые отправки, в которых обнаружен токен с высокой степенью доверенности. Разработчики могут обойти блокировку, предоставив подробные сведения о том, почему секрет должен быть зафиксирован через пользовательский веб-интерфейс. Дополнительные сведения см. в статье "[Защита отправок с помощью секретного сканирования](/code-security/secret-scanning/protecting-pushes-with-secret-scanning)".

|
    - heading: Пробные запуски для пользовательских шаблонов со сканированием секретов
      notes:
        # https://github.com/github/releases/issues/1703
        # https://github.com/github/releases/issues/2084
        - |Клиенты GitHub Advanced Security теперь могут в пробном режиме запускать пользовательские шаблоны сканирования секретов на уровне организации или репозитория. Пробные запуски позволяют пользователям с доступом владельца или администратора просматривать и совершенствовать свои шаблоны, прежде чем публиковать их и создавать предупреждения. Вы можете составить шаблон, а затем использовать **Save and dry run** (Сохранить и выполнить пробный запуск) для получения результатов. Сканирование обычно занимает всего несколько секунд, но GitHub Enterprise Server также уведомит владельцев организаций или администраторов репозитория по электронной почте, когда будут готовы результаты пробного запуска. Дополнительные сведения см. в статьях "[О секретном сканировании](/code-security/secret-scanning/about-secret-scanning#about-secret-scanning-for-private-repositories)" и "[Определение пользовательских шаблонов для секретного сканирования] (/code-security/secret-scanning/defining-custom-patterns-for-secret-scanning)".

|
    - heading: События пользовательских шаблонов сканирования секретов теперь в журнале аудита
      notes:
        # https://github.com/github/releases/issues/2154
        - |Журнал аудита теперь включает события, связанные с пользовательскими шаблонами сканирования секретов. Эти данные помогают клиентам GitHub Advanced Security понять действия, предпринятые в их [репозитории](/organizations/keeping-your-organization-secure/managing-security-settings-for-your-organization/reviewing-the-audit-log-for-your -organization#repository_secret_scanning_custom_pattern-category-actions)-, [организации](/organizations/keeping-your-organization-secure/managing-security-settings-for-your-organization/reviewing-the-audit-log-for-your-organization#org_secret_scanning_custom_pattern-category-actions)- или [предприятии](/admin/monitoring-activity-in-your-enterprise/reviewing-audit-logs-for-your-enterprise/audit-log-events-for-your-enterprise#business_secret_scanning_custom_pattern-category-actions) для аудита безопасности и соответствия требованиям. Дополнительные сведения см. в статье "[Просмотр журнала аудита для вашей организации](/organizations/keeping-your-organization-secure/managing-security-settings-for-your-organization/reviewing-the-audit-log-for-your -organization)" или "[Просмотр журналов аудита для вашего предприятия](/admin/monitoring-activity-in-your-enterprise/reviewing-audit-logs-for-your-enterprise)".

|
    - heading: Настройка разрешений для сканирования секретов с помощью настраиваемых ролей репозитория
      notes:
        # https://github.com/github/releases/issues/1909
        - |Теперь вы можете настроить два новых разрешения для сканирования секретов при управлении настраиваемыми ролями репозитория.



- Просмотр результатов сканирования секретов

- Закрытие или повторное открытие результатов сканирования секретов



Дополнительные сведения см. в статье "[Управление настраиваемыми ролями репозитория для организации](/organizations/managing-peoples-access-to-your-organization-with-roles/managing-custom-repository-roles-for-an-organization)".

|
    - heading: Сканирование секретов теперь поддерживает архивные репозитории
      notes:
        # https://github.com/github/releases/issues/2076
        - |Клиенты GitHub Advanced Security теперь могут включить сканирование секретов для архивных репозиториев через пользовательский интерфейс и API. Дополнительные сведения см. в статье "[О сканировании секретов](/code-security/secret-scanning/about-secret-scanning#about-secret-scanning-for-private-repositories)", "[Об архивных репозиториях](/repositories /archiving-a-github-repository/archiving-repositories)" и "[Репозитории](/rest/repos/repos#update-a-repository)" в документации по REST API.

|
    - heading: Веб-перехватчики сканирования секретов для расположений предупреждений
      notes:
        # https://github.com/github/releases/issues/2149
        - |Клиенты GitHub Advanced Security, использующие сканирование секретов, теперь могут выбрать получение веб-перехватчика при каждом обнаружении секрета в новом расположении. Событие веб-перехватчика secret_scanning_alert_location содержит сведения о расположении, такие как SHA фиксации, и соответствующее предупреждение об обнаружении. Расположение создается для каждого нового пути к файлу, содержащего обнаруженный секрет. Дополнительные сведения см. в статье "[События и полезные данные веб-перехватчиков](/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#secret_scanning_alert_location)".

|
    - heading: Просмотр предупреждений Dependabot по всей организации
      notes:
        # https://github.com/github/releases/issues/1992
        - |Клиенты GitHub Advanced Security теперь могут просматривать предупреждения Dependabot на вкладке **Безопасность** организации. Это представление доступно владельцам организаций и членам команд с [ролью диспетчера безопасности](/organizations/managing-people-access-to-your-organization-with-roles/managing-security-managers-in-your-organization). Дополнительные сведения см. в статье "[Обзор безопасности](/code-security/security-overview/about-the-security-overview)".

|
    - heading: Настройте разрешения для предупреждений Dependabot с помощью настраиваемых ролей репозитория
      notes:
        # https://github.com/github/releases/issues/1958
        - |Теперь вы можете настроить два новых разрешения для предупреждений Dependabot при управлении настраиваемыми ролями репозитория.



- Просмотр предупреждений Dependabot

- Закрытие или повторное открытие предупреждений Dependabot



Дополнительные сведения см. в статье "[Управление настраиваемыми ролями репозитория для организации](/organizations/managing-peoples-access-to-your-organization-with-roles/managing-custom-repository-roles-for-an-organization)".

|
    - heading: Повторное открытие отклоненных предупреждений Dependabot
      notes:
        # https://github.com/github/releases/issues/1923
        - |Теперь вы можете повторно открыть отклоненные предупреждения Dependabot на странице пользовательского интерфейса для закрытого предупреждения. Это не влияет на запросы на вытягивание Dependabot или API GraphQL. Дополнительные сведения см. в статье "[О предупреждениях Dependabot](/code-security/dependabot/dependabot-alerts/about-dependabot-alerts)".

|
    - heading: Поддержка Pub для обновлений версии Dependabot находится в общедоступной бета-версии
      notes:
        # https://github.com/github/releases/issues/2086
        - |Пользователи обновлений версии Dependabot теперь могут заблаговременно обновлять зависимости для проектов Flutter или Dart, использующих диспетчер пакетов Pub.  



Чтобы протестировать [обновления версии](/code-security/dependabot/dependabot-version-updates/about-dependabot-version-updates) в собственном репозитории Dart или Flutter, добавьте следующий файл конфигурации в <code>[.github/dependabot .yaml](/code-security/dependabot/dependabot-version-updates/configuring-dependabot-version-updates#enbling-dependabot-version-updates)</code>. Обратите внимание на флаги package-ecosystem: "pub"` и `enable-beta-ecosystems: true`.

```yaml

версия: 2

enable-beta-ecosystems: true

обновления:

  - package-ecosystem: "pub"

    каталог: "/"

    расписание:

      интервал: "еженедельно"

```

|
    - heading: "См. запрос на вытягивание, связанный с предупреждениями Dependabot репозитория через GraphQL API"
      notes:
        # https://github.com/github/releases/issues/2088
        - |Новый объект GraphQL DependabotUpdate позволяет просматривать информацию о том, что происходит с обновлениями системы безопасности вашего репозитория. Когда GitHub Enterprise Server обнаружит, что зависимость в вашем репозитории уязвима, Dependabot попытается открыть запрос на вытягивание, чтобы обновить эту зависимость до неуязвимой версии. Теперь вы можете увидеть запрос на вытягивание, который устраняет уязвимость. В некоторых случаях Dependabot не может открыть запрос на вытягивание. Ранее сообщение об ошибке, сгенерированное Dependabot, отображалось только в разделе "Предупреждения Dependabot" на вкладке **Безопасность**. Теперь, если Dependabot столкнется с ошибкой при попытке открыть запрос на вытягивание для предупреждения безопасности, вы можете определить причину с помощью GraphQL API. Дополнительные сведения см. в разделе "[Объекты](/graphql/reference/objects#dependabotupdate)" в документации по GraphQL API.

|
    - heading: Получите дополнительные сведения о предупреждениях Dependabot через GraphQL API
      notes:
        # https://github.com/github/releases/issues/1922
        - |Теперь вы можете просматривать фиксированные предупреждения от Dependabot с помощью GraphQL API. Вы также можете получить доступ и фильтровать по состоянию и уникальному числовому идентификатору, а также фильтровать по состоянию в объекте предупреждения об уязвимости. Следующие поля теперь существуют для `RepositoryVulnerabilityAlert`.



- `number`

- `fixed_at`

- `fix_reason`

- `state`



Дополнительные сведения см. в разделе "[Объекты](/graphql/reference/objects#repositoryvulnerabilityalert)" в документации по GraphQL API.

|
    - heading: События Git в журнале аудита предприятия
      notes:
        # https://github.com/github/releases/issues/2205
        - |Следующие события, связанные с Git, теперь могут отображаться в журнале аудита предприятия. Если включить эту функцию и установить срок хранения журнала аудита, новые события будут доступны для поиска через пользовательский интерфейс и API или для экспорта в формате JSON или CSV.



- `git.clone`

- `git.fetch`

- `git.push`



Из-за большого количества зарегистрированных событий Git мы рекомендуем вам отслеживать файловое хранилище вашего экземпляра и просматривать соответствующие конфигурации предупреждений. Дополнительные сведения см. в статье "[Настройка журнала аудита для предприятия](/admin/monitoring-activity-in-your-enterprise/reviewing-audit-logs-for-your-enterprise/configuring-the-audit-log-for -your-enterprise#managing-git-events-in-the-audit-log)".

|
    - heading: Улучшения для CODEOWNERS
      notes:
        # https://github.com/github/releases/issues/1994
        - |Этот выпуск включает улучшения для CODEOWNERS.



- Синтаксические ошибки теперь появляются при просмотре файла CODEOWNERS из Интернета. Раньше, когда в строке файла CODEOWNERS была синтаксическая ошибка, она игнорировалась, а в некоторых случаях приводила к тому, что весь файл CODEOWNERS не загружался. Приложения и действия GitHub могут получить доступ к одному и тому же списку ошибок с помощью новых API-интерфейсов REST и GraphQL. Дополнительные сведения см. в разделе "[Репозитории](/rest/repos/repos#list-codeowners-errors)" в документации по REST API или "[Объекты](/graphql/reference/objects#repositorycodeowners)" в документации по GraphQL API.

- После того, как кто-то создаст новый запрос на вытягивание или отправит новые изменения в черновик запроса на вытягивание, все владельцы кода, которые получат запрос на проверку, будут перечислены в запросе на вытягивание в разделе "Рецензенты". Эта функция позволяет заранее узнать, кто получит запрос на проверку, как только запрос на вытягивание будет помечен как готовый к проверке.

- Комментарии в файлах CODEOWNERS теперь могут появляться в конце строки, а не только в выделенных строках.



Дополнительные сведения см. в статье "[О владельцах кода](/repositories/managing-your-repositorys-settings-and-features/customizing-your-repository/about-code-owners)".

|
    - heading: Дополнительные способы поддерживать актуальность тематической ветки запроса на вытягивание
      notes:
        # https://github.com/github/releases/issues/1566
        - |Кнопка **Update branch** (Обновить ветвь) на странице запроса на вытягивание позволяет обновить ветвь запроса на вытягивание актуальными изменениями из базовой ветви. Это полезно для проверки совместимости ваших изменений с текущей версией базовой ветви перед слиянием. Два усовершенствования теперь дают вам больше способов поддерживать вашу ветвь в актуальном состоянии.



- Если тематическая ветка вашего запроса на вытягивание устарела по сравнению с базовой ветвью, теперь у вас есть возможность обновить ее, переместив последнюю версию базовой ветви. Перемещение применяет изменения из вашей ветви к последней версии базовой ветви, в результате чего получается ветвь с линейным журналом, так как фиксация слияния не создается. Чтобы выполнить обновление путем перемещения, щелкните раскрывающееся меню рядом с кнопкой **Update Branch** (Обновить ветвь), щелкните **Update with rebase** (Обновить с помощью перебазирования), а затем — **Rebase branch** (Переместить ветвь). Ранее кнопка **Update Branch** (Обновить ветвь) выполняла традиционное слияние, которое всегда приводило к фиксации слияния в ветви запроса на вытягивание. Этот вариант по-прежнему доступен, но теперь у вас есть выбор. Дополнительные сведения см. в статье "[Синхронизация вашего запроса на включение с базовой ветвью](/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/keeping-your-pull-request-in-sync-with-the-base-branch)".



- Новый параметр репозитория гарантирует постоянную доступность кнопки **Update branch** (Обновить ветвь), когда тематическая ветка запроса на вытягивание не соответствует базовой ветви. Ранее эта кнопка была доступна только при включенном параметре защиты ветви **Require branches to be up to date before merging** (Требовать обновления ветвей перед слиянием). Пользователи с правами администратора или координатора могут управлять параметром **Always suggest updating pull request branches** (Всегда предлагать обновление ветвей запросов на вытягивание) в разделе **Запросы на вытягивание** в параметрах репозитория. Дополнительные сведения см. в статье "[Управление предложениями по обновлению ветвей запросов на вытягивание](/repositories/configuring-branches-and-merges-in-your-repository/configuring-pull-request-merges/managing-suggestions-to-update-pull-request-branches)".

|
    - heading: Настройка пользовательских заголовков HTTP для сайтов страниц GitHub
      notes: 
        # https://github.com/github/releases/issues/2124
        - |Теперь вы можете настроить пользовательские заголовки HTTP, которые применяются ко всем сайтам страниц GitHub, обслуживаемым вашим экземпляром GitHub Enterprise Server. Дополнительные сведения см. в статье "[Настройка страниц GitHub для вашего предприятия](/admin/configuration/configuring-your-enterprise/configuring-github-pages-for-your-enterprise#configuring-github-pages-response-headers-for-your-enterprise)".

|
    - heading: Игнорирование фиксаций в представлении blame
      notes:
        # https://github.com/github/releases/issues/2090
        - |Теперь можно игнорировать редакции в представлении blame, создав файл _.git-blame-ignore-revs_ в корне вашего репозитория. Дополнительные сведения см. в статье "[Просмотр файла](/repositories/working-with-files/using-files/viewing-a-file#ignore-commits-in-the-blame-view)".

|
    - heading: Светлая тема с высокой контрастностью является общедоступной
      notes:
        # https://github.com/github/releases/issues/2011
        - |Светлая тема с высокой контрастностью с большим контрастом между элементами переднего плана и фона теперь является общедоступной. Дополнительные сведения см. в статье "[Управление параметрами темы](/account-and-profile/setting-up-and-managing-your-github-user-account/managing-user-account-settings/managing-your-theme-settings)".

|
    - heading: Правила защиты тегов
      notes:
        # https://github.com/github/releases/issues/1793
        - |Владельцы репозиториев теперь могут настраивать правила защиты тегов для защиты тегов репозитория. После защиты правилом защиты тегов теги, соответствующие указанному шаблону имен, могут создаваться и удаляться только пользователями с ролью координатора или администратора в репозитории. Дополнительные сведения см. в статье "[Настройка правил защиты тегов](/repositories/managing-your-repositorys-settings-and-features/managing-repository-settings/configuring-tag-protection-rules)".

|
  bugs:
    # https://github.com/github/releases/issues/1934
    - |Теперь приложения GitHub могут загружать ресурсы выпуска.

|
  changes:
    # https://github.com/github/releases/issues/2063
    - |Чтобы использовать поток авторизации устройства для приложений OAuth и GitHub, необходимо вручную включить эту функцию. Это изменение снижает вероятность того, что приложения будут использоваться в фишинговых атаках на пользователей GitHub Enterprise Server, так как интеграторы осознают риски и делают осознанный выбор в пользу поддержки этой формы проверки подлинности. Если вы владеете или управляете приложением OAuth или приложением GitHub и хотите использовать поток устройства, вы можете включить его для своего приложения на странице параметров приложения. Конечные точки API потока устройства будут отвечать кодом состояния 400 приложениям, в которых эта функция не включена. Дополнительные сведения см. в статье "[Авторизация приложений OAuth](/developers/apps/building-oauth-apps/authorizing-oauth-apps#device-flow)".

|
    # https://github.com/github/releases/issues/2049
    - |На странице предупреждений о сканировании кода теперь всегда отображается статус предупреждения и информация для ветви по умолчанию. На боковой панели появилась новая панель "Affected branches" (Затронутые ветви), где вы можете увидеть статус предупреждения в других ветвях. Если предупреждения не существует в вашей ветви по умолчанию, на странице предупреждения будет отображаться статус In branch (В ветви) или In pull request (В запросе на вытягивание) для расположения, в котором в последний раз видели предупреждение. Это улучшение упрощает понимание состояния предупреждений, которые были введены в вашу кодовую базу. Дополнительные сведения см. в статье "[О предупреждениях по сканированию кода](/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/about-code-scanning-alerts#about-alert-details)".



Страница списка предупреждений не изменяется и ее можно отфильтровать по "ветви". Вы можете использовать API сканирования кода для получения более подробных сведений о ветвях для предупреждений. Дополнительные сведения см. в разделе "[Сканирование кода](/rest/code-scanning)" в документации по REST API.

|
    # https://github.com/github/releases/issues/2050
    - |Сканирование кода теперь показывает детали анализа источника предупреждения. Если предупреждение имеет несколько источников анализа, оно отображается на боковой панели Affected branches (Затронутые ветви) и на временной шкале предупреждений. Вы можете навести указатель мыши на значок источника анализа на боковой панели Affected branches (Затронутые ветви), чтобы увидеть статус предупреждения в каждом источнике анализа. Если предупреждение имеет только один источник анализа, информация об источниках анализа не отображается на странице предупреждения. Эти улучшения упростят понимание ваших предупреждений. В частности, это поможет вам понять те предупреждения, которые имеют несколько источников анализа. Это особенно полезно для установок с несколькими конфигурациями анализа, таких как монорепозитории. Дополнительные сведения см. в статье "[О предупреждениях по сканированию кода](/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/about-code-scanning-alerts#about-analysis-origins)".

|
    # https://github.com/github/releases/issues/2071
    - |Списки репозиториев, принадлежащих пользователю или организации, теперь имеют дополнительный параметр фильтра "Шаблоны", упрощающий поиск репозиториев шаблонов.

|
    # https://github.com/github/releases/issues/1947
    - |GitHub Enterprise Server может отображать несколько распространенных форматов изображений, включая PNG, JPG, GIF, PSD и SVG, а также предоставляет несколько способов сравнения различий между версиями. Теперь при просмотре добавленных или измененных изображений в запросе на вытягивание предварительный просмотр этих изображений отображается по умолчанию. Раньше вы могли видеть сообщение о том, что двоичные файлы не могут быть показаны, и вам нужно было переключить опцию Display rich diff (Отображать расширенные различия). Дополнительные сведения см. в статье "[Работа с файлами без кода](/repositories/working-with-files/using-files/working-with-non-code-files)".

|
    # https://github.com/github/releases/issues/2054
    - |Новые gist теперь создаются с именем ветви по умолчанию либо main, либо с альтернативным именем ветки по умолчанию, определенным в ваших пользовательских настройках. Это соответствует тому, как другие репозитории создаются на сервере GitHub Enterprise. Дополнительные сведения см. в статье "[О ветвях](/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-branches#about-the-default-branch)" и "[Управление именем ветви по умолчанию для репозиториев](/account-and-profile/setting-up-and-managing-your-personal-account-on-github/managing-personal-account-settings/managing-the-default-branch-name-for-your-repositories)".

|
    # https://github.com/github/releases/issues/2028
    - |Gist теперь показывают только 30 последних комментариев при первом отображении. Вы можете щелкнуть **Load earlier comments...** (Загрузить более ранние комментарии...), чтобы увидеть больше. Благодаря этому gist с большим количеством комментариев будут появляться быстрее. Дополнительные сведения см. в статье "[Редактирование и совместное использование контента с помощью gists](/get-started/writing-on-github/editing-and-sharing-content-with-gists)".

|
    # https://github.com/github/releases/issues/2036
    - |Страницы настроек для пользователей, организаций, репозиториев и групп изменены таким образом, что похожие страницы настроек сгруппированы в разделы для улучшения информационной архитектуры и удобства обнаружения. Дополнительные сведения см. в [журнале изменений GitHub] (https://github.blog/changelog/2022-02-02-redesign-of-githubs-settings-pages/). 

|
    # https://github.com/github/releases/issues/2129
    - |При фокусировке или наведении курсора на метку теперь отображается описание метки в подсказке.

|
    # https://github.com/github/releases/issues/1983
    - |На создание и удаление приглашений в репозиторий, независимо от того, выполняется ли это через API или веб-интерфейс, теперь распространяются ограничения скорости, которые могут быть включены в вашем экземпляре сервера GitHub Enterprise. Дополнительные сведения об ограничениях скорости см. в статье "[Настройка ограничений скорости](/admin/configuration/configuring-your-enterprise/configuring-rate-limits)".

|
    # https://github.com/github/releases/issues/2291
    - |Компания MinIO объявила об удалении шлюзов MinIO с 1 июня 2022 года. Хотя шлюз MinIO для NAS по-прежнему является одним из поддерживаемых поставщиков хранилищ для действий и пакетов Github, мы рекомендуем перейти на поддержку MinIO LTS, чтобы воспользоваться поддержкой и исправлениями ошибок от MinIO. Дополнительные сведения об ограничениях скорости см. в статье "[Запланированное удаление шлюза MinIO для GCS, Azure, HDFS в репозитории minio/minio](https://github.com/minio/minio/issues/14331)".

|
  deprecations:
    - heading: Изменение формата маркеров проверки подлинности
      notes:
        # https://github.com/github/releases/issues/1235
        - |Подключение GitHub больше не будет работать после 3 июня для экземпляров, работающих под управлением сервера GitHub Enterprise 3.1 или более ранней версии, из-за изменения формата токенов аутентификации GitHub. Дополнительные сведения см. в [журнале изменений GitHub](https://github.blog/changelog/2021-03-31-authentication-token-format-updates-are-generally-available/).

|
    - heading: Вместо средства выполнения тестов CodeQL теперь рекомендуется использовать CodeQL CLI
      notes:
        # https://github.com/github/releases/issues/1632
        - |Вместо средства выполнения тестов CodeQL теперь рекомендуется использовать CodeQL CLI. GitHub Enterprise Server 3.4 и более поздние версии больше не включают средство выполнения тестов CodeQL. Это устаревание затрагивает только пользователей, которые используют сканирование кода CodeQL в сторонних системах CI/CD. Пользователи GitHub Actions не затронуты. GitHub настоятельно рекомендует клиентам перейти на CodeQL CLI, который представляет собой полнофункциональную замену средству выполнения тестов CodeQL и имеет множество дополнительных функций. Дополнительные сведения см. в статье "[Миграция со средства выполнения тестов CodeQL на CodeQL CLI](/code-security/code-scanning/using-codeql-code-scanning-with-your-existing-ci-system/migrating-from-the- codeql-runner-to-codeql-cli)".

|
    - heading: Средство выбора тем для страниц GitHub удалено
      notes:
        - |Средство выбора темы для страниц GitHub было удалено из настроек страниц. Дополнительные сведения о настройке тем для страниц GitHub см. в статье "[Добавление темы на сайт страниц GitHub с помощью Jekyll](/pages/setting-up-a-github-pages-site-with-jekyll/adding-a-theme-to-your-github-pages-site-using-jekyll)".

|
  known_issues:
      - "На только что настроенном экземпляре {% data variables.product.prodname_ghe_server %} без пользователей злоумышленник может создать первого пользователя — администратора."
      - Настраиваемые правила брандмауэра удаляются в процессе обновления.
      - "Отслеживаемые файлы Git LFS, [отправленные через веб-интерфейс](https://github.com/blog/2105-upload-files-to-your-repositories), ошибочно добавлялись напрямую в репозиторий."
      - "Проблемы не могут быть закрыты, если они содержат постоянную ссылку на большой двоичный объект в том же репозитории, где путь к файлу большого двоичного объекта длиннее 255 символов."
      - "Когда в GitHub Connect включен параметр \"Пользователи могут выполнять поиск на GitHub.com\", результаты поиска на GitHub.com не включают проблемы в частных и внутренних репозиториях."
      - "Реестр npm {% data variables.product.prodname_registry %} больше не возвращает значение времени в ответах метаданных. Это сделано, чтобы разрешить существенные улучшения производительности. Мы продолжим хранить все данные, необходимые для возврата значения времени в качестве части ответа метаданных, и возобновим возврат этого значения в будущем, как только решим существующие проблемы с производительностью."
      - "Ограничения ресурсов, относящиеся к обработке предварительно полученных перехватчиков, могут приводить к сбою некоторых из них."
      - "Службы действий необходимо перезапустить после восстановления устройства из резервной копии, созданной на другом узле."
