---
date: '2021-12-07'
intro: For upgrade instructions, see "[Upgrading {% data variables.product.prodname_ghe_server %}](/admin/enterprise-management/updating-the-virtual-machine-and-physical-resources/upgrading-github-enterprise-server)."<br><br>**Note:** We are aware of an issue where {% data variables.product.prodname_actions %} may fail to start automatically following the upgrade to {% data variables.product.prodname_ghe_server %} 3.3. To resolve, connect to the appliance via SSH and run the `ghe-actions-start` command.
sections:
  features:
    - 
      heading: セキュリティマネージャーのロール
      notes:
        - |
          Organizationのオーナーは、Teamに対してセキュリティアラートの管理とリポジトリへのアクセス設定へのアクセスを許可できるようになりました。"security manager"のロールを任意のTeamに適用して、Teamのメンバーに以下のアクセスを付与できます。

          - Organizationのすべてのリポジトリへの読み取りアクセス
          - Organizationのすべてのセキュリティアラートへの書き込みアクセス
          - Organizationレベルのセキュリティタブへのアクセス
          - Organizationレベルのセキュリティ設定への書き込みアクセス
          -リポジトリレベルのセキュリティ設定への書き込みアクセス

          詳しい情報については「[Organizationのセキュリティマネージャーの管理](/organizations/managing-peoples-access-to-your-organization-with-roles/managing-security-managers-in-your-organization)」を参照してください。
    - 
      heading: 'GitHub Actions及びオートスケーリングのための新しいwebhookのための一過性のセルフホストランナー'
      notes:
        - |
          {% data variables.product.prodname_actions %}は、オートスケールするランナーを容易にするため、一過性（単一ジョブ）のセルフホストランナーと、新しい [`workflow_job`](/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#workflow_job) webhookをサポートしました。

          一過性のランナーは、各ジョブがクリーンなイメージ上で実行されることが必要な、自己管理の環境に適しています。ジョブが実行されたあと、一過性のランナーは自動的に{% data variables.product.product_location %}から登録解除され、ジョブ後の管理が可能になります。

          一過性のランナーを新しい`workflow_job` webhookと組み合わせて、{% data variables.product.prodname_actions %}のジョブリクエストに応じてセルフホストランナーを自動的にスケールさせることができます。

          詳しい情報については「[セルフホストランナーのオートスケーリング](/actions/hosting-your-own-runners/autoscaling-with-self-hosted-runners)」及び「[webhookイベントとペイロード](/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#workflow_job)」を参照してください。
    - 
      heading: 'ダーク高コントラストテーマ'
      notes:
        - |
          前面の要素と背景要素のコントラストを大きくしたダーク高コントラストテーマが{% data variables.product.prodname_ghe_server %} 3.3で利用できるようになりました。このリリースには、すべての{% data variables.product.company_short %}テーマに渡るカラーシステムの改善も含まれています。

          ![外見設定ページでのダークデフォルトテーマとダーク高コントラストの切り替えのアニメーション画像](https://user-images.githubusercontent.com/334891/123645834-ad096c00-d7f4-11eb-85c9-b2c92b00d70a.gif)

          テーマの切り替えに関する詳しい情報については「[テーマ設定の管理](/account-and-profile/setting-up-and-managing-your-github-user-account/managing-user-account-settings/managing-your-theme-settings)」を参照してください。
  changes:
    - 
      heading: 管理に関する変更
      notes:
        - '{% data variables.product.prodname_ghe_server %} 3.3には、リポジトリのメンテナンスの改善、特に多くの到達不能なオブジェクトを含むリポジトリに対する改善が含まれます。{% data variables.product.prodname_ghe_server %} 3.3へのアップグレード後の最初のメンテナンスサイクルが完了するまでには、通常よりも長くかかるかもしれないことに注意してください。'
        - '{% data variables.product.prodname_ghe_server %} 3.3には、地理的に分散したチームとCIインフラストラクチャのためのリポジトリキャッシュのパブリックベータが含まれています。このリポジトリキャッシュは、追加の地点で利用できる読み取りのみのリポジトリのコピーを保持するもので、クライアントがプライマリインスタンスから重複してGitのコンテンツをダウンロードすることを回避してくれます。詳しい情報については「[リポジトリのキャッシングについて](/admin/enterprise-management/caching-repositories/about-repository-caching)」を参照してください。'
        - '{% data variables.product.prodname_ghe_server %} 3.3には、ユーザ偽装プロセスの改善が含まれています。偽装セッションには偽装の正当性が必要になり、アクションは偽装されたユーザとして行われたものとしてAudit logに記録され、偽装されたユーザには、Enterpriseの管理者によって偽装されたというメール通知が届きます。詳しい情報については「[ユーザの偽装](/enterprise-server@3.3/admin/user-management/managing-users-in-your-enterprise/impersonating-a-user)を参照してください。'
        - Gitと{% data variables.product.prodname_actions %}のアクティビティに関連するイベントを含む、Audit logに公開されるイベントの増大を受けつけるために、新しいストリーム処理のサービスが追加されました。
        - The {% data variables.product.prodname_github_connect %} data connection record now includes a list of enabled {% data variables.product.prodname_github_connect %} features. [Updated 2021-12-09]
    - 
      heading: トークンの変更
      notes:
        - |
          新しい個人アクセストークン及び既存の個人アクセストークンに、期限切れの期日を設定でいるようになりました。古いトークンが漏洩し、セキュリティを毀損することがないよう、個人アクセストークンには期限切れの期日を設定することを強くおすすめします。トークンのオーナーは、期限切れが近づいたトークンを更新する時期になるとメールを受信します。期限切れになったトークンは再生成することができ、ユーザはオリジナルと同じ属性を持つ重複したトークンを受け取ることになります。

          個人アクセストークンを{% data variables.product.company_short %} APIで使う場合、新しい`GitHub-Authentication-Token-Expiration`ヘッダがレスポンスに含まれます。これは、トークンの期限切れの期日を示します。詳しい情報については「[個人アクセストークンの作成](/github/authenticating-to-github/keeping-your-account-and-data-secure/creating-a-personal-access-token)」を参照してください。
    - 
      heading: '通知の変更'
      notes:
        - 'ディスカッションからの通知メールのタイトルには`(Discussion #xx)`が含まれるようになったので、ディスカッションを参照するメールを認識してフィルタリングできます。'
    - 
      heading: 'リポジトリの変更'
      notes:
        - パブリックリポジトリは、プライベート及びインターナルリポジトリのように名前の隣に`Public`というラベルが付くようになりました。この変更によって、パブリックリポジトリを特定し、誤ってプライベートなコードをコミットすることを避けるのが容易になります。
        - ブランチ選択メニューを使う際に正確なブランチ名を指定すると、マッチするブランチの最上位にその結果が現れるようになりました。以前は厳密にマッチしたブランチ名がリストの末尾に表示されることがありました。
        - 対応するオープンなPull Requestを持つブランチを表示する際に、{% data variables.product.prodname_ghe_server %}はPull Requestに直接リンクするようになりました。以前は、ブランチの比較を使って貢献するか、新しいPull Requestをオープンするためのプロンプトがありました。
        - ボタンをクリックして、ファイルの生の内容をクリップボードにコピーできるようになりました。以前は、生のファイルを開き、すべてを選択し、コピーしなければなりませんでした。ファイルの内容をコピーするには、ファイルにアクセスし、ツールバーの{% octicon "copy" aria-label="The copy icon" %}をクリックしてください。この機能は現在、一部のブラウザでのみ利用可能であることに注意してください。
        - 新しいリリースを作成する際に、タグをテキストフィールドで指定するのではなく、ドロップダウンセレクタを使ってタグを選択あるいは作成できるようになりました。詳しい情報については「[リポジトリのリリースの管理](/repositories/releasing-projects-on-github/managing-releases-in-a-repository)」を参照してください。
        - 双方向のUnicodeテキストを含むファイルを表示する際に、警告が表示されるようになりました。双方向のUnicodeテキストは、ユーザインターフェースで表示されるのとは異なるように解釈あるいはコンパイルされることがあります。たとえば、非表示の双方向Unicode文字を使ってテキストファイルのセグメントをスワップさせることがでいいます。これらの文字の置き換えに関する詳しい情報については[{% data variables.product.prodname_dotcom %} changelog](https://github.blog/changelog/2021-10-31-warning-about-bidirectional-unicode-text/)を参照してください。
        - '`CITATION.cff`ファイルを使って、自分の作品をどのように引用してほしいかを他者に知らせることができるようになりました。`CITATION.cff`ファイルはプレーンテキストファイルで、人間及び機会が読める引用情報を持ちます。{% data variables.product.prodname_ghe_server %}はこの情報を[APA](https://apastyle.apa.org)や[BibTeX](https://en.wikipedia.org/wiki/BibTeX)のような共通引用フォーマットにパースします。詳しい情報については「[CITATIONファイルについて](/repositories/managing-your-repositorys-settings-and-features/customizing-your-repository/about-citation-files)」を参照してください。'
    - 
      heading: 'Markdownの変更'
      notes:
        - |
          Markdownファイル、Issue、Pull Request、コメント内での引用符やリストに、新しいキーボードショートカットが使えるようになりました。

          * 引用符を追加するには、Macでは<kbd>cmd shift .</kbd> Windows及びLinuxでは<kbd>ctrl shift .</kbd>としてください。

          * 順序付きリストを追加するには、Macでは<kbd>cmd shift 7</kbd> Windows及びLinuxでは<kbd>ctrl shift 7</kbd>としてください。

          * 順序無しリストを追加するには、Macでは<kbd>cmd shift 8</kbd> Windows及びLinuxでは<kbd>ctrl shift 8</kbd>としてください。

          利用可能なショートカットの完全なリストについては「[キーボードショートカット](/get-started/using-github/keyboard-shortcuts)」を参照してください。
        - 'You can now use footnote syntax in any Markdown field. Footnotes are displayed as superscript links that you can click to jump to the referenced information, which is displayed in a new section at the bottom of the document. For more information about the syntax, see "[Basic writing and formatting syntax](/github/writing-on-github/getting-started-with-writing-and-formatting-on-github/basic-writing-and-formatting-syntax#footnotes)."'
        - When viewing Markdown files, you can now click {% octicon "code" aria-label="The code icon" %} in the toolbar to view the source of a Markdown file. Previously, you needed to use the blame view to link to specific line numbers in the source of a Markdown file.
        - You can now add images and videos to Markdown files in gists by pasting them into the Markdown body or selecting them from the dialog at the bottom of the Markdown file. For information about supported file types, see "[Attaching files](https://docs.github.com/en/github/writing-on-github/working-with-advanced-formatting/attaching-files)."
        - '{% data variables.product.prodname_ghe_server %} now automatically generates a table of contents for Wikis, based on headings.'
        - When dragging and dropping files into a Markdown editor, such as images and videos, {% data variables.product.prodname_ghe_server %} now uses the mouse pointer location instead of the cursor location when placing the file.
    - 
      heading: 'Issue及びPull Requestの変更'
      notes:
        - 'You can now search issues by label using a logical OR operator. To filter issues using logical OR, use the comma syntax. For example, `label:"good first issue","bug"` will list all issues with a label of `good first issue` or `bug`. For more information, see "[Filtering and searching issues and pull requests](/issues/tracking-your-work-with-issues/filtering-and-searching-issues-and-pull-requests#about-search-terms)."'
        - |
          Improvements have been made to help teams manage code review assignments. You can now:

          - Limit assignment to only direct members of the team.
          - Continue with automatic assignment even if one or more members of the team are already requested.
          - Keep a team assigned to review even if one or more members is newly assigned.

          The timeline and reviewers sidebar on the pull request page now indicate if a review request was automatically assigned to one or more team members.

          For more information, see the [{% data variables.product.prodname_dotcom %} changelog](https://github.blog/changelog/2021-09-29-new-code-review-assignment-settings-and-team-filtering-improvements/).
        - You can now filter pull request searches to only include pull requests you are directly requested to review.
        - Filtered files in pull requests are now completely hidden from view, and are no longer shown as collapsed in the "Files Changed" tab. The "File Filter" menu has also been simplified. For more information, see "[Filtering files in a pull request](/github/collaborating-with-pull-requests/reviewing-changes-in-pull-requests/filtering-files-in-a-pull-request)."
    - 
      heading: 'GitHub Actionsの変更'
      notes:
        - You can now create "composite actions" which combine multiple workflow steps into one action, and includes the ability to reference other actions. This makes it easier to reduce duplication in workflows. Previously, an action could only use scripts in its YAML definition. For more information, see "[Creating a composite action](/actions/creating-actions/creating-a-composite-action)."
        - 'Managing self-hosted runners at the enterprise level no longer requires using personal access tokens with the `admin:enterprise` scope. You can instead use the new `manage_runners:enterprise` scope to restrict the permissions on your tokens. Tokens with this scope can authenticate to [many REST API endpoints](/rest/reference/enterprise-admin#list-self-hosted-runner-groups-for-an-enterprise) to manage your enterprise''s self-hosted runners.'
        - |
          The audit log now includes additional events for {% data variables.product.prodname_actions %}. Audit log entries are now recorded for the following events:

          * A self-hosted runner is registered or removed.
          * A self-hosted runner is added to a runner group, or removed from a runner group.
          * A runner group is created or removed.
          * A workflow run is created or completed.
          * A workflow job is prepared. Importantly, this log includes the list of secrets that were provided to the runner.

          For more information, see "[Security hardening for {% data variables.product.prodname_actions %}](/actions/security-guides/security-hardening-for-github-actions#auditing-github-actions-events)."
        - '{% data variables.product.prodname_ghe_server %} 3.3 contains performance improvements for job concurrency with {% data variables.product.prodname_actions %}. For more information about the new performance targets for a range of CPU and memory configurations, see "[Getting started with {% data variables.product.prodname_actions %} for {% data variables.product.prodname_ghe_server %}](/admin/github-actions/enabling-github-actions-for-github-enterprise-server/getting-started-with-github-actions-for-github-enterprise-server#review-hardware-considerations)."'
        - To mitigate insider man in the middle attacks when using actions resolved through {% data variables.product.prodname_github_connect %} to {% data variables.product.prodname_dotcom_the_website %} from {% data variables.product.prodname_ghe_server %}, the actions namespace (`owner/name`) is retired on use. Retiring the namespace prevents that namespace from being created on your {% data variables.product.prodname_ghe_server %} instance, and ensures all workflows referencing the action will download it from {% data variables.product.prodname_dotcom_the_website %}.
    - 
      heading: 'GitHub Packagesの変更'
      notes:
        - When a repository is deleted, any associated package files are now immediately deleted from your {% data variables.product.prodname_registry %} external storage.
    - 
      heading: 'Dependabot及び依存関係グラフの変更'
      notes:
        - Dependency review is out of beta and is now generally available for {% data variables.product.prodname_GH_advanced_security %} customers. Dependency review provides an easy-to-understand view of dependency changes and their security impact in the "Files changed" tab of pull requests. It informs you of which dependencies were added, removed, or updated, along with vulnerability information. For more information, see "[Reviewing dependency changes in a pull request](/github/collaborating-with-pull-requests/reviewing-changes-in-pull-requests/reviewing-dependency-changes-in-a-pull-request)."
        - '{% data variables.product.prodname_dependabot %} is now available as a private beta, offering both version updates and security updates for several popular ecosystems. {% data variables.product.prodname_dependabot %} on {% data variables.product.prodname_ghe_server %} requires {% data variables.product.prodname_actions %} and a pool of self-hosted runners configured for {% data variables.product.prodname_dependabot %} use. {% data variables.product.prodname_dependabot %} on {% data variables.product.prodname_ghe_server %} also requires {% data variables.product.prodname_github_connect %} to be enabled. To learn more and sign up for the beta, contact the GitHub Sales team.'
    - 
      heading: 'Code scanningとSecret scanningの変更'
      notes:
        - The depth of {% data variables.product.prodname_codeql %}'s analysis has been improved by adding support for more [libraries and frameworks](https://codeql.github.com/docs/codeql-overview/supported-languages-and-frameworks/) and increasing the coverage of our existing library and framework models. [JavaScript](https://github.com/github/codeql/tree/main/javascript) analysis now supports most common templating languages, and [Java](https://github.com/github/codeql/tree/main/java) now covers more than three times the endpoints of previous {% data variables.product.prodname_codeql %} versions. As a result, {% data variables.product.prodname_codeql %} can now detect even more potential sources of untrusted user data, steps through which that data flows, and potentially dangerous sinks where the data could end up. This results in an overall improvement of the quality of {% data variables.product.prodname_code_scanning %} alerts.
        - '{% data variables.product.prodname_codeql %} now supports scanning standard language features in Java 16, such as records and pattern matching. {% data variables.product.prodname_codeql %} is able to analyze code written in Java version 7 through 16. For more information about supported languages and frameworks, see the [{% data variables.product.prodname_codeql %} documentation](https://codeql.github.com/docs/codeql-overview/supported-languages-and-frameworks/#id5).'
        - |
          Improvements have been made to the {% data variables.product.prodname_code_scanning %} `on:push` trigger when code is pushed to a pull request. If an `on:push` scan returns results that are associated with a pull request, {% data variables.product.prodname_code_scanning %} will now show these alerts on the pull request.

          Some other CI/CD systems can be exclusively configured to trigger a pipeline when code is pushed to a branch, or even exclusively for every commit. Whenever such an analysis pipeline is triggered and results are uploaded to the SARIF API, {% data variables.product.prodname_code_scanning %} will also try to match the analysis results to an open pull request. If an open pull request is found, the results will be published as described above. For more information, see the [{% data variables.product.prodname_dotcom %} changelog](https://github.blog/changelog/2021-09-27-showing-code-scanning-alerts-on-pull-requests/).
        - You can now use the new pull request filter on the {% data variables.product.prodname_code_scanning %} alerts page to find all the {% data variables.product.prodname_code_scanning %} alerts associated with a pull request. A new "View all branch alerts" link on the pull request "Checks" tab allows you to directly view {% data variables.product.prodname_code_scanning %} alerts with the specific pull request filter already applied. For more information, see the [{% data variables.product.prodname_dotcom %} changelog](https://github.blog/changelog/2021-08-23-pull-request-filter-for-code-scanning-alerts/).
        - User defined patterns for {% data variables.product.prodname_secret_scanning %} is out of beta and is now generally available for {% data variables.product.prodname_GH_advanced_security %} customers. Also new in this release is the ability to edit custom patterns defined at the repository, organization, and enterprise levels. After editing and saving a pattern, {% data variables.product.prodname_secret_scanning %} searches for matches both in a repository's entire Git history and in any new commits. Editing a pattern will close alerts previously associated with the pattern if they no longer match the updated version. Other improvements, such as dry-runs, are planned in future releases. For more information, see "[Defining custom patterns for secret scanning](/code-security/secret-scanning/defining-custom-patterns-for-secret-scanning)."
    - 
      heading: API and webhook changes
      notes:
        - Most REST API previews have graduated and are now an official part of the API. Preview headers are no longer required for most REST API endpoints, but will still function as expected if you specify a graduated preview in the `Accept` header of a request. For previews that still require specifying the preview in the `Accept` header of a request, see "[API previews](/rest/overview/api-previews)."
        - 'You can now use the REST API to configure custom autolinks to external resources. The REST API now provides beta `GET`/`POST`/`DELETE` endpoints which you can use to view, add, or delete custom autolinks associated with a repository. For more information, see "[Autolinks](/rest/reference/repos#autolinks)."'
        - 'You can now use the REST API to sync a forked repository with its upstream repository. For more information, see "[Branches](/rest/reference/branches#sync-a-fork-branch-with-the-upstream-repository)" in the REST API documentation.'
        - 'Enterprise administrators on GitHub Enterprise Server can now use the REST API to enable or disable Git LFS for a repository. For more information, see "[Repositories](/rest/reference/repos#git-lfs)."'
        - 'You can now use the REST API to query the audit log for an enterprise. While audit log forwarding provides the ability to retain and analyze data with your own toolkit and determine patterns over time, the new endpoint can help you perform limited analysis on recent events. For more information, see "[{% data variables.product.prodname_enterprise %} administration](/rest/reference/enterprise-admin#get-the-audit-log-for-an-enterprise)" in the REST API documentation.'
        - GitHub App user-to-server API requests can now read public resources using the REST API. This includes, for example, the ability to list a public repository's issues and pull requests, and to access a public repository's comments and content.
        - 'When creating or updating a repository, you can now configure whether forking is allowed using the REST and GraphQL APIs. Previously, APIs for creating and updating repositories didn''t include the fields `allow_forking` (REST) or `forkingAllowed` (GraphQL). For more information, see "[Repositories](/rest/reference/repos)" in the REST API documentation and "[Repositories](/graphql/reference/objects#repository)" in the GraphQL API documentation.'
        - |
          A new GraphQL mutation [`createCommitOnBranch`](/graphql/reference/mutations#createcommitonbranch) makes it easier to add, update, and delete files in a branch of a repository. Compared to the REST API, you do not need to manually create blobs and trees before creating the commit. This allows you to add, update, or delete multiple files in a single API call.

          Commits authored using the new API are automatically GPG signed and are [marked as verified](/github/authenticating-to-github/managing-commit-signature-verification/about-commit-signature-verification) in the {% data variables.product.prodname_ghe_server %} UI. GitHub Apps can use the mutation to author commits directly or [on behalf of users](/developers/apps/building-github-apps/identifying-and-authorizing-users-for-github-apps#user-to-server-requests).
        - 'When a new tag is created, the [push](/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#push) webhook payload now always includes a `head_commit` object that contains the data of the commit that the new tag points to. As a result, the `head_commit` object will always contain the commit data of the payload''s `after` commit.'
    - 
      heading: 'Performance Changes'
      notes:
        - Page loads and jobs are now significantly faster for repositories with many Git refs.
  #No security/bug fixes for the RC release
  #security_fixes:
  #- PLACEHOLDER
  #bugs:
  #- PLACEHOLDER
  known_issues:
    - After upgrading to {% data variables.product.prodname_ghe_server %} 3.3, {% data variables.product.prodname_actions %} may fail to start automatically. To resolve this issue, connect to the appliance via SSH and run the `ghe-actions-start` command.
    - On a freshly set up {% data variables.product.prodname_ghe_server %} instance without any users, an attacker could create the first admin user.
    - アップグレードの過程で、カスタムのファイアウォールのルールが削除されます。
    - Git LFSが追跡するファイル[Webインターフェースからアップロードされたもの](https://github.com/blog/2105-upload-files-to-your-repositories)が、不正にリポジトリに直接追加されてしまいます。
    - 同じリポジトリ内のファイルパスが255文字を超えるblobへのパーマリンクを含むIssueをクローズできませんでした。
    - GitHub Connectで"Users can search GitHub.com"が有効化されている場合、GitHub.comの検索結果にプライベート及びインターナルリポジトリのIssueが含まれません。
    - '{% data variables.product.prodname_registry %}のnpmレジストリは、メタデータのレスポンス中で時間の値を返さなくなります。これは、大きなパフォーマンス改善のために行われました。メタデータレスポンスの一部として時間の値を返すために必要なすべてのデータは保持し続け、既存のパフォーマンスの問題を解決した将来に、この値を返すことを再開します。'
    - pre-receive フックの処理に固有のリソース制限によって、pre-receive フックに失敗するものが生じることがあります。
    - '{% data variables.product.prodname_actions %} storage settings cannot be validated and saved in the {% data variables.enterprise.management_console %} when "Force Path Style" is selected, and must instead be configured with the `ghe-actions-precheck` command line utility.'
    - '{% data variables.product.prodname_ghe_server %} 3.3 instances installed on Azure and provisioned with 32+ CPU cores would fail to launch, due to a bug present in the current Linux kernel. [Updated: 2022-04-08]'
  deprecations:
    - 
      heading: GitHub Enterprise Server 2.22の非推奨化
      notes:
        - '**{% data variables.product.prodname_ghe_server %} 2.22 was discontinued on September 23, 2021**. This means that no patch releases will be made, even for critical security issues, after this date. For better performance, improved security, and new features, [upgrade to the newest version of {% data variables.product.prodname_ghe_server %}](/enterprise-server@3.3/admin/enterprise-management/upgrading-github-enterprise-server) as soon as possible.'
    - 
      heading: Deprecation of GitHub Enterprise Server 3.0
      notes:
        - '**{% data variables.product.prodname_ghe_server %} 3.0 will be discontinued on February 16, 2022**. This means that no patch releases will be made, even for critical security issues, after this date. For better performance, improved security, and new features, [upgrade to the newest version of {% data variables.product.prodname_ghe_server %}](/enterprise-server@3.3/admin/enterprise-management/upgrading-github-enterprise-server) as soon as possible.'
    - 
      heading: XenServer Hypervisorサポートの非推奨化
      notes:
        - Starting with {% data variables.product.prodname_ghe_server %} 3.3, {% data variables.product.prodname_ghe_server %} on XenServer is deprecated and is no longer supported. Please contact [GitHub Support](https://support.github.com) with questions or concerns.
    - 
      heading: Deprecation of OAuth Application API endpoints and API authentication using query parameters
      notes:
        - |
          To prevent accidental logging or exposure of `access_tokens`, we discourage the use of OAuth Application API endpoints and the use of API authentication using query parameters. View the following posts to see the proposed replacements:

          * [Replacement OAuth Application API endpoints](https://developer.github.com/changes/2020-02-14-deprecating-oauth-app-endpoint/#changes-to-make)
          * [Replacement authentication using headers instead of query param](https://developer.github.com/changes/2020-02-10-deprecating-auth-through-query-param/#changes-to-make)

          These endpoints and authentication route are planned to be removed from {% data variables.product.prodname_ghe_server %} in {% data variables.product.prodname_ghe_server %} 3.4.
    - 
      heading: Deprecation of the CodeQL runner
      notes:
        - The {% data variables.product.prodname_codeql %} runner is being deprecated. {% data variables.product.prodname_ghe_server %} 3.3 will be the final release series that supports the {% data variables.product.prodname_codeql %} runner. Starting with {% data variables.product.prodname_ghe_server %} 3.4, the {% data variables.product.prodname_codeql %} runner will be removed and no longer supported. The {% data variables.product.prodname_codeql %} CLI version 2.6.2 or greater is a feature-complete replacement for the {% data variables.product.prodname_codeql %} runner. For more information, see the [{% data variables.product.prodname_dotcom %} changelog](https://github.blog/changelog/2021-09-21-codeql-runner-deprecation/).
    - 
      heading: Deprecation of custom bit-cache extensions
      notes:
        - |
          Starting in {% data variables.product.prodname_ghe_server %} 3.1, support for {% data variables.product.company_short %}'s proprietary bit-cache extensions began to be phased out. These extensions are now deprecated in {% data variables.product.prodname_ghe_server %} 3.3.

          Any repositories that were already present and active on {% data variables.product.product_location %} running version 3.1 or 3.2 will have been automatically updated.

          Repositories which were not present and active before upgrading to {% data variables.product.prodname_ghe_server %} 3.3 may not perform optimally until a repository maintenance task is run and has successfully completed.

          To start a repository maintenance task manually, browse to `https://<hostname>/stafftools/repositories/<owner>/<repository>/network` for each affected repository and click the **Schedule** button.
  backups:
    - '{% data variables.product.prodname_ghe_server %} 3.3 requires at least [GitHub Enterprise Backup Utilities 3.3.0](https://github.com/github/backup-utils) for [Backups and Disaster Recovery](/admin/configuration/configuring-your-enterprise/configuring-backups-on-your-appliance).'
