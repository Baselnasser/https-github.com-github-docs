date: '2022-02-15'
release_candidate: true
deprecated: true
intro: |
  {% note %}
  
  **注:** {% data variables.product.product_location %} でリリース候補ビルドが実行されている場合、ホットパッチでアップグレードすることはできません。リリース候補は、テスト環境でのみ実行することをお勧めします。
  
  {% endnote %}
  
  アップグレードの手順については、「[{% data variables.product.prodname_ghe_server %} のアップグレード](/admin/enterprise-management/updating-the-virtual-machine-and-physical-resources/upgrading-github-enterprise-server)」を参照してください。
  
  > このリリースを、いつも側にいて助けてくれた仕事仲間であり友人でもある John に捧げます。彼を失って淋しい限りです。
  >
  > **John "Ralph" Wiebalk 1986–2021**
sections:
  features:
    - heading: Secret scanning REST API で場所が返されるようになった
      notes:
        # https://github.com/github/releases/issues/1642
        - |{% data variables.product.prodname_GH_advanced_security %} をお使いのお客様はこの REST API を使用して、プライベート リポジトリ スキャンで検出されるシークレットのコミットの詳細を取得できるようになりました。新しいエンドポイントからは、シークレットの場所とコミット SHA を含め、ファイル内でのシークレットの最初の検出の詳細が返されます。詳しくは、REST API ドキュメントの「[シークレット スキャン](/rest/reference/secret-scanning)」を参照してください。

|
    - heading: GitHub Advanced Security のコミッターベース課金のライセンス データをエクスポートする
      notes:
        # https://github.com/github/releases/issues/1757
        - |Enterprise と Organization では、{% data variables.product.prodname_GH_advanced_security %} ライセンスの使用状況データを CSV ファイルにエクスポートできるようになりました。また、REST API の課金エンドポイント経由で {% data variables.product.prodname_advanced_security %} 課金データを取得することもできます。詳しくは、[{% data variables.product.prodname_dotcom %} 変更ログ](https://github.blog/changelog/2021-11-11-export-github-advanced-security-license-usage-data/)を参照してください。

|
    - heading: バブリック ベータ版で再利用可能な GitHub Actions ワークフロー
      notes:
        # https://github.com/github/releases/issues/1541
        - |ワークフロー全体を 1 つのアクションであるかのように再利用できるようになりました。この機能はパブリック ベータ版で利用できます。リポジトリ全体でワークフロー定義をコピーして貼り付けるのではなく、1 行の構成で既存のワークフローを参照できるようになりました。詳しくは、[{% data variables.product.prodname_dotcom %} 変更ログ](https://github.blog/changelog/2021-10-05-github-actions-dry-your-github-actions-configuration-by-reusing-workflows/)を参照してください。

|
    - heading: パブリック ベータ版の Dependabot セキュリティとバージョンの更新
      notes:
        # https://github.com/github/releases/issues/2004
        - |{% data variables.product.prodname_dependabot %} は {% data variables.product.prodname_ghe_server %} 3.4 でパブリック ベータ版として利用できるようになりました。これにより、いくつかの一般的なエコシステムについて、バージョンの更新とセキュリティの更新の両方が提供されます。{% data variables.product.prodname_ghe_server %} の {% data variables.product.prodname_dependabot %} では、{% data variables.product.prodname_actions %} と、{% data variables.product.prodname_dependabot %} の使用のために構成されたセルフホステッド ランナーのプールが必要です。また、{% data variables.product.prodname_ghe_server %} の{% data variables.product.prodname_dependabot %} では、{% data variables.product.prodname_github_connect %} と {% data variables.product.prodname_dependabot %} を管理者が有効にする必要があります。ベータ版に関するフィードバックと提案は [{% data variables.product.prodname_dependabot %} フィードバックについての GitHub ディスカッション](https://github.com/community/community/discussions/categories/dependabot)で共有できます。詳しい情報が必要な場合や、ベータ版をお試しになる場合は、[Enterprise での {% data variables.product.prodname_dependabot %} のセキュリティとバージョンの更新の設定](/admin/github-actions/enabling-github-actions-for-github-enterprise-server/setting-up-dependabot-updates)に関するページを参照してください。

|
  changes:
    - heading: 管理の変更
      notes:
        # https://github.com/github/releases/issues/1657
        - "ユーザーは、タブと同じ数のスペースを選べるようになりました。その際に、ユーザー アカウントの [外観] 設定で希望するタブのサイズを設定します。その希望するタブのサイズを使用して、タブ インデントを含むすべてのコードがレンダリングされます。"

        # https://github.com/github/releases/issues/2062
        - "{% data variables.product.prodname_github_connect %} データベース接続レコードには、アクティブおよび休眠ユーザーの数と構成済みの休眠期間が含まれるようになりました。"

    - heading: パフォーマンスの変更
      notes:
      # https://github.com/github/releases/issues/2031
      - "高可用性構成で {% data variables.product.prodname_ghe_server %} インスタンス間の通信をセキュリティで保護するために使用される WireGuard が、カーネル実装に移行されました。"

    - heading: 通知の変更
      notes:
      # https://github.com/github/releases/issues/1801
      - "Organization 所有者は、新しいデプロイ キーが、Organization に属しているリポジトリに追加されたときにメール通知の登録を解除できるようになりました。詳しくは、[通知の構成](/account-and-profile/managing-subscriptions-and-notifications-on-github/setting-up-notifications/configuring-notifications)に関するページを参照してください。"

      # https://github.com/github/releases/issues/1714
      - '新たに作成された issue と pull request からの通知メールの件名に `(Issue #xx)` または `(PR #xx)` が含まれるようになり、このような種類の issue を参照するメールを認識してフィルター処理できるようになりました。'

    - heading: Organization の変更
      notes:
        # https://github.com/github/releases/issues/1509
        - "Organization では、プロファイルの [概要] で`README.md` ファイルを表示できるようになりました。詳しくは、[{% data variables.product.prodname_dotcom %} 変更ログ](https://github.blog/changelog/2021-09-14-readmes-for-organization-profiles/)を参照してください。"

        # https://github.com/github/releases/issues/1883
        - "Organization のメンバーは、Organization の [人] タブの下に Enterprise 所有者のリストを表示できるようになりました。また、Enterprise 所有者リストには、GraphQL API を使用してアクセスできるようになりました。詳しくは、GraphQL API ドキュメントの Organization オブジェクトの下にある [`enterpriseOwners`](/graphql/reference/objects#organization) フィールドを参照してください。"

    - heading: リポジトリの変更
      notes:
        # https://github.com/github/releases/issues/1944
        - |[アクセスの管理] セクションが、リポジトリ設定の [コラボレーターとチーム] ページに表示されるようになりました。新しいセクションを使うと、リポジトリ管理者はリポジトリにアクセスできるユーザーと、各ユーザーに許可されているアクセスのレベルをより簡単に表示して管理できます。管理者は次のことをできるようになりました。



* リポジトリにアクセスできるすべてのメンバー、チーム、コラボレーターを検索する。

* メンバーに混合ロールがいつ割り当てられ、個人として直接またはチームを介して間接的にアクセスが許可されたかを確認する。これは、新しい "混合ロール" 警告で視覚化され、アクセス許可レベルが割り当てられたロールよりも高い場合に、ユーザーに許可された最も高いレベルのロールが表示されます。

* 確実に人気のあるリポジトリへのアクセスを管理する。この場合、ページネーションが行われ、ユーザーの大規模なグループによるアクセス時のタイムアウトが短くなります。

|
        # https://github.com/github/releases/issues/1748
        - '{% data variables.product.prodname_ghe_server %} 3.4 では、プライベート リポジトリの招待の通知、保留中の招待があるプライベート リポジトリへのアクセス時の UI プロンプト、保留中の招待がある場合のパブリック リポジトリの概要ページ上のバナーなど、リポジトリの招待エクスペリエンスが改善されています。'

        # https://github.com/github/releases/issues/1739
        - "カスタム自動リンクに単一文字のプレフィクスを使用できるようになりました。また、自動リンクのプレフィックスに、英数字だけでなく、`.`、`-`、`_`、`+`、`=`、`:`、`/`、`#` 文字を使用できるようになりました。カスタム自動リンクについて詳しくは、「[外部リソースを参照する自動リンクの構成](/repositories/managing-your-repositorys-settings-and-features/managing-repository-settings/configuring-autolinks-to-reference-external-resources)」を参照してください。"

        # https://github.com/github/releases/issues/1776
        - "リポジトリのルートの `CODE_OF_CONDUCT.md` ファイルが、リポジトリ概要ページの [バージョン情報] サイドバーで強調表示されるようになりました。"

    - heading: 'リリースの変更'
      notes:
        # https://github.com/github/releases/issues/1723
        - '{% data variables.product.prodname_ghe_server %} 3.4 では、特定のリリースのすべての pull request の概要を示す自動生成リリース ノートなど、リリース UI が改善されています。詳しくは、[{% data variables.product.prodname_dotcom %} 変更ログ](https://github.blog/changelog/2021-10-20-improvements-to-github-releases-generally-available/)を参照してください。'

        # https://github.com/github/releases/issues/1606
        - "リリースの公開時に、そのリリースの下部にアバター リストが表示されるようになりました。リリース ノートに記載されているすべてのユーザー アカウントのアバターが表示されます。詳しくは、「[リポジトリのリリースを管理する](/repositories/releasing-projects-on-github/managing-releases-in-a-repository)」を参照してください。"

    - heading: 'Markdown の変更'
      notes:
        # https://github.com/github/releases/issues/1779
        - "新しい [アクセシビリティ] 設定ページを使用して、キーボード ショートカットを管理できるようになりました。<kbd>S</kbd>、<kbd>G</kbd> <kbd>C</kbd>、<kbd>.</kbd> (ピリオド キー) などの単一文字のみを使用するキーボード ショートカットを無効にすることを選べるようになりました。詳しくは、[{% data variables.product.prodname_dotcom %} 変更ログ](https://github.blog/changelog/2021-11-16-managing-keyboard-shortcuts-using-accessibility-settings/)を参照してください。"

        # https://github.com/github/releases/issues/1727
        - "issue のコメントや pull request の説明など、Markdown 対応フィールドで固定幅フォントを使用することを選べるようになりました。詳しくは、[{% data variables.product.prodname_dotcom %} 変更ログ](https://github.blog/changelog/2021-10-12-fixed-width-font-support-in-markdown-enabled-fields/)を参照してください。"

        # https://github.com/github/releases/issues/1761
        - "選択したテキストに URL を貼り付けて、Markdown リンクをすばやく作成できるようになりました。これは、issue のコメントや pull request の説明など、Markdown 対応フィールドで機能します。詳しくは、[{% data variables.product.prodname_dotcom %} 変更ログ](https://github.blog/changelog/2021-11-10-linkify-selected-text-on-url-paste/)を参照してください。"

        # https://github.com/github/releases/issues/1758
        - "閲覧者への Markdown イメージの表示方法を定義するために、イメージ URL に `#gh-dark-mode-only` などのテーマ コンテキストを付加できるようになりました。詳しくは、[{% data variables.product.prodname_dotcom %} 変更ログ](https://github.blog/changelog/2021-11-24-specify-theme-context-for-images-in-markdown/)を参照してください。"

        # https://github.com/github/releases/issues/1686
        - "Markdown (`.md`) ファイル拡張子が付いた gist ファイルの作成または編集時に、[プレビュー] または [プレビューの変更] タブを使用して、ファイル コンテンツの Markdown レンダリングを表示できるようになりました。詳しくは、[{% data variables.product.prodname_dotcom %} 変更ログ](https://github.blog/changelog/2021-11-17-preview-the-markdown-rendering-of-gists/)を参照してください。"

        # https://github.com/github/releases/issues/1754
        - "issue、pull request、ディスカッションで {% data variables.product.prodname_dotcom %} の名前を入力したときに、@メンション suggester により、既存の参加者が他の {% data variables.product.prodname_dotcom %} ユーザーよりも上にランク付けされ、探しているユーザーが一覧表示される可能性が高くなりました。"

        # https://github.com/github/releases/issues/1636
        - Markdown ファイル、issue、pull request、ディスカッション、コメントで右から左に記述する言語がネイティブでサポートされるようになりました。

    - heading: 'issue と pull request の変更'
      notes:
        # https://github.com/github/releases/issues/1731
        - "pull request の [変更されたファイル] タブの空白の変更を非表示にする diff 設定が、その pull request のユーザー アカウントに対して保持されるようになりました。選んだ設定は、ページから移動し、同じ pull request の [変更されたファイル] タブにアクセスした場合に自動的に再適用されます。"

        # https://github.com/github/releases/issues/1663
        - "pull request コード レビューに対して自動割り当てを使用するときに、自動割り当て設定とは別に、要求されたチーム メンバーにのみ知らせることを選べるようになりました。この設定は、多くのユーザーが自動割り当てされるものの、すべてのユーザーが通知を必要としているわけでない場合に便利です。詳しくは、[{% data variables.product.prodname_dotcom %} 変更ログ](https://github.blog/changelog/2021-11-10-team-member-pull-request-review-notifications-can-be-configured-independently-of-auto-assignment/)を参照してください。"

    - heading: 'ブランチの変更'
      notes:
        # https://github.com/github/releases/issues/1526
        - "Organization とリポジトリの管理者は Webhook をトリガーし、リポジトリのブランチ保護ルールの変更をリッスンできるようになりました。詳しくは、Webhook のイベントとペイロード ドキュメントの「[branch_protection_rule](/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#branch_protection_rule)」を参照してください。"

        # https://github.com/github/releases/issues/1759
        - "保護されたブランチを構成するときに、特定の {% data variables.product.prodname_github_app %} で必須の状態チェックが提供されるように強制できるようになりました。その後、状態が別のアプリケーション、またはコミットの状態に応じてユーザーによって提供された場合は、マージが妨げられます。これにより、すべての変更が目的のアプリケーションによって確実に検証されます。詳しくは、[{% data variables.product.prodname_dotcom %} 変更ログ](https://github.blog/changelog/2021-12-01-ensure-required-status-checks-provided-by-the-intended-app/)を参照してください。"

        # https://github.com/github/releases/issues/1911
        - "保護されたブランチの名前を変更し、ブランチ保護ルールを変更できるのは、管理者権限を持つユーザーのみとなりました。以前は、既定のブランチを除き、コラボレーターがブランチの名前を変更できたため、そのブランチに適用されているワイルドカード以外のブランチ保護ルールの名前も変更されました。詳しくは、「[ブランチの名前を変更する](/repositories/configuring-branches-and-merges-in-your-repository/managing-branches-in-your-repository/renaming-a-branch)」と「[ブランチ保護ルールを管理する](/repositories/configuring-branches-and-merges-in-your-repository/defining-the-mergeability-of-pull-requests/managing-a-branch-protection-rule)」を参照してください。"

        # https://github.com/github/releases/issues/1845
        - "管理者は、特定のユーザーとチームのみに pull request の要件を回避することを許可できるようになりました。詳しくは、[{% data variables.product.prodname_dotcom %} 変更ログ](https://github.blog/changelog/2021-11-19-allow-bypassing-required-pull-requests/)を参照してください。"

        # https://github.com/github/releases/issues/1850
        - "管理者は、特定のユーザーとチームのみにリポジトリにフォース プッシュすることを許可できるようになりました。詳しくは、[{% data variables.product.prodname_dotcom %} 変更ログ](https://github.blog/changelog/2021-12-21-specify-who-can-force-push-to-a-repository/)を参照してください。"

        # https://github.com/github/releases/issues/1796
        - "保護されたブランチのすべての変更について pull request を必要とする場合、管理者は、承認済みレビューも必要とするかどうかを選べるようになりました。詳しくは、{% data variables.product.prodname_dotcom %} 変更ログ](https://github.blog/changelog/2021-11-10-require-pull-requests-without-requiring-reviews/)を参照してください。"

    - heading: 'GitHub Actions の変更'
      notes:
        # https://github.com/github/releases/issues/1906
        - '`create`、`deployment`、`deployment_status` イベントについて {% data variables.product.prodname_dependabot %} によってトリガーされる {% data variables.product.prodname_actions %} ワークフローでは、シークレットではなく、常に読み取り専用トークンが受け取られるようになりました。同様に、{% data variables.product.prodname_dependabot %} によってベース参照が作成された pull request の `pull_request_target` イベントについて {% data variables.product.prodname_dependabot %} によってトリガーされるワークフローでは、シークレットではなく、常に読み取り専用トークンが受け取られるようになりました。これらの変更は、悪意がある可能性のあるコードが特権のあるワークフローで実行されないようにするためのものです。詳しくは、「[{% data variables.product.prodname_actions %} による {% data variables.product.prodname_dependabot %} の自動化](/code-security/supply-chain-security/keeping-your-dependencies-updated-automatically/automating-dependabot-with-github-actions)」を参照してください。'

        # https://github.com/github/releases/issues/1667
        - "{% data variables.product.prodname_dependabot %} によってトリガーされる `push` と `pull_request` イベントでのワークフローの実行では、ユーザーのワークフローに指定されたアクセス許可が優先されるようになりました。これにより、ユーザーは自動依存関係更新の管理方法を制御できるようになります。既定のトークンのアクセス許可は読み取り専用のままになります。詳しくは、[{% data variables.product.prodname_dotcom %} 変更ログ](https://github.blog/changelog/2021-10-06-github-actions-workflows-triggered-by-dependabot-prs-will-respect-permissions-key-in-workflows/)を参照してください。"

        # https://github.com/github/releases/issues/1668
        - '{% data variables.product.prodname_dependabot %} によってトリガーされる {% data variables.product.prodname_actions %} ワークフローには、{% data variables.product.prodname_dependabot %} シークレットが送信されるようになりました。{% data variables.product.prodname_dependabot %} で使用するように構成したのと同じシークレットを使って、CI のプライベート パッケージ レジストリからプルできるようになりました。これにより、{% data variables.product.prodname_actions %} と {% data variables.product.prodname_dependabot %} との連携が改善されます。詳しくは、「[{% data variables.product.prodname_actions %} による {% data variables.product.prodname_dependabot %} の自動化](/code-security/supply-chain-security/keeping-your-dependencies-updated-automatically/automating-dependabot-with-github-actions)」を参照してください。'

        # https://github.com/github/releases/issues/1615
        - "ランナー グループを管理し、UI の新しい [ランナー] と [ランナー グループ] ページを使って、セルフホステッド ランナーの状態を確認できるようになりました。リポジトリまたは Organization の Actions 設定ページに、ランナーの概要ビューが表示されるようになり、特定のランナーを深く掘り下げて編集したり、現在実行されている可能性のあるジョブを確認したりできるようになりました。詳しくは、[{% data variables.product.prodname_dotcom %} 変更ログ](https://github.blog/changelog/2021-09-20-github-actions-experience-refresh-for-the-management-of-self-hosted-runners/)を参照してください。"

        # https://github.com/github/releases/issues/1785
        - 'アクションの作成者は、自分のアクションを Node.js 16 で実行できるようになりました。その際に、[そのアクションの `action.yml` で `node16` として `runs.using`](/actions/creating-actions/metadata-syntax-for-github-actions#runs-for-javascript-actions) を指定します。これは、既存の Node.js 12 サポートに追加されます。アクションでは引き続き `runs.using: node12` を指定して Node.js 12 ランタイムを使用できます。'

        # https://github.com/github/releases/issues/1799
        - '手動でトリガーされたワークフローの場合、{% data variables.product.prodname_actions %} では、既定の `string` 型に加え、`choice`、`boolean`、`environment` 入力型がサポートされるようになりました。詳しくは、「[`on.workflow_dispatch.inputs`](/actions/using-workflows/workflow-syntax-for-github-actions#onworkflow_dispatchinputs)」を参照してください。'

        # https://github.com/github/releases/issues/1782
        - YAML で記述されたアクション (複合アクションともいう) では、`if` 条件がサポートされるようになりました。これにより、条件が満たされなければ、特定の手順が行われないようにすることができます。ワークフローで定義されている手順と同様に、サポートされている任意のコンテキストや式を使って条件を作成できます。

        # https://github.com/github/releases/issues/1919
        - "セルフホステッド ランナーの検索順の動作が変更され、どのような場合でも任意のレベルで最初に一致した使用可能なランナーでジョブが実行されるようになりました。特に多くのセルフホステッド ランナーが存在する Organization や Enterprise の場合、これにより、ジョブをセルフホステッド ランナーにはるかに高速に送信できるようになります。以前は、セルフホステッド ランナーを必要とするジョブを実行するときに、{% data variables.product.prodname_actions %} ではリポジトリ、Organization、Enterprise の順にセルフホステッド ランナーを探していました。"

        # https://github.com/github/releases/issues/1753
        - "{% data variables.product.prodname_actions %} セルフホステッド ランナーのランナー ラベルは、REST API を使用して一覧表示し、追加および削除できるようになりました。リポジトリ、Organization、または Enterprise レベルでの新しい API の使用について詳しくは、REST API ドキュメントの「[リポジトリ](/rest/reference/actions#list-labels-for-a-self-hosted-runner-for-a-repository)」、「[Organization](/rest/reference/actions#add-custom-labels-to-a-self-hosted-runner-for-an-organization)」、「[Enterprise](/rest/reference/enterprise-admin#list-labels-for-a-self-hosted-runner-for-an-enterprise)」を参照してください。"

    - heading: 'Dependabot と依存関係グラフの変更'
      notes:
        # https://github.com/github/releases/issues/1520
        - Dependabot グラフでは、Poetry パッケージ マネージャーを使用するリポジトリでの Python 依存関係の検出がサポートされるようになりました。依存関係は、`pyproject.toml` と `poetry.lock` の両方のマニフェスト ファイルから検出されます。

        # https://github.com/github/releases/issues/1921
        - "GitHub Enterprise Server で {% data variables.product.prodname_dependabot %} のセキュリティとバージョンの更新を構成するときは、{% data variables.product.prodname_github_connect %} で {% data variables.product.prodname_dependabot %} も有効にすることをお勧めします。これにより、{% data variables.product.prodname_dependabot %} では、{% data variables.product.prodname_dotcom_the_website %} から依存関係と脆弱性の更新されたリストを取得できるようになります。その際は、依存するオープンソース コードのバブリック リリースの変更ログなどの情報のクエリを実行します。詳しくは、[Enterprise の依存関係グラフと Dependabot アラートの有効化](/admin/configuration/configuring-github-connect/enabling-the-dependency-graph-and-dependabot-alerts-for-your-enterprise)」に関するページを参照してください。"

        # https://github.com/github/releases/issues/1717
        - '{% data variables.product.prodname_dependabot_alerts %} アラートは、GraphQL API を使用して無視できるようになりました。詳しくは、GraphQL API ドキュメントの「[dismissRepositoryVulnerabilityAlert](/graphql/reference/mutations#dismissrepositoryvulnerabilityalert)」ミューテーションを参照してください。'

    - heading: 'コード スキャンとシークレット スキャンの変更'
      notes:
        # https://github.com/github/releases/issues/1802
        - "{% data variables.product.prodname_codeql %} CLI では、SARIF ファイルにマークダウン レンダリング クエリ ヘルプを含められるようになり、クエリでアラートが生成されたときに {% data variables.product.prodname_code_scanning %} UI でヘルプ テキストを表示できるようになりました。詳しくは、[{% data variables.product.prodname_dotcom %} 変更ログ](https://github.blog/changelog/2021-11-23-display-help-text-for-your-custom-codeql-queries-in-code-scanning/)を参照してください。"

        # https://github.com/github/releases/issues/1790
        - "{% data variables.product.prodname_codeql %} CLI と {% data variables.product.prodname_vscode %} の拡張機能では、Apple M1 など、Apple Silicon 搭載のコンピューター上でのデータベースの構築とコードの分析がサポートされるようになりました。詳しくは、[{% data variables.product.prodname_dotcom %} 変更ログ](https://github.blog/changelog/2021-11-10-codeql-now-supports-apple-silicon-m1/)を参照してください。"

        # https://github.com/github/releases/issues/1732
        - |Python エコシステムのより多くの[ライブラリとフレームワーク](https://codeql.github.com/docs/codeql-overview/supported-languages-and-frameworks/)に対するサポートを追加することで、{% data variables.product.prodname_codeql %} の分析の複雑性が向上しました。結果として、{% data variables.product.prodname_codeql %} では信頼できないユーザー データの潜在的なソース、そのデータが流れるステップ、またデータが行き着く潜在的に危険なシンクをさらに検出できるようになりました。この結果、{% data variables.product.prodname_code_scanning %} アラートの品質が全体的に向上しました。詳しくは、[{% data variables.product.prodname_dotcom %} 変更ログ](https://github.blog/changelog/2021-11-24-codeql-code-scanning-now-recognizes-more-python-libraries-and-frameworks/)を参照してください。

|
        # https://github.com/github/releases/issues/1567
        - "{% data variables.product.prodname_codeql %} でのコードスキャンに、すべての一般的な Ruby バージョン (3.02 まで) でのコード分析のベータ サポートが含まれるようになりました。詳しくは、[{% data variables.product.prodname_dotcom %} 変更ログ](https://github.blog/changelog/2021-10-27-codeql-code-scanning-adds-beta-support-for-ruby/)を参照してください。"

        # https://github.com/github/releases/issues/1764
        - |{% data variables.product.prodname_code_scanning %} API については、次のようにいくつかの点が改善されています。



* アラートに `fixed_at` タイムスタンプが追加されました。このタイムスタンプは、分析でアラートが初めて検出されなかった時刻を表します。

* アラートの結果を、`created`、`updated`、または `number` で `sort` と `direction` を使用して並べ替えられるようになりました。詳しくは、「[リポジトリのコード スキャン アラートを一覧表示する](/rest/reference/code-scanning#list-code-scanning-alerts-for-a-repository)」を参照してください。

* `Last-Modified` ヘッダーがアラートとアラート エンドポイント応答に追加されました。詳しくは、Mozilla ドキュメントの「[`Last-Modified`](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Last-Modified)」を参照してください。

* コード スキャン分析の要求時の SARIF 応答に `relatedLocations` フィールドが追加されました。アラートのプライマリ ロケーションではないロケーションがフィールドに含まれる可能性があります。[SARIF 仕様](https://docs.oasis-open.org/sarif/sarif/v2.1.0/cs01/sarif-v2.1.0-cs01.html#_Toc16012616)の例を参照してください。詳しくは、「[リポジトリのコード スキャン分析の取得](/rest/reference/code-scanning#get-a-code-scanning-analysis-for-a-repository)」を参照してください。

* `help` と `tags` の両方のデータが、Webhook 応答アラート ルール オブジェクトに追加されました。詳しくは、[コード スキャン アラートの Webhook イベントとペイロード](/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#code_scanning_alert)に関する記述を参照してください。

* `public_repo` スコープが指定されている個人用アクセス トークンには、ユーザーにその権限がある場合に、パブリック リポジトリでのコード スキャン エンドポイントに対する書き込みアクセス権が付与されるようになりました。



詳しくは、REST API ドキュメントの「[コード スキャン](/rest/reference/code-scanning)」を参照してください。

|
        # https://github.com/github/releases/issues/1943
        - '{% data variables.product.prodname_GH_advanced_security %} をお使いのお客様は REST API を使用して、Enterprise レベルでプライベート リポジトリ シークレットのスキャン結果を取得できるようになりました。既存のリポジトリ レベルと Organization レベルのエンドポイントは、新しいエンドポイントで補完されます。詳しくは、REST API ドキュメントの「[シークレット スキャン](/rest/reference/secret-scanning)」を参照してください。'

  # No security/bug fixes for the RC release
  # security_fixes:
  #   - PLACEHOLDER

  # bugs:
  #   - PLACEHOLDER

  known_issues:
    - "{% data variables.product.prodname_ghe_server %} インスタンスを設定したばかりでユーザーがいない場合、攻撃者が最初の管理者ユーザーを作成できました。"
    - カスタムのファイアウォール規則は、アップグレード プロセス中に削除されます。
    - "[Web インターフェイスからアップロードされた](https://github.com/blog/2105-upload-files-to-your-repositories) Git LFS 追跡ファイルが誤ってリポジトリに直接追加されます。"
    - 同じリポジトリ内の BLOB への固定リンクが含まれ、その BLOB のファイル パスが 255 文字を超える場合、issue をクローズできません。
    - "GitHub Connect で [ユーザーが GitHub.com を検索できる] が有効になっている場合、プライベートと内部リポジトリの issue は GitHub.com の検索結果に含まれません。"
    - "{% data variables.product.prodname_registry %} npm レジストリでは、メタデータ応答で時刻値が返されなくなりました。これは、パフォーマンスを大幅に向上させることができるように行われたものです。メタデータ応答の一部として時刻値を返すために必要なすべてのデータを引き続き保持します。また、既存のパフォーマンスの問題を解決したら、将来的にはこの値を再び返す予定です。"
    - pre-receive フックの処理に固有のリソース制限が、一部の pre-receive フックのエラーの原因となる場合があります。
    - 別のホストで作成されたバックアップからアプライアンスを復元した後に、Actions サービスを再起動する必要があります。

  deprecations:
    - heading: GitHub Enterprise Server 3.0 の非推奨化
      notes:
        - '**{% data variables.product.prodname_ghe_server %} 3.0 は 2022 年 2 月 16 日に廃止されました**。これは、この日付を過ぎると、重大なセキュリティの問題であってもパッチ リリースが作成されないことを意味します。より優れたパフォーマンス、改善されたセキュリティ、新機能のために、[{% data variables.product.prodname_ghe_server %} の最新バージョンへのアップグレード](/enterprise-server@3.4/admin/enterprise-management/upgrading-github-enterprise-server)をできるだけ早く行ってください。'
    - heading: GitHub Enterprise Server 3.1 の非推奨化
      notes:
        - '**{% data variables.product.prodname_ghe_server %} 3.1 は 2022 年 6 月 3 日に廃止されました**。これは、この日付を過ぎると、重大なセキュリティの問題であってもパッチ リリースが作成されないことを意味します。より優れたパフォーマンス、改善されたセキュリティ、新機能のために、[{% data variables.product.prodname_ghe_server %} の最新バージョンへのアップグレード](/enterprise-server@3.4/admin/enterprise-management/upgrading-github-enterprise-server)をできるだけ早く行ってください。'

    - heading: XenServer Hypervisor サポートの非推奨化
      notes:
        # https://github.com/github/docs-content/issues/4439
        - "{% data variables.product.prodname_ghe_server %} 3.3 以降、XenServer 上の {% data variables.product.prodname_ghe_server %} は非推奨になり、サポートされなくなりました。ご質問やご不明な点がございましたら、[GitHub サポート](https://support.github.com)にお問い合わせください。"

    - heading: Content Attachments API プレビューの非推奨化
      notes:
        #
        - "使用率が低いため、{% data variables.product.prodname_ghe_server %} 3.4 では Content References API プレビューは非推奨となりました。以前は、この API には `corsair-preview` ヘッダーを使用してアクセスできました。ユーザーは、この API を使用しなくても引き続き外部 URL に移動できます。Content References API について登録されている使用方法では、登録済みドメインから URL の Webhook 通知を受け取れなくなり、既存の添付コンテンツに対して試行された更新に有効な応答コードが返されなくなりました。"

    - heading: Codes of Conduct API プレビューの非推奨化
      notes:
        # https://github.com/github/releases/issues/1708
        - '`scarlet-witch-preview` ヘッダーを使ってアクセスできた Codes of Conduct API プレビューは、{% data variables.product.prodname_ghe_server %} 3.4 では非推奨になり、アクセスできなくなりました。代わりに、「[コミュニティ プロファイル メトリクスの取得](/rest/reference/repos#get-community-profile-metrics)」エンドポイントを使用して、リポジトリの行動規範に関する情報を取得することをお勧めします。詳しくは、{% data variables.product.prodname_dotcom %} 変更ログの「[非推奨のお知らせ: Codes of Conduct API プレビュー](https://github.blog/changelog/2021-10-06-deprecation-notice-codes-of-conduct-api-preview/)」を参照してください。'

    - heading: クエリ パラメーターを使った OAuth Application API エンドポイントと API 認証の非推奨化
      notes:
        # https://github.com/github/releases/issues/1316
        - |{% data variables.product.prodname_ghe_server %} 3.4 以降、[OAuth Application API エンドポイントの非推奨バージョン](https://developer.github.com/changes/2020-02-14-deprecating-oauth-app-endpoint/#endpoints-affected)は削除されました。これらのエンドポイントで 404 エラー メッセージが表示された場合は、URL に `access_tokens` が含まれない OAuth Application API のバージョンにコードを変換します。また、クエリ パラメーターを使った API 認証の使用が無効になりました。代わりに、[要求ヘッダーで API 認証](https://developer.github.com/changes/2020-02-10-deprecating-auth-through-query-param/#changes-to-make)を使うことをお勧めします。

|
    - heading: CodeQL ランナーの非推奨化
      notes:
        # https://github.com/github/releases/issues/1632
        - "{% data variables.product.prodname_ghe_server %} 3.4 では {% data variables.product.prodname_codeql %} ランナーは非推奨となり、サポートされなくなりました。この非推奨は、サード パーティの CI/CD システムで {% data variables.product.prodname_codeql %} コード スキャンを使用するユーザーにのみ影響します。{% data variables.product.prodname_actions %} ユーザーには影響しません。お客様には、{% data variables.product.prodname_codeql %} ランナーのフィーチャー コンプリート置換である {% data variables.product.prodname_codeql %} CLI への移行を強くお勧めします。詳しくは、[{% data variables.product.prodname_dotcom %} 変更ログ](https://github.blog/changelog/2021-09-21-codeql-runner-deprecation/)を参照してください。"

    - heading: カスタム ビット キャッシュ拡張機能の非推奨化
      notes:
        # https://github.com/github/releases/issues/1415
        - |{% data variables.product.prodname_ghe_server %} 3.1 から、{% data variables.product.company_short %} 独自のビット キャッシュ拡張機能のサポートの段階的な廃止が始まりました。これらの拡張機能は、{% data variables.product.prodname_ghe_server %} 3.3 以降で非推奨になります。



バージョン 3.1 または 3.2 を実行している {% data variables.product.product_location %} に既に存在し、アクティブであったリポジトリはすべて自動的に更新されるようになります。



{% data variables.product.prodname_ghe_server %} 3.3 にアップグレードする前に存在せずアクティブでなかったリポジトリは、リポジトリのメンテナンス タスクが実行され正常に完了するまで、最適に動作しない可能性があります。



リポジトリのメンテナンス タスクを手動で開始するには、影響を受ける各リポジトリの `https://<hostname>/stafftools/repositories/<owner>/<repository>/network` を参照し、[スケジュール] ボタンをクリックします。

|
  backups:
    - '{% data variables.product.prodname_ghe_server %} 3.4 では、[バックアップとディザスター リカバリー](/admin/configuration/configuring-your-enterprise/configuring-backups-on-your-appliance)のために、最低でも [GitHub Enterprise Backup Utilities 3.4.0](https://github.com/github/backup-utils) が必要です。'
