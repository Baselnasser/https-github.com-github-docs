- term: '@menção'
  description:
    Para notificar uma pessoa no GitHub usando `@` antes do nome de usuário dela. Os usuários de uma organização no GitHub também podem fazer parte de uma equipe que pode ser mencionada.
- term: o token de acesso
  description: >-
    Um token usado no lugar de uma senha quando operações do Git são executadas via HTTPS com o Git na linha de comando ou na API. Também chamado de token de acesso pessoal.
- term: Versão prévia da API
  description: >-
    Forma de testar novas APIs e alterações nos métodos existentes antes de integrá-las como parte da API oficial do GitHub.
- term: dispositivo
  description: >-
    Aplicativo de software combinado com o sistema operacional just enough (JeOS) para execução ideal em um hardware padrão do setor (geralmente um servidor) ou em uma máquina virtual.
- term: assignee
  description: Usuário responsável por um problema.
- term: código de autenticação
  description: >-
    Um código que você fornecerá, além da sua senha do GitHub, ao entrar com a 2FA por meio do navegador. Esse código é gerado por um aplicativo ou entregue ao seu telefone por meio de mensagem de texto. Também chamado de "código de autenticação 2FA".
- term: branch base
  description:
    "O branch no qual as alterações são combinadas quando você mescla uma solicitação de pull. Ao criar uma solicitação de pull, você pode alterar o branch base do branch padrão do repositório para outro branch, se necessário."
- term: autenticação básica
  description: >-
    Um método de autenticação em que as credenciais são enviadas como texto não criptografado.
- term: bio
  description: >-
    A descrição gerada pelo usuário em um perfil: [Adicionando uma biografia ao seu perfil](/articles/adding-a-bio-to-your-profile)
- term: ciclo de cobrança
  description: Intervalo de tempo do seu plano de cobrança.
- term: email de cobrança
  description: >-
    Endereço de email da organização para o qual o GitHub envia recibos, cobranças de cartão de crédito ou PayPal e outras comunicações relacionadas.
- term: gerente de cobrança
  description: Integrante que gerencia as configurações de cobrança de uma organização.
- term: Plano de Faturamento
  description: >-
    Planos de pagamento para usuários e organizações, com recursos definidos e personalizados.
- term: blame
  description: >-
    O recurso "blame" no Git descreve a última modificação em cada linha de um arquivo e normalmente mostra a revisão, autor e horário. É útil, por exemplo, para rastrear quando um recurso foi adicionado ou identificar qual commit levou a um erro específico.
- term: block
  description: >-
    Remover a possibilidade de um usuário colaborar nos repositórios da organização.
- term: branch
  description: >-
    Um branch é uma versão paralela de um repositório. Está no repositório, mas não afeta a ramificação principal ou primária e permite que você trabalhe à vontade, sem prejudicar a versão "online". Depois de fazer as alterações desejadas, você poderá fazer uma mesclagem do branch novamente com a ramificação principal para publicar as alterações.
- term: restrição de branch
  description: >-
    Restrição que os administradores do repositório podem ativar para que apenas determinados usuários ou equipes consigam efetuar push ou alterações no branch.
- term: plano de negócios
  description: >-
    Plano de cobrança da organização que permite colaborar em repositórios públicos e privados, definir que os integrantes se autentiquem no GitHub usando SAML SSO e provisionar o acesso com SAML ou SCIM.
- term: Certificado de Autoridade de Certificação
  description: >-
    Certificado digital emitido por uma Autoridade Certificada (CA, Certificate Authority) que garante a existência de conexões válidas entre duas máquinas, como o computador de um usuário e o GitHub.com. O certificado também verifica a propriedade de sites.
- term: cartão
  description: Quadrado móvel em um quadro de projeto associado a um problema ou solicitação de pull.
- term: marcar
  description: >-
    Uma verificação é um tipo de verificação de status em {% data variables.product.product_name %}. Consulte "[Verificações de estado](#status-checks)."
- term: fazer checkout
  description: >-
    Use `git checkout` na linha de comando para criar um branch, alterar o branch de trabalho atual para outro branch ou até alternar para uma versão diferente de um arquivo de outro branch com `git checkout [branchname] [path to file]`. A ação de "check-out" atualiza toda ou parte da árvore de trabalho com um objeto de árvore ou um blob do banco de dados de objetos e atualiza o índice e o HEAD se toda a árvore de trabalho está apontando para um novo branch.
- term: cherry-picking
  description: >-
    Escolher um subconjunto de alterações de uma série de alterações (normalmente commits) e registrá-las como uma nova série de alterações em uma base de código diferente. No Git, isso é feito pelo comando `git cherry-pick` para extrair a alteração introduzida por um commit existente em outro branch e registrá-la com base na ponta do branch atual como um novo commit. Para obter mais informações, consulte [git-cherry-pick](https://git-scm.com/docs/git-cherry-pick) na documentação do Git.
- term: equipe secundária
  description: >-
    Em equipes aninhadas, subequipe que herda as permissões de acesso e as @menções da equipe principal.
- term: limpo
  description: >-
    Uma árvore de trabalho está limpa se ela corresponder à revisão referenciada pelo HEAD atual. Confira também "sujo".
- term: clone
  description: >-
    Um clone é uma cópia de um repositório que fica em seu computador em vez de ficar em algum outro lugar em um servidor de site. Clonar significa o ato de fazer essa cópia. Quando você faz um clone, é possível editar os arquivos no seu editor preferido e usar o Git para acompanhar as alterações sem precisar ficar online. O repositório clonado ainda está conectado à versão remota, ou seja, você poderá enviar as alterações locais por push ao repositório remoto para mantê-las sincronizadas quando estiver online.
- term: clustering
  description: >-
    Capacidade de executar os serviços do GitHub Enterprise em vários nós e solicitações de balanceamento de carga entre eles.
- term: grafo de código de frequência
  description: >-
    Grafo de repositório que mostra as adições e exclusões de conteúdo para cada semana no histórico de um repositório.
- term: código de conduta
  description: Documento que define padrões de interação em uma comunidade.
- term: proprietário do código
  description: >-
    Uma pessoa designada como proprietário de uma parte do código de um repositório. O proprietário do código é solicitado automaticamente para revisão quando alguém abre uma solicitação de pull (não no modo de rascunho) que faz alterações no código do proprietário.
- term: colaborador
  description: >-
    Colaborador é uma pessoa com acesso de leitura e gravação em um repositório e que foi convidada a contribuir pelo proprietário do repositório.
- term: confirmar
  description: >-
    Commit, ou "revisão", é uma alteração individual em um arquivo (ou conjunto de arquivos). Ao fazer um commit para salvar o seu trabalho, o GIt cria uma ID única (também conhecido como "SHA" ou "hash") que permite que você mantenha o registro das alterações específicas confirmadas com quem as fez e quando. Os commits normalmente contêm uma mensagem do commit, que é uma breve descrição de quais alterações foram feitas.
- term: autor do commit
  description: Usuário que fez o commit.
- term: grafo de commits
  description: >-
    Grafo que mostra todos os commits feitos em um repositório no ano anterior.
- term: ID do commit
  description: Também conhecida como SHA. Um hash de soma de verificação de 40 caracteres que identifica o commit.
- term: mensagem do commit
  description: >-
    Texto breve e descritivo que acompanha um commit e comunica a alteração que o commit apresenta.
- term: comparar branches
  description: >-
    O branch usado para criar uma solicitação de pull. Esse branch é comparado com o branch base escolhido para a solicitação de pull, e as alterações são identificadas. Quando a solicitação de pull é mesclada, o branch base é atualizado com as alterações do branch de comparação. Também conhecido como o "branch de cabeçalho" da solicitação de pull.
- term: integração contínua
  description: >-
    Também conhecida como CI. Um processo que executa builds e testes automatizados depois que uma pessoa faz commit de uma alteração em um repositório configurado no GitHub. A CI é uma melhor prática comum no desenvolvimento de software que ajuda a detectar erros.
- term: grafo de contribuição
  description: >-
    Parte do perfil de um usuário que mostra suas contribuições diárias em um período de até um ano.
- term: diretrizes de contribuição
  description: Documento que explica como as pessoas devem contribuir para o seu projeto.
- term: contribuições
  description: >-
    Atividades específicas no GitHub que vão: – Adicionar um quadrado ao grafo de contribuição de um usuário: "[O que conta como uma contribuição](/articles/viewing-contributions-on-your-profile/#what-counts-as-a-contribution)" – Adicionar atividades à linha do tempo de um usuário em seu perfil: "[Atividade de contribuição](/articles/viewing-contributions-on-your-profile/#contribution-activity)"
- term: contribuidor
  description: >-
    Contribuidor é uma pessoa que não tem acesso de colaborador a um repositório, mas que contribuiu para um projeto cuja solicitação de pull passou por mesclagem no repositório.
- term: grafo de contribuidores
  description: Grafo que exibe os 100 principais contribuidores de um repositório.
- term: cupom
  description: >-
    Código fornecido pelo GitHub para usuários ou organizações pagarem suas assinaturas integral ou parcialmente.
- term: cron
  description: Agendador de trabalhos baseado em tempo para uso em sistemas operacionais de computadores do tipo Unix.
- term: cURL
  description: Usado em scripts ou linhas de comando para transferir dados.
- term: painel Transações da Web
  description: >-
    Seu painel pessoal é o hub principal da sua atividade no GitHub. Em seu painel pessoal, é possível acompanhar os problemas e as solicitações de pull nas quais está trabalhando ou seguindo, navegar para os seus repositórios principais e páginas de equipe e saber das atividades recentes nos repositórios que está inspecionando ou dos quais participa. Você também pode descobrir novos repositórios, recomendados com base nos usuários que você segue e repositórios nos quais você colocou uma estrela. Para visualizar somente atividades de uma organização específica, vá até o painel de sua organização. Para obter mais informações, consulte "[Sobre o seu painel pessoal](/articles/about-your-personal-dashboard)" ou "[Sobre o painel da sua organização](/articles/about-your-organization-dashboard)."
- term: branch padrão
  description: >-
    O branch base para novas solicitações de pull e commits de código em um repositório. Cada repositório tem, pelo menos, um branch, que o Git cria quando você inicializa o repositório. O primeiro branch geralmente é chamado {% ifversion ghes < 3.2 %}`master`{% else %}`main`{% endif %} e costuma ser o branch padrão.
- term: grafo de dependentes
  description: >-
    Grafo que mostra os pacotes, projetos e repositórios que dependem de um repositório público.
- term: grafo de dependência
  description: >-
    Um grafo de repositório que mostra os pacotes e projetos dos quais o repositório depende.
- term: chave de implantação
  description: >-
    Uma chave de implantação é uma chave SSH que é armazenada no seu servidor e permite acesso a um repositório do GitHub. Essa chave é anexada diretamente ao repositório em vez de a uma conta de usuário pessoal.
- term: HEAD desanexado
  description: >-
    O Git avisará se você estiver trabalhando em um HEAD desanexado, o que significa que o Git não está apontando para um branch e que todos os commits que você fizer não serão exibidos no histórico de commits.  Por exemplo, quando você faz check-out de um commit arbitrário que não é o commit mais recente de qualquer branch específico, você está trabalhando em um "HEAD desanexado".
- term: diagnóstico
  description: Visão geral das configurações e do ambiente de uma instância do GitHub Enterprise.
- term: diff
  description: >-
    Uma comparação é a diferença de alterações entre dois commits ou alterações salvas. O diff descreverá visualmente o que foi adicionado ou removido de um arquivo desde o seu último commit.
- term: directory
  description: >-
    Uma pasta que contém um ou mais arquivos ou pastas. Você pode criar diretórios para organizar os conteúdos de um repositório.
- term: sujo
  description: >-
    Uma árvore de trabalho é considerada "suja" se contiver modificações que não passaram por commit no branch atual.
- term: notificações por email
  description: Notificações enviadas para o endereço de email de um usuário.
- term: conta empresarial
  description: "As contas corporativas permitem que você gerencie a política e a cobrança centralmente para várias organizações. {% data reusables.gated-features.enterprise-accounts %}"
- term: Explorer
  description: >-
    Instância do GraphiQL, que é um “grafo GraphQL IDE interativo e integrado ao navegador”.
- term: fast-forward
  description: >-
    Um avanço rápido é um tipo especial de mesclagem em que você tem uma revisão e está "mesclando" as alterações de outro branch que são descendentes do que você tem. Nesse caso, você não faz um novo commit de mesclagem, mas apenas atualiza para essa revisão. Isso ocorrerá com frequência em um branch de acompanhamento remoto de um repositório remoto.
- term: branch de recurso
  description: >-
    Um branch usado para experimentar um novo recurso ou corrigir um problema que não está em produção. Também chamado de branch do tópico.
- term: bloco de código isolado
  description: "Um bloco de código recuado que você pode criar no GitHub Flavored Markdown usando acentos graves triplos \\`\\`\\` antes e depois do bloco de código. Consulte este [exemplo](/articles/creating-and-highlighting-code-blocks#fenced-code-blocks)."
- term: fetch
  description: >-
    Ao usar `git fetch`, você está adicionando alterações do repositório remoto ao branch de trabalho local sem fazer commit delas. Ao contrário de `git pull`, a busca permite que você revise as alterações antes de fazer commit delas no branch local.
- term: seguir (usuários)
  description: Receber notificações sobre as contribuições e atividades de outro usuário.
- term: push forçado
  description: >-
    Push do Git que sobrescreve o repositório remote com alterações locais sem considerar conflitos.
- term: fork
  description: >-
    Uma bifurcação é uma cópia do repositório de outro usuário que está em sua conta. Os forks permitem que você faça alterações livremente em um projeto sem afetar o repositório upstream original. Você também pode abrir uma solicitação pull no repositório upstream e manter o fork sincronizado com as alterações mais recentes, pois os dois repositórios ainda estão conectados.
- term: Plano gratuito
  description: >-
    Um plano de cobrança de uma conta de usuário que é gratuito. Os usuários podem colaborar em repositórios públicos ilimitados com colaboradores ilimitados.
- term: gist
  description: >-
    Um gist é um arquivo compartilhável que você pode editar, clonar e criar um fork no GitHub. Você pode criar um gist {% ifversion ghae %}internal{% else %}public{% endif %} ou um segredo, embora os gists secretos estejam disponíveis para {% ifversion ghae %}qualquer membro da empresa{% else %}qualquer pessoa{% endif %} com a URL.
- term: Git
  description: >-
    O Git é um programa de código aberto para acompanhamento de alterações em arquivos de texto. Ele foi escrito pelo autor do sistema operacional Linux e é a principal tecnologia na qual o GitHub, a interface social e do usuário, se baseia.
- term: Aplicativo GitHub
  description: >-
    Os Aplicativos GitHub fornecem um serviço para toda uma organização e usam uma identidade própria ao realizar as funções deles. Eles podem ser instalados diretamente em organizações e contas de usuários e obter acesso a repositórios específicos. São fornecidos com permissões granulares e webhooks internos.
- term: GitHub Flavored Markdown
  description: "Markdown específico do GitHub usado para formatar texto e código no GitHub. Consulte [Espec. markdown em estilo GitHub](https://github.github.com/gfm/) ou [Introdução à gravação e formatação no GitHub](/articles/getting-started-with-writing-and-formatting-on-github)."
- term: Importador do GitHub
  description: >-
    Ferramenta que importa rapidamente repositórios do código-fonte, incluindo commits e histórico de revisão, para os usuários do GitHub.
- term: GitHub Jobs
  description: >-
    Site do GitHub em que empregadores podem publicar trabalhos que possam vir a despertar o interesse dos usuários.
- term: GitHub Marketplace
  description: >-
    Subsite em que usuários e organizações do GitHub podem comprar e instalar aplicativos que ampliam e complementam seus fluxos de trabalho.
- term: GitHub Pages
  description: >-
    Também conhecido como Pages. Um serviço de hospedagem de site estático desenvolvido para hospedar suas páginas pessoais, da organização ou de projeto diretamente em um repositório do GitHub.
- term: Wiki do GitHub
  description: Seção para hospedar documentação em estilo wiki em um repositório do GitHub.
- term: arquivo git
  description: >-
    Um arquivo `.git` sem formatação, que está sempre na raiz de uma árvore de trabalho e aponta para o diretório do Git, que tem todo o repositório Git e os metadados dele. Você pode exibir este arquivo para o seu repositório na linha de comando com `git rev-parse --git-dir`. que é a o repositório real.
- term: GraphQL
  description: >-
    Linguagem de consulta para APIs e um tempo de execução para atender a essas consultas com os dados existentes.
- term: HEAD
  description: "Um commit definido de um branch, geralmente o commit mais recente na ponta do branch."
- term: branch head
  description: "O branch cujas alterações são combinadas no branch base quando você mescla uma solicitação de pull. Também conhecido como \"branch de comparação\"."
- term: 'Hello, World'
  description: >-
    Um programa “Hello, World!” é um programa de computador que produz ou exibe a mensagem "Olá, Mundo!" para o usuário. Como esse programa costuma ser muito simples, geralmente, é usado como exemplo da sintaxe básica de uma linguagem de programação e serve como um primeiro exercício comum para aprendizado uma nova linguagem de programação.
- term: alta disponibilidade
  description: >-
    Sistema ou componente que se mantém em operação por um período longo.
- term: hook
  description: >-
    Durante a execução normal de vários comandos do Git, as chamadas são feitas para scripts opcionais que permitem que um desenvolvedor adicione uma funcionalidade ou uma verificação. Normalmente, os ganchos permitem que um comando seja verificado previamente e potencialmente anulado, além de permitir uma pós-notificação seguida da conclusão da operação.
- term: hostname
  description: >-
    Apelidos legíveis por humanos que correspondem ao endereço de um dispositivo conectado a uma rede.
- term: identicon
  description: >-
    Uma imagem gerada automaticamente usada como uma foto de perfil padrão quando os usuários se inscrevem no GitHub. Os usuários podem substituir seu identicon por uma foto própria de perfil.
- term: provedor de identidade
  description: >-
    Também conhecido como IdP. Um provedor confiável que permite que você use o SSO (logon único) do SAML para acessar outros sites.
- term: instance
  description: >-
    Cópia privada de uma organização do GitHub contida em uma máquina virtual configurável e controlável.
- term: integração
  description: >-
    Um aplicativo de terceiros que se integra ao GitHub. Podem ser Aplicativos do GitHub, Aplicativos OAuth ou webhooks.
- term: problema
  description: >-
    Problemas são sugestões de melhorias, tarefas ou perguntas relacionadas a um repositório. Podem ser criados por qualquer pessoa (em repositórios públicos) e são moderados por colaboradores de repositórios. Cada problema contém um thread próprio de discussão. Você também pode categorizar um problema com rótulos e atribuí-lo a alguém.
- term: Jekyll
  description: "Gerador de site estático para sites pessoais, de projeto ou da organização."
- term: Seletor de temas Jekyll
  description: >-
    Forma automatizada de selecionar um tema visual para o seu site no Jekyll sem editar ou copiar arquivos CSS.
- term: impressão digital da chave
  description: Sequência curta de bytes usada para identificar uma chave pública mais longa.
- term: keychain
  description: Sistema de gerenciamento de senhas no macOS.
- term: palavra-chave
  description: Palavra específica que encerra um problema quando usada em uma solicitação de pull.
- term: label
  description: >-
    Uma marca em um problema ou uma solicitação de pull. Os repositórios são fornecidos com uma série de rótulos padrão, mas os usuários podem criar rótulos personalizados.
- term: LFS
  description: >-
    Git Large File Storage. Uma extensão de código aberto do Git para controle de versão de arquivos grandes.
- term: license
  description: >-
    Documento que você pode incluir no projeto para mostrar o que as pessoas podem e não podem fazer com o seu código-fonte.
- term: Linguist
  description: >-
    Biblioteca usada no GitHub para detectar linguagens blob, ignorar arquivos binários ou fornecidos, suprimir arquivos gerados em diffs e gerar grafos de quebra de linguagem.
- term: comentário em linha
  description: Comentário na solicitação de pull de uma linha de código.
- term: delimitador
  description: >-
    Caractere invisível que simboliza o fim da linha em um arquivo de texto.
- term: conta pessoal bloqueada
  description: >-
    Uma conta pessoal que não pode ser acessada pelo usuário. As contas são bloqueadas quando os usuários fazem downgrade da conta paga para uma gratuita ou se o plano pago venceu.
- term: console de gerenciamento
  description: >-
    Seção na interface do GitHub Enterprise que contém recursos administrativos.
- term: Markdown
  description: >-
    O Markdown é um formato de arquivo de semântica incrivelmente simples, não muito diferente do .doc, do .rtf e do .txt. O markdown facilita a escrita em prosa (com links, listas, marcadores etc) e a sua respectiva publicação como apresentado em um site, mesmo para aqueles que não têm conhecimento sobre como publicar na Web. O GitHub dá suporte ao Markdown e usa uma forma específica do Markdown chamada GitHub Flavored Markdown. Consulte [Espec. markdown em estilo GitHub](https://github.github.com/gfm/) ou [Introdução à gravação e formatação no GitHub](/articles/getting-started-with-writing-and-formatting-on-github).
- term: markup
  description: Sistema para anotar e formatar um documento.
- term: main
  description: >-
    {% ifversion fpt or ghes > 3.1 or ghae %} O branch de desenvolvimento padrão. Sempre que você cria um repositório Git, um branch chamado `main` é criado e passa a ser o branch ativo. Na maioria dos casos, isso contém o desenvolvimento local, embora isso seja meramente por convenção e não seja necessário.{% else %}O nome geralmente escolhido como uma alternativa a `master` para o branch padrão de um repositório.{ % endif %}
- term: master
  description: >-
    O branch padrão em muitos repositórios Git. Por padrão, quando você cria um repositório Git na linha de comando, um branch chamado `master` é criado. Muitas ferramentas já usam um nome alternativo para o branch padrão.{% ifversion fpt or ghes > 3.1 or ghae %} Por exemplo, quando você cria um repositório no GitHub, o branch padrão é chamado `main`.{% endif %}
- term: grafo de integrantes
  description: Grafo que exibe todas as bifurcações de um repositório.
- term: menção
  description: >-
    Uma notificação enviada a um usuário precedendo o nome de usuário com o símbolo @. Os usuários de uma organização no GitHub também podem fazer parte de uma equipe que pode ser mencionada.
- term: mesclar
  description: >-
    A mesclagem pega as alterações de um branch (no mesmo repositório ou de uma bifurcação) e as aplica em outro. Normalmente, isso ocorre por meio de uma "solicitação de pull" (que pode ser considerada uma solicitação de mesclagem) ou por meio da linha de comando. Uma mesclagem pode ser feita por meio de uma solicitação de pull pela interface da Web GitHub.com se não há alterações conflitantes ou sempre pode ser feita por meio da linha de comando.
- term: conflito de mesclagem
  description: >-
    Uma diferença que ocorre entre branches mesclados. Os conflitos de mesclagem acontecem quando as pessoas fazem alterações diferentes na mesma linha do mesmo arquivo ou quando uma pessoa edita um arquivo e outra pessoa exclui o mesmo arquivo. O conflito de mesclagem precisa ser resolvido para que você mescle os branches.
- term: milestone
  description: >-
    Forma de acompanhar o progresso de grupos de problemas ou solicitações de pull em um repositório.
- term: espelho
  description: Uma nova cópia de um repositório.
- term: equipe aninhada
  description: >-
    Uma equipe filho de uma equipe pai. Você pode ter várias equipes filho (ou aninhadas).
- term: grafo de rede
  description: >-
    Grafo que exibe o histórico de branches de toda a rede do repositório, incluindo branches do repositório raiz e branches de bifurcações que contêm commits exclusivos da rede.
- term: feed de notícias
  description: >-
    Uma exibição da atividade de repositórios ou pessoas que você inspeciona. O feed de notícias de uma organização mostra a atividade nos repositórios que pertencem a essa organização.
- term: non-fast-forward
  description: >-
    Quando a cópia local de um repositório não está sincronizada com o repositório upstream e você precisa fazer fetch das alterações de upstream antes de efetuar push das alterações locais.
- term: notificação
  description: >-
    Atualizações, entregues pela Web ou email dependendo de suas configurações, que dão a você informações sobre as atividades em que você tem interesse.
- term: aplicativo OAuth
  description: >-
    Aplicativo de terceiros que usa tokens de acesso em vez de senhas para liberar o acesso dos usuários às informações.
- term: token OAuth
  description: Token de acesso usado em aplicativos do OAuth para liberar o acesso dos usuários às informações.
- term: colaborador externo
  description: >-
    Usuário que recebeu acesso a um ou mais repositórios de uma organização, mas não tem outro tipo de acesso à organização nem faz parte dela.
- term: código aberto
  description: >-
    Um software de código aberto é aquele que pode ser usado, modificado e compartilhado livremente (na forma modificada ou não) por qualquer pessoa. Atualmente, o conceito de "código aberto" estende-se além do software e representa uma filosofia de colaboração na qual os materiais de trabalho são disponibilizados para qualquer pessoa fazer bifurcações, modificar, discutir e apresentar contribuições.
- term: organization
  description: >-
    Organizações são um grupo de dois ou mais usuários que normalmente espelham as organizações do mundo real. Elas são administradas por usuários e podem conter repositórios e equipes.
- term: proprietário da organização
  description: Usuários com acesso administrativo total à organização que têm.
- term: origin
  description: >-
    O repositório upstream padrão. A maioria dos projetos tem pelo menos um projeto upstream que eles rastreiam. Por padrão, a origem é usada para esta finalidade.
- term: proprietário
  description: >-
    Integrantes da organização com acesso administrativo total à organização.
- term: equipe principal
  description: >-
    Em equipes aninhadas, equipe principal da qual as equipes secundárias herdam as permissões de acesso e as @menções.
- term: notificações de participação
  description: >-
    Notificação sobre uma atualização em uma conversa de um problema ou solicitação de pull em que seu nome de usuário ou equipe foi mencionado, ou em alguma resposta anterior sua na conversa.
- term: permalink
  description: Hyperlink permanente estático para uma página da Web.
- term: conta pessoal
  description: >-
    Conta do GitHub pertencente a um usuário.
- term: endereço de email principal
  description: >-
    Endereço de email principal para o qual o GitHub envia recibos, cobranças de cartão de crédito ou PayPal e outras comunicações relacionadas.
- term: repositório fixo
  description: >-
    Repositório que o usuário decidiu exibir em destaque no perfil.
- term: hooks pre-receive
  description: >-
    Scripts executados no servidor do GitHub Enterprise que podem ser usados para implementar verificações de qualidade.
- term: contribuições privadas
  description: Contribuições feitas a um repositório privado (vs. público).
- term: repositório privado
  description: >-
    Repositórios privados ficam visíveis somente para o proprietário do repositório e para os colaboradores especificados por ele.
- term: branch de produção
  description: >-
    Branch com alterações finais prontas para uso ou implementação em um aplicativo ou site.
- term: Perfil
  description: Página que mostra informações sobre a atividade de um usuário no GitHub.
- term: foto de perfil
  description: >-
    Uma imagem personalizada que os usuários carregam no GitHub para identificar as respectivas atividades, geralmente acompanhada do nome de usuário. Também chamado de avatar.
- term: quadro de projeto
  description: >-
    Quadros no GitHub compostos por problemas, solicitações de pull e observações categorizados como cartões em colunas.
- term: branch protegido
  description: >-
    Os branches protegidos bloqueiam vários recursos do Git nos branches que o administrador do repositório escolhe proteger. Eles não podem ser forçados por push, excluídos, ter alterações mescladas sem as verificações necessárias serem aprovadas ou sem as revisões necessárias aprovadas ou ter arquivos carregados por meio da interface da Web do GitHub. Um branch protegido geralmente é o branch padrão.
- term: contribuições públicas
  description: Contribuições feitas a um repositório público (vs. privado).
- term: repositório público
  description: >-
    Repositórios públicos podem ser vistos por qualquer pessoa, inclusive não usuários do GitHub.
- term: pull
  description: >-
    Pull refere-se a quando você busca alterações e as mescla. Por exemplo, se alguém editou o arquivo remoto no qual vocês dois estão trabalhando, o ideal é fazer pull dessas alterações na cópia local para que ele fique atualizado. Veja também buscar.
- term: acesso pull
  description: Sinônimo de acesso de leitura.
- term: solicitação de pull
  description: >-
    Solicitações de pull são alterações propostas em um repositório enviadas por um usuário e que são aceitas ou rejeitadas pelos colaboradores do repositório. Assim como problemas, as solicitações de pull têm seus próprios fóruns de discussão.
- term: revisão da solicitação de pull
  description: >-
    Comentários de colaboradores sobre uma solicitação de pull que aprovem as alterações ou solicitem outras alterações antes da mesclagem da solicitação de pull.
- term: grafo Pulse
  description: Um grafo de repositório que mostra uma visão geral da atividade de um repositório.
- term: grafo Punch
  description: >-
    Um grafo de repositório que mostra a frequência de atualizações em um repositório conforme o dia da semana e a hora do dia
- term: efetuar push
  description: >-
    Enviar por push significa enviar as alterações confirmadas para um repositório remoto no GitHub.com. Por exemplo, se você alterar algo localmente, poderá enviar por push essas alterações para que outras pessoas possam acessá-las.
- term: efetuar push de um branch
  description: >-
    Quando você envia um branch por push com sucesso para um repositório remoto, o branch remoto é atualizado com as alterações do branch local. Ao "efetuar o push de um branch", Git vai procurar pela ref HEAD do branch no repositório remoto e verificará se é um ancestral direto à ref HEAD local do branch. Depois de verificado, o Git efetua o pull de todos os objetos (alcançáveis da ref HEAD local e ignorado do repositório remoto) no banco de dados do objeto remoto e depois faz a atualização da ref HEAD remota. Se o HEAD remoto não foi um ancestral ao HEAD local, o push falha.
- term: acesso push
  description: Sinônimo de acesso de gravação.
- term: acesso de leitura
  description: >-
    Um nível de permissão em um repositório que permite ao usuário ler as informações do repositório ou efetuar pull delas. Todos os repositórios públicos dão acesso de leitura a todos os usuários do GitHub. Um sinônimo de acesso de pull.
- term: ARQUIVO LEIAME
  description: "Um arquivo de texto que contém informações sobre os arquivos de um repositório que, normalmente, é o primeiro arquivo que um visitante do repositório verá. Um arquivo README, acompanhado de uma licença de repositório, diretrizes de contribuição e um código de conduta, ajuda você a compartilhar as expectativas e gerenciar as contribuições do seu projeto."
- term: trocar base
  description: >-
    Reaplicar uma série de alterações de um branch para uma base diferente e redefinir o HEAD daquele branch para o resultado.
- term: código de recuperação
  description: Código que ajuda a recuperar o acesso à conta do GitHub.
- term: release
  description: Forma como o GitHub empacota e fornece software aos usuários.
- term: remoto
  description: >-
    Essa é a versão de um repositório ou um branch hospedado em um servidor, provavelmente, o GitHub.com. As versões remotas podem ser conectadas a clones locais para que as alterações possam ser sincronizadas.
- term: repositório remote
  description: >-
    Repositório usado para monitorar o mesmo projeto, mas residindo em outro lugar.
- term: URL remota
  description: >-
    Local onde seu código fica armazenado (repositório no GitHub, bifurcação de outro usuário ou até mesmo um servidor diferente).
- term: réplica
  description: >-
    Instância do GitHub Enterprise que gera redundância para a instância principal do GitHub Enterprise.
- term: repository
  description: >-
    Um repositório é o elemento mais básico do GitHub. É mais fácil imaginá-lo como uma pasta de projetos. Um repositório contém todos os arquivos de projeto (incluindo a documentação) e armazena o histórico de revisão de cada arquivo. Os repositórios podem ter vários colaboradores e podem ser públicos ou privados.
- term: cache do repositório
  description: >-
    Um espelho somente leitura de repositórios para o seu exemplo de servidor do GitHub Enterprise, localizado perto de equipes distribuídas e clientes de CI.
- term: grafo do repositório
  description: Representação visual dos dados do seu repositório.
- term: mantenedor de repositório
  description: >-
    Alguém que gerencia um repositório. Essa pessoa pode ajudar na triagem de problemas e usar rótulos e outros recursos para gerenciar o trabalho do repositório. Ela também pode ser responsável por manter o README e os arquivos de contribuição atualizados.
- term: revisão obrigatória da solicitação de pull
  description: >-
    As revisões obrigatórias garantem que as solicitações de pull tenham ao menos uma revisão aprovada antes que os colaboradores possam fazer alterações em um branch protegido.
- term: verificação de status obrigatória
  description: >-
    Verificações nas solicitações de pull para garantir que todos os testes de CI sejam aprovados antes que os colaboradores possam fazer alterações em um branch protegido.
- term: resolve
  description: Corrigir manualmente os problemas ocasionados por uma operação de mesclagem com falha.
- term: reverter
  description: >-
    Quando você reverte uma solicitação de pull no GitHub, uma nova solicitação de pull é aberta automaticamente, que tem um commit que reverte o commit de mesclagem da solicitação de pull mesclada original. No Git, é possível reverter os commits com `git revert`.
- term: revisar
  description: >-
    As revisões permitem que pessoas com acesso ao seu repositório comentem as alterações propostas nas solicitações de pull, aprovem as alterações ou solicitem outras alterações antes de fazer a mesclagem da solicitação de pull.
- term: diretório raiz
  description: Primeiro diretório de uma hierarquia.
- term: sistema de arquivos raiz
  description: Sistema operacional de base e ambiente de aplicativos do GitHub Enterprise.
- term: resposta salva
  description: >-
    Comentário que você pode salvar e adicionar à conta de usuário para uso em problemas e solicitações de pull do GitHub.
- term: scope
  description: >-
    Grupos nomeados de permissões que um aplicativo OAuth pode solicitar para acessar dados públicos e não públicos.
- term: estação
  description: >-
    Um usuário em uma organização do GitHub Enterprise. Pode ser chamado de "contagem de estações".
- term: equipe secreta
  description: >-
    Uma equipe que só fica visível para os outros integrantes da equipe e pessoas com permissões de proprietário.
- term: log de segurança
  description: >-
    Log que relaciona as últimas 50 ações ou as ações executadas nos últimos 90 dias.
- term: server-to-server request
  description: >-
    Uma solicitação de API usada por um aplicativo que funciona como um bot, independentemente de qualquer usuário específico. Por exemplo, um aplicativo que é executado de acordo com um agendamento e fecha os problemas em que não existe uma atividade há muito tempo. Os aplicativos que usam esse tipo de autenticação não usam uma conta licenciada do GitHub. Portanto, em uma empresa com um plano de cobrança que permite que determinado número de licenças seja usado, um bot entre servidores não consume uma das suas licenças do GitHub. O token usado em uma solicitação servidor para servidor é adquirido de modo programático, via [API do GitHub](/rest/reference/apps#create-an-installation-access-token-for-an-app). Consulte também, "[solicitação usuário para servidor](#user-to-server-request)."
- term: hook de serviço
  description: >-
    Também chamado de "webhook". Webhooks permitem que notificações sejam entregues a um servidor Web externo sempre que determinadas ações ocorrem em um repositório ou uma organização.
- term: logon único
  description: >-
    Também chamado de SSO. Permite ao usuário se conectar em um só local (um provedor de identidade, IdP) que fornece ao usuário o acesso a outros provedores de serviços.
- term: instantâneo
  description: Ponto de verificação de uma máquina virtual em um momento específico.
- term: combinação por squash
  description: Combinar vários commits em um só. Também um comando do Git.
- term: chave SSH
  description: >-
    Chaves SSH identificam você em um servidor online, por meio de uma mensagem criptografada. É como se o seu computador tivesse sua própria senha exclusiva para outro serviço. {% data variables.product.product_name %} usa chaves SSH para transferir informações de maneira segura para o seu computador.
- term: instância de preparo
  description: >-
    Maneira de testar as modificações antes de aplicá-las à instância do GitHub Enterprise.
- term: status
  description: >-
    Representação visual em uma solicitação de pull indicativa de que os seus commit atendem às condições definidas para o repositório com o qual você está contribuindo.
- term: verificações de status
  description: >-
    As verificações de status são processos externos, como compilações de integração contínua, que são executados para cada commit que você faz em um repositório. Para obter mais informações, consulte "[Sobre verificações de status](/articles/about-status-checks)."
- term: estrela
  description: >-
    Um indicador ou uma exibição de apreciação de um repositório. As estrelas são uma forma manual de classificar a popularidade dos projetos.
- term: subscription
  description: Plano do GitHub para um usuário ou organização.
- term: equipe
  description: >-
    Grupo de integrantes da organização que refletem sua empresa ou a estrutura do grupo com permissões de acesso em cascata e menções.
- term: mantenedor de equipe
  description: >-
    Integrantes da organização com um subconjunto de permissões disponíveis para os proprietários da organização gerenciarem equipes.
- term: plano de equipe
  description: >-
    Plano de cobrança da organização que oferece um número ilimitado de repositórios privados e públicos.
- term: linha do tempo
  description: Série de eventos em uma solicitação de pull ou em um perfil de usuário.
- term: branch de tópico
  description: >-
    Um GIT branch comum que é usado por um desenvolvedor para identificar uma linha conceitual de desenvolvimento. Como os branches são muito fáceis e baratos, muitas vezes, é desejável ter vários branches pequenos que contenham conceitos muito bem definidos ou pequenas alterações incrementais, mas relacionadas. Também pode ser chamado de branch de recursos.
- term: topics
  description: >-
    Uma forma de explorar repositórios em uma área de assunto específica, encontrar projetos com os quais contribuir e descobrir novas soluções para um problema específico no GitHub.
- term: grafo de tráfego
  description: >-
    Grafo que mostra o tráfego de um repositório, inclusive clones totais (sem fetch), visitantes dos últimos 14 dias, sites de referência e conteúdo popular.
- term: transferência
  description: >-
    Transferir um repositório significa alterar o proprietário de um repositório. O novo proprietário poderá administrar imediatamente o conteúdo, os problemas, as solicitações de pull, as versões e as configurações do repositório.
- term: upstream
  description: >-
    Quando mencionamos um branch ou bifurcação, o branch primário no repositório original é frequentemente denominado "upstream", por ser o local principal de onde outras alterações virão. O branch/bifurcação no qual você está trabalhando é denominado "downstream". Também chamado de origem.
- term: branch upstream
  description: >-
    O branch padrão que é mesclado no branch em questão (ou o branch em questão tem a base trocada). É configurado via `branch.<name>.remote` e `branch.<name>.merge`. Se o branch upstream de A for da origem/B, às vezes, dizemos que "A está acompanhando a origem/B".
- term: usuário
  description: >-
    Os usuários são pessoas que têm contas pessoais do GitHub. Cada usuário tem um perfil pessoal e pode ter vários repositórios, públicos ou privados. Os usuários podem criar ou serem convidados a integrar organizações ou colaborar com repositórios de outras pessoas.
- term: Nome de Usuário
  description: Identificador de um usuário no GitHub.
- term: user-to-server request
  description: >-
    Uma solicitação de API usada por um aplicativo que executa uma tarefa em nome de um usuário específico. Quando uma tarefa é realizada com a autenticação de usuário para servidor, ela é mostrada no GitHub como tendo sido feita por um usuário por meio de um aplicativo. Por exemplo, você poderá optar por criar um problema em um aplicativo de terceiros, e o aplicativo fará isso em seu nome no GitHub. O escopo das tarefas que um aplicativo pode executar usando uma solicitação de usuário para servidor é restrito pelas permissões e pelo acesso do aplicativo e do usuário. O token usado em uma solicitação de usuário para servidor é adquirido por meio do OAuth. Para obter mais informações, consulte "[Identificar e autorizar usuários para aplicativos GitHub](/developers/apps/building-github-apps/identifying-and-authorizing-users-for-github-apps)." Consulte também, "[solicitação servidor para servidor](#user-to-server-request)."
- term: equipe visível
  description: Equipe que pode ser vista e @mencionada por qualquer integrante da organização.
- term: inspecionar
  description: >-
    Você pode inspecionar um repositório ou problema para receber notificações quando houver atualizações em problemas ou solicitações de pull.
- term: notificações de inspeção
  description: Notificação sobre atividades em um repositório ao qual o usuário se inscreveu.
- term: notificações da Web
  description: >-
    Notificações exibidas na interface Web do GitHub: https://github.com/notifications
- term: Webhooks
  description: >-
    Os webhooks permitem que você crie ou configure Aplicativos do GitHub que assinam determinados eventos no GitHub.com. Webhooks permitem que notificações sejam entregues a um servidor Web externo sempre que determinadas ações ocorrem em um repositório ou uma organização. Também chamado de gancho de serviço.
- term: acesso de gravação
  description: >-
    Nível de permissão que permite ao usuário efetuar push de alterações ou gravá-las em um repositório.
