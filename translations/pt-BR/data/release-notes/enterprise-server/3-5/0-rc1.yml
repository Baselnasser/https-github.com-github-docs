date: '2022-05-10'
release_candidate: true
deprecated: true
intro: |
  {% note %}
  
  **Observação:** Se {% data variables.product.product_location %} estiver executando a compilação de um candidato à versão, você não poderá atualizar com um patch dinâmico. Recomendamos somente executar versões Release Candidate em ambientes de teste.
  
  {% endnote %}
  
  Para obter instruções de atualização, consulte "[Atualizar {% data variables.product.prodname_ghe_server %}](/admin/enterprise-management/updating-the-virtual-machine-and-physical-resources/upgrading-github-enterprise-server)."
sections:
  features:
    - heading: Lista de exceção de IP para testagem de validação após manutenção
      notes:
        # https://github.com/github/releases/issues/2109
        - |Você agora pode configurar uma lista de permissão de endereços IP que podem acessar serviços de aplicativo em sua instância do servidor GitHub Enterprise enquanto o modo de manutenção está habilitado. Os administradores que visitam a interface Web da instância de um endereço IP permitido podem validar a funcionalidade da instância após a manutenção e antes de desabilitar o modo de manutenção. Para obter mais informações, consulte "[Habilitando e agendando o modo de manutenção](/admin/configuration/configuring-your-enterprise/enabling-and-scheduling-maintenance-mode#validating-changes-in-maintenance-mode-using-the-ip-exception-list)."

|
    - heading: As funções de repositórios personalizados estão em disponibilidade geral
      notes:
        # https://github.com/github/releases/issues/1945
        - |Com funções de repositórios personalizados, as organizações agora têm um controle mais granular sobre as permissões de acesso do repositório que podem conceder aos usuários. Para obter mais informações, consulte "[Gerenciando as funções de repositórios personalizados para uma organização](/organizations/managing-peoples-access-to-your-organization-with-roles/managing-custom-repository-roles-for-an-organization)."



Uma função de repositórios personalizados é criada por um proprietário da organização e está disponível em todos os repositórios nessa organização. Cada função pode receber um nome personalizado e uma descrição. Pode ser configurado de um conjunto de mais de 40 permissões refinadas. Quando elas são criadas, os administradores de repositório podem atribuir uma função personalizada a qualquer usuário, equipe ou colaborador externo no repositório.



As funções de repositórios personalizados podem ser criadas, exibidas, editadas e excluídas por meio da nova guia **Funções de repositório** nas configurações de uma organização. No máximo 3 funções personalizadas podem ser criadas dentro de uma organização. 



As funções de repositórios personalizados também têm suporte nas APIs REST do servidor GitHub Enterprise. A API das organizações podem ser usadas para listar todas as funções de repositórios personalizados em uma organização, e as APIs existentes para conceder acesso ao repositório para indivíduos e equipes foram estendidas para dar suporte a funções de repositórios personalizados. Para obter mais informações, consulte "[Organizações](/rest/reference/orgs#list-custom-repository-roles-in-an-organization)" na documentação da API REST.

|
    - heading: Registro de Contêiner do GitHub em beta público 
      notes: 
        # https://github.com/github/releases/issues/2005
         - |O registro do Contêiner do GitHub (GHCR) agora está disponível no GitHub Enterprise Server 3.5 como beta público, oferecendo aos desenvolvedores a capacidade de publicar, baixar e gerenciar contêineres. O suporte ao contêiner dos pacotes do GitHub implementa os padrões de OCI para hospedar imagens do Docker. Para obter mais informações, consulte "[Registro de contêiner do GitHub](/packages/working-with-a-github-packages-registry/working-with-the-container-registry)."

|
    - heading: As atualizações do Dependabot estão em disponibilidade geral
      notes:
       # https://github.com/github/releases/issues/2089
        - |A versão do Dependabot e as atualizações de segurança agora estão em disponibilidade geral no GitHub Enterprise Server 3.5. Todos os ecossistemas populares e os recursos que funcionam nos repositórios do GitHub.comagora podem ser configurados na sua instância do GitHub Enterprise Server. O Dependabot no GitHub Enterprise Server exige o GitHub Actions e um conjunto de executores de Dependabot auto-hospedados, o GitHub Connect habilitado e o Dependabot habilitado por um administrador. Para obter mais informações, consulte "[Configurando atualizações do Dependabot](https://docs.github.com/en/enterprise-server@3.5/admin/github-actions/enabling-github-actions-for-github-enterprise-server/setting-up-dependabot-updates)."

|
    - heading: Estatísticas do servidor em beta público
      notes:
        # https://github.com/github/releases/issues/2183
        - |Agora você pode analisar como sua equipe funciona, entender o valor que você obtém com o GitHub Enterprise Server e nos ajudar a aprimorar nossos produtos revisando os dados de uso de sua instância e compartilhando esses dados agregados com o GitHub. Você pode usar suas próprias ferramentas para analisar seu uso ao longo do tempo baixando seus dados em um CSV ou arquivo JSON ou acessando-o usando a API REST. Para ver a lista de métricas agregadas coletadas, confira "[Sobre Estatísticas do Servidor](/admin/monitoring-activity-in-your-enterprise/analyzing-how-your-team-works-with-server-statistics/about-server-statistics#server-statistics-data-collected)." Os dados das estatísticas do servidor não incluem dados pessoais ou conteúdo do GitHub, como código, problemas, comentários ou conteúdo de solicitações de pull.  Para uma melhor compreensão de como armazenamos e protegemos dados de estatísticas de servidor, consulte "[Segurança do GitHub](https://github.com/security)."  Para obter mais informações sobre as estatísticas do servidor, consulte "[Analisando como sua equipe funciona com as estatísticas do servidor](/admin/monitoring-activity-in-your-enterprise/analyzing-how-your-team-works-with-server-statistics)." Esse recurso está disponível na versão beta pública.

|
    - heading: A limitação de taxa do GitHub Actions agora é configurável
      notes:
        # https://github.com/github/releases/issues/2123
        - |Os administradores do site agora podem habilitar e configurar um limite de taxa para o GitHub Actions. Por padrão, o limite de taxa está desabilitado. Quando os trabalhos do fluxo de trabalho não puderem ser atribuídos a um executor disponível, eles aguardarão em uma fila até que um executor esteja disponível. No entanto, se o GitHub Actions experimentar uma alta carga sustentada, a fila pode acumular mais rápido do que esvaziar e o desempenho da instância do GitHub Enterprise Server pode degradar. Para evitar isso, um administrador pode configura um limite de taxa. Quando o limite de taxa é excedido, podem ocorrer falhas imediatas em execuções adicionais de fluxo de trabalho em vez de serem colocadas na fila. Assim que a taxa tiver se estabilizado abaixo do limite, novas execuções podem ser enfileiradas novamente. Para obter mais informações, consulte "[Configurando limites de taxa](/admin/configuration/configuring-your-enterprise/configuring-rate-limits#configuring-rate-limits-for-github-actions)."

|
    - heading: OpenID Connect (OIDC) para implantações seguras com o GitHub Actions
      notes:
        # https://github.com/github/releases/issues/2066
        - |O GitHub Actions no GitHub Enterprise Server agora dá suporte a OIDC para implantações seguras nos provedores de nuvem, que usa tokens de curta duração que são automaticamente rotacionados para cada implantação. O OIDC habilita as seguintes funcionalidades.



- Autenticação simplificada entre provedores de nuvem e o GitHub Enterprise Server sem a necessidade de armazenar segredos de nuvem de longa duração em sua instância

- Os administradores de nuvem podem confiar nos mecanismos de segurança de um provedor de nuvem específico para garantir que os fluxos de trabalho do GitHub Actions tenham acesso mínimo a recursos de nuvem. Não há duplicação de gerenciamento de segredos entre o GitHub Enterprise Server e a nuvem.



Para obter mais informações, consulte "[Segurança que enrijece as suas implantações](/actions/deployment/security-hardening-your-deployments)."

|
    - heading: Compartilhar o GitHub Actions dentro da sua empresa está em disponibilidade geral
      notes:
        # https://github.com/github/releases/issues/2085
        - |O suporte para o GitHub Actions em repositórios internos está em disponibilidade geral para organizações em sua instância do GitHub Enterprise Server. Você pode utilizar a automação do Innersource compartilhando ações em repositórios internos. Você pode gerenciar as configurações de um repositório ou usar a API REST para permitir o acesso a fluxos de trabalho em outros repositórios dentro da organização ou em qualquer organização na instância. Para obter mais informações, consulte "[Compartilhando ações e fluxos de trabalho com sua empresa](/actions/creating-actions/sharing-actions-and-workflows-with-your-enterprise)," "[Gerenciando as configurações do GitHub Actions para um repositório](/repositories/managing-your-repositorys-settings-and-features/enabling-features-for-your-repository/managing-github-actions-settings-for-a-repository#allowing-access-to-components-in-an-internal-repository)" e "[Permissões de ações](/rest/actions/permissions#get-the-level-of-access-for-workflows-outside-of-the-repository)" na documentação da API REST.

|
    - heading: O suporte de cache para o GitHub Actions no GitHub Enterprise agora está em disponibilidade geral
      notes:
        # https://github.com/github/releases/issues/2110
        - |Você agora pode usar o armazenamento em cache de dependência para acelerar seus fluxo de trabalho do GitHub Actions. Para armazenar em cache dependências para um trabalho, você pode incluir a ação [ações/cache](https://github.com/actions/cache) para criar um cache com uma chave exclusiva. Você pode compartilhar caches em todos os fluxos de trabalho no mesmo repositório. Esses fluxos de trabalho podem em seguida restaurar o cache e executar mais rapidamente.



Os usuários do Actions também podem usar nossas APIs de cache para:



- Definir a política da empresa para tamanho do cache permitido por repositório.

- Consultar o uso do cache dentro de cada repositório e monitorar se o tamanho total de todos os caches está atingindo o limite superior.

- Aumentar o tamanho máximo do cache para um repositório dentro dos limites empresariais permitidos, com base nos requisitos de cache do repositório.

- Monitorar o uso do cache agregado no nível da organização ou no nível empresarial.



O armazenamento de blob externo que está configurado dentro da conta da sua empresa agora será compartilhado em todos os artefatos de fluxo de trabalho, logs e também os caches. Para obter mais informações, consulte "[Armazenando em cache dependências para acelerar os fluxos de trabalho](/actions/using-workflows/caching-dependencies-to-speed-up-workflows)."

|
    - heading: Assinar confirmações automaticamente na interface do usuário da Web
      notes:
        # https://github.com/github/releases/issues/1963
        - |Agora você pode configurar o GitHub Enterprise Server para assinar confirmações automaticamente na interface da Web, como ao editar um arquivo o mesclar uma solicitação de pull. Confirmações assinadas aumentam a confiança de que as alterações vêm de fontes confiáveis. Este recurso permite que as configurações de proteção de ramificação [Exigir confirmações assinadas](/repositories/configuring-branches-and-merges-in-your-repository/defining-the-mergeability-of-pull-requests/about-protected-branches#require-signed-commits) bloqueie as confirmações não assinadas de entrar em um repositório, enquanto permite a entrada de confirmações assinadas, mesmo as feitas na interface da Web. Para obter mais informações, consulte "[Como configurar assinatura de confirmação da Web] (/admin/configuration/configuring-your-enterprise/configuring-web-commit-signing)."

|
    - heading: Sincronizar uso da licença a qualquer momento
      notes:
        # https://github.com/github/releases/issues/2201
        - |Para clientes que sincronizam o uso de licença entre o GitHub Enterprise Server e o GitHub Enterprise Cloud automaticamente usando o GitHub Connect, você agora tem a capacidade de sincronizar o uso de suas licenças de maneira independente da sincronização semanal automática. Esse recurso agora reporta o status do trabalho de sincronização. Para obter mais informações, consulte "[Sincronizando o uso de licença entre o GitHub Enterprise Server e o GitHub Enterprise Cloud](/billing/managing-your-license-for-github-enterprise/syncing-license-usage-between-github-enterprise-server-and-github-enterprise-cloud#manually-syncing-license-usage)."

|
    - heading: Os fluxos de trabalho reutilizáveis para GitHub Actions estão em disponibilidade geral
      notes:
        # https://github.com/github/releases/issues/1767
        # https://github.com/github/releases/issues/1950
        # https://github.com/github/releases/issues/2114
          - |Os fluxos de trabalho reutilizáveis estão agora em disponibilidade geral. O fluxos de trabalho reutilizáveis ajudam a reduzir a duplicação permitindo que você reutilize um fluxo de trabalho inteiro como se ele fosse uma ação. Com o lançamento da disponibilidade geral, um número de melhorias agora estão disponíveis para o GitHub Enterprise Server. Para obter mais informações, consulte "[Reutilizando fluxos de trabalho](/actions/using-workflows/reusing-workflows)."



- Você pode utilizar saídas para passar dados de fluxos de trabalho reutilizáveis para outros trabalhos no fluxo de trabalho do chamador.

- Você pode passar segredos de ambiente para fluxos de trabalho reutilizáveis.

- O log de auditoria inclui informações sobre quais fluxos de trabalho reutilizáveis são usados.

- Os fluxos de trabalho reutilizáveis no mesmo repositório que o repositório que está chamando podem ser referenciados com apenas o caminho e o nome de arquivo ("PATH/FILENAME"). O fluxo de trabalho chamaod será da mesma confirmação que o fluxo de trabalho do chamador.

|
    - heading: Executores auto-hospedados para o GitHub Actions agora podem desabilitar atualizações automáticas
      notes:
        # https://github.com/github/releases/issues/2014
        - |Agora você tem mais controle sobre quando seus executores auto-hospedados realizam atualização de software. Se você especificar o sinalizador "--disableupdate" para o executor, ele não tentará realizar uma atualização de software automática se uma versão mais nova do executor estiver disponível. Isso permite que você atualize o executor auto-hospedado quando desejar, e é especialmente conveniente se ele estiver em um contêiner.



 Para garantir a compatibilidade com o serviço do GitHub Actions, você precisará atualizar manualmente o executor dentro de 30 dias em que uma nova versão estiver disponível.  Para obter instruções sobre como instalar a versão mais recente do executor, consulte as instruções de instalação para [a versão mais recente no repositório do executor](https://github.com/actions/runner/releases).

|
    - heading: Proteja os executores auto-hospedados para GitHub Actions limitando fluxos de trabalho
      notes:
        # https://github.com/github/releases/issues/2013
        - |Os proprietários da organização agora podem aumentar a segurança de fluxos de trabalho de CI/CD em executores auto-hospedados escolhendo quais fluxos de trabalho podem acessar um grupo de executor. Anteriormente, qualquer fluxo de trabalho em um repositório, como um rotulador de problema, poderia acessar os executores auto-hospedados disponíveis para uma organização. Para obter mais informações, consulte "[Gerenciando o acesso a executores auto-hospedados usando grupos](/actions/hosting-your-own-runners/managing-access-to-self-hosted-runners-using-groups#changing-what-workflows-can-access-a-runner-group)" e o [Blog do GitHub](https://github.blog/2022-03-23-github-actions-secure-self-hosted-runners-specific-workflows/).

|
    - heading: Impedir o GitHub Actions de aprovar solicitações de pull
      notes:
        # https://github.com/github/releases/issues/1959
        - |Você agora pode controlar se o GitHub Actions pode aprovar solicitações de pull. Esse recurso impede que um usuário do GitHub Actions atenda ao requisito de proteção de ramificação "Aprovações obrigatórias" e mescle uma alteração que não foi revisada por outro usuário. Para não afetar fluxos de trabalho existentes, a opção **Permitir que as revisões do GitHub Actions contem com aprovações obrigatórias** está habilitada por padrão. Os proprietários da organização podem desabilitar o recurso nas configurações do GitHub Actions da organização. Para obter mais informações, consulte "[Desabilitar ou limitar o GitHub Actions na sua organização](/organizations/managing-organization-settings/disabling-or-limiting-github-actions-for-your-organization#preventing-github-actions-from-approving-pull-requests)."

|
    - heading: Executar novamente trabalhos com falha ou trabalhos individuais do GitHub Actions
      notes:
        # https://github.com/github/releases/issues/1503
        - |Você agora pode executar novamente apenas trabalhos com falha ou um trabalho individual em uma execução de fluxo de trabalho do GitHub Actions. Para obter mais informações, consulte "[Executar novamente um fluxo de trabalho](/actions/managing-workflow-runs/re-running-workflows-and-jobs)."

|
    - heading: O grafo de dependência dá suporte ao GitHub Actions
      notes:
        # https://github.com/github/releases/issues/1913
        - |O grafo de dependência agora detecta arquivos YAML para fluxos de trabalho do GitHub Actions. O GitHub Enterprise Server exibirá os arquivos do fluxo de trabalho dentro da seção do grafo de dependência da guia **Insights**. Os repositórios que publicam ações também poderão ver o número de repositórios que dependem dessa ação pelo controle "Usado por" na página inicial do repositório. Para obter mais informações, consulte "[Sobre o grafo de dependência](/code-security/supply-chain-security/understanding-your-software-supply-chain/about-the-dependency-graph)."

|
    - heading: Visão geral de segurança para empresas em beta público
      notes:
        # https://github.com/github/releases/issues/2040
        - |Os clientes da Segurança Avançada do GitHub agora podem exibir uma visão geral de alertas de segurança no nível empresarial. A nova guia **Segurança** no nível empresarial oferece uma visão centrada no repositório dos riscos de segurança do aplicativo, além de uma visão centrada em alertas de todos os alertas de verificação de segredos. Para obter mais informações, consulte "[Sobre a visão geral de segurança](/code-security/security-overview/about-the-security-overview)."

|
    - heading: A visão de segurança para organizações está em disponibilidade geral
      notes:
        # https://github.com/github/releases/issues/2096
        - |A visão geral dos alertas de segurança no nível da organização agora está em disponibilidade geral. Os clientes da Segurança Avançada do GitHub podem usar a visão geral de segurança para exibir uma visão centrada no repositório dos de segurança do aplicativos, ou uma visão centrada em alertas de toda a verificação de código, o Dependabot e os alertas de verificação de segredos para todos os repositórios em uma organização. Para obter mais informações, consulte "[Sobre a visão geral de segurança](/code-security/security-overview/about-the-security-overview)."

|
    - heading: "A verificação de código detecta mais problemas de segurança, dá suporte a novas versões de linguagem"
      notes:
        # https://github.com/github/releases/issues/2097
        - |A verificação de código agora detecta um número maior de CWEs e a verificação de código do CodeQL dá suporte completo aos recursos de linguagem padrão nas seguintes versões de linguagem.



- C# 10 / .NET 6

- Python 3.10

- Java 17

- TypeScript 4.5



Para obter mais informações, consulte o [Blog do GitHub](https://github.blog/changelog/2022-02-25-code-scanning-detects-more-security-issues-supports-new-language-versions/).

|
    - heading: Exibir alertas de verificação de código em toda a organização
      notes:
        # https://github.com/github/releases/issues/1792
        - |Os clientes de Segurança Avançada do GitHub agora podem exibir alertas de verificação de código na guia **Segurança** de uma organização. Esta exibição está disponível para proprietários de organizações e membros de equipes com a [função de gerente de segurança](/organizations/managing-peoples-access-to-your-organization-with-roles/managing-security-managers-in-your-organization). Para obter mais informações, consulte "[Sobre a visão geral de segurança](/code-security/security-overview/about-the-security-overview)."

|
        # https://github.com/github/releases/issues/1763
        - |Os usuários agora podem recuperar alertas de verificação de código para uma organização na sua instância do GitHub Enterprise Server pela API REST. Este novo ponto de extremidade de API suplementa o [ponto de extremidade para repositórios] existente(/rest/reference/code-scanning#list-code-scanning-alerts-for-a-repository). Para obter mais informações, consulte "[Verificação do código](/rest/code-scanning)" na documentação da API REST.

|
    - heading: Verificação de segredos disponível como uma proteção de push
      notes:
        # 
        - |O GitHub Enterprise Server agora pode bloquear os pushes em que um token é detectado com alta confiança. Os desenvolvedores podem ignorar o bloqueio fornecendo detalhes de por que o segredo precisa ser confirmado por uma interface do usuário da Web. Para obter mais informações, consulte "[Protegendo pushes com verificação de segredos](/code-security/secret-scanning/protecting-pushes-with-secret-scanning)."

|
    - heading: Simulações para padrões personalizados com verificação de segredos
      notes:
        # https://github.com/github/releases/issues/1703
        # https://github.com/github/releases/issues/2084
        - |Os clientes de Segurança Avançada do GitHub agora podem realizar simulações personalizadas de padrões de verificação de segredos na organização ou no nível do repositório. Simulações permitem que pessoas com acesso de proprietário ou administrador revisem e ajustem os padrões antes de publicá-los e gerar alertas. Você pode compor um padrão e, em seguida, usar **Salvar e realizar simulação** para recuperar resultados. As verificações normalmente levam apenas alguns segundos, mas o GitHub Enterprise Server também notificará os proprietários da organização ou administradores do repositório por email quando os resultados da simulação estiverem prontos. Para obter mais informações, consulte "[Sobre a verificação de segredos](/code-security/secret-scanning/about-secret-scanning#about-secret-scanning-for-private-repositories)" e "[Definindo padrões personalizados para verificação de segredos](/code-security/secret-scanning/defining-custom-patterns-for-secret-scanning)."

|
    - heading: Os eventos de padrão personalizado de verificação de segredos agora no log de auditoria
      notes:
        # https://github.com/github/releases/issues/2154
        - |O log de auditoria agora inclui eventos associados aos padrões personalizados de verificação de segredos. Esses dados ajudam os clientes da Segurança Avançada do GitHub a entenderem as ações realizadas nos padrões personalizados do nível do seu [repositório](/organizations/keeping-your-organization-secure/managing-security-settings-for-your-organization/reviewing-the-audit-log-for-your-organization#repository_secret_scanning_custom_pattern-category-actions)-, [organização](/organizations/keeping-your-organization-secure/managing-security-settings-for-your-organization/reviewing-the-audit-log-for-your-organization#org_secret_scanning_custom_pattern-category-actions)- ou [empresa](/admin/monitoring-activity-in-your-enterprise/reviewing-audit-logs-for-your-enterprise/audit-log-events-for-your-enterprise#business_secret_scanning_custom_pattern-category-actions) para auditorias de segurança e conformidade. Para ver mais informações, confira "[Como examinar o log de auditoria da sua organização](/organizations/keeping-your-organization-secure/managing-security-settings-for-your-organization/reviewing-the-audit-log-for-your-organization)" ou "[Examinando logs de auditoria para sua empresa](/admin/monitoring-activity-in-your-enterprise/reviewing-audit-logs-for-your-enterprise)."

|
    - heading: Configurar permissões para verificação de segredos com funções de repositório personalizado
      notes:
        # https://github.com/github/releases/issues/1909
        - |Você agora pode configurar duas novas permissões para verificação de segredos ao gerenciar funções de repositório personalizadas.



- Exibir resultados de verificação de segredos

- Ignorar ou reabrir resultados de verificação de segredos



Para obter mais informações, consulte "[Gerenciando as funções de repositórios personalizados para uma organização](/organizations/managing-peoples-access-to-your-organization-with-roles/managing-custom-repository-roles-for-an-organization)."

|
    - heading: A verificação de segredos agora dá suporte a repositórios arquivados
      notes:
        # https://github.com/github/releases/issues/2076
        - |Os clientes da Segurança Avançada do GitHub agora podem habilitar a verificação de segredos para repositórios arquivados por meio da interface do usuário e da API. Para obter mais informação, consulte "[Sobre verificação de segredos](/code-security/secret-scanning/about-secret-scanning#about-secret-scanning-for-private-repositories)," "[Sobre repositórios arquivados](/repositories/archiving-a-github-repository/archiving-repositories)" e "[Repositórios](/rest/repos/repos#update-a-repository)" na documentação da API REST.

|
    - heading: Webhooks de verificação de segredos para localização de alertas
      notes:
        # https://github.com/github/releases/issues/2149
        - |Os clientes da Segurança Avançada do GitHub que usam verificação de segredos agora podem optar por receber um webhook cada vez que um segredo for detectado em uma nova localização. O evento de webhook "secret_scanning_alert_location" inclui detalhes de localização, como SHA de confirmação e o alerta associado para a detecção. Uma localização é criada para cada novo caminho de arquivo que contém o segredo detectado. Para obter mais informações, consulte "[Eventos de e cargas Webhooks](/developers/Webhooks-and-events/Webhooks/Webhook-events-and-payloads#code_scanning_alert)."

|
    - heading: Exibir alertas do Dependabot em toda a organização
      notes:
        # https://github.com/github/releases/issues/1992
        - |Os clientes de Segurança Avançada do GitHub agora podem exibir alertas do Dependabot na guia **Segurança** de uma organização. Esta exibição está disponível para proprietários de organizações e membros de equipes com a [função de gerente de segurança](/organizations/managing-peoples-access-to-your-organization-with-roles/managing-security-managers-in-your-organization). Para obter mais informações, consulte "[Sobre a visão geral de segurança](/code-security/security-overview/about-the-security-overview)."

|
    - heading: Configurar permissões para alertas do Dependabot com funções de repositório personalizado
      notes:
        # https://github.com/github/releases/issues/1958
        - |Você agora pode configurar duas novas permissões para alertas do Dependabot ao gerenciar funções de repositório personalizadas.



- Exibir alertas do Dependabot

- Ignorar ou reabrir alertas do Dependabot



Para obter mais informações, consulte "[Gerenciando as funções de repositórios personalizados para uma organização](/organizations/managing-peoples-access-to-your-organization-with-roles/managing-custom-repository-roles-for-an-organization)."

|
    - heading: Reabrir alertas ignorados do Dependabot
      notes:
        # https://github.com/github/releases/issues/1923
        - |Você agora pode reabrir alertas ignorados do Dependabot por meio da página da interface do usuário para um alerta fechado. Isso não afeta solicitações de pull do Dependabot ou a API do GraphQL. Para ver mais informações, confira "[Sobre os alertas do Dependabot](/code-security/dependabot/dependabot-alerts/about-dependabot-alerts)."

|
    - heading: O suporte ao Pub para as atualizações de versão do Dependabot está em beta público
      notes:
        # https://github.com/github/releases/issues/2086
        - |Os usuários de atualizações de versão do Dependabot agora podem atualizar de maneira proativa dependências para projetos do Flutter ou Dart que usam o gerenciador de pacotes do Pub.  



Para testar [atualizações de versão](/code-security/dependabot/dependabot-version-updates/about-dependabot-version-updates) e seu próprio repositório do Dart ou Flutter, adicione o seguinte arquivo de configuração no <código>[.github/dependabot.yaml](/code-security/dependabot/dependabot-version-updates/configuring-dependabot-version-updates#enabling-dependabot-version-updates)</code>. Observe os sinalizadores `package-ecosystem: "pub"` e `enable-beta-ecosystems: true`.

```yaml

version: 2

enable-beta-ecosystems: true

updates:

  - package-ecosystem: "pub"

    directory: "/"

    schedule:

      interval: "weekly"

```

|
    - heading: Consulte a solicitação de pull associada a alertas do Dependabot de um repositório via API do GraphQL
      notes:
        # https://github.com/github/releases/issues/2088
        - |O novo objeto GraphQL "DependabotUpdate" permite exibir informações sobre o que acontece as atualizações de segurança de seu repositório. Quando o GitHub Enterprise Server detecta que uma dependência em seu repositório está vulnerável, o Dependabot tentará abrir uma solicitação de pull para atualizar essa dependência para uma versão não-vulnerável. Você agora pode ver a solicitação de pull que corrige a vulnerabilidade. Em alguns casos, o Dependabot não consegue abrir uma solicitação de pull. Anteriormente, a mensagem de erro que o Dependabot gerava estava visível apenas na seção "Alertas do Dependabot" da guia **Segurança**. Agora, se o Dependabot recebe um erro ao tentar abrir uma solicitação de pull para um alerta de segurança, você pode determinar a razão usando a API do GraphQL. Para obter mais informações, consulte "[Objetos](/graphql/reference/objects#dependabotupdate)" na documentação da API do GraphQL.

|
    - heading: Acesse mais informações sobre os alertas do Dependabot via API do GraphQL
      notes:
        # https://github.com/github/releases/issues/1922
        - |Você agora pode exibir alertas corrigidos do Dependabot com a API do GraphQL. Você também pode acessar e filtrar por estado, além de por um identificador numérico exclusivo, e pode filtrar por estado no objeto de alerta de vulnerabilidade. Os campos a seguir agora existem para um "RepositoryVulnerabilityAlert".



- `number`

- `fixed_at`

- `fix_reason`

- `state`



Para obter mais informações, consulte "[Objetos](/graphql/reference/objects#repositoryvulnerabilityalert)" na documentação da API do GraphQL.

|
    - heading: Eventos Git no log de auditoria da empresa
      notes:
        # https://github.com/github/releases/issues/2205
        - |Os eventos relacionados ao Git a seguir agora podem aparecer no log de auditoria da empresa. Se você habilitar o recurso e definir um período de retenção do log de auditoria, os novos eventos estarão disponíveis para pesquisa por meio da interface de usuário e da API, ou exportação via JSON ou CSV.



- `git.clone`

- `git.fetch`

- `git.push`



Devido ao grande número de eventos Git registrados, recomendamos monitorar o armazenamento de arquivos da sua instância e examinar suas configurações de alerta relacionadas. Para obter mais informações, consulte "[Configurando o log de auditoria da sua empresa](/admin/monitoring-activity-in-your-enterprise/reviewing-audit-logs-for-your-enterprise/configuring-the-audit-log-for-your-enterprise#managing-git-events-in-the-audit-log)."

|
    - heading: Melhorias no CODEOWNERS
      notes:
        # https://github.com/github/releases/issues/1994
        - |Essa versão inclui melhorias ao CODEOWNERS.



- Erros de sintaxe agora aparecem ao exibir um arquivo do CODEOWNERS pela Web. Anteriormente, quando uma linha em um arquivo do CODEOWNERS tinha um erro de sintaxe, o erro seria ignorado ou, em alguns casos, determinar a falha de carregamento do arquivo do CODEOWNERS inteiro. Os aplicativos do GitHub e o Actions podem acessar a mesma lista de erros usando novas APIs REST e GraphQL. Para obter mais informações, consulte "[Repositórios](/rest/repos/repos#list-codeowners-errors)" na documentação da API REST ou "[Objetos](/graphql/reference/objects#repositorycodeowners)" na documentação da API do GraphQL.

- Depois que alguém cria uma nova solicitação de pull ou envia novas alterações para uma solicitação de pull de rascunho, qualquer proprietário de código que for chamado a fazer revisão será listado na solicitação de pull em "Revisores". Esse recurso dá a você uma visão prévia de quem será solicitado a revisar assim que a solicitação de pull for marcada como pronta para revisão.

- Os comentários nos arquivos CODEOWNERS agora podem aparecer no final de uma linha, não apenas em linhas dedicadas.



Para obter mais informações, consulte "[Sobre proprietários de código](/repositories/managing-your-repositorys-settings-and-features/customizing-your-repository/about-code-owners)."

|
    - heading: Mais maneiras de manter uma ramificação de tópido de uma solicitação de pull atualizada
      notes:
        # https://github.com/github/releases/issues/1566
        - |O botão **Atualizar ramificação** na página de solicitação de pull permite atualizar a ramificação da sua solicitação de pull com as alterações mais recentes da ramificação de base. Isso é útil para verificar se suas alterações estão compatíveis com a versão atual da ramificação de base antes de mesclar. Duas melhorias agora dão a você mais maneiras de manter sua ramificação atualizada.



- Quando a ramificação de tópico da sua solicitação de pull estiver desatualizada com a ramificação de base, você agora tem a opção de atualizá-la trocando a base na versão mais recente da ramificação de base. Trocar a base aplica as alterações da sua ramificação na versão mais recente da ramificação de base, resultando em uma ramificação com um histórico linear já que nenhuma confirmação de mesclagem foi criada. Para atualizar trocando a base, clique no menu suspenso ao lado do botão **Atualizar ramificação**, clique em **Atualizar com troca de base** e clique em **Trocar base da ramificação**. Anteriormente, **Atualizar ramificação** realizava uma mesclagem tradicional que sempre resultava em uma confirmação de mesclagem em sua ramificação de solicitação de pull. Essa opção ainda está disponível, mas agora você tem a escolha. Para obter mais informações, consulte "[Mantendo a sua solicitação de pull em sincronia com a ramificação de base](/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/keeping-your-pull-request-in-sync-with-the-base-branch)."



- Uma nova configuração de repositório permite que o botão **Atualizar ramificação** esteja sempre disponível quando uma ramificação de tópico de uma solicitação de pull não estiver atualizada com a ramificação de base. Anteriormente, este botão só estava disponível quando a configuração de proteção de ramificação **Exigir que as ramificações estejam atualizadas antes de mesclar** estava habilitada. As pessoas com acesso de administrador ou função de manutenção podem gerenciar a configuração **Sempre sugerir atualizar ramificações de solicitação de pull** da seção **Solicitações de pull** nas configurações de repositório. Para obter mais informações, consulte "[Gerenciando sugestões para atualizar ramificações de solicitação de pull](/repositories/configuring-branches-and-merges-in-your-repository/configuring-pull-request-merges/managing-suggestions-to-update-pull-request-branches)."

|
    - heading: Configurar cabeçalhos de HTTP personalizados para sites de páginas do GitHub
      notes: 
        # https://github.com/github/releases/issues/2124
        - |Você agora pode configurar cabeçalhos de HTTP personalizados que se aplicam a todos os sites de páginas do GitHub servidas de sua instância do GitHub Enterprise Server. Para obter mais informações, consulte "[Configurando páginas do GitHub para sua empresa](/admin/configuration/configuring-your-enterprise/configuring-github-pages-for-your-enterprise#configuring-github-pages-response-headers-for-your-enterprise)."

|
    - heading: Ignorar as confirmações na exibição de blame
      notes:
        # https://github.com/github/releases/issues/2090
        - |Agora é possível ignorar revisões na exibição de blame criando um arquivo _.git-blame-ignore-revs_ na raiz do seu repositório. Para obter mais informações, consulte "[Exibindo um arquivo](/repositories/working-with-files/using-files/viewing-a-file#ignore-commits-in-the-blame-view)."

|
    - heading: O tema claro de alto contraste está em disponibilidade geral
      notes:
        # https://github.com/github/releases/issues/2011
        - |Um tema claro de alto contraste, com maior contraste entre os elementos de primeiro plano e de fundo, agora está em disponibilidade geral. Para ver mais informações, confira "[Como gerenciar suas configurações de tema](/account-and-profile/setting-up-and-managing-your-github-user-account/managing-user-account-settings/managing-your-theme-settings)."

|
    - heading: Regras de proteção para tags
      notes:
        # https://github.com/github/releases/issues/1793
        - |Os proprietários de repositório agora podem configurar regras de proteção de marcação para proteger as marcações de um repositório. Assim que estiverem protegidas por uma regra de proteção de marcação, as marcações correspondentes a um padrão de nome especificado podem somente ser criadas e excluídas por usuários com a função de manutenção ou administrador no repositório. Para obter mais informações, consulte "[Configurando as regras de proteção de tags](/repositories/managing-your-repositorys-settings-and-features/managing-repository-settings/configuring-tag-protection-rules)."

|
  bugs:
    # https://github.com/github/releases/issues/1934
    - |Agora é possível para os aplicativos do GitHub carregarem ativos de versão.

|
  changes:
    # https://github.com/github/releases/issues/2063
    - |Para usar o fluxo de autorização de dispositivo para OAuth e aplicativos do GitHub, você deverá habilitar manualmente o recurso. Essa alteração reduz a probabilidade de aplicativos serem usados em ataques de phishing contra usuários do GitHub Enterprise Server garantindo que os integradores estejam cientes dos riscos e façam uma escolha consciente de dar suporte a essa forma de autenticação. Se você for proprietário de ou gerenciar um aplicativo OAuth ou GitHub e quiser usar o fluxo de dispositivo, você poderá habilitá-lo para seu aplicativo por meio da página de configurações do aplicativo. Os pontos de extremidade da API do fluxo de dispositivo responderão com o código de status "400" para aplicativos que não habilitaram este recurso. Para obter mais informações, consulte "[Autorizando aplicativos OAuth](/developers/apps/building-oauth-apps/authorizing-oauth-apps#device-flow)."

|
    # https://github.com/github/releases/issues/2049
    - |A página de alerta da verificação de código agora sempre mostra o status de alerta e as informações para a ramificação padrão. Há um novo painel "Ramificações afetadas" na barra lateral onde se pode ver o status do alerta em outras ramificações. Se o alerta não existir em sua ramificação padrão, a página de alerta mostrará o status como "Em ramificação" ou "Em solicitação de pull" para a localização em que o alerta foi visto pela última vez. Essa melhoria facilita o entendimento do status de alertas que foram introduzidos em sua base de código. Para obter mais informações, consulte "[Sobre aletas de verificação de código](/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/about-code-scanning-alerts#about-alert-details)."



A página da lista de alertas não foi alterada e pode ser filtrada por "branch". Você pode usar a API de verificação de código para recuperar mais informações detalhadas de ramificação para alertas. Para obter mais informações, consulte "[Verificação do código](/rest/code-scanning)" na documentação da API REST.

|
    # https://github.com/github/releases/issues/2050
    - |A verificação de código agora mostra os detalhes da origem da análise de um alerta. Se um alerta tiver masi de uma origem da análise, ele será mostrado na barra lateral "Ramificações afetadas" e na linha do tempo de alertas. Você pode passar o mouse sobre o ícone de origem da análise na barra lateral "Ramificações afetadas" para ver o status de alerta em cada origem da análise. Se um alerta tiver apenas uma única origem de análise, nenhuma informação sobre as origens de análise será exibida na página de alertas. Essas melhorias facilitarão o entendimento de seus alertas. Em específico, elas ajudarão a compreender os que têm várias origens de análise. Isso é especialmente útil para instalações com várias configurações de análise, como monorepos. Para obter mais informações, consulte "[Sobre alertas de verificação de código](/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/about-code-scanning-alerts#about-analysis-origins)."

|
    # https://github.com/github/releases/issues/2071
    - |Listas de repositórios de propriedade de um usuário ou organização agora têm uma opção adicional de filtro, "Modelos", facilitando o encontro de repositórios de modelos.

|
    # https://github.com/github/releases/issues/1947
    - |O GitHub Enterprise Server pode exibir vários formatos de imagens comuns, incluindo PNG, JPG, GIF, PSD e SVG, e fornece várias maneiras de comparar diferenças entre versões. Agora, ao analisar imagens adicionadas ou alteradas em uma solicitação de pull, as visualizações dessas imagens são mostradas por padrão. Anteriormente, você via uma mensagem indicando que os arquivos binários não poderiam ser mostrados e você precisaria alternar a opção "Exibir diff avançado". Para obter mais informações, consulte "[Trabalhando com arquivos sem código](/repositories/working-with-files/using-files/working-with-non-code-files)."

|
    # https://github.com/github/releases/issues/2054
    - |Novos gists agora são criados com um nome de ramificação padrão de "main" ou o nome alternativo da ramificação padrão definido nas suas configurações de usuário. Isso corresponde ao modo como outros repositórios são criados no GitHub Enterprise Server. Para obter mais informações, consulte "[Sobre ramificações](/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-branches#about-the-default-branch)" e "[Gerenciando o nome da ramificação padrão para seus repositórios](/account-and-profile/setting-up-and-managing-your-personal-account-on-github/managing-personal-account-settings/managing-the-default-branch-name-for-your-repositories)."

|
    # https://github.com/github/releases/issues/2028
    - |Gists agora somente mostram os 30 comentários mais recentes quando são exibidos primeiro. Você pode clicar em **Carregar comentários anteriores...** para exibir mais. Isso permite que os gists tenham muitos comentários que apareçam mais rapidamente. Para obter mais informações, consulte "[Editando e compartilhando conteúdo com gists](/get-started/writing-on-github/editing-and-sharing-content-with-gists)."

|
    # https://github.com/github/releases/issues/2036
    - |As páginas de configuração para usuários, organizações, repositórios e equipes foram reformuladas, agrupando páginas de configurações semelhantes em seções para melhorar a arquitetura de informações e a descoberta. Para obter mais informações, consulte o [log de alterações do GitHub](https://github.blog/changelog/2022-02-02-redesign-of-githubs-settings-pages/). 

|
    # https://github.com/github/releases/issues/2129
    - |Aumentar o foco ou passar o mouse sobre um rótulo agora exibe a descrição do rótulo em uma dica de ferramenta.

|
    # https://github.com/github/releases/issues/1983
    - |Criar e remover convites de repositório, seja por meio da API ou interface da Web, agora estão sujeitos a limites de taxa que podem ser habilitados em sua instância do GitHub Enterprise Server. Para ter mais informações sobre limites de taxa, consulte "[Configurando limites de taxa](/admin/configuration/configuring-your-enterprise/configuring-rate-limits)."

|
    # https://github.com/github/releases/issues/2291
    - |O MinIO anunciou a remoção dos Gateways do MinIO a partir de primeiro de junho de 2022. Embora o Gateway do MinIO para NAS continue a ser um dos provedores de armazenamento com suporte para Github Actions e Github Packages, recomendamos passar para o suporte do MinIO LTS para garantir o suporte e correções de bugs do MinIO. Para saber mais sobre limites de taxa, confira a [Remoção agendada do Gateway do MinIO para GCS, Azure, HDFS no repositório minio/minio] (https://github.com/minio/minio/issues/14331)."

|
  deprecations:
    - heading: A alteração para o formato de tokens de autenticação
      notes:
        # https://github.com/github/releases/issues/1235
        - |Após 3 de junho, o GitHub Connect não funcionará mais nas instâncias que executam o GitHub Enterprise Server 3.1 ou versões anteriores devido à alteração no formato dos tokens de autenticação do GitHub. Para obter mais informações, consulte o [log de alterações do GitHub](https://github.blog/changelog/2021-03-31-authentication-token-format-updates-are-generally-available/).

|
    - heading: O executor do CodeQL foi preterido em favor do CLI do CodeQL
      notes:
        # https://github.com/github/releases/issues/1632
        - |O executor do CodeQL foi preterido em favor do CLI do CodeQL. O GitHub Enterprise Server 3.4 e posterior não incluem mais o executor do CodeQL. Essa modificação apenas afeta quem usa a verificação de código do CodeQL em sistemas de CI/CD de terceiros. Os usuários do GitHub Actions não são afetados. O GitHub recomenda que os clientes migrem para o CLI do CodeQL, que é uma substituição de recursos completos para o executor do CodeQL e tem muitos recursos adicionais. Para obter mais informações, consulte "[Migrando do executor do CodeQL para a CLI do CodeQL](/code-security/code-scanning/using-codeql-code-scanning-with-your-existing-ci-system/migrating-from-the-codeql-runner-to-codeql-cli)."

|
    - heading: O seletor de temas para o GitHub Pages foi removido
      notes:
        - |O seletor de temas para o GitHub Pages foi removido das Configurações de páginas. Para obter mais informações sobre a configuração de temas para GitHub Pages, consulte "[Como adicionar um tempo ao seu site do GitHub Pages usando Jekyll](/pages/setting-up-a-github-pages-site-with-jekyll/adding-a-theme-to-your-github-pages-site-using-jekyll)."

|
  known_issues:
      - "Em uma instância de {% data variables.product.prodname_ghe_server %} recém-configurada sem usuários, um invasor pode criar o primeiro usuário administrador."
      - As regras de firewall personalizadas são removidas durante o processo de atualização.
      - "Arquivos LFS do Git [enviados através da interface Web](https://github.com/blog/2105-upload-files-to-your-repositories) são adicionados diretamente ao repositório e de maneira incorreta."
      - "Os problemas não podem ser fechados se contiverem um permalink para um blob no mesmo repositório, em que o caminho do arquivo blob's é maior que 255 caracteres."
      - "Quando \"Usuários podem pesquisar pelo GitHub.com\" está habilitado com o GitHub Connect, os problemas em repositórios privados e internos não estão incluídos nos resultados de pesquisa do GitHub.com."
      - "O registro npm {% data variables.product.prodname_registry %} não retorna mais um valor temporal em respostas de metadados. Isso foi feito para permitir melhorias substanciais de desempenho. Continuamos a ter todos os dados necessários para retornar um valor temporal como parte da resposta de metadados e continuaremos a retornar este valor no futuro quando tivermos resolvido os problemas de desempenho existentes."
      - Os limites de recursos que são específicos para processamento de hooks pre-receive podem causar falha em alguns hooks pre-receive.
      - Os serviços de ação devem ser reiniciados após a restauração de um dispositivo a partir do backup tomado em um host diferente.
