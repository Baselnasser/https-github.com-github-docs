date: '2022 年 2 月 15 日'
release_candidate: true
deprecated: true
intro: |
  {% note %}
  
  注意：如果 {% data variables.product.product_location %} 正在运行候选发布版本，则无法使用热补丁升级****。建议仅在测试环境中运行候选发布版本。
  
  {% endnote %}
  
  有关升级说明，请参阅“[升级 {% data variables.product.prodname_ghe_server %}](/admin/enterprise-management/updating-the-virtual-machine-and-physical-resources/upgrading-github-enterprise-server)”。
  
  > 此版本献给我们的同事兼朋友 John，一位一直在帮助我们的 Hubber。我们非常想念你。
  >
  > John "Ralph" Wiebalk 1986–2021****
sections:
  features:
    - heading: 机密扫描 REST API 现在会返回位置
      notes:
        # https://github.com/github/releases/issues/1642
        - |{% data variables.product.prodname_GH_advanced_security %} 客户现可使用 REST API 检索在专用存储库扫描中检测到的机密的提交详细信息。新终结点返回文件中首次检测到机密的详细信息，包括机密的位置和提交 SHA。有关详细信息，请参阅 REST API 文档中的“[机密扫描](/rest/reference/secret-scanning)”。

|
    - heading: 导出 GitHub 高级安全性计费（基于提交者）许可证数据
      notes:
        # https://github.com/github/releases/issues/1757
        - |企业和组织所有者现可将其 {% data variables.product.prodname_GH_advanced_security %} 许可证使用情况数据导出到 CSV 文件。还可通过 REST API 中的计费终结点检索 {% data variables.product.prodname_advanced_security %} 计费数据。有关详细信息，请参阅“[{% data variables.product.prodname_dotcom %} changelog](https://github.blog/changelog/2021-11-11-export-github-advanced-security-license-usage-data/)”。

|
    - heading: GitHub Actions 可重用工作流（公共 Beta 版本）
      notes:
        # https://github.com/github/releases/issues/1541
        - |现可重用整个工作流，就像它们是一个操作一样。此功能目前以公共 Beta 版本提供。现可使用一行配置来引用现有工作流，而不必跨存储库复制和粘贴工作流定义。有关详细信息，请参阅“[{% data variables.product.prodname_dotcom %} changelog](https://github.blog/changelog/2021-10-05-github-actions-dry-your-github-actions-configuration-by-reusing-workflows/)”。

|
    - heading: Dependabot 安全性和版本更新（公共 Beta 版本）
      notes:
        # https://github.com/github/releases/issues/2004
        - |{% data variables.product.prodname_dependabot %} 现已在 {% data variables.product.prodname_ghe_server %} 3.4 中作为公共 Beta 版本提供，并为多个常见的生态系统提供版本更新和安全更新。{% data variables.product.prodname_ghe_server %} 上的 {% data variables.product.prodname_dependabot %} 需要配置 {% data variables.product.prodname_actions %} 和自承载运行器池，供 {% data variables.product.prodname_dependabot %} 使用。{% data variables.product.prodname_ghe_server %} 上的 {% data variables.product.prodname_dependabot %} 还需要管理员启用 {% data variables.product.prodname_github_connect %} 和 {% data variables.product.prodname_dependabot %}。Beta 版本的反馈和建议可以在 [{% data variables.product.prodname_dependabot %} 反馈 GitHub 讨论](https://github.com/community/community/discussions/categories/dependabot)中共享。如需了解详细信息并试用 Beta 版本，请参阅“[在企业中设置 {% data variables.product.prodname_dependabot %} 安全性和版本更新](/admin/github-actions/enabling-github-actions-for-github-enterprise-server/setting-up-dependabot-updates)”。

|
  changes:
    - heading: 管理更改
      notes:
        # https://github.com/github/releases/issues/1657
        - 用户现可选择一个制表符等于的空格数，方法是在其用户帐户的“外观”设置中设置其首选制表符大小。所有带制表符缩进的代码都将使用首选制表符大小呈现。

        # https://github.com/github/releases/issues/2062
        - "{% data variables.product.prodname_github_connect %} 数据连接记录现在包括活动和休眠用户数量计数以及配置的休眠期。"

    - heading: 性能更改
      notes:
      # https://github.com/github/releases/issues/2031
      - "用于保护高可用性配置中 {% data variables.product.prodname_ghe_server %} 实例之间通信的 WireGuard 已迁移到内核实现。"

    - heading: 通知更改
      notes:
      # https://github.com/github/releases/issues/1801
      - "组织所有者现可在将新的部署密钥添加到属于其组织的存储库时取消订阅电子邮件通知。有关详细信息，请参阅“[配置通知](/account-and-profile/managing-subscriptions-and-notifications-on-github/setting-up-notifications/configuring-notifications)”。"

      # https://github.com/github/releases/issues/1714
      - '来自新创建的问题和拉取请求的通知电子邮件目前在电子邮件主题中包含 `(Issue #xx)` 或 `(PR #xx)`，因此你可以识别和筛选引用这些问题类型的电子邮件。'

    - heading: 组织更改
      notes:
        # https://github.com/github/releases/issues/1509
        - "组织现可在其配置文件概述中显示 `README.md` 文件。有关详细信息，请参阅“[{% data variables.product.prodname_dotcom %} changelog](https://github.blog/changelog/2021-09-14-readmes-for-organization-profiles/)”。"

        # https://github.com/github/releases/issues/1883
        - "组织成员现可在组织的“人员”选项卡下查看其企业所有者的列表。企业所有者列表现在也可使用 GraphQL API 进行访问。有关详细信息，请参阅 GraphQL API 文档中 Organization 对象下的“[`enterpriseOwners`](/graphql/reference/objects#organization)”字段。"

    - heading: 存储库更改
      notes:
        # https://github.com/github/releases/issues/1944
        - |“管理访问权限”部分现在显示在存储库设置的“协作者和团队”页上。新部分使存储库管理员能够更轻松地查看和管理谁有权访问其存储库，以及授予每个用户的访问权限级别。管理员现在可以：



* 搜索有权访问存储库的所有成员、团队和协作者。

* 查看成员何时具有以个人身份直接授予或通过团队间接授予他们的混合角色分配。此信息通过新的“混合角色”警告直观呈现，如果用户的权限级别高于其分配到的角色，则该警告会显示授予用户的最高级别角色。

* 可靠地管理对常用存储库的访问，当大量用户具有访问权限时，可使用页面分页功能且超时更少。

|
        # https://github.com/github/releases/issues/1748
        - '{% data variables.product.prodname_ghe_server %} 3.4 包括对存储库邀请体验的改进，例如专用存储库邀请通知、访问具有待处理邀请的专用存储库时的 UI 提示，以及具有待处理邀请时在公共存储库概述页面上显示的横幅。'

        # https://github.com/github/releases/issues/1739
        - "现可将单字符前缀用于自定义自动链接。自动链接前缀现在还允许使用`.`、`-`、`_`、`+`、`=`、`:`、`/`, 和 `#`字符以及字母数字。有关自定义自动链接的详细信息，请参阅“[配置自动链接以引用外部资源](/repositories/managing-your-repositorys-settings-and-features/managing-repository-settings/configuring-autolinks-to-reference-external-resources)”。"

        # https://github.com/github/releases/issues/1776
        - 存储库根目录中的 `CODE_OF_CONDUCT.md` 文件现在在存储库概述页上的“关于”边栏中突出显示。

    - heading: '版本更改'
      notes:
        # https://github.com/github/releases/issues/1723
        - '{% data variables.product.prodname_ghe_server %} 3.4 包括对版本 UI 的改进，例如自动生成的发行说明，其中会显示给定版本的所有拉取请求的摘要。有关详细信息，请参阅“[{% data variables.product.prodname_dotcom %} changelog](https://github.blog/changelog/2021-10-20-improvements-to-github-releases-generally-available/)”。'

        # https://github.com/github/releases/issues/1606
        - "发布版本后，头像列现在会显示在版本底部。将显示发行说明中提到的所有用户帐户的头像。有关详细信息，请参阅“[管理存储库中的发布](/repositories/releasing-projects-on-github/managing-releases-in-a-repository)”。"

    - heading: 'Markdown 更改'
      notes:
        # https://github.com/github/releases/issues/1779
        - "现可使用新的“辅助功能”设置页来管理键盘快捷方式。可以选择禁用仅使用单个字符的键盘快捷方式，如 <kbd>S</kbd>、<kbd>G</kbd>、<kbd>C</kbd> 和 <kbd>.</kbd>（句点键）。有关详细信息，请参阅“[{% data variables.product.prodname_dotcom %} changelog](https://github.blog/changelog/2021-11-16-managing-keyboard-shortcuts-using-accessibility-settings/)”。"

        # https://github.com/github/releases/issues/1727
        - "现可选择在启用了 Markdown 的字段（例如问题注释和拉取请求说明）中使用固定宽度的字体。有关详细信息，请参阅“[{% data variables.product.prodname_dotcom %} changelog](https://github.blog/changelog/2021-10-12-fixed-width-font-support-in-markdown-enabled-fields/)”。"

        # https://github.com/github/releases/issues/1761
        - "现可将 URL 粘贴到所选文本上，以快速创建 Markdown 链接。此更改适用于所有启用了 Markdown 的字段，例如问题注释和拉取请求说明。有关详细信息，请参阅“[{% data variables.product.prodname_dotcom %} changelog](https://github.blog/changelog/2021-11-10-linkify-selected-text-on-url-paste/)”。"

        # https://github.com/github/releases/issues/1758
        - "现可为图像 URL 附加主题上下文（例如 `#gh-dark-mode-only`），以定义如何向查看者显示 Markdown 图像。有关详细信息，请参阅“[{% data variables.product.prodname_dotcom %} changelog](https://github.blog/changelog/2021-11-24-specify-theme-context-for-images-in-markdown/)”。"

        # https://github.com/github/releases/issues/1686
        - "创建或编辑具有 Markdown (`.md`) 文件扩展名的 gist 文件时，现可使用“预览”或“预览更改”选项卡来显示文件内容的 Markdown 呈现。有关详细信息，请参阅“[{% data variables.product.prodname_dotcom %} changelog](https://github.blog/changelog/2021-11-17-preview-the-markdown-rendering-of-gists/)”。"

        # https://github.com/github/releases/issues/1754
        - "在问题、拉取请求和讨论中键入 {% data variables.product.prodname_dotcom %} 用户的名称时，@mention 建议器现在会将现有参与者排在其他 {% data variables.product.prodname_dotcom %} 用户之前，以便列出你更有可能查找的用户。"

        # https://github.com/github/releases/issues/1636
        - Markdown 文件、问题、拉取请求、讨论和注释中现在对从右向左书写的语言提供原生支持。

    - heading: '问题和拉取请求更改'
      notes:
        # https://github.com/github/releases/issues/1731
        - 现在为拉取请求的用户帐户保留用于隐藏拉取请求“文件已更改”选项卡中的空格更改的差异设置。如果离开页面，然后重新访问同一拉取请求的“文件已更改”选项卡，则会自动重新应用所选择的设置。

        # https://github.com/github/releases/issues/1663
        - "使用自动分配进行拉取请求代码评审时，现可独立于自动分配设置，选择仅通知请求的团队成员。在自动分配了许多用户但并非所有用户都需要通知的情况下，此设置很有用。有关详细信息，请参阅“[{% data variables.product.prodname_dotcom %} changelog](https://github.blog/changelog/2021-11-10-team-member-pull-request-review-notifications-can-be-configured-independently-of-auto-assignment/)”。"

    - heading: '分支更改'
      notes:
        # https://github.com/github/releases/issues/1526
        - "组织和存储库管理员现可触发 Webhook 来侦听对其存储库上的分支保护规则的更改。有关详细信息，请参阅 Webhook 事件和有效负载文档中的“[branch_protection_rule](/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#branch_protection_rule)”事件。"

        # https://github.com/github/releases/issues/1759
        - "配置受保护的分支时，现可强制要求由特定的 {% data variables.product.prodname_github_app %} 提供所需的状态检查。如果状态随后由其他应用程序提供，或者由用户通过提交状态提供，则会阻止合并。这样可确保所有更改都由预期的应用程序进行验证。有关详细信息，请参阅“[{% data variables.product.prodname_dotcom %} changelog](https://github.blog/changelog/2021-12-01-ensure-required-status-checks-provided-by-the-intended-app/)”。"

        # https://github.com/github/releases/issues/1911
        - "现在，只有具备管理员权限的用户才能重命名受保护的分支并修改分支保护规则。以前，除默认分支外，协作者可以重命名分支。因此，应用于该分支的任何非通配符分支保护规则也会被重命名。有关详细信息，请参阅“[重命名分支](/repositories/configuring-branches-and-merges-in-your-repository/managing-branches-in-your-repository/renaming-a-branch)”和“[管理分支保护规则](/repositories/configuring-branches-and-merges-in-your-repository/defining-the-mergeability-of-pull-requests/managing-a-branch-protection-rule)”。"

        # https://github.com/github/releases/issues/1845
        - "管理员现可只允许特定用户和团队绕过拉取请求要求。有关详细信息，请参阅“[{% data variables.product.prodname_dotcom %} changelog](https://github.blog/changelog/2021-11-19-allow-bypassing-required-pull-requests/)”。"

        # https://github.com/github/releases/issues/1850
        - "管理员现可只允许特定用户和团队强制推送到存储库。有关详细信息，请参阅“[{% data variables.product.prodname_dotcom %} changelog](https://github.blog/changelog/2021-12-21-specify-who-can-force-push-to-a-repository/)”。"

        # https://github.com/github/releases/issues/1796
        - "要求对受保护分支的所有更改使用拉取请求时，管理员现可选择是否还需要批准的评审。有关详细信息，请参阅“[{% data variables.product.prodname_dotcom %} changelog](https://github.blog/changelog/2021-11-10-require-pull-requests-without-requiring-reviews/)”。"

    - heading: 'GitHub Actions 更改'
      notes:
        # https://github.com/github/releases/issues/1906
        - '{% data variables.product.prodname_dependabot %} 针对 `create`、`deployment` 和 `deployment_status` 事件触发的 {% data variables.product.prodname_actions %} 工作流现在始终收到只读令牌，而没有机密。同样，{% data variables.product.prodname_dependabot %} 针对拉取请求上的 `pull_request_target` 事件触发的工作流（其中基 ref 由 {% data variables.product.prodname_dependabot %} 创建）现在始终收到只读令牌，而没有机密。这些更改旨在防止在特权工作流中执行潜在的恶意代码。有关详细信息，请参阅“[使用 {% data variables.product.prodname_actions %} 自动化 {% data variables.product.prodname_dependabot %}](/code-security/supply-chain-security/keeping-your-dependencies-updated-automatically/automating-dependabot-with-github-actions)”。'

        # https://github.com/github/releases/issues/1667
        - "在 {% data variables.product.prodname_dependabot %} 触发的 `push` 和 `pull_request` 事件上运行的工作流现在将遵循工作流中指定的权限，使你能够控制如何管理自动依赖项更新。默认令牌权限将保持只读。有关详细信息，请参阅“[{% data variables.product.prodname_dotcom %} changelog](https://github.blog/changelog/2021-10-06-github-actions-workflows-triggered-by-dependabot-prs-will-respect-permissions-key-in-workflows/)”。"

        # https://github.com/github/releases/issues/1668
        - '{% data variables.product.prodname_dependabot %} 触发的 {% data variables.product.prodname_actions %} 工作流现在将发送到 {% data variables.product.prodname_dependabot %} 机密。现可使用配置给 {% data variables.product.prodname_dependabot %} 使用的相同机密从 CI 中的专用包注册表拉取，这改进了 {% data variables.product.prodname_actions %} 和 {% data variables.product.prodname_dependabot %} 协同工作的方式。有关详细信息，请参阅“[使用 {% data variables.product.prodname_actions %} 自动化 {% data variables.product.prodname_dependabot %}](/code-security/supply-chain-security/keeping-your-dependencies-updated-automatically/automating-dependabot-with-github-actions)”。'

        # https://github.com/github/releases/issues/1615
        - "现可使用 UI 中新的“运行器”和“运行器组”页面管理运行器组并查看自承载运行器的状态。存储库或组织的“Actions 设置”页面现在会显示运行器的摘要视图，并使你能够深入了解特定运行器以对其进行编辑或查看当前可能正在运行的作业。有关详细信息，请参阅“[{% data variables.product.prodname_dotcom %} changelog](https://github.blog/changelog/2021-09-20-github-actions-experience-refresh-for-the-management-of-self-hosted-runners/)”。"

        # https://github.com/github/releases/issues/1785
        - 'Actions 作者现可通过[在操作的 `action.yml` 中将 `runs.using` 指定为 `node16`](/actions/creating-actions/metadata-syntax-for-github-actions#runs-for-javascript-actions)，从而在 Node.js 16 中运行其操作。这是对现有 Node.js 12 支持的补充；操作可以继续指定 `runs.using: node12` 使用 Node.js 12 运行时。'

        # https://github.com/github/releases/issues/1799
        - '对于手动触发的工作流，除了默认的 `string` 类型外，{% data variables.product.prodname_actions %} 现在还支持 `choice`、`boolean` 和 `environment` 输入类型。有关详细信息，请参阅“[`on.workflow_dispatch.inputs`](/actions/using-workflows/workflow-syntax-for-github-actions#onworkflow_dispatchinputs)”。'

        # https://github.com/github/releases/issues/1782
        - 用 YAML 编写的操作（也称为复合操作）现支持 `if` 条件。这使你可以阻止执行特定步骤，除非满足条件。与工作流中定义的步骤一样，你可以使用任何受支持的上下文和表达式来创建条件。

        # https://github.com/github/releases/issues/1919
        - "自承载运行器的搜索顺序行为现已更改，因此任何级别的第一个可用匹配运行器都将在所有情况下运行作业。这样可以更快地将作业发送给自承载运行器，特别是对于具有大量自承载运行器的组织和企业。以前，在运行需要自承载运行器的作业时，{% data variables.product.prodname_actions %} 将按该顺序在存储库、组织和企业中查找自承载运行器。"

        # https://github.com/github/releases/issues/1753
        - "现可使用 REST API 列出、添加和移除 {% data variables.product.prodname_actions %} 自承载运行器的运行器标签。若要详细了解如何在存储库、组织或企业级别使用新 API，请参阅 REST API 文档中的“[存储库](/rest/reference/actions#list-labels-for-a-self-hosted-runner-for-a-repository)”、“[组织](/rest/reference/actions#add-custom-labels-to-a-self-hosted-runner-for-an-organization)”和“[企业](/rest/reference/enterprise-admin#list-labels-for-a-self-hosted-runner-for-an-enterprise)”。"

    - heading: 'Dependabot 和依赖项关系图更改'
      notes:
        # https://github.com/github/releases/issues/1520
        - 依赖项关系图现支持在使用 Poetry 包管理器的存储库中检测 Python 依赖项。将从 `pyproject.toml` 和 `poetry.lock` 清单文件中检测依赖项。

        # https://github.com/github/releases/issues/1921
        - "在 GitHub Enterprise Server 上配置 {% data variables.product.prodname_dependabot %} 安全性和版本更新时，还建议在 {% data variables.product.prodname_github_connect %} 中启用 {% data variables.product.prodname_dependabot %}。这样，{% data variables.product.prodname_dependabot %} 便可通过查询你依赖的开放源代码公开版本的变更日志等信息，从 {% data variables.product.prodname_dotcom_the_website %} 检索更新的依赖项和漏洞列表。有关详细信息，请参阅“[为企业启用依赖项关系图和 Dependabot 警报](/admin/configuration/configuring-github-connect/enabling-the-dependency-graph-and-dependabot-alerts-for-your-enterprise)”。"

        # https://github.com/github/releases/issues/1717
        - '现可使用 GraphQL API 消除 {% data variables.product.prodname_dependabot_alerts %} 警报。有关详细信息，请参阅 GraphQL API 文档中的“[dismissRepositoryVulnerabilityAlert](/graphql/reference/mutations#dismissrepositoryvulnerabilityalert)”变更。'

    - heading: '代码扫描和机密扫描更改'
      notes:
        # https://github.com/github/releases/issues/1802
        - "{% data variables.product.prodname_codeql %} CLI 现支持在 SARIF 文件中包括 Markdown 呈现的查询帮助，以便在查询生成警报时，可以在 {% data variables.product.prodname_code_scanning %} UI 中查看帮助文本。有关详细信息，请参阅“[{% data variables.product.prodname_dotcom %} changelog](https://github.blog/changelog/2021-11-23-display-help-text-for-your-custom-codeql-queries-in-code-scanning/)”。"

        # https://github.com/github/releases/issues/1790
        - "{% data variables.product.prodname_codeql %} CLI 和 {% data variables.product.prodname_vscode %} 扩展现支持在由 Apple Silicon 提供支持的计算机（如 Apple M1）上构建数据库和分析代码。有关详细信息，请参阅“[{% data variables.product.prodname_dotcom %} changelog](https://github.blog/changelog/2021-11-10-codeql-now-supports-apple-silicon-m1/)”。"

        # https://github.com/github/releases/issues/1732
        - |通过添加对 Python 生态系统中更多[库和框架](https://codeql.github.com/docs/codeql-overview/supported-languages-and-frameworks/)的支持，{% data variables.product.prodname_codeql %} 的分析深度得到了改进。因此，{% data variables.product.prodname_codeql %} 现可检测更多不受信任的用户数据的潜在来源、数据流经的步骤以及数据可能最终到达的潜在危险接收器。这使得 {% data variables.product.prodname_code_scanning %} 警报的质量得到了全面的提高。有关详细信息，请参阅“[{% data variables.product.prodname_dotcom %} changelog](https://github.blog/changelog/2021-11-24-codeql-code-scanning-now-recognizes-more-python-libraries-and-frameworks/)”。

|
        # https://github.com/github/releases/issues/1567
        - "{% data variables.product.prodname_codeql %} 代码扫描现支持对所有常见的 Ruby 3.02 及以下版本中的代码进行分析（Beta 版本）。有关详细信息，请参阅“[{% data variables.product.prodname_dotcom %} changelog](https://github.blog/changelog/2021-10-27-codeql-code-scanning-adds-beta-support-for-ruby/)”。"

        # https://github.com/github/releases/issues/1764
        - |对 {% data variables.product.prodname_code_scanning %} API 进行了多项改进：



* `fixed_at` 时间戳已添加到警报中。此时间戳是首次在分析中未检测到警报的时间。

* 现可使用 `created`、`updated` 或 `number` 上的 `sort` 和 `direction` 对警报结果进行排序。有关详细信息，请参阅“[列出存储库的代码扫描警报](/rest/reference/code-scanning#list-code-scanning-alerts-for-a-repository)”。

* `Last-Modified` 标头已添加到警报和警报终结点响应中。有关详细信息，请参阅 Mozilla 文档中的 [`Last-Modified`](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Last-Modified)。

* 请求代码扫描分析时，`relatedLocations` 字段已添加到 SARIF 响应中。该字段可能包含不是警报主要位置的位置。请参阅 [SARIF 规范](https://docs.oasis-open.org/sarif/sarif/v2.1.0/cs01/sarif-v2.1.0-cs01.html#_Toc16012616)中的示例，有关详细信息，请参阅“[获取存储库的代码扫描分析](/rest/reference/code-scanning#get-a-code-scanning-analysis-for-a-repository)”。

* `help` 和 `tags` 数据均已添加到 Webhook 响应警报规则对象中。有关详细信息，请参阅“[代码扫描警报 Webhook 事件和有效负载](/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#code_scanning_alert)”。

* 如果用户具有权限，则具有 `public_repo` 范围的个人访问令牌现在对公共存储库上的代码扫描终结点具有写入权限。



有关详细信息，请参阅 REST API 文档中的“[代码扫描](/rest/reference/code-scanning)”。

|
        # https://github.com/github/releases/issues/1943
        - '{% data variables.product.prodname_GH_advanced_security %} 客户现可使用 REST API 在企业级别检索专用存储库机密扫描结果。新终结点是对现有存储库级别和组织级别终结点的补充。有关详细信息，请参阅 REST API 文档中的“[机密扫描](/rest/reference/secret-scanning)”。'

  # No security/bug fixes for the RC release
  # security_fixes:
  #   - PLACEHOLDER

  # bugs:
  #   - PLACEHOLDER

  known_issues:
    - "在没有任何用户的新建 {% data variables.product.prodname_ghe_server %} 实例上，攻击者可以创建第一个管理员用户。"
    - 自定义防火墙规则在升级过程中被移除。
    - "Git LFS 跟踪的[通过 Web 界面上传的](https://github.com/blog/2105-upload-files-to-your-repositories)文件被错误地直接添加到存储库。"
    - 如果问题包含同一存储库中文件路径长于 255 个字符的 blob 的永久链接，则无法关闭。
    - 在 GitHub Connect 中启用了“用户可以搜索 GitHub.com”时，专用和内部存储库中的问题不包括在 GitHub.com 搜索结果中。
    - "{% data variables.product.prodname_registry %} npm 注册表在元数据响应中不再返回时间值。这样做是为了大幅改善性能。我们继续拥有将时间值作为元数据响应的一部分返回所需的所有数据，并将在以后解决现有性能问题后恢复返回该值。"
    - 特定于处理预接收挂钩的资源限制可能会导致某些预接收挂钩失败。
    - 从不同主机上的备份恢复设备后，需要重启 Actions 服务。

  deprecations:
    - heading: 弃用 GitHub Enterprise Server 3.0
      notes:
        - '**{% data variables.product.prodname_ghe_server %} 3.0 已于 2022 年 2 月 16 日停用**。这意味着，在此日期之后，即使针对重大安全问题，也不会发布补丁。为了获得更好的性能、改进的安全性和新功能，请尽快[升级到 {% data variables.product.prodname_ghe_server %} 的最新版本](/enterprise-server@3.4/admin/enterprise-management/upgrading-github-enterprise-server)。'
    - heading: 弃用 GitHub Enterprise Server 3.1
      notes:
        - '**{% data variables.product.prodname_ghe_server %} 3.1 将于 2022 年 6 月 3 日停用**。这意味着，在此日期之后，即使针对重大安全问题，也不会发布补丁。为了获得更好的性能、改进的安全性和新功能，请尽快[升级到 {% data variables.product.prodname_ghe_server %} 的最新版本](/enterprise-server@3.4/admin/enterprise-management/upgrading-github-enterprise-server)。'

    - heading: XenServer Hypervisor 支持终止
      notes:
        # https://github.com/github/docs-content/issues/4439
        - "从 {% data variables.product.prodname_ghe_server %} 3.3 开始，XenServer 上的 {% data variables.product.prodname_ghe_server %} 已弃用且不再受支持。如有问题或疑虑，请联系 [GitHub 支持](https://support.github.com)。"

    - heading: 弃用内容附件 API 预览版
      notes:
        #
        - "由于使用率低，我们已在 {% data variables.product.prodname_ghe_server %} 3.4 中弃用了内容引用 API 预览版。该 API 以前可以过“corsair-preview”标头访问。用户可以在没有此 API 的情况下继续导航到外部 URL。针对内容引用 API 的任何注册使用，将不再收到来自注册域的 URL Webhook 通知，并且在尝试更新现有内容附件时，我们不再返回有效的响应代码。"

    - heading: 弃用行为准则 API 预览版
      notes:
        # https://github.com/github/releases/issues/1708
        - '可通过 `scarlet-witch-preview` 标头访问的行为准则 API 预览版已弃用，并且在 {% data variables.product.prodname_ghe_server %} 3.4 中已无法访问。建议使用“[获取社区配置文件指标](/rest/reference/repos#get-community-profile-metrics)”终结点来检索有关存储库行为准则的信息。有关详细信息，请参阅 {% data variables.product.prodname_dotcom %} changelog 中的“[弃用通知：行为准则 API 预览版](https://github.blog/changelog/2021-10-06-deprecation-notice-codes-of-conduct-api-preview/)”。'

    - heading: 弃用 OAuth 应用程序 API 终结点和使用查询参数的 API 身份验证
      notes:
        # https://github.com/github/releases/issues/1316
        - |从 {% data variables.product.prodname_ghe_server %} 3.4 开始，[OAuth 应用程序 API 终结点的弃用版本](https://developer.github.com/changes/2020-02-14-deprecating-oauth-app-endpoint/#endpoints-affected)已被移除。如果在这些终结点上遇到 404 错误消息，请将代码转换为 URL 中没有 `access_tokens` 的 OAuth 应用程序 API 版本。我们还禁用了使用查询参数的 API 身份验证。建议使用[请求标头中的 API 身份验证](https://developer.github.com/changes/2020-02-10-deprecating-auth-through-query-param/#changes-to-make)。

|
    - heading: 弃用 CodeQL 运行器
      notes:
        # https://github.com/github/releases/issues/1632
        - "{% data variables.product.prodname_codeql %} 运行器在 {% data variables.product.prodname_ghe_server %} 3.4 中已弃用且不再受支持。弃用仅影响在第三方 CI/CD 系统中使用 {% data variables.product.prodname_codeql %} 代码扫描的用户；{% data variables.product.prodname_actions %} 用户不受影响。强烈建议客户迁移到 {% data variables.product.prodname_codeql %} CLI，它是 {% data variables.product.prodname_codeql %} 运行器的功能完整的替代项。有关详细信息，请参阅 [{% data variables.product.prodname_dotcom %} changelog](https://github.blog/changelog/2021-09-21-codeql-runner-deprecation/)。"

    - heading: 弃用自定义位缓存扩展
      notes:
        # https://github.com/github/releases/issues/1415
        - |从 {% data variables.product.prodname_ghe_server %} 3.1 开始，开始逐步淘汰对 {% data variables.product.company_short %} 的专有位缓存扩展的支持。从 {% data variables.product.prodname_ghe_server %} 3.3 开始，这些扩展已被弃用。



运行版本 3.1 或 3.2 的 {% data variables.product.product_location %} 上已经存在并处于活动状态的任何存储库都将自动更新。



存储库维护任务运行并成功完成后，在升级到 {% data variables.product.prodname_ghe_server %} 3.3 之前不存在且处于活动状态的存储库才能够以最佳方式执行。



若要手动启动存储库维护任务，请浏览到 `https://<hostname>/stafftools/repositories/<owner>/<repository>/network` 查看每个受影响的存储库，然后单击“计划”按钮。

|
  backups:
    - '{% data variables.product.prodname_ghe_server %} 3.4 至少需要 [GitHub Enterprise Backup Utilities 3.4.0](https://github.com/github/backup-utils) 进行[备份和灾难恢复](/admin/configuration/configuring-your-enterprise/configuring-backups-on-your-appliance)。'
