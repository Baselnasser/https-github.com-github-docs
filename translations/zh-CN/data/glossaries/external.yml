- term: '@提及'
  description:
    用于通过在用户名前使用 `@` 来通知 GitHub 上的个人。GitHub 上组织中的用户也可以是可以被提及的团队中的一员。
- term: 访问令牌
  description: >-
    在命令行或 API 上使用 Git 通过 HTTPS 执行 Git 操作时，用来代替密码的令牌。也称为个人访问令牌。
- term: API 预览
  description: >-
    一种尝试新 API 以及在现有 API 方法成为正式 GitHub API 之前对其进行更改的方式。
- term: 工具
  description: >-
    一种结合恰当操作系统 (JeOS) 在行业标准硬件（通常是服务器）上或虚拟机中最佳运行的软件应用程序。
- term: assignee
  description: 分配到某个问题的用户。
- term: 验证码
  description: >-
    通过浏览器使用 2FA 登录时，除了 GitHub 密码外，还需要提供代码。此代码由应用程序生成或通过短信发送到你的手机。也称为“2FA 验证码”。
- term: 基础分支
  description:
    合并拉取请求时，将更改合并到其中的分支。创建拉取请求时，如果需要，可以将基础分支从存储库的默认分支更改为另一个分支。
- term: 基本身份验证
  description: >-
    凭据以未加密文本形式发送的身份验证方法。
- term: 个人简历
  description: >-
    个人资料中用户生成的描述：[为个人资料添加简介](/articles/adding-a-bio-to-your-profile)
- term: 计费周期
  description: 特定计费计划的时间间隔。
- term: 计费邮箱
  description: >-
    GitHub 用于发送收据、信用卡或 PayPal 费用及其他计费相关信息的组织电子邮件地址。
- term: 计费管理员
  description: 负责管理组织计费设置的组织成员。
- term: 收费计划
  description: >-
    用户和组织的付款计划，包括每种计划的设置功能。
- term: 追溯
  description: >-
    Git 中的“追溯”功能描述文件中每一行的最后修改，通常显示修订、作者和时间信息。例如，在跟踪添加某项功能的时间或导致特定 bug 的提交时，此功能非常有用。
- term: block
  description: >-
    用于删除用户协作处理组织存储库的能力。
- term: branch
  description: >-
    分支是存储库的并行版本。它包含在存储库中，但不会影响主分支，从而允许在不影响“在线”版本的情况下自由工作。完成所需更改后，可以将分支合并回主分支以发布你的更改。
- term: 分支限制
  description: >-
    存储库管理员可以启用的一种限制，只允许特定用户或团队推送到分支或做出特定的更改。
- term: 业务计划
  description: >-
    一种组织计费计划，可以在其中协作处理无限的公共和专用存储库，允许或要求组织成员使用 SAML SSO 对 GitHub 进行身份验证，以及使用 SAML 或 SCIM 预配和取消预配访问权限。
- term: CA 证书
  description: >-
    由证书机构 (CA) 颁发的数字证书，用于确保有效连接两台计算机，例如用户的计算机和 GitHub.com，以及验证站点的所有权。
- term: 卡
  description: 项目板中与某个问题或拉取请求关联的可移动方框。
- term: 检查
  description: >-
    检查是 {% data variables.product.product_name %} 上的一种状态检查类型。请参阅“[状态检查](#status-checks)”。
- term: 签出
  description: >-
    可在命令行上使用 `git checkout` 创建新分支，将当前工作分支更改为其他分支，也可使用 `git checkout [分支名称] [文件路径]` 从不同的分支切换到不同版本的文件。“签出”操作使用对象数据库中的树对象或 Blob 更新全部或部分工作树，如果整个工作树指向新分支，则更新索引和 HEAD。
- term: 挑拣
  description: >-
    用于从一系列更改（通常是提交）中选择更改的子集，并将它们记录为位于不同代码库之上的一系列新更改。在 Git 中，此操作是由 `git cherry-pick` 命令执行的，用于提取另一个分支上现有提交引入的更改，并根据当前分支的提示将其记录为新提交。有关详细信息，请参阅 Git 文档中的 [git-cherry-pick](https://git-scm.com/docs/git-cherry-pick)。
- term: 子团队
  description: >-
    在嵌套团队内，继承父团队访问权限和 @提及的子团队。
- term: 清洁
  description: >-
    如果工作树与当前 HEAD 引用的版本对应，则工作树是清洁的。另请参阅“脏”。
- term: 克隆
  description: >-
    克隆是存在于计算机上（而不是网站的服务器上）的存储库副本，或者表示创建该副本的行为。进行克隆时，可以在无需联机的情况下，在首选编辑器中编辑文件并使用 Git 跟踪你的更改。克隆的存储库仍将连接到远程版本，这样你就可以将本地更改推送到远程，以便在联机时使其保持同步。
- term: 聚类分析
  description: >-
    跨多个节点运行 GitHub Enterprise 服务并在它们之间实现请求的负载平衡的功能。
- term: 代码频率图
  description: >-
    一种显示存储库历史记录中每周的内容添加和删除的存储库图。
- term: 行为准则
  description: 定义关于如何参与社区的标准的文档。
- term: 代码所有者
  description: >-
    被指定为部分存储库代码所有者的个人。当有人打开对代码所有者拥有的代码进行更改的拉取请求（非草稿模式）时，会自动请求代码所有者进行审查。
- term: 协作者
  description: >-
    协作者是受存储库所有者邀请参与，对存储库拥有读取和写入权限的人。
- term: 提交 (commit)
  description: >-
    提交或“修订”是对文件（或文件集）的单独更改。当提交以保存工作时，Git 将创建一个唯一的 ID（也称为“SHA”或“哈希”），它允许记录提交的特定更改以及提交者和提交时间。提交通常包含提交消息，该消息简要说明所做的更改。
- term: 提交作者
  description: 进行提交的用户。
- term: 提交图
  description: >-
    显示过去一年对存储库的所有提交的存储库图。
- term: 提交 ID
  description: 也称为 SHA。用于识别提交的 40 个字符的校验和哈希。
- term: 提交消息
  description: >-
    随附于提交的简短描述性文字，用于沟通提交引入的更改。
- term: 比较分支
  description: >-
    用于创建拉取请求的分支。将此分支与为拉取请求选择的基础分支进行比较，并识别更改。合并拉取请求时，基础分支将使用比较分支中的更改进行更新。也称为拉取请求的“头部分支”。
- term: 持续集成
  description: >-
    也称为 CI。有人将更改提交到 GitHub 上配置的存储库后，就会运行自动生成和测试的过程。CI 是软件开发中常见的最佳做法，有助于检测错误。
- term: 参与图
  description: >-
    用户个人资料中显示其参与记录（最长一年，按天显示）的部分。
- term: 参与指南
  description: 说明人们应如何参与项目的文档。
- term: 参与
  description: >-
    GitHub 上的特定活动，将会：- 添加方块到用户的参与图：“[什么算作参与](/articles/viewing-contributions-on-your-profile/#what-counts-as-a-contribution)”- 添加活动到用户个人资料上的时间线：“[参与活动](/articles/viewing-contributions-on-your-profile/#contribution-activity)”
- term: 参与者
  description: >-
    参与者是指对存储库没有协作者权限但参与过项目，并且他们打开的拉取请求已合并到存储库的人员。
- term: 参与者图
  description: 显示存储库前 100 个参与者的存储库图。
- term: 优惠券
  description: >-
    一种由 GitHub 提供的代码，用户或组织可使用它支付其所有或部分订阅费用。
- term: cron
  description: 类似于 Unix 的计算机操作系统中的一个基于时间的作业计划程序。
- term: cURL
  description: 在命令行或脚本中用于传输数据。
- term: 仪表板
  description: >-
    个人仪表板是 GitHub 上的活动的主要中心。通过个人仪表板，可跟踪正在关注或处理的问题和拉取请求、导航到顶层存储库和团队页面，以及了解正在关注或参与的存储库中的最近活动。还可以发现新的存储库，这些存储库是根据正在关注的用户和已加星标的存储库而推荐的。要仅查看特定组织的活动，请访问该组织的仪表板。有关详细信息，请参阅“[关于个人仪表板](/articles/about-your-personal-dashboard)”或“[关于组织仪表板](/articles/about-your-organization-dashboard)”。
- term: 默认分支
  description: >-
    存储库中新拉取请求和代码提交的基础分支。每个存储库至少具有一个分支，Git 在初始化存储库时将会创建该分支。第一个分支通常被称为 {% ifversion ghes < 3.2 %}`master`{% else %}`main`{% endif %}，通常是默认分支。
- term: 依赖项图
  description: >-
    一种显示依赖于公共存储库的包、项目和存储库的存储库图。
- term: 依赖项关系图
  description: >-
    一种显示存储库所依赖的包和项目的存储库图。
- term: 部署密钥
  description: >-
    部署密钥是存储在服务器上并授予对单个 GitHub 存储库的访问权限的 SSH 密钥。此密钥直接附加到存储库，而不是附加到个人用户帐户。
- term: 拆离的 HEAD
  description: >-
    如果正在处理拆离的 HEAD，Git 将发出警告，这意味着 Git 没有指向某个分支，并且所做的任何提交都不会出现在提交历史记录中。 例如，当签出不属于任何特定分支的最新提交的任意提交时，表示你正在处理“拆离的 HEAD”。
- term: 诊断
  description: GitHub Enterprise 实例设置和环境的概述。
- term: diff
  description: >-
    差异是两次提交或保存的更改之间的更改差异。差异将直观地描述自上次提交以来文件中添加的或删除的内容。
- term: directory
  description: >-
    包含一个或多个文件/文件夹的文件夹。可以创建目录来组织存储库的内容。
- term: 脏
  description: >-
    工作树如果包含尚未提交到当前分支的更改，将被视为“脏”。
- term: 电子邮件通知
  description: 已发送到用户的电子邮件地址的通知。
- term: 企业帐户
  description: "企业帐户允许集中管理多个组织的策略和计费。{% data reusables.gated-features.enterprise-accounts %}"
- term: 资源管理器
  description: >-
    GraphiQL 的实例，它是“图形交互式浏览器内 GraphQL IDE”。
- term: 转发
  description: >-
    转发是一种特殊类型的合并，其中有一个修订，并且你将“合并”另一个分支的更改，这些更改恰好是你所拥有的内容的后代。在这种情况下，不会进行新的合并提交，而只是更新到此修订。这将在远程存储库的远程跟踪分支上经常发生。
- term: 功能分支
  description: >-
    用于试验新功能或修复非生产环境中的问题的分支。也称为主题分支。
- term: 围栏代码块
  description: "可以在代码块前后使用三个反引号 \\`\\`\\` 通过 GitHub 风格的 Markdown 创建的缩进代码块。请参阅此 [示例](/articles/creating-and-highlighting-code-blocks#fenced-code-blocks)。"
- term: “etch
  description: >-
    当使用 `git fetch` 时，将更改从远程存储库添加到本地工作分支，而无需提交它们。与 `git pull` 不同，提取允许在将更改提交到本地分支之前查看该更改。
- term: 跟进（用户）
  description: 用于获取关于另一个用户的贡献和活动的通知。
- term: 强制推送
  description: >-
    使用本地更改覆盖远程存储库而不考虑冲突的 Git 推送。
- term: 分支
  description: >-
    分支是位于帐户中的其他用户存储库的个人副本。通过分支，可随意更改项目，而不会影响原始上游存储库。还可以在上游存储库中打开拉取请求，并使分支与最新更改保持同步，因为这两个存储库仍处于连接状态。
- term: 免费计划
  description: >-
    免费的用户帐户计费计划。用户可以与无限的协作者协作处理无限的公共存储库。
- term: gist
  description: >-
    gist 是一个可共享的文件，可在 GitHub 上对其进行编辑、克隆和创建分支。可以将 gist 设为{% ifversion ghae %}internal{% else %}公开{% endif %}或机密，但任何{% ifversion ghae %}any enterprise member{% else %}拥有该 URL 的人{% endif %}都可以使用机密。
- term: Git
  description: >-
    Git 是一个开源程序，用于跟踪文本文件中的更改。它由 Linux 操作系统的作者编写，是 GitHub、社交和用户界面赖以构建的核心技术。
- term: GitHub Apps
  description: >-
    GitHub Apps 为整个组织提供服务，并在执行其功能时使用自己的标识。它们可以直接安装在组织和用户帐户上，并获得对特定存储库的访问权限。它们随附精细的权限和内置的 Webhook。
- term: GitHub 风格的 Markdown
  description: "GitHub 特定的 Markdown，用于在 GitHub 上格式化 prose 和代码。请参阅 [GitHub 风格的 Markdown 规范](https://github.github.com/gfm/) 或 [在 GitHub 上编写和设置格式入门](/articles/getting-started-with-writing-and-formatting-on-github)。"
- term: GitHub 导入工具
  description: >-
    一种可让用户快速将源代码存储库（包括提交和修订历史记录）导入 GitHub 的工具。
- term: GitHub Jobs
  description: >-
    一个 GitHub 网站，雇主可在其中发布 GitHub 用户可能感兴趣的职位。
- term: GitHub Marketplace
  description: >-
    GitHub 用户和组织用于购买和安装可扩展及补充其工作流的应用程序的子站点。
- term: GitHub Pages
  description: >-
    也称为 Pages。设计为直接托管 GitHub 存储库中的个人、组织或项目页面的静态站点托管服务。
- term: GitHub Wiki
  description: 用于在 GitHub 存储库上托管 Wiki 样式文档的部分。
- term: gitfile
  description: >-
    一个纯文本 `.git` 文件，它始终位于工作树的根目录中，并指向包含整个 Git 存储库及其元数据的 Git 目录。可在命令行上使用作为真正存储库的 `git rev-parse --git-dir` 查看存储库的此文件。
- term: GraphQL
  description: >-
    一种针对 API 的查询语言，以及用于使用现有数据完成这些查询的运行时。
- term: HEAD
  description: 定义的分支提交，通常是分支顶端的最新提交。
- term: 头部分支
  description: 合并拉取请求时，将其更改合并到基础分支中的分支。也称为“比较分支”。
- term: 'Hello, World'
  description: >-
    “Hello, World”程序是向用户输出或显示“Hello, World!”的计算机程序。由于此程序通常非常简单，因此常被用作编程语言的基本语法的示例，并作为学习新编程语言的第一个常见练习。
- term: 高可用性
  description: >-
    可持续运行较长时间的系统或组件。
- term: 挂钩
  description: >-
    在几个 Git 命令的正常执行过程中，将调用允许开发人员添加功能或进行检查的可选脚本。通常，挂钩允许预先验证且可能中止的命令，并允许在操作完成后发布后通知。
- term: hostname
  description: >-
    人类可读的昵称，与连接到网络的设备地址对应。
- term: 默认肖像
  description: >-
    当用户注册 GitHub 时，用作默认个人资料照片的自动生成图像。用户可以用自己的个人资料照片替换其标识图标。
- term: 标识提供者
  description: >-
    也称为 IdP。受信任的提供者，可让你使用 SAML 单一登录 (SSO) 访问其他网站。
- term: instance
  description: >-
    包含在组织配置和控制的虚拟机中的组织 GitHub 私人副本。
- term: 集成
  description: >-
    与 GitHub 集成的第三方应用程序。这些应用程序可以是 GitHub Apps、OAuth Apps 或 Webhook。
- term: 问题
  description: >-
    问题是与存储库相关的建议改进、任务或问题。问题可由任何人创建（对于公共存储库），并由存储库协作者进行管理。每个问题都包含自己的讨论线程。还可以使用标签对问题进行分类，并将其分配给某人。
- term: Jekyll
  description: 针对个人、项目或组织站点的静态站点生成器。
- term: Jekyll 主题选择器
  description: >-
    一种无需编辑或复制 CSS 文件即可为 Jekyll 站点选择视觉对象主题的自动化方式。
- term: 密钥指纹
  description: 用于标识较长公钥的短字节序列。
- term: 密钥链
  description: macOS 中的密码管理系统。
- term: 关键字 (keyword)
  description: 用在拉取请求中时可关闭问题的特定词。
- term: label
  description: >-
    问题或拉取请求上的标记。存储库随附一系列默认标签，但用户也可创建自定义标签。
- term: LFS
  description: >-
    Git Large File Storage。一种开源 Git 扩展，用于对大文件进行版本控制。
- term: license
  description: >-
    一种可随附于项目的文档，告知人们能够对源代码执行哪些操作，不能执行哪些操作。
- term: Linguist
  description: >-
    GitHub 上使用的一个库，用于检测 Blob l语言，忽略二进制或 vendor 文件，抑制差异中生成的文件，以及生成语言细分图。
- term: 行注释
  description: 拉取请求内特定代码行上的评论。
- term: 行结束符
  description: >-
    用符号表示文本文件中一行结束的不可见字符。
- term: 已锁定个人帐户
  description: >-
    用户无法访问的个人帐户。当用户将其付费帐户降级到免费帐户或者其付费计划过期时，帐户将被锁定。
- term: 管理控制台
  description: >-
    GitHub Enterprise 界面中包含管理功能的部分。
- term: Markdown
  description: >-
    Markdown 是一种非常简单的语义文件格式，与 .doc、.rtf 及 .txt 区别不大。Markdown 可帮助没有网络发布功底的人编写 prose（包括链接、列表、项目符号等）并将其显示为网站。GitHub 支持 Markdown 并使用一种特殊形式的 Markdown，称为 GitHub 风格的 Markdown。请参阅 [GitHub 风格的 Markdown 规范](https://github.github.com/gfm/) 或 [在 GitHub 上编写和设置格式入门](/articles/getting-started-with-writing-and-formatting-on-github)。
- term: 标记
  description: 一种用于注释和格式化文档的系统。
- term: main
  description: >-
    {% ifversion fpt or ghes > 3.1 or ghae %}默认开发分支。每当创建 Git 存储库时，都会创建一个名为 `main` 的分支，并使其成为活动分支。在大多数情况下，这包含本地开发，不过这纯粹是按照惯例的，也不是必需的。{% else %}通常选择名称作为存储库默认分支的 `master` 的替代品。{% endif %}
- term: 主
  description: >-
    许多 Git 存储库中的默认分支。默认情况下，每当在命令行上创建新的 Git 存储库时，都会创建一个名为 `master` 的分支。许多工具现在为默认分支使用替代名称。{% ifversion fpt or ghes > 3.1 or ghae %}例如，当在 GitHub 上创建新存储库时，默认分支称为 `main`。{% endif %}
- term: 成员图
  description: 显示存储库所有分支的存储库图。
- term: 提及
  description: >-
    通过在用户名前加上 @ 符号发送给用户的通知。GitHub 上组织中的用户也可以是可以被提及的团队中的一员。
- term: merge
  description: >-
    合并从一个分支（在同一个存储库中或来自分支）中获取更改并将其应用到另一个分支。这通常作为“拉取请求”（可被视为合并请求）或通过命令行发生。如果没有冲突的更改，可以通过 GitHub.com Web 界面的拉取请求完成合并，也可以始终通过命令行完成合并。
- term: 合并冲突
  description: >-
    合并分支之间发生的差异。当人们对相同文件的相同行进行不同的更改时，或者一个人编辑文件而另一个人删除同一文件时，就会发生合并冲突。必须先解决合并冲突，然后才能合并分支。
- term: 里程碑
  description: >-
    一种跟踪存储库中问题或拉取请求组进度的方式。
- term: 镜像
  description: 存储库的新副本。
- term: 嵌套团队
  description: >-
    父团队的子团队。可以拥有多个子（或嵌套）团队。
- term: 网络图
  description: >-
    显示整个存储库网络的分支历史记录的存储库图，其中包括根存储库的分支以及包含网络独有提交的分叉的分支。
- term: 消息馈送
  description: >-
    监视的存储库或人员的活动视图。组织的消息馈送显示该组织拥有的存储库上的活动。
- term: 非快进
  description: >-
    当存储库的本地副本未与上游存储库同步时，需要在推送本地更改之前获取上游更改。
- term: 通知
  description: >-
    通过 Web 或电子邮件（具体取决于你的设置）提供的更新，它提供有关你感兴趣的活动的信息。
- term: OAuth App
  description: >-
    使用访问令牌而非密码来访问用户信息的第三方应用程序。
- term: OAuth 令牌
  description: OAuth Apps 中用于访问用户信息的访问令牌。
- term: 外部协作者
  description: >-
    已被授予对组织的一个或多个存储库的访问权限，但对该组织没有其他访问权限且不属于组织成员的用户。
- term: 开源
  description: >-
    开源软件是任何人都可以自由使用、修改和共享（以修改和未修改的形式）的软件。今天，“开源”的概念往往超越了软件，它代表一种协作理念：任何人都可以在线获取工作材料，然后创建分支、修改和讨论它们并为项目做出贡献。
- term: organization
  description: >-
    组织是由两个或多个用户组成的组，它们通常反映了真实世界的组织。它们由用户管理，可以同时包含存储库和团队。
- term: 组织所有者
  description: 对自己拥有的组织具有完全管理访问权限的用户。
- term: origin
  description: >-
    默认上游存储库。大多数项目至少有一个他们跟踪的上游项目。默认情况下，原点用于此目的。
- term: owner
  description: >-
    对组织具有完全管理权限的组织成员。
- term: 父团队
  description: >-
    在嵌套团队内，子团队继承访问权限和 @提及的主要团队。
- term: 参与通知
  description: >-
    关于用户名或团队被提及或之前在评论中回复的问题或拉取请求中对话更新的通知。
- term: 永久链接
  description: 指向特定网页的永久静态超链接。
- term: 个人帐户
  description: >-
    属于个别用户的 GitHub 帐户。
- term: 主电子邮件地址
  description: >-
    GitHub 用于发送收据、信用卡或 PayPal 费用及其他计费相关信息的主要电子邮件地址。
- term: 固定存储库
  description: >-
    用户已决定在其个人资料中突出显示的存储库。
- term: 预接收挂钩
  description: >-
    在可用于实现质量检查的 GitHub Enterprise 服务器上运行的脚本。
- term: 专用贡献
  description: 对专用（与公共相对）存储库的贡献。
- term: 专用存储库
  description: >-
    专用存储库仅对存储库所有者和所有者指定的协作者可见。
- term: 生产分支
  description: >-
    包含可使用或部署到应用程序或站点的最终更改的分支。
- term: 个人资料
  description: 显示 GitHub 上用户活动相关信息的页面。
- term: 个人资料照片
  description: >-
    用户上传到 GitHub 的自定义图像，用于标识其活动，通常与其用户名结合使用。这也称为“应用”。
- term: 项目板
  description: >-
    GitHub 内由问题、拉取请求和注释组成的板，按列分类为卡。
- term: 受保护分支
  description: >-
    受保护分支在存储库管理员选择保护的分支上阻止 Git 的多个功能。不能在没有通过所需检查或批准所需审查的情况下强制推送、删除、合并更改这些分支，也不能将文件从 GitHub Web 界面上传到它。受保护分支通常为默认分支。
- term: 公共贡献
  description: 对公共（与专用相对）存储库的贡献。
- term: 公共存储库
  description: >-
    公共存储库可供任何人查看，包括不是 GitHub 用户的人员。
- term: pull
  description: >-
    拉取指的是提取更改并合并这些更改的行为。例如，如果有人编辑了你们正在合作处理的远程文件，则需要将这些更改拉取到本地副本，以使其保持最新状态。另请参阅“提取”。
- term: 拉取权限
  description: 读取权限的同义词。
- term: 拉取请求
  description: >-
    拉取请求是由用户提交的对存储库的建议更改，由存储库协作者接受或拒绝。与问题一样，每个拉取请求都有自己的讨论论坛。
- term: 拉取请求审查
  description: >-
    拉取请求中协作者批准更改或在拉取请求合并之前申请进一步更改的评论。
- term: 脉冲图
  description: 提供存储库活动概述的存储库图。
- term: 打卡图
  description: >-
    根据周日期和时间显示存储库更新频率的存储库图
- term: push
  description: >-
    推送意味着将提交的更改发送到 GitHub.com 上的远程存储库。例如，如果在本地更改了某些内容，则可以推送这些更改，以便其他人可以访问它们。
- term: 推送分支
  description: >-
    如果成功将分支推送到远程存储库，则可以使用本地分支中的更改更新远程分支。当“推送分支”时，Git 将在远程存储库中搜索分支的 HEAD 引用，并验证它是否是该分支的本地 HEAD 引用的直接上级。验证后，Git 将所有对象（可从本地 HEAD 引用访问，但在远程存储库中丢失）拉取到远程对象数据库，然后更新远程 HEAD 引用。如果远程 HEAD 不是本地 HEAD 的上级，则推送将失败。
- term: 推送访问权限
  description: 写入访问权限的同义词。
- term: 读取访问权限
  description: >-
    存储库上的权限级别，可让用户从存储库中拉取或读取信息。所有公共存储库都为所有 GitHub 用户提供读取访问权限。拉取访问权限的同义词。
- term: 自述文件
  description: 一个包含有关存储库中文件的信息的文本文件，该文件通常是存储库访问者将看到的第一个文件。自述文件以及存储库许可证、参与指南和行为准则可帮助你共享期望并管理对项目的贡献。
- term: 变基
  description: >-
    要将一系列变更从一个分支重新应用到不同的基础分支，并将该分支的 HEAD 重置为结果。
- term: 恢复代码
  description: 帮助你重新获取对 GitHub 帐户的访问权限的代码。
- term: 发布
  description: GitHub 封装软件并向用户提供软件的方式。
- term: remote
  description: >-
    这是托管在服务器上的存储库或分支的版本，很可能是 GitHub.com。远程版本可以连接到本地克隆，以便可以同步更改。
- term: 远程存储库
  description: >-
    用于跟踪同一个项目但储存在其他位置的存储库。
- term: 远程 URL
  description: >-
    存储代码的位置：GitHub、其他用户分支甚至不同服务器上的存储库。
- term: 副本 (replica)
  description: >-
    为主要 GitHub Enterprise 实例提供冗余的 GitHub Enterprise 实例。
- term: repository
  description: >-
    存储库是 GitHub 最基本的元素。它们很容易被想象为项目的文件夹。存储库包含所有项目文件（包括文档），并存储每个文件的修订历史记录。存储库可以有多个协作者，并且可以是公共的，也可以是专用的。
- term: 存储库缓存
  description: >-
    GitHub Enterprise 服务器实例的存储库的只读镜像，位于分布式团队和 CI 客户端附近。
- term: 存储库图
  description: 存储库数据的视觉对象表现形式。
- term: 存储库维护者
  description: >-
    管理存储库的人。此人可以帮助分类问题，并使用标签和其他功能来管理存储库的工作。此人还可能负责更新自述文件和参与文件。
- term: 必需拉取请求审查
  description: >-
    必需审查确保拉取请求至少获得一次审批审查之后，协作者才可更改受保护分支。
- term: 必需状态检查
  description: >-
    拉取请求检查，确保在协作者可以对受保护分支进行更改前，所有必需的 CI 测试都已通过。
- term: resolve
  description: 手动修复自动合并失败的操作。
- term: 还原
  description: >-
    当在 GitHub 上还原拉取请求时，会自动打开一个新的拉取请求，其中包含一个从原始合并拉取请求还原合并提交的提交。在 Git 中，可以使用 `git revert` 还原提交。
- term: 审查
  description: >-
    审查允许对存储库具有访问权限的其他人评论拉取请求中建议的更改、批准更改或在合并拉取请求之前请求进一步更改。
- term: 根目录
  description: 层次结构中的第一个目录。
- term: 根文件系统
  description: 基本操作系统和 GitHub Enterprise 应用程序环境。
- term: 已保存回复
  description: >-
    可保存并添加到 GitHub 用户帐户的评论，这样你就可以在 GitHub 中的问题和拉取请求中使用它。
- term: scope
  description: >-
    OAuth App 可以请求访问公共和非公共数据的命名权限组。
- term: 席位
  description: >-
    GitHub Enterprise 组织内的用户。这可以被称为“席位数”。
- term: 机密团队
  description: >-
    只有团队其他人以及具有所有者权限的人员可见的团队。
- term: 安全日志
  description: >-
    列出最近 50 次操作或过去 90 天内执行的操作的日志。
- term: 服务器到服务器请求
  description: >-
    由充当机器人的应用程序使用的 API 请求，独立于任何特定用户。例如，按计划运行并关闭长时间没有活动的问题的应用程序。使用此类身份验证的应用程序不使用许可的 GitHub 帐户，因此，在具有允许使用一定数量许可证的计费计划的企业中，服务器到服务器机器人不会使用其中一个 GitHub 许可证。服务器到服务器请求中使用的令牌是通过 [GitHub API](/rest/reference/apps#create-an-installation-access-token-for-an-app) 以编程方式获取的。另请参阅“[用户到服务器请求](#user-to-server-request)”。
- term: 服务挂钩
  description: >-
    也称为“Webhook”。 Webhook 是一种通知方式，只要存储库或组织上发生特定操作，就会发送通知到外部 Web 服务器。
- term: 单一登录
  description: >-
    也称为 SSO。允许用户登录到一个位置，然后标识提供者 (IdP) 授予用户对其他服务提供程序的访问权限。
- term: 快照
  description: 虚拟机在某一时间点的检查点。
- term: 压缩
  description: 用于将多个提交合并为一个提交。也称为 Git 命令。
- term: SSH 密钥
  description: >-
    SSH 密钥是一种使用加密消息向在线服务器标识自己的方法。就好像计算机对其他服务具有自己的唯一密码一样。{% data variables.product.product_name %}使用 SSH 密钥将信息安全地传输到计算机。
- term: 暂存实例
  description: >-
    在将修改应用到实际 GitHub Enterprise 实例之前测试修改的一种方法。
- term: status
  description: >-
    拉取请求中的视觉对象表现形式，表示提交符合为参与的存储库设置的条件。
- term: 状态检查
  description: >-
    状态检查是为在存储库中进行的每个提交而运行的外部进程，例如持续集成生成。有关详细信息，请参阅“[关于状态检查](/articles/about-status-checks)”。
- term: 星级
  description: >-
    对存储库的书签或表示赞赏。星级是一种手动对项目的受欢迎程度进行排名的方法。
- term: 订阅
  description: 用户或组织的 GitHub 计划。
- term: 团队
  description: >-
    通过级联访问权限和提及来反映公司或组结构的组织成员组。
- term: 团队维护者
  description: >-
    具有组织所有者一部分团队管理权限的组织成员。
- term: 团队计划
  description: >-
    提供无限公共和专用存储库的组织计费计划。
- term: 时间线
  description: 拉取请求或用户个人资料中的一系列事件。
- term: 主题分支
  description: >-
    一个常规的 Git 分支，开发人员使用它来识别开发的概念线。由于分支非常简单且成本低廉，因此通常希望有几个小分支，每个分支都包含定义非常明确的概念或小的增量但相关的更改。也可以称为特征分支。
- term: topics
  description: >-
    一种方法，用于探索特定主题领域中的存储库，查找要参与的项目，以及在 GitHub 上发现特定问题的新解决方案。
- term: 流量图
  description: >-
    显示存储库流量的存储库图，包括完整克隆（非提取）、过去 14 天的访问者、推荐站点及热门内容。
- term: 传输
  description: >-
    转让存储库是指更改存储库的所有者。新所有者能够立即管理存储库的内容、问题、拉取请求、发行版和设置。
- term: 上游
  description: >-
    在谈论分支或分叉时，原始存储库上的主分支通常被称为“上游”，因为它是获取其他更改的主要位置。正在处理的分支/分叉则被称为“下游”。也称为原点。
- term: 上游分支
  description: >-
    合并到相关分支（或相关分支重新基于的分支）中的默认分支。它是通过 `branch.<name>.remote` 和 `branch.<name>.merge` 配置的。如果 A 的上游分支是原点/B，有时表示为“A 是跟踪原点/B”。
- term: user
  description: >-
    用户是拥有个人 GitHub 帐户的人员。每个用户都有自己的个人资料，并且可以拥有多个公共或专用存储库。他们可以创建或受邀加入组织，也可以在其他用户的存储库上进行协作。
- term: username
  description: GitHub 上的用户句柄。
- term: 用户到服务器请求
  description: >-
    由代表特定用户执行任务的应用程序所使用的 API 请求。如果使用用户到服务器身份验证执行任务，则在 GitHub 上显示为由用户通过应用程序完成的任务。例如，可以选择在第三方应用程序中创建问题，该应用程序将代表用户在 GitHub 上执行此操作。应用程序可使用用户到服务器请求执行的任务范围受到应用和用户的权限和访问权限的限制。用户到服务器请求中所使用的令牌是通过 OAuth 获取的。有关详细信息，请参阅“[识别和授权 GitHub Apps 的用户](/developers/apps/building-github-apps/identifying-and-authorizing-users-for-github-apps)”。 另请参阅“[服务器到服务器请求](#server-to-server-request)”。
- term: 可见团队
  description: 可被每个组织成员查看和 @提及的团队。
- term: 监视
  description: >-
    可以监视存储库或问题，以在对问题或拉取请求进行更新时接收通知。
- term: 查看通知
  description: 关于用户订阅的存储库中活动的通知。
- term: Web 通知
  description: >-
    显示在 GitHub 的 Web 界面中的通知：https://github.com/notifications
- term: webhooks
  description: >-
    Webhook 允许构建或设置订阅 GitHub.com 上某些事件的 GitHub Apps。Webhook 是一种通知方式，只要存储库或组织上发生特定操作，就会发送通知到外部 Web 服务器。也被称为服务挂钩。
- term: 写入访问权限
  description: >-
    存储库上的权限级别，可让用户推送或写入对存储库的更改。
