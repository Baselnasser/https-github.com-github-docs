date: '2021-09-09'
release_candidate: true
deprecated: true
intro: "{% data variables.product.product_location %}가 릴리스 후보 빌드를 실행하는 경우에는 핫패치를 사용하여 업그레이드할 수 없습니다. 테스트 환경에서는 릴리스 후보만 실행하는 것이 좋습니다."
sections:
  features:
    - heading: 비밀 검사를 위한 사용자 지정 패턴
      notes:
        # https://github.com/github/releases/issues/1426
        - |{% data variables.product.prodname_GH_advanced_security %} 고객은 이제 비밀 검사를 위한 사용자 지정 패턴을 지정할 수 있습니다. 새 패턴이 지정되면 비밀 검사는 새 커밋뿐만 아니라 패턴에 대한 리포지토리의 전체 Git 기록을 검색합니다.



사용자 지정 패턴은 {% data variables.product.prodname_ghe_server %} 3.2의 베타 버전입니다. 리포지토리, 조직, 엔터프라이즈 수준에서 정의할 수 있습니다. 자세한 내용은 “[비밀 검사에 대한 사용자 지정 패턴 정의](/code-security/secret-scanning/defining-custom-patterns-for-secret-scanning)”를 참조하세요.

|
    - heading: 고급 보안에 대한 보안 개요(베타)
      notes:
        # https://github.com/github/releases/issues/1381
        - |{% data variables.product.prodname_GH_advanced_security %} 고객은 이제 {% data variables.product.prodname_code_scanning %}, {% data variables.product.prodname_dependabot %}, {% data variables.product.prodname_secret_scanning %}에서 감지한 애플리케이션 보안 위험을 조직 수준에서 볼 수 있습니다. 보안 개요에는 각 리포지토리에 대한 보안 기능 사용 상태와 검색된 경고 수가 표시됩니다.



또한 보안 개요에는 조직 수준의 모든 {% data variables.product.prodname_secret_scanning %} 경고가 나열됩니다. {% data variables.product.prodname_dependabot %} 및 {% data variables.product.prodname_code_scanning %} 경고에 대한 유사한 보기가 향후 릴리스에서 제공될 예정입니다. 자세한 내용은 “[보안 개요 정보](/code-security/security-overview/about-the-security-overview)”를 참조하세요.



![보안 개요의 스크린샷](/assets/images/enterprise/3.2/release-notes/security-overview-UI.png)

|
    - heading: 종속성 검토(베타)
      notes:
        # https://github.com/github/releases/issues/1364
        - |{% data variables.product.prodname_GH_advanced_security %} 고객은 이제 끌어오기 요청에서 변경된 종속성의 다양한 차이점을 볼 수 있습니다. 종속성 검토는 끌어오기 요청의 “변경된 파일” 탭에서 종속성 변경 내용 및 보안 영향을 이해하기 쉬운 보기를 제공합니다. 이러한 종속성에 대한 취약성 정보와 함께 추가, 제거 또는 업데이트된 종속성을 알려줍니다. 자세한 내용은 “[끌어오기 요청에서 종속성 변경 검토](/github/collaborating-with-pull-requests/reviewing-changes-in-pull-requests/reviewing-dependency-changes-in-a-pull-request)”를 참조하세요.

|
    - heading: GitHub Actions 환경
      notes:
        # https://github.com/github/releases/issues/1308
        - |환경, 환경 보호 규칙, 환경 비밀은 이제 {% data variables.product.product_name %}의 {% data variables.product.prodname_actions %}에 대해 일반적으로 사용할 수 있습니다. 자세한 내용은 “[환경](/actions/reference/environments)”을 참조하세요.



![환경 보호 규칙](/assets/images/enterprise/3.2/release-notes/actions-environments.png)

|
    - heading: 보안 키를 사용한 SSH 인증
      notes:
        # https://github.com/github/releases/issues/1276
        - |FIDO2 보안 키를 사용한 SSH 인증은 이제 ‘sk-ecdsa-sha2-nistp256@openssh.com’ 또는 ‘sk-ssh-ed25519@openssh.com’ SSH 키를 계정에 추가할 때 지원됩니다. SSH 보안 키는 작동하기 위해 탭과 같은 확인이 필요한 별도의 하드웨어 디바이스에 비밀 키 자료를 저장합니다. 자세한 내용은 “[새 SSH 키 생성 및 ssh-agent에 추가](/github/authenticating-to-github/connecting-to-github-with-ssh/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent#generating-a-new-ssh-key-for-a-hardware-security-key)”를 참조하세요.

|
    - heading: '어둡게 및 어둡고 흐리게 표시되는 테마'
      notes:
        # https://github.com/github/releases/issues/1260
        - |이제 웹 UI에서 어둡게 및 어둡고 흐리게 표시되는 테마를 사용할 수 있습니다. {% data variables.product.product_name %}은 {% data variables.product.product_name %}에서 테마 기본 설정을 지정하지 않은 경우 시스템 기본 설정과 일치합니다. 낮과 밤에 활성화되는 테마를 선택할 수도 있습니다. 자세한 내용은 “[테마 설정 관리](/github/setting-up-and-managing-your-github-user-account/managing-user-account-settings/managing-your-theme-settings)”를 참조하세요.



![어둡게 및 어둡고 흐리게 표시되는 테마](https://user-images.githubusercontent.com/33528647/114629560-d2231f80-9c86-11eb-9bde-cc301a97040d.gif)

|
    - heading: '메일 알림에 대해 확인되지 않은 도메인 승인'
      notes:
        # https://github.com/github/releases/issues/1244
        - "확인할 수 없는 도메인은 이제 메일 알림 라우팅에 대해 승인될 수 있습니다. 엔터프라이즈 및 조직 소유자는 도메인을 승인하고 메일 알림 제한 정책을 즉시 보완하여 알림을 협력자, 컨설턴트, 인수 또는 기타 파트너에게 보낼 수 있습니다. 자세한 내용은 “[엔터프라이즈의 도메인 확인 또는 승인](/admin/configuration/configuring-your-enterprise/verifying-or-approving-a-domain-for-your-enterprise#about-approval-of-domains)” 및 “[엔터프라이즈에 대한 메일 알림 제한](/admin/policies/enforcing-policies-for-your-enterprise/restricting-email-notifications-for-your-enterprise#restricting-email-notifications-for-your-enterprise-account)”을 참조하세요."

    - heading: 'GCM(Git Credential Manager) 보안 자격 증명 스토리지 및 다단계 인증 지원'
      notes:
        # https://github.com/github/releases/issues/1406
        - |GCM(Git Credential Manager) 버전 2.0.452 이상은 이제 {% data variables.product.product_name %}에 대한 보안 강화 자격 증명 스토리지 및 다단계 인증 지원을 제공합니다.



{% data variables.product.product_name %}을 지원하는 GCM은 [Windows용 Git](https://gitforwindows.org) 버전 2.32 이상에 포함되어 있습니다. GCM은 macOS 또는 Linux용 Git에 포함되어 있지 않지만 별도로 설치할 수 있습니다. 자세한 내용은 ‘GitCredentialManager/git-credential-manager’ 리포지토리에 있는 [최신 릴리스](https://github.com/GitCredentialManager/git-credential-manager/releases/) 및 [설치 지침](https://github.com/GitCredentialManager/git-credential- manager/releases/)을 참조하세요.

|
  changes:
    - heading: 관리 변경 내용
      notes:
        # https://github.com/github/releases/issues/1309
        - "엔터프라이즈 설정에 ‘사용자 에이전트 참조 페이지 정책’ 설정이 추가되었습니다. 이를 통해 관리자는 외부 사이트에서 {% data variables.product.prodname_ghe_server %} 설치의 호스트 이름을 숨기기 위해 더 엄격한 ‘Referrer-Policy’를 설정할 수 있습니다. 이 설정은 기본적으로 사용하지 않도록 설정되어 있으며 활성화 또는 비활성화된 경우 직원 및 기업 소유자에 대한 감사 로그 이벤트에 의해 추적됩니다. 자세한 내용은 “[엔터프라이즈용 참조 페이지 정책 구성](/admin/configuration/configuring-your-enterprise/configuring-the-referrer-policy-for-your-enterprise)”을 참조하세요."

        # https://github.com/github/releases/issues/1515
        - MySQL 상태 검사는 TCP 검사 대신 ‘mysqladmin ping’을 사용하도록 변경되어 MySQL 오류 로그에서 일부 불필요한 노이즈를 제거합니다. 또한 클러스터 구성 변경 사항을 적용할 때 불필요한 MySQL 장애 조치(failover)를 방지하기 위해 Orchestrator 장애 조치(failover) 검사가 개선되었습니다.

        # https://github.com/github/releases/issues/1287
        - "백그라운드 작업 처리를 지원하는 Resque 서비스가 Aqueduct Lite로 교체되었습니다. 이러한 변경을 통해 작업 시스템을 더 쉽게 관리할 수 있으며, 이는 사용자 환경에 영향을 주지 않습니다. Aqueduct의 새로운 관리 및 디버깅 명령은 “[명령줄 유틸리티](/admin/configuration/configuring-your-enterprise/command-line-utilities#ghe-aqueduct)”를 참조하세요."

    - heading: 토큰 변경 내용
      notes:
        # https://github.com/github/releases/issues/1235
        - |{% data variables.product.product_name %}의 인증 토큰 형식이 변경되었습니다. 변경 사항은 {% data variables.product.prodname_oauth_apps %}에 대한 개인 액세스 토큰 및 액세스 토큰의 형식과 {% data variables.product.prodname_github_apps %}에 대한 사용자-서버, 서버 간, 새로 고침 토큰의 형식에 영향을 줍니다.



이제 서로 다른 토큰 유형에 고유한 식별 가능한 접두사가 있어 비밀 검사를 통해 토큰을 감지할 수 있으므로 누군가가 실수로 리포지토리에 토큰을 커밋하는 경우의 영향을 완화할 수 있습니다. {% data variables.product.company_short %}는 가능한 한 빨리 기존 토큰을 업데이트할 것을 권장합니다. 자세한 내용은 “[{% data variables.product.prodname_dotcom %}에 대한 인증 정보](/github/authenticating-to-github/keeping-your-account-and-data-secure/about-authentication-to-github#githubs-token-formats)” 및 “[{% data variables.product.prodname_secret_scanning %} 정보](/code-security/secret-security/about-secret-scanning)”를 참조하세요.

|
    - heading: '리포지토리 변경 사항'
      notes:
        # https://github.com/github/releases/issues/1295
        - 사용자 프로필 및 조직 프로필의 리포지토리는 이제 별 수를 기준으로 정렬을 지원합니다.

        # https://github.com/github/releases/issues/1327
        - "단일 파일의 커밋 기록을 볼 때 이제 {% octicon \"file-code\" aria-label=\"The code icon\" %}을 클릭하여 기록의 선택한 지점에서 해당 파일을 볼 수 있습니다."

        # https://github.com/github/releases/issues/1254
        - "하위 모듈이 {% data variables.product.product_location %}의 상대 경로로 정의되는 경우 이제 웹 UI에서 하위 모듈을 클릭할 수 있습니다. 웹 UI에서 하위 모듈을 클릭하면 연결된 리포지토리로 이동합니다. 이전에는 절대 URL이 있는 하위 모듈만 클릭할 수 있었습니다. 이는 <code>../<em>REPOSITORY</em></code> 패턴을 따르는 동일한 소유자를 가진 리포지토리의 상대 경로 또는 <code>../<em>OWNER</em>/<em>REPOSITORY</em></code> 패턴을 따르는 다른 소유자를 가진 리포지토리의 상대 경로에 대해 지원됩니다. 하위 모듈 작업에 대한 자세한 내용은 {% data variables.product.prodname_blog %}의 [하위 모듈 작업](https://github.blog/2016-02-01-working-with-submodules/)을 참조하세요."

        # https://github.com/github/releases/issues/1250
        - "이제 웹 UI를 사용하여 포크의 오래된 분기를 포크의 업스트림 분기와 동기화할 수 있습니다. 분기 간에 병합 충돌이 없는 경우 분기는 빠른 전달 또는 업스트림에서 병합하여 업데이트됩니다. 충돌이 있는 경우 충돌을 해결하기 위해 끌어오기 요청을 만들라는 메시지가 표시됩니다. 자세한 내용은 “[포크 동기화](/github/collaborating-with-pull-requests/working-with-forks/syncing-a-fork#syncing-a-fork-from-the-web-ui)”를 참조하세요."

    - heading: 'Markdown 변경 사항'
      notes:
        # https://github.com/github/releases/issues/1477
        - "리포지토리에서 릴리스를 만들거나 편집할 때 사용되는 Markdown 편집기에 이제 텍스트 편집 도구 모음이 있습니다. 자세한 내용은 “[리포지토리에서 릴리스 관리](/github/administering-a-repository/releasing-projects-on-github/managing-releases-in-a-repository#creating-a-release)”를 참조하세요."

        # https://github.com/github/releases/issues/1169
        - "이제 {% data variables.product.product_name %}에 Markdown을 작성하는 모든 곳에서 동영상 파일 업로드가 지원됩니다. README와 같은 리포지토리 내의 Markdown 파일뿐만 아니라 이슈 및 끌어오기 요청 주석에서 데모, 재생산 단계 등을 공유합니다. 자세한 내용은 “[파일 첨부](/github/writing-on-github/working-with-advanced-formatting/attaching-files)”를 참조하세요."

        # https://github.com/github/releases/issues/1269
        - Markdown 파일은 이제 2개 이상의 제목이 있는 경우 제목에 목차를 자동으로 생성합니다. 목차는 대화형이며 선택한 섹션에 대한 링크입니다. 6개의 모든 Markdown 제목 수준이 지원됩니다.

        # https://github.com/github/releases/issues/1294
        - 'Markdown 파일, 이슈, 끌어오기 요청, 주석에 코드 블록을 삽입할 수 있는 새로운 바로 가기인 macOS의 ‘cmd+e’ 또는 Windows의 ‘ctrl+e’가 있습니다.'

        # https://github.com/github/releases/issues/1474
        - "Markdown 파일의 URL에 ‘?plain=1’을 추가하면 이제 파일이 렌더링 없이 줄 번호와 함께 표시됩니다. 일반 보기를 사용하여 다른 사용자를 특정 라인에 연결할 수 있습니다. 예를 들어 ‘?plain=1#L52’를 추가하면 일반 텍스트 Markdown 파일의 52행이 강조 표시됩니다. 자세한 내용은 “[코드 조각에 대한 영구 링크 만들기](/github/writing-on-github/working-with-advanced-formatting/creating-a-permanent-link-to-a-code-snippet#linking -to-markdown)”을 참조하세요."

    - heading: '이슈 및 끌어오기 요청 변경 사항'
      notes:
        # https://github.com/github/releases/issues/1413
        - "[Octicons 최신 버전](https://github.com/primer/octicons/releases)을 사용하여 이슈 및 끌어오기 요청의 상태가 이제 시각적으로 더 명확해져서 상태를 더 쉽게 검사할 수 있습니다. 자세한 내용은 [{% data variables.product.prodname_blog %}](https://github.blog/changelog/2021-06-08-new-issue-and-pull-request-state-icons/)를 참조하세요."

        # https://github.com/github/releases/issues/1419
        - "이제 새로운 “병합 전 대화 해결 필요” 분기 보호 규칙 및 “대화” 메뉴를 사용할 수 있습니다. “파일이 변경됨” 탭에서 끌어오기 요청 주석을 쉽게 찾고 병합하기 전에 끌어오기 요청 대화를 모두 해결해야 합니다. 자세한 내용은 “[끌어오기 요청 검토 정보](/github/collaborating-with-pull-requests/reviewing-changes-in-pull-requests/about-pull-request-reviews#discovering-and-navigating-conversations)” 및 “[보호된 분기 정보](/github/administering-a-repository/defining-the-mergeability-of-pull-requests/about-protected-branches#require-conversation-resolution-before-merging)”를 참조하세요."

        # https://github.com/github/releases/issues/1279
        - "끌어오기 요청에 대해 자동 병합을 사용하도록 설정한 후 예기치 않은 변경 사항의 병합을 방지하기 위해 리포지토리에 대한 쓰기 액세스 권한이 없는 사용자가 새 변경 사항을 푸시할 때 자동 병합은 자동으로 사용하지 않도록 설정됩니다. 쓰기 액세스 권한이 없는 사용자는 자동 병합을 사용하도록 설정한 경우 기본 분기의 변경 사항으로 끌어오기 요청을 계속 업데이트할 수 있습니다. 악의적인 사용자가 병합 충돌을 사용하여 끌어오기 요청에 예기치 않은 변경 사항을 도입하는 것을 방지하기 위해 업데이트로 인해 병합 충돌이 발생하면 끌어오기 요청에 대한 자동 병합은 사용하지 않도록 설정됩니다. 자동 병합에 대한 자세한 내용은 “[자동으로 끌어오기 요청 병합](/github/collaborating-with-pull-requests/incorporating-changes-from-a-pull-request/automatically-merging-a-pull-request)”을 참조하세요."

        # https://github.com/github/releases/issues/1550
        - "유지 관리 권한이 있는 사용자는 이제 리포지토리 수준의 “자동 병합 허용” 설정을 관리할 수 있습니다. 기본적으로 꺼져 있는 이 설정은 리포지토리의 끌어오기 요청에서 자동 병합을 사용할 수 있는지 여부를 제어합니다. 이전에는 관리자 권한이 있는 사용자만 이 설정을 관리할 수 있었습니다. 또한 이 설정은 이제 “[리포지토리 만들기](/rest/reference/repos#create-an-organization-repository)” 및 “[리포지토리 업데이터](/rest/reference/repos#update-a-repository)” REST API를 사용하여 제어할 수 있습니다. 자세한 내용은 “[리포지토리의 끌어오기 요청에 대한 자동 병합 관리](/github/administering-a-repository/configuring-pull-request-merges/managing-auto-merge-for-pull-requests-in-your-repository)”를 참조하세요."

        # https://github.com/github/releases/issues/1201
        - 이슈 및 끌어오기 요청에 대한 담당자 선택이 이제 자동 검색을 지원하므로 조직의 사용자를 더 빨리 찾을 수 있습니다. 또한 검색 결과 순위가 업데이트되어 사용자의 사용자 이름 또는 프로필 이름 시작 부분에 일치하는 항목을 선호합니다.

        # https://github.com/github/releases/issues/1430
        - 100명 이상의 팀에서 검토를 요청하는 경우 대규모 팀에 대한 불필요한 알림을 방지하기 위해 이제 개발자에게 확인 대화 상자가 표시됩니다.

        # https://github.com/github/releases/issues/1293
        - "백틱 ‘코드 블록’은 이제 이슈 제목, 끌어오기 요청 제목, 모든 위치에서 지원되며 이슈 및 끌어오기 요청 제목은 {% data variables.product.prodname_ghe_server %}에서 참조됩니다."

        # https://github.com/github/releases/issues/1300
        - "끌어오기 요청 및 끌어오기 요청 검토에 대한 이벤트는 이제 [엔터프라이즈](/admin/user-management/managing-users-in-your-enterprise/auditing-users-across-your-enterprise) 및 [조직](/organizations/keeping-your-organization-secure/reviewing-the-audit-log-for-your-organization) 모두에 대한 감사 로그에 포함됩니다. 이러한 이벤트는 관리자가 끌어오기 요청 활동을 더 잘 모니터링하고 보안 및 규정 준수 요구 사항이 충족되고 있는지 확인하는 데 도움이 됩니다. 이벤트는 웹 UI에서 보거나, CSV 또는 JSON으로 내보내거나, REST API를 통해 액세스할 수 있습니다. 또한 특정 끌어오기 요청 이벤트에 대한 감사 로그를 검색할 수도 있습니다. 자세한 내용은 “[조직에 대한 감사 로그 검토](/organizations/keeping-your-organization-secure/reviewing-the-audit-log-for-your-organization#pull_request-category-actions)”를 참조하세요."

    - heading: '분기 변경 사항'
      notes:
        # https://github.com/github/releases/issues/885
        - |새 리포지토리의 기본 분기 이름은 이제 ‘main’입니다. 기존 리포지토리는 이 변경의 영향을 받지 않습니다. 사용자, 조직 소유자 또는 엔터프라이즈 소유자가 이전에 새 리포지토리에 대한 기본 분기를 지정한 경우에도 영향을 받지 않습니다.



다른 기본 분기 이름을 설정하려면 [사용자](/account-and-profile/setting-up-and-managing-your-github-user-account/managing-user-account-settings/managing-the-default-branch-name-for-your-repositories), [조직](/organizations/managing-organization-settings/managing-the-default-branch-name-for-repositories-in-your-organization) 또는 [엔터프라이즈](/admin/policies/enforcing-policies-for-your-enterprise/enforcing-repository-management-policies-in-your-enterprise#enforcing-a-policy-on-the-default-branch-name) 설정에서 설정할 수 있습니다.

|
        # https://github.com/github/releases/issues/981
        - |기본 분기를 포함한 분기는 이제 {% data variables.product.product_name %} 웹 UI를 사용하여 이름을 변경할 수 있습니다. 분기의 이름이 변경되면 이름이 변경된 분기를 대상으로 하는 열린 끌어오기 요청 및 초안 릴리스가 자동으로 대상이 변경되고 이름이 변경된 분기를 명시적으로 참조하는 분기 보호 규칙이 업데이트됩니다.



기본 분기의 이름을 바꾸려면 관리자 권한이 필요하지만, 다른 분기의 이름을 바꾸려면 쓰기 권한으로 충분합니다.



사용자가 최대한 원활하게 변경할 수 있도록 하려면 다음을 수행합니다.



* 로컬 리포지토리 업데이트에 대한 지침과 함께 리포지토리 홈페이지의 기여자, 유지 관리자, 관리자에게 알림이 표시됩니다.

* 이전 분기에 대한 웹 요청은 리디렉션됩니다.

* “영구적으로 이동된” HTTP 응답은 REST API 호출에 반환됩니다.

* 이전 분기로 푸시하는 Git 명령줄 사용자에게 정보 메시지가 표시됩니다.



자세한 내용은 “[분기 이름 변경](/github/administering-a-repository/managing-branches-in-your-repository/renaming-a-branch)”을 참조하세요.

|
    - heading: 'GitHub Actions 변경 사항'
      notes:
        # https://github.com/github/releases/issues/1227
        - '이제 {% data variables.product.prodname_actions %}를 사용하여 ‘GITHUB_TOKEN’ 비밀에 부여된 권한을 제어할 수 있습니다. ‘GITHUB_TOKEN’은 워크플로 실행에서 {% data variables.product.product_name %}에 대한 API에 대한 인증된 호출을 수행할 수 있도록 하는 자동으로 생성되는 비밀입니다. {% data variables.product.prodname_actions %}는 각 작업에 대해 새 토큰을 생성하고 작업이 완료되면 토큰을 만료합니다. 토큰은 항상 ‘읽기’인 포크의 끌어오기 요청의 경우를 제외하고 일반적으로 여러 [API 엔드포인트](/actions/reference/authentication-in-a-workflow#permissions-for-the-github_token)에 대한 ‘쓰기’ 권한을 가집니다. 이러한 새 설정을 사용하면 워크플로에서 최소 권한 원칙을 따를 수 있습니다. 자세한 내용은 “[워크플로의 인증](/actions/reference/authentication-in-a-workflow#modifying-the-permissions-for-the-github_token)”을 참조하세요.'

        # https://github.com/github/releases/issues/1280
        - '{% data variables.product.prodname_cli %} 1.9 이상에서는 터미널에서 {% data variables.product.prodname_actions %}로 작업할 수 있습니다. 자세한 내용은 “[{% data variables.product.prodname_dotcom %} 변경 로그](https://github.blog/changelog/2021-04-15-github-cli-1-9-enables-you-to-work-with-github-actions-from-your-terminal/)”를 참조하세요.'

        # https://github.com/github/releases/issues/1157
        - "이제 감사 로그에 {% data variables.product.prodname_actions %} 워크플로 실행과 관련된 이벤트가 포함됩니다. 이 데이터는 관리자에게 보안 및 규정 준수 감사를 위해 크게 확장된 데이터 세트를 제공합니다. 자세한 내용은 “[조직에 대한 감사 로그 검토](/organizations/keeping-your-organization-secure/reviewing-the-audit-log-for-your-organization#workflows-category-actions)”를 참조하세요."

        # https://github.com/github/releases/issues/1587
        - "{% data variables.product.prodname_actions %}의 성능이 개선되어 최대 작업 처리량이 증가할 수 있습니다. 내부 테스트를 거친 CPU 및 메모리 구성의 작업 처리량에 대한 자세한 내용은 “[{% data variables.product.prodname_ghe_server %}용 {% data variables.product.prodname_actions %} 시작하기](/admin/github-actions/enabling-github-actions-for-github-enterprise-server/getting-started-with-github-actions-for-github-enterprise-server#review-hardware-considerations)”를 참조하세요."

    - heading: 'GitHub 패키지 변경 내용'
      notes:
        # https://github.com/github/releases/issues/1088
        - "이제 {% data variables.product.prodname_registry %}의 모든 패키지 또는 패키지 버전을 {% data variables.product.product_name %}의 웹 UI에서 삭제할 수 있습니다. 또한 30일 이내에 패키지 또는 패키지 버전 삭제를 취소할 수도 있습니다. 자세한 내용은 “[패키지 삭제 및 복원](/packages/learn-github-packages/deleting-and-restoring-a-package)”을 참조하세요."

    - heading: 'Dependabot 및 종속성 그래프 변경 사항'
      notes:
        # https://github.com/github/releases/issues/1537
        - "이제 관리 셸에서 명령을 실행할 필요 없이 관리 콘솔을 사용하여 종속성 그래프를 사용하도록 설정할 수 있습니다. 자세한 내용은 “[취약한 종속성 {% data variables.product.prodname_ghe_server %}에 대한 경고 사용](/admin/configuration/managing-connections-between-github-enterprise-server-and-github-enterprise-cloud/enabling-alerts-for-vulnerable-dependencies-on-github-enterprise-server#enabling-the-dependency-graph-and-dependabot-alerts-for-vulnerable-dependencies-on-github-enterprise-server)”을 참조하세요."

        # https://github.com/github/releases/issues/1153
        - "이제 여러 {% data variables.product.prodname_dependabot_alerts %}에 대한 알림이 동시에 발견되는 경우 함께 그룹화됩니다. 이렇게 하면 사용자가 수신하는 {% data variables.product.prodname_dependabot %} 경고 알림의 양이 크게 줄어듭니다. 자세한 내용은 [{% data variables.product.prodname_dotcom %} 변경 로그](https://github.blog/changelog/2021-03-18-grouped-dependabot-alert-notifications/)를 참조하세요."

        # https://github.com/github/releases/issues/1371
        - "이제 종속성 그래프 및 {% data variables.product.prodname_dependabot_alerts %}에서 Go 모듈을 지원합니다. {% data variables.product.prodname_ghe_server %}는 리포지토리의 ‘go.mod’ 파일을 분석하여 리포지토리의 종속성을 파악합니다. 보안 권고와 함께 종속성 그래프는 개발자에게 취약한 종속성을 알리는 데 필요한 정보를 제공합니다. 프라이빗 리포지토리에서 종속성 그래프를 사용하도록 설정하는 방법에 대한 자세한 내용은 “[리포지토리 보안](/code-security/getting-started/securing-your-repository#managing-the-dependency-graph)”을 참조하세요."

        # https://github.com/github/releases/issues/1538
        - "보안 경고에 대한 기본 알림 설정이 변경되었습니다. 이전에는 리포지토리에서 보안 경고를 볼 수 있는 권한이 있는 경우 설정에서 보안 경고 알림을 허용하는 한 해당 리포지토리에 대한 알림을 받게 되었습니다. 이제 리포지토리를 감시하고 보안 경고 알림을 옵트인해야 합니다. ‘모든 작업’을 선택하거나 ‘보안 경고’를 포함하도록 ‘사용자 지정’을 구성하면 알림을 받게 됩니다. 모든 기존 리포지토리는 이러한 새 설정으로 자동 마이그레이션되며, 계속해서 알림을 받게 됩니다. 그러나 모든 새로운 리포지토리는 리포지토리를 감시하여 옵트인해야 합니다. 자세한 내용은 “[{% data variables.product.prodname_dependabot_alerts %}에 대한 알림 구성](/code-security/dependabot/dependabot-alerts/configuring-notifications-for-dependabot-alerts)” 및 “[비밀 검사의 경고 관리](/code-security/secret-security/managing-alerts-from-secret-scanning)”를 참조하세요."

    - heading: '코드 검사 및 비밀 검사 변경 사항'
      notes:
        # https://github.com/github/releases/issues/1352
        - '{% data variables.product.prodname_codeql %}이 포함된 {% data variables.product.prodname_code_scanning_capc %}는 이제 지원되는 모든 언어에 대한 진단 정보를 생성합니다. 이는 생성된 데이터베이스의 상태를 확인하여 수행된 분석의 상태 및 품질을 이해하는 데 도움이 됩니다. 진단 정보는 [{% data variables.product.prodname_codeql_cli %}](https://codeql.github.com/docs/codeql-cli/)의 [버전 2.5.6](https://github.com/github/codeql-cli-binaries/releases)부터 사용할 수 있습니다. {% data variables.product.prodname_actions %} 로그에서 {% data variables.product.prodname_codeql %}에 대한 자세한 진단 정보를 볼 수 있습니다. 자세한 내용은 “[코드 검사 로그 보기](/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/viewing-code-scanning-logs)”를 참조하세요.'

        # https://github.com/github/releases/issues/1360
        - '{% data variables.product.prodname_codeql_cli %}가 포함된 {% data variables.product.prodname_code_scanning_capc %}는 이제 단일 빌드 중에 여러 언어 분석을 지원합니다. 이를 통해 {% data variables.product.prodname_actions %} 이외의 CI/CD 시스템을 사용하는 코드 분석을 보다 쉽게 실행할 수 있습니다. ‘codeql database create’ 명령의 새 모드는 [{% data variables.product.prodname_codeql_cli %}](https://codeql.github.com/docs/codeql-cli/)의 [버전 2.5.6](https://github.com/github/codeql-cli-binaries/releases)부터 사용할 수 있습니다. 이러한 설정에 대한 자세한 내용은 “[CI 시스템에 {% data variables.product.prodname_codeql_cli %} 설치](/code-security/secure-coding/using-codeql-code-scanning-with-your-existing-ci-system/running-codeql-cli-in-your-ci-system)”를 참조하세요.'

        # https://github.com/github/releases/issues/1160
        - '사용하도록 설정된 모든 도구의 {% data variables.product.prodname_code_scanning_capc %} 경고는 이제 하나의 통합 목록에 표시되므로 모든 경고에서 쉽게 우선 순위를 지정할 수 있습니다. “도구” 필터를 사용하여 특정 도구의 경고를 볼 수 있으며 “규칙” 및 “태그” 필터는 “도구” 선택에 따라 동적으로 업데이트됩니다.'

        # https://github.com/github/releases/issues/1454
        - '{% data variables.product.prodname_codeql %}이 포함된 {% data variables.product.prodname_code_scanning_capc %}에는 이제 C++20 코드 분석을 위한 베타 지원이 포함됩니다. 이는 Linux에서 GCC로 코드베이스를 구축할 때만 사용할 수 있습니다. C++20 모듈은 아직 지원되지 않습니다.'

        # https://github.com/github/releases/issues/1375
        - "더 많은 [라이브러리 및 프레임워크](https://codeql.github.com/docs/codeql-overview/supported-languages-and-frameworks/)에 대한 지원을 추가하고 여러 언어([C++](https://github.com/github/codeql/tree/main/cpp), [JavaScript](https://github.com/github/codeql/tree/main/javascript), [Python](https://github.com/github/codeql/tree/main/python), [Java](https://github.com/github/codeql/tree/main/java))에 대한 기존 라이브러리 및 프레임워크 모델의 적용 범위를 확대하여 {% data variables.product.prodname_codeql %} ​​분석의 깊이가 향상되었습니다. 그 결과 {% data variables.product.prodname_codeql %}은 이제 신뢰할 수 없는 사용자 데이터의 잠재적 소스를 훨씬 더 감지하고, 해당 데이터가 흐르는 단계를 검토하고, 이 데이터가 끝날 수 있는 잠재적으로 위험한 싱크를 식별할 수 있습니다. 따라서 {% data variables.product.prodname_code_scanning %} 경고의 품질이 전반적으로 향상됩니다. 자세한 내용은 [{% data variables.product.prodname_dotcom %} 변경 로그](https://github.blog/changelog/2021-07-01-codeql-code-scanning-now-recognizes-more-sources-and-uses-of-untrusted-user-data/)를 참조하세요."

        # https://github.com/github/releases/issues/1335
        # https://github.com/github/releases/issues/1314
        - |{% data variables.product.prodname_code_scanning_capc %}는 CodeQL 보안 경고에 대한 ‘보안 심각도’ 수준을 보여 줍니다. 끌어오기 요청에 대한 검사 실패를 유발하는 ‘보안 심각도’ 수준을 구성할 수 있습니다. 보안 경고의 심각도 수준은 ‘위험’, ‘높음’, ‘보통’ 또는 ‘낮음’일 수 있습니다. 기본적으로 ‘보안 심각도’가 ‘위험’ 또는 ‘높음’인 모든 {% data variables.product.prodname_code_scanning %} 경고는 끌어오기 요청 검사 실패를 유발합니다. 



또한 이제 비보안 경고에 대해 끌어오기 요청 검사를 실패하게 하는 심각도 수준을 구성할 수도 있습니다. 리포지토리 수준에서 이 동작을 구성하고 심각도가 ‘오류’, ‘경고’ 또는 ‘참고’인 경고로 인해 끌어오기 요청 검사가 실패할지 여부를 정의할 수 있습니다. 기본적으로 심각도가 ‘오류’인 비보안 {% data variables.product.prodname_code_scanning %} 경고는 끌어오기 요청 검사 실패를 유발합니다.



자세한 내용은 “[끌어오기 요청 확인 실패를 유발하는 경고 심각도 수준 정의](/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#defining-the-severities-causing-pull-request-check-failure)”를 참조하세요.



![보안 수준의 코드 검사 경고 목록](/assets/images/enterprise/3.2/release-notes/code-scanning-alerts.png)

|
        # https://github.com/github/releases/issues/1324
        - |{% data variables.product.prodname_code_scanning %} 경고에 대한 분기 필터가 개선되어 경고 페이지에 표시되는 {% data variables.product.prodname_code_scanning %} 경고가 더 명확해집니다. 기본적으로 {% data variables.product.prodname_code_scanning %} 경고는 리포지토리의 기본 분기에 대한 경고만 표시하도록 필터링됩니다. 분기 필터를 사용하여 기본이 아닌 분기에 대한 경고를 표시할 수 있습니다. 적용된 모든 분기 필터가 검색 창에 표시됩니다.



또한 검색 구문도 ‘branch:<branch name>’으로 단순화되었습니다. 이 구문은 검색 창에서 여러 번 사용하여 여러 분기를 필터링할 수 있습니다. 이전 구문인 ‘ref:refs/heads/<branch name>’은 계속 지원되므로 저장된 URL은 계속 작동합니다.

|
        # https://github.com/github/releases/issues/1313
        - |이제 코드 검사 경고에 대해 무료 텍스트 검색을 사용할 수 있습니다. 정확한 검색어를 몰라도 코드 검사 결과를 검색하여 특정 알림을 빠르게 찾을 수 있습니다. 검색은 경고의 이름, 설명, 도움말 텍스트에 적용됩니다. 구문은 다음과 같습니다.



- 단일 단어는 모든 일치 항목을 반환합니다.

- 여러 검색어는 두 단어 중 하나에 일치하는 항목을 반환합니다.

- 큰따옴표로 묶인 단어는 정확히 일치하는 항목을 반환합니다.

- 키워드 ‘AND’는 여러 단어에 대한 일치 항목을 반환합니다.

|
        - '{% data variables.product.prodname_secret_scanning_caps %}는 23개의 새로운 서비스 공급자에 대한 패턴을 추가했습니다. 업데이트된 지원 비밀 목록은 “[비밀 검사 정보](/code-security/secret-scanning/about-secret-scanning)”를 참조하세요.'

    - heading: API 변경 내용
      notes:
        # https://github.com/github/releases/issues/1253
        - "페이지 매김 지원이 Repositories REST API의 “두 커밋 비교” 엔드포인트에 추가되었으며, 이는 한 커밋 또는 분기에서 연결할 수 있지만 다른 커밋 또는 분기에서는 연결할 수 없는 커밋 목록을 반환합니다. API는 이제 250개 이상의 커밋에 대한 비교 결과를 반환할 수도 있습니다. 자세한 내용은 “[커밋](/rest/reference/commits#compare-two-commits)” REST API 설명서 및 “[페이지 매김으로 순회](/rest/guides/traversing-with-pagination)”를 참조하세요."

        # https://github.com/github/releases/issues/969
        - "이제 REST API를 사용하여 프로그래밍 방식으로 웹후크의 상태를 재전송하거나 확인할 수 있습니다. 자세한 내용은 REST API 문서의 “[웹후크](/rest/reference/webhooks)”, “[조직](/rest/reference/orgs#webhooks)”, “[앱](/rest/reference/apps#webhooks)”을 참조하세요."

        # https://github.com/github/releases/issues/1349
        - |코드 검사 및 {% data variables.product.prodname_GH_advanced_security %} API가 개선되었습니다.



- 이제 코드 검사 API가 분석에 사용된 CodeQL 쿼리 버전을 반환합니다. 이는 결과를 재현하거나 분석이 최신 쿼리를 사용했음을 확인하는 데 사용할 수 있습니다. 자세한 내용은 REST API 설명서의 “[코드 검사](/rest/reference/code-scanning#list-code-scanning-alerts-for-a-repository)”를 참조하세요.

- 관리 사용자는 이제 REST API를 사용하여 ‘repos/{org}/{repo}’의 ‘security_and_analysis’ 개체를 사용하여 리포지토리에 대해 {% data variables.product.prodname_GH_advanced_security %}를 사용하거나 또는 사용하지 않도록 설정할 수 있습니다. 또한 관리 사용자는 ‘GET /repos/{owner}/{repo}’ 요청을 사용하여 현재 리포지토리에 대해 {% data variables.product.prodname_advanced_security %}가 사용하도록 설정되어 있는지 확인할 수 있습니다. 이러한 변경 내용을 통해 {% data variables.product.prodname_advanced_security %} 리포지토리 액세스를 대규모로 관리할 수 있습니다. 자세한 내용은 REST API 설명서의 “[리포지토리](/rest/reference/repos#update-a-repository)”를 참조하세요.

|
  # No security/bug fixes for the RC release
  # security_fixes:
  #   - PLACEHOLDER

  # bugs:
  #   - PLACEHOLDER

  known_issues:
    - "사용자 없이 새로 설정된 {% data variables.product.prodname_ghe_server %}에서 공격자는 첫 번째 관리 사용자를 만들 수 있습니다."
    - 업그레이드 프로세스 중에 사용자 지정 방화벽 규칙이 제거됩니다.
    - "Git LFS 추적 파일[웹 인터페이스를 통해 업로드됨](https://github.com/blog/2105-upload-files-to-your-repositories)이 리포지토리에 직접 잘못 추가됩니다."
    - 이슈에 동일한 리포지토리의 Blob에 대한 고정 링크가 포함되었지만 Blob의 파일 경로가 255자보다 긴 경우 해당 이슈를 종료할 수 없습니다.
    - GitHub Connect에서 “사용자가 GitHub.com을 검색할 수 있음”을 사용하도록 설정되면 프라이빗 및 내부 리포지토리의 이슈가 GitHub.com 검색 결과에 포함되지 않습니다.
    - "{% data variables.product.prodname_registry %} npm 레지스트리는 더 이상 메타데이터 응답으로 시간 값을 반환하지 않습니다. 이는 대대적인 성능 개선을 위해 구현되었습니다. 메타데이터 응답의 일부로 시간 값을 반환하는 데 필요한 모든 데이터를 제공하고 있으며 기존 성능 이슈를 해결하면 향후에 이 값의 반환을 재개할 예정입니다."
    - 사전 수신 후크 처리에만 해당되는 리소스 한도로 인해 일부 사전 수신 후크가 실패할 수 있습니다.

  deprecations:
    - heading: GitHub Enterprise Server 2.21 지원 중단
      notes:
        - '**{% data variables.product.prodname_ghe_server %} 2.21은 2021년 6월 6일에 중단되었습니다**. 즉, 이 날짜 이후에는 중요한 보안 문제에 대해서도 패치 릴리스가 이루어지지 않습니다. 성능 향상, 보안 향상, 새로운 기능을 위해 최대한 빨리 [최신 버전의 {% data variables.product.prodname_ghe_server %}](/enterprise-server@3.2/admin/enterprise-management/upgrading-github-enterprise-server)로 업그레이드합니다.'
    - heading: GitHub Enterprise Server 2.22 지원 중단
      notes:
        - '**{% data variables.product.prodname_ghe_server %} 2.22는 2021년 9월 23일에 중단되었습니다**. 즉, 이 날짜 이후에는 중요한 보안 문제에 대해서도 패치 릴리스가 이루어지지 않습니다. 성능 향상, 보안 향상, 새로운 기능을 위해 최대한 빨리 [최신 버전의 {% data variables.product.prodname_ghe_server %}](/enterprise-server@3.2/admin/enterprise-management/upgrading-github-enterprise-server)로 업그레이드합니다.'
    - heading: XenServer Hypervisor 지원 중단
      notes:
        # https://github.com/github/docs-content/issues/4439
        - "{% data variables.product.prodname_ghe_server %} 3.1부터 Xen Hypervisor에 대한 지원이 중단됩니다. {% data variables.product.prodname_ghe_server %} 3.3에 대한 완전한 지원 중단이 1년 표준 지원 중단 기간에 따라 예정되어 있습니다. 질문이나 우려가 있으면 [GitHub 지원](https://support.github.com/contact)에 문의하세요."
    - heading: 레거시 GitHub 서비스 제거
      notes:
        # https://github.com/github/releases/issues/1506
        - '{% data variables.product.prodname_ghe_server %} 3.2는 사용하지 않는 GitHub 서비스 데이터베이스 레코드를 제거합니다. 자세한 내용은 [지원 중단 공지 게시물](https://developer.github.com/changes/2018-04-25-github-services-deprecation/)에서 확인할 수 있습니다.'
    - heading: 쿼리 매개 변수를 통한 OAuth 애플리케이션 API 엔드포인트 및 API 인증 지원 중단
      notes:
        # https://github.com/github/releases/issues/1316
        - |‘access_tokens’의 우발적인 로깅 또는 노출을 방지하기 위해 OAuth 애플리케이션 API 엔드포인트 사용 및 쿼리 매개 변수를 통한 API 인증 사용은 권장되지 않습니다. 제안된 대체품을 보려면 다음 게시물을 방문하세요.



* [대체 OAuth 애플리케이션 API 엔드포인트](https://developer.github.com/changes/2020-02-14-deprecating-oauth-app-endpoint/#changes-to-make)

* [쿼리 매개 변수 대신 헤더를 통한 대체 인증](https://developer.github.com/changes/2020-02-10-deprecating-auth-through-query-param/#changes-to-make)



이러한 엔드포인트 및 인증 경로는 {% data variables.product.prodname_ghe_server %} 3.4의 {% data variables.product.prodname_ghe_server %}에서 제거될 예정입니다.

|
    - heading: 레거시 GitHub 앱 웹후크 이벤트 및 엔드포인트 제거
      notes:
        # https://github.com/github/releases/issues/965
        - |두 개의 레거시 GitHub 앱 관련 웹후크 이벤트인 ‘integration_installation’ 및 ‘integration_installation_repositories’가 제거되었습니다. 대신 ‘installation’ 및 ‘installation_repositories’ 이벤트를 수신 대기해야 합니다.

|
        - |‘POST /installations/{installation_id}/access_tokens’ REST API 엔드포인트가 제거되었습니다. 대신 네임스페이스가 있는 동등한 ‘POST /app/installations/{installation_id}/access_tokens’를 사용해야 합니다.

|
  backups:
    - '{% data variables.product.prodname_ghe_server %} 3.2에는 [백업 및 재해 복구](/enterprise-server@3.2/admin/configuration/configuring-backups-on-your-appliance)에 대한 [GitHub Enterprise 백업 유틸리티 3.2.0](https://github.com/github/backup-utils) 이상이 필요합니다.'
